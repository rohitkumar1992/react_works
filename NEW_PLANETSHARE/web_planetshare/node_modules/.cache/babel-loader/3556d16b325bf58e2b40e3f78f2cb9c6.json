{"ast":null,"code":"var _jsxFileName = \"/var/www/html/REACT_WORK/NEW_PLANETSHARE/web_planetshare/src/Container/Editor/Editor.js\";\nimport React from 'react';\nimport 'tui-image-editor/dist/tui-image-editor.css';\nimport ImageEditor from '@toast-ui/react-image-editor';\nimport $ from 'jquery';\nimport { GETIMAGEDATA, TAG } from '../../url';\nimport axios from 'axios';\nimport Not_Found from '../../Component/not_found/not_found';\nimport ActivityLoader from 'react-loader-spinner'; // import './Editor.css'\n\nimport cogoToast from 'cogo-toast';\n\nclass Editor extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.getData = () => {\n      axios.post(GETIMAGEDATA, {\n        'user_id': localStorage.getItem('user_id'),\n        'tag': TAG,\n        'image_id': this.state.image_id\n      }).then(res => {\n        if (res.data.success == 1) {\n          var response = res.data;\n          this.setState({\n            image_data: response.data\n          });\n          console.log(response.data);\n          setTimeout(() => this.setState({\n            isLoading: true\n          }), 1000);\n        }\n      }).catch(error => {\n        this.setState({\n          not_found: true\n        });\n      });\n    };\n\n    this.handleClickButton = () => {\n      alert('hi');\n      const editorInstance = this.editorRef.current.getInstance();\n      editorInstance.on('objectActivated', function (props) {\n        console.log(props);\n        console.log(props.type);\n        console.log(props.id);\n      });\n    };\n\n    this.state = {\n      image_data: [],\n      not_found: false,\n      isLoading: true,\n      loading_msg: 'Please Wait'\n    };\n    this.editorRef = React.createRef();\n  }\n\n  componentDidMount() {\n    //     var instance = new ImageEditor(document.getElementById('tui-image-editor'), {\n    //      includeUI: {\n    //          loadImage: {\n    //              path: 'images/dubbing1.jpg',\n    //              name: 'SampleImage'\n    //          },\n    //          initMenu: 'filter',\n    //          menuBarPosition: 'bottom'\n    //      },\n    //     cssMaxWidth: 700,\n    //     cssMaxHeight: 500,\n    //     selectionStyle: {\n    //         cornerSize: 20,\n    //         rotatingPointOffset: 70\n    //     }\n    // });\n    const editorInstance = this.editorRef.current.getInstance();\n    editorInstance.addIcon('arrow');\n    editorInstance.on('objectActivated', function (props) {\n      console.log(props);\n      console.log(props.type);\n      console.log(props.id);\n    });\n    this.setState({\n      image_id: this.props.match.params.image_id,\n      image_name: this.props.match.params.image_name\n    }, function () {\n      setTimeout(() => this.setState({\n        isLoading: true\n      }), 1000);\n      this.getData();\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.props.match.params.image_id != this.state.image_id) {\n      this.setState({\n        image_id: this.props.match.params.image_id,\n        image_name: this.props.match.params.image_name,\n        isLoading: true,\n        not_found: false\n      }, function () {\n        this.getData();\n      });\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          image_data = _this$state.image_data,\n          isLoading = _this$state.isLoading,\n          not_found = _this$state.not_found,\n          loading_msg = _this$state.loading_msg;\n    const imageEditorOptions = {\n      includeUI: {\n        loadImage: {\n          path: 'images/dubbing1.jpg',\n          name: 'SampleImage'\n        },\n        menu: ['shape', 'filter'],\n        initMenu: 'filter',\n        uiSize: {\n          width: '100%',\n          height: '700px'\n        },\n        menuBarPosition: 'bottom'\n      },\n      cssMaxWidth: 700,\n      cssMaxHeight: 500,\n      selectionStyle: {\n        cornerSize: 20,\n        rotatingPointOffset: 70\n      }\n    };\n\n    if (!not_found) {\n      if (isLoading) {\n        return React.createElement(React.Fragment, null, React.createElement(ImageEditor, Object.assign({\n          ref: this.editorRef\n        }, imageEditorOptions, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          onClick: this.handleClickButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"Flip image by X Axis!\"), React.createElement(\"div\", {\n          id: \"tui-image-editor\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          class: \"container loader_cont\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(ActivityLoader, {\n          type: \"Triangle\",\n          color: \"black\",\n          height: 100,\n          width: 100,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, loading_msg));\n      }\n    } else {\n      return React.createElement(Not_Found, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default Editor; // <ImageEditor\n// includeUI={{\n// loadImage: {\n//   path: 'images/dubbing1.jpg',\n//   name: 'SampleImage'\n// },\n// initMenu: 'filter',\n// uiSize: {\n//   width: '100%',\n//   height: '700px'\n// },\n// menuBarPosition: 'bottom'\n// }}\n// cssMaxHeight={500}\n// cssMaxWidth={700}\n// selectionStyle={{\n// cornerSize: 20,\n// rotatingPointOffset: 70\n// }}\n// usageStatistics={true}\n// />","map":{"version":3,"sources":["/var/www/html/REACT_WORK/NEW_PLANETSHARE/web_planetshare/src/Container/Editor/Editor.js"],"names":["React","ImageEditor","$","GETIMAGEDATA","TAG","axios","Not_Found","ActivityLoader","cogoToast","Editor","Component","constructor","props","getData","post","localStorage","getItem","state","image_id","then","res","data","success","response","setState","image_data","console","log","setTimeout","isLoading","catch","error","not_found","handleClickButton","alert","editorInstance","editorRef","current","getInstance","on","type","id","loading_msg","createRef","componentDidMount","addIcon","match","params","image_name","componentDidUpdate","render","imageEditorOptions","includeUI","loadImage","path","name","menu","initMenu","uiSize","width","height","menuBarPosition","cssMaxWidth","cssMaxHeight","selectionStyle","cornerSize","rotatingPointOffset"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'tui-image-editor/dist/tui-image-editor.css'\nimport ImageEditor from '@toast-ui/react-image-editor';\nimport $ from 'jquery';\nimport {GETIMAGEDATA,TAG} from '../../url';\nimport axios from 'axios';\nimport Not_Found from '../../Component/not_found/not_found';\nimport ActivityLoader from 'react-loader-spinner';\n// import './Editor.css'\nimport cogoToast from 'cogo-toast';\nclass Editor extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n    this.state={image_data:[],not_found:false,isLoading:true,loading_msg:'Please Wait'}\n    this.editorRef = React.createRef();\n  }\n  componentDidMount()\n  {\n\n//     var instance = new ImageEditor(document.getElementById('tui-image-editor'), {\n//      includeUI: {\n//          loadImage: {\n//              path: 'images/dubbing1.jpg',\n//              name: 'SampleImage'\n//          },\n//          initMenu: 'filter',\n//          menuBarPosition: 'bottom'\n//      },\n//     cssMaxWidth: 700,\n//     cssMaxHeight: 500,\n//     selectionStyle: {\n//         cornerSize: 20,\n//         rotatingPointOffset: 70\n//     }\n// });\nconst editorInstance = this.editorRef.current.getInstance();\neditorInstance.addIcon('arrow');\neditorInstance.on('objectActivated', function(props) {\n    console.log(props);\n    console.log(props.type);\n    console.log(props.id);\n});\n    this.setState({image_id:this.props.match.params.image_id,image_name:this.props.match.params.image_name},function()\n  {\n       setTimeout(()=>this.setState({isLoading:true}),1000);\n       this.getData();\n  });\n  }\n  getData=()=>{\n    axios.post(GETIMAGEDATA,{\n      'user_id':localStorage.getItem('user_id'),\n      'tag':TAG,\n      'image_id':this.state.image_id,\n    }).then((res)=>{\n      if(res.data.success==1)\n      {\n        var response=res.data;\n        this.setState({image_data:response.data});\n        console.log(response.data);\n         setTimeout(()=>this.setState({isLoading:true}),1000);\n      }\n    }).catch((error)=>{\n      this.setState({not_found:true})\n    })\n  }\n  componentDidUpdate()\n  {\n    if(this.props.match.params.image_id!=this.state.image_id )\n    {\n      this.setState({image_id:this.props.match.params.image_id,image_name:this.props.match.params.image_name,isLoading:true,not_found:false},function()\n    {\n      this.getData();\n    });\n   }\n  }\n  handleClickButton = () => {\n    alert('hi')\n    const editorInstance = this.editorRef.current.getInstance();\n    editorInstance.on('objectActivated', function(props) {\n        console.log(props);\n        console.log(props.type);\n        console.log(props.id);\n    });\n  };\n  render()\n  {\n    const {image_data,isLoading,not_found,loading_msg}=this.state;\n    const imageEditorOptions={\n      includeUI: {\n    loadImage: {\n      path: 'images/dubbing1.jpg',\n      name: 'SampleImage'\n    },\n    menu: ['shape', 'filter'],\n    initMenu: 'filter',\n    uiSize: {\n        width: '100%',\n        height: '700px'\n    },\n    menuBarPosition: 'bottom'\n  },\n  cssMaxWidth: 700,\n  cssMaxHeight: 500,\n  selectionStyle: {\n    cornerSize: 20,\n    rotatingPointOffset: 70\n  }\n\n    }\n    if(!not_found)\n    {\n      if(isLoading)\n      {\n      return( <>\n        <ImageEditor\n               ref={this.editorRef}\n               {...imageEditorOptions}\n             />\n             <button onClick={this.handleClickButton}>Flip image by X Axis!</button>\n  <div id=\"tui-image-editor\"></div></>)\n    }\n    else {\n      return(<div class=\"container loader_cont\"><ActivityLoader\n        type=\"Triangle\"\n         color=\"black\"\n         height={100}\n         width={100}\n         />\n         <h3>{loading_msg}</h3>\n         </div>);\n    }\n  }\n  else {\n      return(<Not_Found/>)\n  }\n }\n}\nexport default Editor;\n// <ImageEditor\n// includeUI={{\n// loadImage: {\n//   path: 'images/dubbing1.jpg',\n//   name: 'SampleImage'\n// },\n// initMenu: 'filter',\n// uiSize: {\n//   width: '100%',\n//   height: '700px'\n// },\n// menuBarPosition: 'bottom'\n// }}\n// cssMaxHeight={500}\n// cssMaxWidth={700}\n// selectionStyle={{\n// cornerSize: 20,\n// rotatingPointOffset: 70\n// }}\n// usageStatistics={true}\n// />\n"]},"metadata":{},"sourceType":"module"}