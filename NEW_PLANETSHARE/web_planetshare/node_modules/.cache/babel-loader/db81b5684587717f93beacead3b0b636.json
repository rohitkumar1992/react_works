{"ast":null,"code":"'use strict';\n\nfunction stripTags(string, remove_breaks) {\n  string = string.replace(/<(script|style)[\\0-=\\?-\\uFFFF]*?>[\\s\\S]*?<\\/\\\\1>/i, ''); // Replace all Tags\n\n  string = string.replace(/<[^>]*>/g, '');\n\n  if (remove_breaks) {\n    string = string.replace(/[\\r\\n\\t ]+/, ' ');\n  }\n\n  return trim(string);\n}\n\nfunction trim(str, charlist) {\n  var whitespace = [' ', '\\n', '\\r', '\\t', '\\f', '\\x0b', '\\xa0', '\\u2000', '\\u2001', '\\u2002', '\\u2003', '\\u2004', '\\u2005', '\\u2006', '\\u2007', '\\u2008', '\\u2009', '\\u200a', '\\u200b', '\\u2028', '\\u2029', '\\u3000'].join('');\n  var finalString = '';\n  var l = 0;\n  var i = 0;\n  str += '';\n\n  if (charlist) {\n    whitespace = (charlist + '').replace(/([[\\]().?/*{}+$^:])/g, '$1');\n  }\n\n  l = str.length;\n\n  for (i = 0; i < l; i += 1) {\n    if (whitespace.indexOf(str.charAt(i)) === -1) {\n      str = str.substring(i);\n      break;\n    }\n  }\n\n  l = str.length;\n\n  for (i = l - 1; i >= 0; i -= 1) {\n    if (whitespace.indexOf(str.charAt(i)) === -1) {\n      str = str.substring(0, i + 1);\n      break;\n    }\n  }\n\n  if (whitespace.indexOf(str.charAt(0)) === -1) {\n    finalString = str;\n  }\n\n  return finalString;\n}\n\nfunction trimWords(text, numWords, more) {\n  if (!numWords) {\n    numWords = 55;\n  }\n\n  if (!more) {\n    more = '&hellip;';\n  }\n\n  text = stripTags(text);\n  var wordsArray = text.split(/[\\n\\r\\t ]+/, numWords + 1);\n  var sep = ' ';\n\n  if (wordsArray.length > numWords) {\n    wordsArray.pop();\n    text = wordsArray.join(sep);\n    text = text + more;\n  } else {\n    text = wordsArray.join(sep);\n  }\n\n  return text;\n}\n\nexports.trimWords = trimWords;","map":{"version":3,"sources":["/var/www/html/REACT_WORK/NEW_PLANETSHARE/web_planetshare/node_modules/react-trim-words/index.js"],"names":["stripTags","string","remove_breaks","replace","trim","str","charlist","whitespace","join","finalString","l","i","length","indexOf","charAt","substring","trimWords","text","numWords","more","wordsArray","split","sep","pop","exports"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nfunction stripTags(string, remove_breaks) {\r\n  string = string.replace(/<(script|style)[^>]*?>.*?<\\/\\\\1>/si, '');\r\n\r\n  // Replace all Tags\r\n  string = string.replace(/<[^>]*>/g, '');\r\n  if (remove_breaks) {\r\n    string = string.replace(/[\\r\\n\\t ]+/, ' ');\r\n  }\r\n\r\n  return trim(string);\r\n}\r\n\r\nfunction trim(str, charlist) {\r\n  var whitespace = [\r\n    ' ',\r\n    '\\n',\r\n    '\\r',\r\n    '\\t',\r\n    '\\f',\r\n    '\\x0b',\r\n    '\\xa0',\r\n    '\\u2000',\r\n    '\\u2001',\r\n    '\\u2002',\r\n    '\\u2003',\r\n    '\\u2004',\r\n    '\\u2005',\r\n    '\\u2006',\r\n    '\\u2007',\r\n    '\\u2008',\r\n    '\\u2009',\r\n    '\\u200a',\r\n    '\\u200b',\r\n    '\\u2028',\r\n    '\\u2029',\r\n    '\\u3000'\r\n  ].join('');\r\n  var finalString = '';\r\n  var l = 0;\r\n  var i = 0;\r\n  str += '';\r\n\r\n  if (charlist) {\r\n    whitespace = (charlist + '').replace(/([[\\]().?/*{}+$^:])/g, '$1');\r\n  }\r\n\r\n  l = str.length;\r\n  for (i = 0; i < l; i += 1) {\r\n    if (whitespace.indexOf(str.charAt(i)) === -1) {\r\n      str = str.substring(i);\r\n      break;\r\n    }\r\n  }\r\n\r\n  l = str.length;\r\n  for (i = l - 1; i >= 0; i -= 1) {\r\n    if (whitespace.indexOf(str.charAt(i)) === -1) {\r\n      str = str.substring(0, i + 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (whitespace.indexOf(str.charAt(0)) === -1) {\r\n    finalString = str;\r\n  }\r\n\r\n  return finalString;\r\n}\r\n\r\nfunction trimWords(text, numWords, more) {\r\n  if (!numWords) {\r\n    numWords = 55;\r\n  }\r\n  if (!more) {\r\n    more = '&hellip;';\r\n  }\r\n\r\n  text = stripTags(text);\r\n  var wordsArray = text.split(/[\\n\\r\\t ]+/, numWords + 1);\r\n  var sep = ' ';\r\n\r\n  if (wordsArray.length > numWords) {\r\n    wordsArray.pop();\r\n    text = wordsArray.join(sep);\r\n    text = text + more;\r\n  } else {\r\n    text = wordsArray.join(sep);\r\n  }\r\n\r\n  return text;\r\n}\r\n\r\nexports.trimWords = trimWords;\r\n"]},"metadata":{},"sourceType":"script"}