{"ast":null,"code":"/* build: `node build.js modules=ALL exclude=gestures,accessors requirejs minifier=uglifyjs` */\n\n/*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\nvar fabric = fabric || {\n  version: '3.6.0'\n};\n\nif (typeof exports !== 'undefined') {\n  exports.fabric = fabric;\n}\n/* _AMD_START_ */\nelse if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return fabric;\n    });\n  }\n/* _AMD_END_ */\n\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  if (document instanceof (typeof HTMLDocument !== 'undefined' ? HTMLDocument : Document)) {\n    fabric.document = document;\n  } else {\n    fabric.document = document.implementation.createHTMLDocument('');\n  }\n\n  fabric.window = window;\n} else {\n  // assume we're running under node.js when document/window are not present\n  var jsdom = require('jsdom');\n\n  var virtualWindow = new jsdom.JSDOM(decodeURIComponent('%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E'), {\n    features: {\n      FetchExternalResources: ['img']\n    },\n    resources: 'usable'\n  }).window;\n  fabric.document = virtualWindow.document;\n  fabric.jsdomImplForWrapper = require('jsdom/lib/jsdom/living/generated/utils').implForWrapper;\n  fabric.nodeCanvas = require('jsdom/lib/jsdom/utils').Canvas;\n  fabric.window = virtualWindow;\n  DOMParser = fabric.window.DOMParser;\n}\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\n\n\nfabric.isTouchSupported = 'ontouchstart' in fabric.window || 'ontouchstart' in fabric.document || fabric.window && fabric.window.navigator && fabric.window.navigator.maxTouchPoints > 0;\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\n\nfabric.isLikelyNode = typeof Buffer !== 'undefined' && typeof window === 'undefined';\n/* _FROM_SVG_START_ */\n\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\n\nfabric.SHARED_ATTRIBUTES = ['display', 'transform', 'fill', 'fill-opacity', 'fill-rule', 'opacity', 'stroke', 'stroke-dasharray', 'stroke-linecap', 'stroke-dashoffset', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'id', 'paint-order', 'vector-effect', 'instantiated_by_use', 'clip-path'];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\n\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:[eE][-+]?\\\\d+)?)';\nfabric.rePathCommand = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:[eE][-+]?\\d+)?)/ig;\nfabric.reNonWord = /[ \\n\\.,;!\\?\\-]/;\nfabric.fontPaths = {};\nfabric.iMatrix = [1, 0, 0, 1, 0, 0];\nfabric.svgNS = 'http://www.w3.org/2000/svg';\n/**\n * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n * @since 1.7.14\n * @type Number\n * @default\n */\n\nfabric.perfLimitSizeTotal = 2097152;\n/**\n * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n * @since 1.7.14\n * @type Number\n * @default\n */\n\nfabric.maxCacheSideLimit = 4096;\n/**\n * Lowest pixel limit for cache canvases, set at 256PX\n * @since 1.7.14\n * @type Number\n * @default\n */\n\nfabric.minCacheSideLimit = 256;\n/**\n * Cache Object for widths of chars in text rendering.\n */\n\nfabric.charWidthsCache = {};\n/**\n * if webgl is enabled and available, textureSize will determine the size\n * of the canvas backend\n * @since 2.0.0\n * @type Number\n * @default\n */\n\nfabric.textureSize = 2048;\n/**\n * When 'true', style information is not retained when copy/pasting text, making\n * pasted text use destination style.\n * Defaults to 'false'.\n * @type Boolean\n * @default\n */\n\nfabric.disableStyleCopyPaste = false;\n/**\n * Enable webgl for filtering picture is available\n * A filtering backend will be initialized, this will both take memory and\n * time since a default 2048x2048 canvas will be created for the gl context\n * @since 2.0.0\n * @type Boolean\n * @default\n */\n\nfabric.enableGLFiltering = true;\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\n\nfabric.devicePixelRatio = fabric.window.devicePixelRatio || fabric.window.webkitDevicePixelRatio || fabric.window.mozDevicePixelRatio || 1;\n/**\n * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\n * which is unitless and not rendered equally across browsers.\n *\n * Values that work quite well (as of October 2017) are:\n * - Chrome: 1.5\n * - Edge: 1.75\n * - Firefox: 0.9\n * - Safari: 0.95\n *\n * @since 2.0.0\n * @type Number\n * @default 1\n */\n\nfabric.browserShadowBlurConstant = 1;\n/**\n * This object contains the result of arc to beizer conversion for faster retrieving if the same arc needs to be converted again.\n * It was an internal variable, is accessible since version 2.3.4\n */\n\nfabric.arcToSegmentsCache = {};\n/**\n * This object keeps the results of the boundsOfCurve calculation mapped by the joined arguments necessary to calculate it.\n * It does speed up calculation, if you parse and add always the same paths, but in case of heavy usage of freedrawing\n * you do not get any speed benefit and you get a big object in memory.\n * The object was a private variable before, while now is appended to the lib so that you have access to it and you\n * can eventually clear it.\n * It was an internal variable, is accessible since version 2.3.4\n */\n\nfabric.boundsOfCurveCache = {};\n/**\n * If disabled boundsOfCurveCache is not used. For apps that make heavy usage of pencil drawing probably disabling it is better\n * @default true\n */\n\nfabric.cachesBoundsOfCurve = true;\n/**\n * Skip performance testing of setupGLContext and force the use of putImageData that seems to be the one that works best on\n * Chrome + old hardware. if your users are experiencing empty images after filtering you may try to force this to true\n * this has to be set before instantiating the filtering backend ( before filtering the first image )\n * @type Boolean\n * @default false\n */\n\nfabric.forceGLPutImageData = false;\n\nfabric.initFilterBackend = function () {\n  if (fabric.enableGLFiltering && fabric.isWebglSupported && fabric.isWebglSupported(fabric.textureSize)) {\n    console.log('max texture size: ' + fabric.maxTextureSize);\n    return new fabric.WebglFilterBackend({\n      tileSize: fabric.textureSize\n    });\n  } else if (fabric.Canvas2dFilterBackend) {\n    return new fabric.Canvas2dFilterBackend();\n  }\n};\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n  window.fabric = fabric;\n}\n\n(function () {\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n\n    var eventListener = this.__eventListeners[eventName];\n\n    if (handler) {\n      eventListener[eventListener.indexOf(handler)] = false;\n    } else {\n      fabric.util.array.fill(eventListener, false);\n    }\n  }\n  /**\n   * Observes specified event\n   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n\n\n  function observe(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = {};\n    } // one object with key/value pairs was passed\n\n\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    } else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n\n      this.__eventListeners[eventName].push(handler);\n    }\n\n    return this;\n  }\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n\n\n  function stopObserving(eventName, handler) {\n    if (!this.__eventListeners) {\n      return this;\n    } // remove all key/value pairs (event name -> event handler)\n\n\n    if (arguments.length === 0) {\n      for (eventName in this.__eventListeners) {\n        _removeEventListener.call(this, eventName);\n      }\n    } // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n        for (var prop in eventName) {\n          _removeEventListener.call(this, prop, eventName[prop]);\n        }\n      } else {\n        _removeEventListener.call(this, eventName, handler);\n      }\n\n    return this;\n  }\n  /**\n   * Fires event with an optional options object\n   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n   * @memberOf fabric.Observable\n   * @alias trigger\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n\n\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return this;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n\n    if (!listenersForEvent) {\n      return this;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || {});\n    }\n\n    this.__eventListeners[eventName] = listenersForEvent.filter(function (value) {\n      return value !== false;\n    });\n    return this;\n  }\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n   * @see {@link http://fabricjs.com/events|Events demo}\n   */\n\n\n  fabric.Observable = {\n    observe: observe,\n    stopObserving: stopObserving,\n    fire: fire,\n    on: observe,\n    off: stopObserving,\n    trigger: fire\n  };\n})();\n/**\n * @namespace fabric.Collection\n */\n\n\nfabric.Collection = {\n  _objects: [],\n\n  /**\n   * Adds objects to collection, Canvas or Group, then renders canvas\n   * (if `renderOnAddRemove` is not `false`).\n   * in case of Group no changes to bounding box are made.\n   * Objects should be instances of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the add method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  add: function () {\n    this._objects.push.apply(this._objects, arguments);\n\n    if (this._onObjectAdded) {\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        this._onObjectAdded(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the insertAt method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function (object, index, nonSplicing) {\n    var objects = this._objects;\n\n    if (nonSplicing) {\n      objects[index] = object;\n    } else {\n      objects.splice(index, 0, object);\n    }\n\n    this._onObjectAdded && this._onObjectAdded(object);\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function () {\n    var objects = this._objects,\n        index,\n        somethingRemoved = false;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]); // only call onObjectRemoved if an object was actually removed\n\n      if (index !== -1) {\n        somethingRemoved = true;\n        objects.splice(index, 1);\n        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && somethingRemoved && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   * @chainable\n   */\n  forEachObject: function (callback, context) {\n    var objects = this.getObjects();\n\n    for (var i = 0, len = objects.length; i < len; i++) {\n      callback.call(context, objects[i], i, objects);\n    }\n\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * since 2.3.5 this method return always a COPY of the array;\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function (type) {\n    if (typeof type === 'undefined') {\n      return this._objects.concat();\n    }\n\n    return this._objects.filter(function (o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function (index) {\n    return this._objects[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function () {\n    return this._objects.length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function () {\n    return this._objects.length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function (object) {\n    return this._objects.indexOf(object) > -1;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function () {\n    return this._objects.reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n/**\n * @namespace fabric.CommonMethods\n */\n\nfabric.CommonMethods = {\n  /**\n   * Sets object's properties from options\n   * @param {Object} [options] Options object\n   */\n  _setOptions: function (options) {\n    for (var prop in options) {\n      this.set(prop, options[prop]);\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Gradient to\n   */\n  _initGradient: function (filler, property) {\n    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n      this.set(property, new fabric.Gradient(filler));\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Pattern to\n   * @param {Function} [callback] callback to invoke after pattern load\n   */\n  _initPattern: function (filler, property, callback) {\n    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n      this.set(property, new fabric.Pattern(filler, callback));\n    } else {\n      callback && callback();\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [options] Options object\n   */\n  _initClipping: function (options) {\n    if (!options.clipTo || typeof options.clipTo !== 'string') {\n      return;\n    }\n\n    var functionBody = fabric.util.getFunctionBody(options.clipTo);\n\n    if (typeof functionBody !== 'undefined') {\n      this.clipTo = new Function('ctx', functionBody);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _setObject: function (obj) {\n    for (var prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  },\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  set: function (key, value) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    } else {\n      if (typeof value === 'function' && key !== 'clipTo') {\n        this._set(key, value(this.get(key)));\n      } else {\n        this._set(key, value);\n      }\n    }\n\n    return this;\n  },\n  _set: function (key, value) {\n    this[key] = value;\n  },\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  toggle: function (property) {\n    var value = this.get(property);\n\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n\n    return this;\n  },\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get: function (property) {\n    return this[property];\n  }\n};\n\n(function (global) {\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      PiBy180 = Math.PI / 180,\n      PiBy2 = Math.PI / 2;\n  /**\n   * @namespace fabric.util\n   */\n\n  fabric.util = {\n    /**\n     * Calculate the cos of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    cos: function (angle) {\n      if (angle === 0) {\n        return 1;\n      }\n\n      if (angle < 0) {\n        // cos(a) = cos(-a)\n        angle = -angle;\n      }\n\n      var angleSlice = angle / PiBy2;\n\n      switch (angleSlice) {\n        case 1:\n        case 3:\n          return 0;\n\n        case 2:\n          return -1;\n      }\n\n      return Math.cos(angle);\n    },\n\n    /**\n     * Calculate the sin of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    sin: function (angle) {\n      if (angle === 0) {\n        return 0;\n      }\n\n      var angleSlice = angle / PiBy2,\n          sign = 1;\n\n      if (angle < 0) {\n        // sin(-a) = -sin(a)\n        sign = -1;\n      }\n\n      switch (angleSlice) {\n        case 1:\n          return sign;\n\n        case 2:\n          return 0;\n\n        case 3:\n          return -sign;\n      }\n\n      return Math.sin(angle);\n    },\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {*} value\n     * @return {Array} original array\n     */\n    removeFromArray: function (array, value) {\n      var idx = array.indexOf(value);\n\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function (min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function (degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function (radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function (point, origin, radians) {\n      point.subtractEquals(origin);\n      var v = fabric.util.rotateVector(point, radians);\n      return new fabric.Point(v.x, v.y).addEquals(origin);\n    },\n\n    /**\n     * Rotates `vector` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} vector The vector to rotate (x and y)\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {Object} The new rotated point\n     */\n    rotateVector: function (vector, radians) {\n      var sin = fabric.util.sin(radians),\n          cos = fabric.util.cos(radians),\n          rx = vector.x * cos - vector.y * sin,\n          ry = vector.x * sin + vector.y * cos;\n      return {\n        x: rx,\n        y: ry\n      };\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function (p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(t[0] * p.x + t[2] * p.y, t[1] * p.x + t[3] * p.y);\n      }\n\n      return new fabric.Point(t[0] * p.x + t[2] * p.y + t[4], t[1] * p.x + t[3] * p.y + t[5]);\n    },\n\n    /**\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n     * @param {Array} points 4 points array\n     * @param {Array} [transform] an array of 6 numbers representing a 2x3 transform matrix\n     * @return {Object} Object with left, top, width, height properties\n     */\n    makeBoundingBoxFromPoints: function (points, transform) {\n      if (transform) {\n        for (var i = 0; i < points.length; i++) {\n          points[i] = fabric.util.transformPoint(points[i], transform);\n        }\n      }\n\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n          minX = fabric.util.array.min(xPoints),\n          maxX = fabric.util.array.max(xPoints),\n          width = maxX - minX,\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n          minY = fabric.util.array.min(yPoints),\n          maxY = fabric.util.array.max(yPoints),\n          height = maxY - minY;\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function (t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({\n        x: t[4],\n        y: t[5]\n      }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function (number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @param {Number} fontSize\n     * @return {Number|String}\n     */\n    parseUnit: function (value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72;\n        // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12;\n        // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function () {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function (type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns array of attributes for given svg that fabric parses\n     * @memberOf fabric.util\n     * @param {String} type Type of svg element (eg. 'circle')\n     * @return {Array} string names of supported attributes\n     */\n    getSvgAttributes: function (type) {\n      var attributes = ['instantiated_by_use', 'style', 'id', 'class'];\n\n      switch (type) {\n        case 'linearGradient':\n          attributes = attributes.concat(['x1', 'y1', 'x2', 'y2', 'gradientUnits', 'gradientTransform']);\n          break;\n\n        case 'radialGradient':\n          attributes = attributes.concat(['gradientUnits', 'gradientTransform', 'cx', 'cy', 'r', 'fx', 'fy', 'fr']);\n          break;\n\n        case 'stop':\n          attributes = attributes.concat(['offset', 'stop-color', 'stop-opacity']);\n          break;\n      }\n\n      return attributes;\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function (namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length,\n          i,\n          obj = global || fabric.window;\n\n      for (i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {*} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function (url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n      /** @ignore */\n\n      var onLoadCallback = function () {\n        callback && callback.call(context, img);\n        img = img.onload = img.onerror = null;\n      };\n\n      img.onload = onLoadCallback;\n      /** @ignore */\n\n      img.onerror = function () {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      }; // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n\n\n      if (url.indexOf('data') !== 0 && crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      } // IE10 / IE11-Fix: SVG contents from data: URI\n      // will only be available if the IMG is present\n      // in the DOM (and visible)\n\n\n      if (url.substring(0, 14) === 'data:image/svg') {\n        img.onload = null;\n        fabric.util.loadImageInDom(img, onLoadCallback);\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Attaches SVG image with data: URL to the dom\n     * @memberOf fabric.util\n     * @param {Object} img Image object with data:image/svg src\n     * @param {Function} callback Callback; invoked with loaded image\n     * @return {Object} DOM element (div containing the SVG image)\n     */\n    loadImageInDom: function (img, onLoadCallback) {\n      var div = fabric.document.createElement('div');\n      div.style.width = div.style.height = '1px';\n      div.style.left = div.style.top = '-100%';\n      div.style.position = 'absolute';\n      div.appendChild(img);\n      fabric.document.querySelector('body').appendChild(div);\n      /**\n       * Wrap in function to:\n       *   1. Call existing callback\n       *   2. Cleanup DOM\n       */\n\n      img.onload = function () {\n        onLoadCallback();\n        div.parentNode.removeChild(div);\n        div = null;\n      };\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function (objects, callback, namespace, reviver) {\n      objects = objects || [];\n      var enlivenedObjects = [],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length;\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects.filter(function (obj) {\n            // filter out undefined objects (objects that gave error)\n            return obj;\n          }));\n        }\n      }\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n\n        var klass = fabric.util.getKlass(o.type, namespace);\n        klass.fromObject(o, function (obj, error) {\n          error || (enlivenedObjects[index] = obj);\n          reviver && reviver(o, obj, error);\n          onLoaded();\n        });\n      });\n    },\n\n    /**\n     * Create and wait for loading of patterns\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} patterns Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * called after each fabric object created.\n     */\n    enlivenPatterns: function (patterns, callback) {\n      patterns = patterns || [];\n\n      function onLoaded() {\n        if (++numLoadedPatterns === numPatterns) {\n          callback && callback(enlivenedPatterns);\n        }\n      }\n\n      var enlivenedPatterns = [],\n          numLoadedPatterns = 0,\n          numPatterns = patterns.length;\n\n      if (!numPatterns) {\n        callback && callback(enlivenedPatterns);\n        return;\n      }\n\n      patterns.forEach(function (p, index) {\n        if (p && p.source) {\n          new fabric.Pattern(p, function (pattern) {\n            enlivenedPatterns[index] = pattern;\n            onLoaded();\n          });\n        } else {\n          enlivenedPatterns[index] = p;\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @param {String} path Value to set sourcePath to\n     * @return {fabric.Object|fabric.Group}\n     */\n    groupSVGElements: function (elements, options, path) {\n      var object;\n\n      if (elements && elements.length === 1) {\n        return elements[0];\n      }\n\n      if (options) {\n        if (options.width && options.height) {\n          options.centerPoint = {\n            x: options.width / 2,\n            y: options.height / 2\n          };\n        } else {\n          delete options.width;\n          delete options.height;\n        }\n      }\n\n      object = new fabric.Group(elements, options);\n\n      if (typeof path !== 'undefined') {\n        object.sourcePath = path;\n      }\n\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Properties names to include\n     */\n    populateWithProperties: function (source, destination, properties) {\n      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Draws a dashed line between two points\n     *\n     * This method is used to draw dashed line around selection area.\n     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n     *\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x  start x coordinate\n     * @param {Number} y start y coordinate\n     * @param {Number} x2 end x coordinate\n     * @param {Number} y2 end y coordinate\n     * @param {Array} da dash array pattern\n     */\n    drawDashedLine: function (ctx, x, y, x2, y2, da) {\n      var dx = x2 - x,\n          dy = y2 - y,\n          len = sqrt(dx * dx + dy * dy),\n          rot = atan2(dy, dx),\n          dc = da.length,\n          di = 0,\n          draw = true;\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.moveTo(0, 0);\n      ctx.rotate(rot);\n      x = 0;\n\n      while (len > x) {\n        x += da[di++ % dc];\n\n        if (x > len) {\n          x = len;\n        }\n\n        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n        draw = !draw;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Creates canvas element\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function () {\n      return fabric.document.createElement('canvas');\n    },\n\n    /**\n     * Creates a canvas element that is a copy of another and is also painted\n     * @param {CanvasElement} canvas to copy size and content of\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    copyCanvasElement: function (canvas) {\n      var newCanvas = fabric.util.createCanvasElement();\n      newCanvas.width = canvas.width;\n      newCanvas.height = canvas.height;\n      newCanvas.getContext('2d').drawImage(canvas, 0, 0);\n      return newCanvas;\n    },\n\n    /**\n     * since 2.6.0 moved from canvas instance to utility.\n     * @param {CanvasElement} canvasEl to copy size and content of\n     * @param {String} format 'jpeg' or 'png', in some browsers 'webp' is ok too\n     * @param {Number} quality <= 1 and > 0\n     * @static\n     * @memberOf fabric.util\n     * @return {String} data url\n     */\n    toDataURL: function (canvasEl, format, quality) {\n      return canvasEl.toDataURL('image/' + format, quality);\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function () {\n      return fabric.document.createElement('img');\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @deprecated since 2.0.0\n     * @param {fabric.Object} receiver Object implementing `clipTo` method\n     * @param {CanvasRenderingContext2D} ctx Context to clip\n     */\n    clipContext: function (receiver, ctx) {\n      ctx.save();\n      ctx.beginPath();\n      receiver.clipTo(ctx);\n      ctx.clip();\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function (a, b, is2x2) {\n      // Matrix multiply a * b\n      return [a[0] * b[0] + a[2] * b[1], a[1] * b[0] + a[3] * b[1], a[0] * b[2] + a[2] * b[3], a[1] * b[2] + a[3] * b[3], is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4], is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]];\n    },\n\n    /**\n     * Decomposes standard 2x3 matrix into transform components\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a transformMatrix\n     * @return {Object} Components of transform\n     */\n    qrDecompose: function (a) {\n      var angle = atan2(a[1], a[0]),\n          denom = pow(a[0], 2) + pow(a[1], 2),\n          scaleX = sqrt(denom),\n          scaleY = (a[0] * a[3] - a[2] * a[1]) / scaleX,\n          skewX = atan2(a[0] * a[2] + a[1] * a[3], denom);\n      return {\n        angle: angle / PiBy180,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX / PiBy180,\n        skewY: 0,\n        translateX: a[4],\n        translateY: a[5]\n      };\n    },\n\n    /**\n     * Returns a transform matrix starting from an object of the same kind of\n     * the one returned from qrDecompose, useful also if you want to calculate some\n     * transformations from an object that is not enlived yet\n     * @static\n     * @memberOf fabric.util\n     * @param  {Object} options\n     * @param  {Number} [options.angle] angle in degrees\n     * @return {Number[]} transform matrix\n     */\n    calcRotateMatrix: function (options) {\n      if (!options.angle) {\n        return fabric.iMatrix.concat();\n      }\n\n      var theta = fabric.util.degreesToRadians(options.angle),\n          cos = fabric.util.cos(theta),\n          sin = fabric.util.sin(theta);\n      return [cos, sin, -sin, cos, 0, 0];\n    },\n\n    /**\n     * Returns a transform matrix starting from an object of the same kind of\n     * the one returned from qrDecompose, useful also if you want to calculate some\n     * transformations from an object that is not enlived yet.\n     * is called DimensionsTransformMatrix because those properties are the one that influence\n     * the size of the resulting box of the object.\n     * @static\n     * @memberOf fabric.util\n     * @param  {Object} options\n     * @param  {Number} [options.scaleX]\n     * @param  {Number} [options.scaleY]\n     * @param  {Boolean} [options.flipX]\n     * @param  {Boolean} [options.flipY]\n     * @param  {Number} [options.skewX]\n     * @param  {Number} [options.skewX]\n     * @return {Number[]} transform matrix\n     */\n    calcDimensionsMatrix: function (options) {\n      var scaleX = typeof options.scaleX === 'undefined' ? 1 : options.scaleX,\n          scaleY = typeof options.scaleY === 'undefined' ? 1 : options.scaleY,\n          scaleMatrix = [options.flipX ? -scaleX : scaleX, 0, 0, options.flipY ? -scaleY : scaleY, 0, 0],\n          multiply = fabric.util.multiplyTransformMatrices,\n          degreesToRadians = fabric.util.degreesToRadians;\n\n      if (options.skewX) {\n        scaleMatrix = multiply(scaleMatrix, [1, 0, Math.tan(degreesToRadians(options.skewX)), 1], true);\n      }\n\n      if (options.skewY) {\n        scaleMatrix = multiply(scaleMatrix, [1, Math.tan(degreesToRadians(options.skewY)), 0, 1], true);\n      }\n\n      return scaleMatrix;\n    },\n\n    /**\n     * Returns a transform matrix starting from an object of the same kind of\n     * the one returned from qrDecompose, useful also if you want to calculate some\n     * transformations from an object that is not enlived yet\n     * @static\n     * @memberOf fabric.util\n     * @param  {Object} options\n     * @param  {Number} [options.angle]\n     * @param  {Number} [options.scaleX]\n     * @param  {Number} [options.scaleY]\n     * @param  {Boolean} [options.flipX]\n     * @param  {Boolean} [options.flipY]\n     * @param  {Number} [options.skewX]\n     * @param  {Number} [options.skewX]\n     * @param  {Number} [options.translateX]\n     * @param  {Number} [options.translateY]\n     * @return {Number[]} transform matrix\n     */\n    composeMatrix: function (options) {\n      var matrix = [1, 0, 0, 1, options.translateX || 0, options.translateY || 0],\n          multiply = fabric.util.multiplyTransformMatrices;\n\n      if (options.angle) {\n        matrix = multiply(matrix, fabric.util.calcRotateMatrix(options));\n      }\n\n      if (options.scaleX || options.scaleY || options.skewX || options.skewY || options.flipX || options.flipY) {\n        matrix = multiply(matrix, fabric.util.calcDimensionsMatrix(options));\n      }\n\n      return matrix;\n    },\n\n    /**\n     * Returns a transform matrix that has the same effect of scaleX, scaleY and skewX.\n     * Is deprecated for composeMatrix. Please do not use it.\n     * @static\n     * @deprecated since 3.4.0\n     * @memberOf fabric.util\n     * @param  {Number} scaleX\n     * @param  {Number} scaleY\n     * @param  {Number} skewX\n     * @return {Number[]} transform matrix\n     */\n    customTransformMatrix: function (scaleX, scaleY, skewX) {\n      return fabric.util.composeMatrix({\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX\n      });\n    },\n\n    /**\n     * reset an object transform state to neutral. Top and left are not accounted for\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to transform\n     */\n    resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.flipX = false;\n      target.flipY = false;\n      target.rotate(0);\n    },\n\n    /**\n     * Extract Object transform values\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to read from\n     * @return {Object} Components of transform\n     */\n    saveObjectTransform: function (target) {\n      return {\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        angle: target.angle,\n        left: target.left,\n        flipX: target.flipX,\n        flipY: target.flipY,\n        top: target.top\n      };\n    },\n\n    /**\n     * Returns string representation of function body\n     * @param {Function} fn Function to get body of\n     * @return {String} Function body\n     */\n    getFunctionBody: function (fn) {\n      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function (ctx, x, y, tolerance) {\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        } else {\n          x = 0;\n        }\n\n        if (y > tolerance) {\n          y -= tolerance;\n        } else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true,\n          i,\n          temp,\n          imageData = ctx.getImageData(x, y, tolerance * 2 || 1, tolerance * 2 || 1),\n          l = imageData.data.length; // Split image data - for tolerance > 1, pixelDataSize = 4;\n\n      for (i = 3; i < l; i += 4) {\n        temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n      return _isTransparent;\n    },\n\n    /**\n     * Parse preserveAspectRatio attribute from element\n     * @param {string} attribute to be parsed\n     * @return {Object} an object containing align and meetOrSlice attribute\n     */\n    parsePreserveAspectRatioAttribute: function (attribute) {\n      var meetOrSlice = 'meet',\n          alignX = 'Mid',\n          alignY = 'Mid',\n          aspectRatioAttrs = attribute.split(' '),\n          align;\n\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n        meetOrSlice = aspectRatioAttrs.pop();\n\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n          align = meetOrSlice;\n          meetOrSlice = 'meet';\n        } else if (aspectRatioAttrs.length) {\n          align = aspectRatioAttrs.pop();\n        }\n      } //divide align in alignX and alignY\n\n\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n      return {\n        meetOrSlice: meetOrSlice,\n        alignX: alignX,\n        alignY: alignY\n      };\n    },\n\n    /**\n     * Clear char widths cache for the given font family or all the cache if no\n     * fontFamily is specified.\n     * Use it if you know you are loading fonts in a lazy way and you are not waiting\n     * for custom fonts to load properly when adding text objects to the canvas.\n     * If a text object is added when its own font is not loaded yet, you will get wrong\n     * measurement and so wrong bounding boxes.\n     * After the font cache is cleared, either change the textObject text content or call\n     * initDimensions() to trigger a recalculation\n     * @memberOf fabric.util\n     * @param {String} [fontFamily] font family to clear\n     */\n    clearFabricFontCache: function (fontFamily) {\n      fontFamily = (fontFamily || '').toLowerCase();\n\n      if (!fontFamily) {\n        fabric.charWidthsCache = {};\n      } else if (fabric.charWidthsCache[fontFamily]) {\n        delete fabric.charWidthsCache[fontFamily];\n      }\n    },\n\n    /**\n     * Given current aspect ratio, determines the max width and height that can\n     * respect the total allowed area for the cache.\n     * @memberOf fabric.util\n     * @param {Number} ar aspect ratio\n     * @param {Number} maximumArea Maximum area you want to achieve\n     * @return {Object.x} Limited dimensions by X\n     * @return {Object.y} Limited dimensions by Y\n     */\n    limitDimsByArea: function (ar, maximumArea) {\n      var roughWidth = Math.sqrt(maximumArea * ar),\n          perfLimitSizeY = Math.floor(maximumArea / roughWidth);\n      return {\n        x: Math.floor(roughWidth),\n        y: perfLimitSizeY\n      };\n    },\n    capValue: function (min, value, max) {\n      return Math.max(min, Math.min(value, max));\n    },\n    findScaleToFit: function (source, destination) {\n      return Math.min(destination.width / source.width, destination.height / source.height);\n    },\n    findScaleToCover: function (source, destination) {\n      return Math.max(destination.width / source.width, destination.height / source.height);\n    },\n\n    /**\n     * given an array of 6 number returns something like `\"matrix(...numbers)\"`\n     * @memberOf fabric.util\n     * @param {Array} trasnform an array with 6 numbers\n     * @return {String} transform matrix for svg\n     * @return {Object.y} Limited dimensions by Y\n     */\n    matrixToSVG: function (transform) {\n      return 'matrix(' + transform.map(function (value) {\n        return fabric.util.toFixed(value, fabric.Object.NUM_FRACTION_DIGITS);\n      }).join(' ') + ')';\n    }\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function () {\n  var _join = Array.prototype.join;\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var argsString = _join.call(arguments);\n\n    if (fabric.arcToSegmentsCache[argsString]) {\n      return fabric.arcToSegmentsCache[argsString];\n    }\n\n    var PI = Math.PI,\n        th = rotateX * PI / 180,\n        sinTh = fabric.util.sin(th),\n        cosTh = fabric.util.cos(th),\n        fromX = 0,\n        fromY = 0;\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx,\n        ry2 = ry * ry,\n        py2 = py * py,\n        px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    } else {\n      root = (large === sweep ? -1.0 : 1.0) * Math.sqrt(pl / (rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    } else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    } // Convert into cubic bezier segments <= 90deg\n\n\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [],\n        mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][4];\n      fromY = result[i][5];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n\n    fabric.arcToSegmentsCache[argsString] = result;\n    return result;\n  }\n\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var costh2 = fabric.util.cos(th2),\n        sinth2 = fabric.util.sin(th2),\n        costh3 = fabric.util.cos(th3),\n        sinth3 = fabric.util.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * (-cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * (-sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * (cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * (sinTh * rx * sinth3 - cosTh * ry * costh3);\n    return [cp1X, cp1Y, cp2X, cp2Y, toX, toY];\n  }\n  /*\n   * Private\n   */\n\n\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n\n    if (tb >= ta) {\n      return tb - ta;\n    } else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n  /**\n   * Draws arc\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Array} coords\n   */\n\n\n  fabric.util.drawArc = function (ctx, fx, fy, coords) {\n    var rx = coords[0],\n        ry = coords[1],\n        rot = coords[2],\n        large = coords[3],\n        sweep = coords[4],\n        tx = coords[5],\n        ty = coords[6],\n        segs = [[], [], [], []],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segs[i][0] = segsNorm[i][0] + fx;\n      segs[i][1] = segsNorm[i][1] + fy;\n      segs[i][2] = segsNorm[i][2] + fx;\n      segs[i][3] = segsNorm[i][3] + fy;\n      segs[i][4] = segsNorm[i][4] + fx;\n      segs[i][5] = segsNorm[i][5] + fy;\n      ctx.bezierCurveTo.apply(ctx, segs[i]);\n    }\n  };\n  /**\n   * Calculate bounding box of a elliptic-arc\n   * @param {Number} fx start point of arc\n   * @param {Number} fy\n   * @param {Number} rx horizontal radius\n   * @param {Number} ry vertical radius\n   * @param {Number} rot angle of horizontal axe\n   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n   * @param {Number} tx end point of arc\n   * @param {Number} ty\n   */\n\n\n  fabric.util.getBoundsOfArc = function (fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n    var fromX = 0,\n        fromY = 0,\n        bound,\n        bounds = [],\n        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segs.length; i < len; i++) {\n      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n      bounds.push({\n        x: bound[0].x + fx,\n        y: bound[0].y + fy\n      });\n      bounds.push({\n        x: bound[1].x + fx,\n        y: bound[1].y + fy\n      });\n      fromX = segs[i][4];\n      fromY = segs[i][5];\n    }\n\n    return bounds;\n  };\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of beizer\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n\n\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString;\n\n    if (fabric.cachesBoundsOfCurve) {\n      argsString = _join.call(arguments);\n\n      if (fabric.boundsOfCurveCache[argsString]) {\n        return fabric.boundsOfCurveCache[argsString];\n      }\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min,\n        max = Math.max,\n        abs = Math.abs,\n        tvalues = [],\n        bounds = [[], []],\n        a,\n        b,\n        c,\n        t,\n        t1,\n        t2,\n        b2ac,\n        sqrtb2ac;\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n\n        t = -c / b;\n\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n\n        continue;\n      }\n\n      b2ac = b * b - 4 * c * a;\n\n      if (b2ac < 0) {\n        continue;\n      }\n\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n\n      t2 = (-b - sqrtb2ac) / (2 * a);\n\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x,\n        y,\n        j = tvalues.length,\n        jlen = j,\n        mt;\n\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n      bounds[0][j] = x;\n      y = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [{\n      x: min.apply(null, bounds[0]),\n      y: min.apply(null, bounds[1])\n    }, {\n      x: max.apply(null, bounds[0]),\n      y: max.apply(null, bounds[1])\n    }];\n\n    if (fabric.cachesBoundsOfCurve) {\n      fabric.boundsOfCurveCache[argsString] = result;\n    }\n\n    return result;\n  }\n\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n})();\n\n(function () {\n  var slice = Array.prototype.slice;\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2),\n        result = [];\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n\n    return result;\n  }\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n\n\n  function max(array, byProperty) {\n    return find(array, byProperty, function (value1, value2) {\n      return value1 >= value2;\n    });\n  }\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n\n\n  function min(array, byProperty) {\n    return find(array, byProperty, function (value1, value2) {\n      return value1 < value2;\n    });\n  }\n  /**\n   * @private\n   */\n\n\n  function fill(array, value) {\n    var k = array.length;\n\n    while (k--) {\n      array[k] = value;\n    }\n\n    return array;\n  }\n  /**\n   * @private\n   */\n\n\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    } else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n\n    return result;\n  }\n  /**\n   * @namespace fabric.util.array\n   */\n\n\n  fabric.util.array = {\n    fill: fill,\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n})();\n\n(function () {\n  /**\n   * Copies all enumerable properties of one js object to another\n   * this does not and cannot compete with generic utils.\n   * Does not clone or extend fabric.Object subclasses.\n   * This is mostly for internal use and has extra handling for fabricJS objects\n   * it skips the canvas property in deep cloning.\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @return {Object}\n   */\n  function extend(destination, source, deep) {\n    // JScript DontEnum bug is not taken care of\n    // the deep clone is for internal use, is not meant to avoid\n    // javascript traps or cloning html element or self referenced objects.\n    if (deep) {\n      if (!fabric.isLikelyNode && source instanceof Element) {\n        // avoid cloning deep images, canvases,\n        destination = source;\n      } else if (source instanceof Array) {\n        destination = [];\n\n        for (var i = 0, len = source.length; i < len; i++) {\n          destination[i] = extend({}, source[i], deep);\n        }\n      } else if (source && typeof source === 'object') {\n        for (var property in source) {\n          if (property === 'canvas') {\n            destination[property] = extend({}, source[property]);\n          } else if (source.hasOwnProperty(property)) {\n            destination[property] = extend({}, source[property], deep);\n          }\n        }\n      } else {\n        // this sounds odd for an extend but is ok for recursive use\n        destination = source;\n      }\n    } else {\n      for (var property in source) {\n        destination[property] = source[property];\n      }\n    }\n\n    return destination;\n  }\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * @memberOf fabric.util.object\n   * TODO: this function return an empty object if you try to clone null\n   * @param {Object} object Object to clone\n   * @return {Object}\n   */\n\n\n  function clone(object, deep) {\n    return extend({}, object, deep);\n  }\n  /** @namespace fabric.util.object */\n\n\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n})();\n\n(function () {\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function (match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n\n\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() + (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n\n\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&apos;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  }\n  /**\n   * Divide a string in the user perceived single units\n   * @memberOf fabric.util.string\n   * @param {String} textstring String to escape\n   * @return {Array} array containing the graphemes\n   */\n\n\n  function graphemeSplit(textstring) {\n    var i = 0,\n        chr,\n        graphemes = [];\n\n    for (i = 0, chr; i < textstring.length; i++) {\n      if ((chr = getWholeChar(textstring, i)) === false) {\n        continue;\n      }\n\n      graphemes.push(chr);\n    }\n\n    return graphemes;\n  } // taken from mdn in the charAt doc page.\n\n\n  function getWholeChar(str, i) {\n    var code = str.charCodeAt(i);\n\n    if (isNaN(code)) {\n      return ''; // Position not found\n    }\n\n    if (code < 0xD800 || code > 0xDFFF) {\n      return str.charAt(i);\n    } // High surrogate (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n\n\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (str.length <= i + 1) {\n        throw 'High surrogate without following low surrogate';\n      }\n\n      var next = str.charCodeAt(i + 1);\n\n      if (0xDC00 > next || next > 0xDFFF) {\n        throw 'High surrogate without following low surrogate';\n      }\n\n      return str.charAt(i) + str.charAt(i + 1);\n    } // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n\n\n    if (i === 0) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n\n    var prev = str.charCodeAt(i - 1); // (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n\n    if (0xD800 > prev || prev > 0xDBFF) {\n      throw 'Low surrogate without preceding high surrogate';\n    } // We can pass over low surrogates now as the second component\n    // in a pair which we have already processed\n\n\n    return false;\n  }\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n\n\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml,\n    graphemeSplit: graphemeSplit\n  };\n})();\n\n(function () {\n  var slice = Array.prototype.slice,\n      emptyFunction = function () {},\n      IS_DONTENUM_BUGGY = function () {\n    for (var p in {\n      toString: 1\n    }) {\n      if (p === 'toString') {\n        return false;\n      }\n    }\n\n    return true;\n  }(),\n\n  /** @ignore */\n  addMethods = function (klass, source, parent) {\n    for (var property in source) {\n      if (property in klass.prototype && typeof klass.prototype[property] === 'function' && (source[property] + '').indexOf('callSuper') > -1) {\n        klass.prototype[property] = function (property) {\n          return function () {\n            var superclass = this.constructor.superclass;\n            this.constructor.superclass = parent;\n            var returnValue = source[property].apply(this, arguments);\n            this.constructor.superclass = superclass;\n\n            if (property !== 'initialize') {\n              return returnValue;\n            }\n          };\n        }(property);\n      } else {\n        klass.prototype[property] = source[property];\n      }\n\n      if (IS_DONTENUM_BUGGY) {\n        if (source.toString !== Object.prototype.toString) {\n          klass.prototype.toString = source.toString;\n        }\n\n        if (source.valueOf !== Object.prototype.valueOf) {\n          klass.prototype.valueOf = source.valueOf;\n        }\n      }\n    }\n  };\n\n  function Subclass() {}\n\n  function callSuper(methodName) {\n    var parentMethod = null,\n        _this = this; // climb prototype chain to find method not equal to callee's method\n\n\n    while (_this.constructor.superclass) {\n      var superClassMethod = _this.constructor.superclass.prototype[methodName];\n\n      if (_this[methodName] !== superClassMethod) {\n        parentMethod = superClassMethod;\n        break;\n      } // eslint-disable-next-line\n\n\n      _this = _this.constructor.superclass.prototype;\n    }\n\n    if (!parentMethod) {\n      return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\n    }\n\n    return arguments.length > 1 ? parentMethod.apply(this, slice.call(arguments, 1)) : parentMethod.call(this);\n  }\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n\n\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n(function () {\n  // since ie10 or ie9 can use addEventListener but they do not support options, i need to check\n  var couldUseAttachEvent = !!fabric.document.createElement('div').attachEvent;\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n\n  fabric.util.addListener = function (element, eventName, handler, options) {\n    element && element.addEventListener(eventName, handler, couldUseAttachEvent ? false : options);\n  };\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n\n\n  fabric.util.removeListener = function (element, eventName, handler, options) {\n    element && element.removeEventListener(eventName, handler, couldUseAttachEvent ? false : options);\n  };\n\n  function getTouchInfo(event) {\n    var touchProp = event.changedTouches;\n\n    if (touchProp && touchProp[0]) {\n      return touchProp[0];\n    }\n\n    return event;\n  }\n\n  fabric.util.getPointer = function (event) {\n    var element = event.target,\n        scroll = fabric.util.getScrollLeftTop(element),\n        _evt = getTouchInfo(event);\n\n    return {\n      x: _evt.clientX + scroll.left,\n      y: _evt.clientY + scroll.top\n    };\n  };\n})();\n\n(function () {\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n\n    if (!elementStyle) {\n      return element;\n    }\n\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1 ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1]) : element;\n    }\n\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      } else {\n        var normalizedProperty = property === 'float' || property === 'cssFloat' ? typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat' : property;\n        elementStyle[normalizedProperty] = styles[property];\n      }\n    }\n\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n  /** @ignore */\n  setOpacity = function (element) {\n    return element;\n  };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function (element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  } else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function (element, value) {\n      var es = element.style;\n\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : 'alpha(opacity=' + value * 100 + ')';\n        es.filter = es.filter.replace(reOpacity, value);\n      } else {\n        es.filter += ' alpha(opacity=' + value * 100 + ')';\n      }\n\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n})();\n\n(function () {\n  var _slice = Array.prototype.slice;\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n\n  /**\n   * Converts an array-like object (e.g. arguments or NodeList) to an array\n   * @memberOf fabric.util\n   * @param {Object} arrayLike\n   * @return {Array}\n   */\n  toArray = function (arrayLike) {\n    return _slice.call(arrayLike, 0);\n  };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  } catch (err) {}\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function (arrayLike) {\n      var arr = new Array(arrayLike.length),\n          i = arrayLike.length;\n\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n\n      return arr;\n    };\n  }\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n\n\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      } else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      } else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n\n    return el;\n  }\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n\n\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n\n\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n\n\n  function getScrollLeftTop(element) {\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n      scrollLeft: 0,\n      scrollTop: 0\n    }; // While loop checks (and then sets element to) .parentNode OR .host\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n\n    while (element && (element.parentNode || element.host)) {\n      // Set element to element parent, or 'host' in case of ShadowDOM\n      element = element.parentNode || element.host;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop || docElement.scrollTop || 0;\n      } else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 && element.style.position === 'fixed') {\n        break;\n      }\n    }\n\n    return {\n      left: left,\n      top: top\n    };\n  }\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n\n\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = {\n      left: 0,\n      top: 0\n    },\n        offset = {\n      left: 0,\n      top: 0\n    },\n        scrollLeftTop,\n        offsetAttributes = {\n      borderLeftWidth: 'left',\n      borderTopWidth: 'top',\n      paddingLeft: 'left',\n      paddingTop: 'top'\n    };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n\n    if (typeof element.getBoundingClientRect !== 'undefined') {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0) + offset.top\n    };\n  }\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n\n\n  var getElementStyle;\n\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function (element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  } else {\n    getElementStyle = function (element, attr) {\n      var value = element.style[attr];\n\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style ? 'userSelect' : 'MozUserSelect' in style ? 'MozUserSelect' : 'WebkitUserSelect' in style ? 'WebkitUserSelect' : 'KhtmlUserSelect' in style ? 'KhtmlUserSelect' : '';\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      } else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n\n      return element;\n    }\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n\n\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n\n      if (selectProp) {\n        element.style[selectProp] = '';\n      } else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  (function () {\n    /**\n     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n     * @memberOf fabric.util\n     * @param {String} url URL of a script to load\n     * @param {Function} callback Callback to execute when script is finished loading\n     */\n    function getScript(url, callback) {\n      var headEl = fabric.document.getElementsByTagName('head')[0],\n          scriptEl = fabric.document.createElement('script'),\n          loading = true;\n      /** @ignore */\n\n      scriptEl.onload =\n      /** @ignore */\n      scriptEl.onreadystatechange = function (e) {\n        if (loading) {\n          if (typeof this.readyState === 'string' && this.readyState !== 'loaded' && this.readyState !== 'complete') {\n            return;\n          }\n\n          loading = false;\n          callback(e || fabric.window.event);\n          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n        }\n      };\n\n      scriptEl.src = url;\n      headEl.appendChild(scriptEl); // causes issue in Opera\n      // headEl.removeChild(scriptEl);\n    }\n\n    fabric.util.getScript = getScript;\n  })();\n\n  function getNodeCanvas(element) {\n    var impl = fabric.jsdomImplForWrapper(element);\n    return impl._canvas || impl._image;\n  }\n\n  ;\n\n  function cleanUpJsdomNode(element) {\n    if (!fabric.isLikelyNode) {\n      return;\n    }\n\n    var impl = fabric.jsdomImplForWrapper(element);\n\n    if (impl) {\n      impl._image = null;\n      impl._canvas = null; // unsure if necessary\n\n      impl._currentSrc = null;\n      impl._attributes = null;\n      impl._classList = null;\n    }\n  }\n\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.makeElement = makeElement;\n  fabric.util.addClass = addClass;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getElementStyle = getElementStyle;\n  fabric.util.getNodeCanvas = getNodeCanvas;\n  fabric.util.cleanUpJsdomNode = cleanUpJsdomNode;\n})();\n\n(function () {\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  function emptyFn() {}\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {String} [options.parameters] parameters to append to url in GET or in body\n   * @param {String} [options.body] body to send with POST or PUT request\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n\n\n  function request(url, options) {\n    options || (options = {});\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function () {},\n        xhr = new fabric.window.XMLHttpRequest(),\n        body = options.body || options.parameters;\n    /** @ignore */\n\n\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n/**\n * Wrapper around `console.log` (when available)\n * @param {*} [values] Values to log\n */\n\n\nfabric.log = console.log;\n/**\n * Wrapper around `console.warn` (when available)\n * @param {*} [values] Values to log as a warning\n */\n\nfabric.warn = console.warn;\n\n(function () {\n  function noop() {\n    return false;\n  }\n\n  function defaultEasing(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Number} [options.startValue=0] Starting value\n   * @param {Number} [options.endValue=100] Ending value\n   * @param {Number} [options.byValue=100] Value to modify the property by\n   * @param {Function} [options.easing] Easing function\n   * @param {Number} [options.duration=500] Duration of change (in ms)\n   * @param {Function} [options.abort] Additional function with logic. If returns true, onComplete is called.\n   */\n\n\n  function animate(options) {\n    requestAnimFrame(function (timestamp) {\n      options || (options = {});\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration,\n          time,\n          onChange = options.onChange || noop,\n          abort = options.abort || noop,\n          onComplete = options.onComplete || noop,\n          easing = options.easing || defaultEasing,\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || endValue - startValue;\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        // TODO: move abort call after calculation\n        // and pass (current,valuePerc, timePerc) as arguments\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : time - start,\n            timePerc = currentTime / duration,\n            current = easing(currentTime, startValue, byValue, duration),\n            valuePerc = Math.abs((current - startValue) / byValue);\n\n        if (abort()) {\n          onComplete(endValue, 1, 1);\n          return;\n        }\n\n        if (time > finish) {\n          onChange(endValue, 1, 1);\n          onComplete(endValue, 1, 1);\n          return;\n        } else {\n          onChange(current, valuePerc, timePerc);\n          requestAnimFrame(tick);\n        }\n      })(start);\n    });\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame || fabric.window.webkitRequestAnimationFrame || fabric.window.mozRequestAnimationFrame || fabric.window.oRequestAnimationFrame || fabric.window.msRequestAnimationFrame || function (callback) {\n    return fabric.window.setTimeout(callback, 1000 / 60);\n  };\n\n  var _cancelAnimFrame = fabric.window.cancelAnimationFrame || fabric.window.clearTimeout;\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n\n\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  function cancelAnimFrame() {\n    return _cancelAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n  fabric.util.cancelAnimFrame = cancelAnimFrame;\n})();\n\n(function () {\n  // Calculate an in-between color. Returns a \"rgba()\" string.\n  // Credit: Edwin Martin <edwin@bitstorm.org>\n  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\n  function calculateColor(begin, end, pos) {\n    var color = 'rgba(' + parseInt(begin[0] + pos * (end[0] - begin[0]), 10) + ',' + parseInt(begin[1] + pos * (end[1] - begin[1]), 10) + ',' + parseInt(begin[2] + pos * (end[2] - begin[2]), 10);\n    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n    color += ')';\n    return color;\n  }\n  /**\n   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {String} fromColor The starting color in hex or rgb(a) format.\n   * @param {String} toColor The starting color in hex or rgb(a) format.\n   * @param {Number} [duration] Duration of change (in ms).\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\n   * @param {Function} [options.abort] Additional function with logic. If returns true, onComplete is called.\n   */\n\n\n  function animateColor(fromColor, toColor, duration, options) {\n    var startColor = new fabric.Color(fromColor).getSource(),\n        endColor = new fabric.Color(toColor).getSource();\n    options = options || {};\n    fabric.util.animate(fabric.util.object.extend(options, {\n      duration: duration || 500,\n      startValue: startColor,\n      endValue: endColor,\n      byValue: endColor,\n      easing: function (currentTime, startValue, byValue, duration) {\n        var posValue = options.colorEasing ? options.colorEasing(currentTime, duration) : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n        return calculateColor(startValue, byValue, posValue);\n      }\n    }));\n  }\n\n  fabric.util.animateColor = animateColor;\n})();\n\n(function () {\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      //handle the 0/0 case:\n      if (c === 0 && a === 0) {\n        s = p / (2 * Math.PI) * Math.asin(1);\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n    }\n\n    return {\n      a: a,\n      c: c,\n      p: p,\n      s: s\n    };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p);\n  }\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutCubic(t, b, c, d) {\n    t /= d / 2;\n\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInExpo(t, b, c, d) {\n    return t === 0 ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutExpo(t, b, c, d) {\n    return t === d ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n\n    if (t === d) {\n      return b + c;\n    }\n\n    t /= d / 2;\n\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158,\n        p = 0,\n        a = c;\n\n    if (t === 0) {\n      return b;\n    }\n\n    t /= d;\n\n    if (t === 1) {\n      return b + c;\n    }\n\n    if (!p) {\n      p = d * 0.3;\n    }\n\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158,\n        p = 0,\n        a = c;\n\n    if (t === 0) {\n      return b;\n    }\n\n    t /= d;\n\n    if (t === 1) {\n      return b + c;\n    }\n\n    if (!p) {\n      p = d * 0.3;\n    }\n\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p) + opts.c + b;\n  }\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158,\n        p = 0,\n        a = c;\n\n    if (t === 0) {\n      return b;\n    }\n\n    t /= d / 2;\n\n    if (t === 2) {\n      return b + c;\n    }\n\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n\n    var opts = normalize(a, c, p, s);\n\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n\n    return opts.a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p) * 0.5 + opts.c + b;\n  }\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n\n    t /= d / 2;\n\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n    }\n\n    return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n  }\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce(d - t, 0, c, d) + b;\n  }\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < 1 / 2.75) {\n      return c * (7.5625 * t * t) + b;\n    } else if (t < 2 / 2.75) {\n      return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n    } else if (t < 2.5 / 2.75) {\n      return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n    } else {\n      return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n    }\n  }\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce(t * 2, 0, c, d) * 0.5 + b;\n    }\n\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n\n\n  fabric.util.ease = {\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function (t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function (t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function (t, b, c, d) {\n      t /= d / 2;\n\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n\n      return -c / 2 * (--t * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function (t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n})();\n\n(function (global) {\n  'use strict';\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n      svgValidTagNames = ['path', 'circle', 'polygon', 'polyline', 'ellipse', 'rect', 'line', 'image', 'text'],\n      svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\n      svgInvalidAncestors = ['pattern', 'defs', 'symbol', 'metadata', 'clipPath', 'mask', 'desc'],\n      svgValidParents = ['symbol', 'g', 'a', 'svg', 'clipPath', 'defs'],\n      attributesMap = {\n    cx: 'left',\n    x: 'left',\n    r: 'radius',\n    cy: 'top',\n    y: 'top',\n    display: 'visible',\n    visibility: 'visible',\n    transform: 'transformMatrix',\n    'fill-opacity': 'fillOpacity',\n    'fill-rule': 'fillRule',\n    'font-family': 'fontFamily',\n    'font-size': 'fontSize',\n    'font-style': 'fontStyle',\n    'font-weight': 'fontWeight',\n    'letter-spacing': 'charSpacing',\n    'paint-order': 'paintFirst',\n    'stroke-dasharray': 'strokeDashArray',\n    'stroke-dashoffset': 'strokeDashOffset',\n    'stroke-linecap': 'strokeLineCap',\n    'stroke-linejoin': 'strokeLineJoin',\n    'stroke-miterlimit': 'strokeMiterLimit',\n    'stroke-opacity': 'strokeOpacity',\n    'stroke-width': 'strokeWidth',\n    'text-decoration': 'textDecoration',\n    'text-anchor': 'textAnchor',\n    opacity: 'opacity',\n    'clip-path': 'clipPath',\n    'clip-rule': 'clipRule',\n    'vector-effect': 'strokeUniform'\n  },\n      colorAttributes = {\n    stroke: 'strokeOpacity',\n    fill: 'fillOpacity'\n  },\n      fSize = 'font-size',\n      cPath = 'clip-path';\n  fabric.svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\n  fabric.svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\n  fabric.svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\n  fabric.svgValidParentsRegEx = getSvgRegex(svgValidParents);\n  fabric.cssRules = {};\n  fabric.gradientDefs = {};\n  fabric.clipPaths = {};\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n        parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    } else if (attr === 'vector-effect') {\n      value = value === 'non-scaling-stroke';\n    } else if (attr === 'strokeDashArray') {\n      if (value === 'none') {\n        value = null;\n      } else {\n        value = value.replace(/,/g, ' ').split(/\\s+/).map(parseFloat);\n      }\n    } else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      } else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    } else if (attr === 'visible') {\n      value = value !== 'none' && value !== 'hidden'; // display=none on parent element always takes precedence over child element\n\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    } else if (attr === 'opacity') {\n      value = parseFloat(value);\n\n      if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n        value *= parentAttributes.opacity;\n      }\n    } else if (attr === 'textAnchor'\n    /* text-anchor */\n    ) {\n        value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n      } else if (attr === 'charSpacing') {\n      // parseUnit returns px and we convert it to em\n      parsed = parseUnit(value, fontSize) / fontSize * 1000;\n    } else if (attr === 'paintFirst') {\n      var fillIndex = value.indexOf('fill');\n      var strokeIndex = value.indexOf('stroke');\n      var value = 'fill';\n\n      if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\n        value = 'stroke';\n      } else if (fillIndex === -1 && strokeIndex > -1) {\n        value = 'stroke';\n      }\n    } else if (attr === 'href' || attr === 'xlink:href') {\n      return value;\n    } else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return !isArray && isNaN(parsed) ? value : parsed;\n  }\n  /**\n    * @private\n    */\n\n\n  function getSvgRegex(arr) {\n    return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\n  }\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n\n\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n        continue;\n      }\n\n      if (typeof attributes[attr] === 'undefined') {\n        if (!fabric.Object.prototype[attr]) {\n          continue;\n        }\n\n        attributes[attr] = fabric.Object.prototype[attr];\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n\n    return attributes;\n  }\n  /**\n   * @private\n   */\n\n\n  function _getMultipleNodes(doc, nodeNames) {\n    var nodeName,\n        nodeArray = [],\n        nodeList,\n        i,\n        len;\n\n    for (i = 0, len = nodeNames.length; i < len; i++) {\n      nodeName = nodeNames[i];\n      nodeList = doc.getElementsByTagName(nodeName);\n      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n    }\n\n    return nodeArray;\n  }\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n\n\n  fabric.parseTransformAttribute = function () {\n    function rotateMatrix(matrix, args) {\n      var cos = fabric.util.cos(args[0]),\n          sin = fabric.util.sin(args[0]),\n          x = 0,\n          y = 0;\n\n      if (args.length === 3) {\n        x = args[1];\n        y = args[2];\n      }\n\n      matrix[0] = cos;\n      matrix[1] = sin;\n      matrix[2] = -sin;\n      matrix[3] = cos;\n      matrix[4] = x - (cos * x - sin * y);\n      matrix[5] = y - (sin * x + cos * y);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = args.length === 2 ? args[1] : args[0];\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewMatrix(matrix, args, pos) {\n      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    } // identity matrix\n\n\n    var iMatrix = fabric.iMatrix,\n        // == begin transform regexp\n    number = fabric.reNum,\n        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' + commaWsp + '(' + number + ')' + commaWsp + '(' + number + '))?\\\\s*\\\\))',\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' + commaWsp + '(' + number + '))?\\\\s*\\\\))',\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' + commaWsp + '(' + number + '))?\\\\s*\\\\))',\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' + '(' + number + ')' + commaWsp + '(' + number + ')' + commaWsp + '(' + number + ')' + commaWsp + '(' + number + ')' + commaWsp + '(' + number + ')' + commaWsp + '(' + number + ')' + '\\\\s*\\\\))',\n        transform = '(?:' + matrix + '|' + translate + '|' + scale + '|' + rotate + '|' + skewX + '|' + skewY + ')',\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n    reTransformList = new RegExp(transformList),\n        // == end transform regexp\n    reTransform = new RegExp(transform, 'g');\n    return function (attributeValue) {\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = []; // return if no argument was given or\n      // an argument does not match transform attribute regexp\n\n      if (!attributeValue || attributeValue && !reTransformList.test(attributeValue)) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function (match) {\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n          // match !== '' && match != null\n          return !!match;\n        }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n\n          case 'skewX':\n            skewMatrix(matrix, args, 2);\n            break;\n\n          case 'skewY':\n            skewMatrix(matrix, args, 1);\n            break;\n\n          case 'matrix':\n            matrix = args;\n            break;\n        } // snapshot current matrix into matrices array\n\n\n        matrices.push(matrix.concat()); // reset\n\n        matrix = iMatrix.concat();\n      });\n      var combinedMatrix = matrices[0];\n\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n\n      return combinedMatrix;\n    };\n  }();\n  /**\n   * @private\n   */\n\n\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n      attr = pair[0].trim().toLowerCase();\n      value = pair[1].trim();\n      oStyle[attr] = value;\n    });\n  }\n  /**\n   * @private\n   */\n\n\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = prop.toLowerCase();\n      value = style[prop];\n      oStyle[attr] = value;\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = {};\n\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n\n    return styles;\n  }\n  /**\n   * @private\n   */\n\n\n  function elementMatchesRule(element, selectors) {\n    var firstMatching,\n        parentMatching = true; //start from rightmost selector.\n\n    firstMatching = selectorMatches(element, selectors.pop());\n\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n\n    return firstMatching && parentMatching && selectors.length === 0;\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector,\n        parentMatching = true;\n\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n\n    return selectors.length === 0;\n  }\n  /**\n   * @private\n   */\n\n\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'),\n        matcher,\n        i; // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n\n      for (i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n\n    return selector.length === 0;\n  }\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument and on node xmlDOM\n   */\n\n\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n\n    if (el) {\n      return el;\n    }\n\n    var node,\n        i,\n        len,\n        nodelist = doc.getElementsByTagName('*');\n\n    for (i = 0, len = nodelist.length; i < len; i++) {\n      node = nodelist[i];\n\n      if (id === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function parseUseDirectives(doc) {\n    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']),\n        i = 0;\n\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlink = (el.getAttribute('xlink:href') || el.getAttribute('href')).substr(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode,\n          oldLength = nodelist.length,\n          attr,\n          j,\n          attrs,\n          len,\n          namespace = fabric.svgNS;\n      applyViewboxTransform(el2);\n\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElementNS(namespace, 'g');\n\n        for (j = 0, attrs = el2.attributes, len = attrs.length; j < len; j++) {\n          attr = attrs.item(j);\n          el3.setAttributeNS(namespace, attr.nodeName, attr.nodeValue);\n        } // el2.firstChild != null\n\n\n        while (el2.firstChild) {\n          el3.appendChild(el2.firstChild);\n        }\n\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {\n        attr = attrs.item(j);\n\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' || attr.nodeName === 'xlink:href' || attr.nodeName === 'href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        } else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el); // some browsers do not shorten nodelist after replaceChild (IE8)\n\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  } // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n\n\n  var reViewBoxAttrValue = new RegExp('^' + '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' + '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' + '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' + '\\\\s*(' + fabric.reNum + '+)\\\\s*' + '$');\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n\n  function applyViewboxTransform(element) {\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth,\n        viewBoxHeight,\n        matrix,\n        el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        x = element.getAttribute('x') || 0,\n        y = element.getAttribute('y') || 0,\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n        missingViewBox = !viewBoxAttr || !fabric.svgViewBoxElementsRegEx.test(element.nodeName) || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue)),\n        missingDimAttr = !widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%',\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = {},\n        translateMatrix = '',\n        widthDiff = 0,\n        heightDiff = 0;\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      return parsedDim;\n    }\n\n    minX = -parseFloat(viewBoxAttr[1]);\n    minY = -parseFloat(viewBoxAttr[2]);\n    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n    parsedDim.minX = minX;\n    parsedDim.minY = minY;\n    parsedDim.viewBoxWidth = viewBoxWidth;\n    parsedDim.viewBoxHeight = viewBoxHeight;\n\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    } else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    } // default is to preserve aspect ratio\n\n\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n\n    if (preserveAspectRatio.alignX !== 'none') {\n      //translate all container for the effect of Mid, Min, Max\n      if (preserveAspectRatio.meetOrSlice === 'meet') {\n        scaleY = scaleX = scaleX > scaleY ? scaleY : scaleX; // calculate additional translation to move the viewbox\n      }\n\n      if (preserveAspectRatio.meetOrSlice === 'slice') {\n        scaleY = scaleX = scaleX > scaleY ? scaleX : scaleY; // calculate additional translation to move the viewbox\n      }\n\n      widthDiff = parsedDim.width - viewBoxWidth * scaleX;\n      heightDiff = parsedDim.height - viewBoxHeight * scaleX;\n\n      if (preserveAspectRatio.alignX === 'Mid') {\n        widthDiff /= 2;\n      }\n\n      if (preserveAspectRatio.alignY === 'Mid') {\n        heightDiff /= 2;\n      }\n\n      if (preserveAspectRatio.alignX === 'Min') {\n        widthDiff = 0;\n      }\n\n      if (preserveAspectRatio.alignY === 'Min') {\n        heightDiff = 0;\n      }\n    }\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n      return parsedDim;\n    }\n\n    if (x || y) {\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n    }\n\n    matrix = translateMatrix + ' matrix(' + scaleX + ' 0' + ' 0 ' + scaleY + ' ' + (minX * scaleX + widthDiff) + ' ' + (minY * scaleY + heightDiff) + ') ';\n    parsedDim.viewboxTransform = fabric.parseTransformAttribute(matrix);\n\n    if (element.nodeName === 'svg') {\n      el = element.ownerDocument.createElementNS(fabric.svgNS, 'g'); // element.firstChild != null\n\n      while (element.firstChild) {\n        el.appendChild(element.firstChild);\n      }\n\n      element.appendChild(el);\n    } else {\n      el = element;\n      matrix = el.getAttribute('transform') + matrix;\n    }\n\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  function hasAncestorWithNodeName(element, nodeName) {\n    while (element && (element = element.parentNode)) {\n      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', '')) && !element.getAttribute('instantiated_by_use')) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished;\n   * It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   * @param {Object} [parsingOptions] options for parsing document\n   * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\n   */\n\n\n  fabric.parseSVGDocument = function (doc, callback, reviver, parsingOptions) {\n    if (!doc) {\n      return;\n    }\n\n    parseUseDirectives(doc);\n    var svgUid = fabric.Object.__uid++,\n        i,\n        len,\n        options = applyViewboxTransform(doc),\n        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n    options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\n    options.svgUid = svgUid;\n\n    if (descendants.length === 0 && fabric.isLikelyNode) {\n      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n      // https://github.com/ajaxorg/node-o3-xml/issues/21\n      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n      var arr = [];\n\n      for (i = 0, len = descendants.length; i < len; i++) {\n        arr[i] = descendants[i];\n      }\n\n      descendants = arr;\n    }\n\n    var elements = descendants.filter(function (el) {\n      applyViewboxTransform(el);\n      return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', '')) && !hasAncestorWithNodeName(el, fabric.svgInvalidAncestorsRegEx); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n    });\n\n    if (!elements || elements && !elements.length) {\n      callback && callback([], {});\n      return;\n    }\n\n    var clipPaths = {};\n    descendants.filter(function (el) {\n      return el.nodeName.replace('svg:', '') === 'clipPath';\n    }).forEach(function (el) {\n      var id = el.getAttribute('id');\n      clipPaths[id] = fabric.util.toArray(el.getElementsByTagName('*')).filter(function (el) {\n        return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', ''));\n      });\n    });\n    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n    fabric.clipPaths[svgUid] = clipPaths; // Precedence of rules:   style > class > attribute\n\n    fabric.parseElements(elements, function (instances, elements) {\n      if (callback) {\n        callback(instances, options, elements, descendants);\n        delete fabric.gradientDefs[svgUid];\n        delete fabric.cssRules[svgUid];\n        delete fabric.clipPaths[svgUid];\n      }\n    }, clone(options), reviver, parsingOptions);\n  };\n\n  function recursivelyParseGradientsXlink(doc, gradient) {\n    var gradientsAttrs = ['gradientTransform', 'x1', 'x2', 'y1', 'y2', 'gradientUnits', 'cx', 'cy', 'r', 'fx', 'fy'],\n        xlinkAttr = 'xlink:href',\n        xLink = gradient.getAttribute(xlinkAttr).substr(1),\n        referencedGradient = elementById(doc, xLink);\n\n    if (referencedGradient && referencedGradient.getAttribute(xlinkAttr)) {\n      recursivelyParseGradientsXlink(doc, referencedGradient);\n    }\n\n    gradientsAttrs.forEach(function (attr) {\n      if (referencedGradient && !gradient.hasAttribute(attr) && referencedGradient.hasAttribute(attr)) {\n        gradient.setAttribute(attr, referencedGradient.getAttribute(attr));\n      }\n    });\n\n    if (!gradient.children.length) {\n      var referenceClone = referencedGradient.cloneNode(true);\n\n      while (referenceClone.firstChild) {\n        gradient.appendChild(referenceClone.firstChild);\n      }\n    }\n\n    gradient.removeAttribute(xlinkAttr);\n  }\n\n  var reFontDeclaration = new RegExp('(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' + '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' + fabric.reNum + '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function (value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n\n      var fontStyle = match[1],\n          // font variant is not used\n      // fontVariant = match[2],\n      fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function (doc) {\n      var tagArray = ['linearGradient', 'radialGradient', 'svg:linearGradient', 'svg:radialGradient'],\n          elList = _getMultipleNodes(doc, tagArray),\n          el,\n          j = 0,\n          gradientDefs = {};\n\n      j = elList.length;\n\n      while (j--) {\n        el = elList[j];\n\n        if (el.getAttribute('xlink:href')) {\n          recursivelyParseGradientsXlink(doc, el);\n        }\n\n        gradientDefs[el.getAttribute('id')] = el;\n      }\n\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function (element, attributes, svgUid) {\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = {},\n          fontSize,\n          parentFontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      } // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n\n\n      if (element.parentNode && fabric.svgValidParentsRegEx.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n\n      var ownAttributes = attributes.reduce(function (memo, attr) {\n        value = element.getAttribute(attr);\n\n        if (value) {\n          // eslint-disable-line\n          memo[attr] = value;\n        }\n\n        return memo;\n      }, {}); // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n\n      var cssAttrs = extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element));\n      ownAttributes = extend(ownAttributes, cssAttrs);\n\n      if (cssAttrs[cPath]) {\n        element.setAttribute(cPath, cssAttrs[cPath]);\n      }\n\n      fontSize = parentFontSize = parentAttributes.fontSize || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\n      if (ownAttributes[fSize]) {\n        // looks like the minimum should be 9px when dealing with ems. this is what looks like in browsers.\n        ownAttributes[fSize] = fontSize = parseUnit(ownAttributes[fSize], parentFontSize);\n      }\n\n      var normalizedAttr,\n          normalizedValue,\n          normalizedStyle = {};\n\n      for (var attr in ownAttributes) {\n        normalizedAttr = normalizeAttr(attr);\n        normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\n        normalizedStyle[normalizedAttr] = normalizedValue;\n      }\n\n      if (normalizedStyle && normalizedStyle.font) {\n        fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\n      }\n\n      var mergedAttrs = extend(parentAttributes, normalizedStyle);\n      return fabric.svgValidParentsRegEx.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function (elements, callback, options, reviver, parsingOptions) {\n      new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function (element) {\n      var oStyle = {},\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      } else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function (points) {\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      } // replace commas with whitespace and remove bookending whitespace\n\n\n      points = points.replace(/,/g, ' ').trim();\n      points = points.split(/\\s+/);\n      var parsedPoints = [],\n          i,\n          len;\n\n      for (i = 0, len = points.length; i < len; i += 2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      } // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function (doc) {\n      var styles = doc.getElementsByTagName('style'),\n          i,\n          len,\n          allRules = {},\n          rules; // very crude parsing of style contents\n\n      for (i = 0, len = styles.length; i < len; i++) {\n        // IE9 doesn't support textContent, but provides text instead.\n        var styleContents = styles[i].textContent || styles[i].text; // remove comments\n\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n\n        if (styleContents.trim() === '') {\n          continue;\n        }\n\n        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = rules.map(function (rule) {\n          return rule.trim();\n        }); // eslint-disable-next-line no-loop-func\n\n        rules.forEach(function (rule) {\n          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n              ruleObj = {},\n              declaration = match[2].trim(),\n              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\n          for (i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n                property = pair[0],\n                value = pair[1];\n            ruleObj[property] = value;\n          }\n\n          rule = match[1];\n          rule.split(',').forEach(function (_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n\n            if (_rule === '') {\n              return;\n            }\n\n            if (allRules[_rule]) {\n              fabric.util.object.extend(allRules[_rule], ruleObj);\n            } else {\n              allRules[_rule] = fabric.util.object.clone(ruleObj);\n            }\n          });\n        });\n      }\n\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromURL: function (url, callback, reviver, options) {\n      url = url.replace(/^\\n\\s*/, '').trim();\n      new fabric.util.request(url, {\n        method: 'get',\n        onComplete: onComplete\n      });\n\n      function onComplete(r) {\n        var xml = r.responseXML;\n\n        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n          xml = new ActiveXObject('Microsoft.XMLDOM');\n          xml.async = 'false'; //IE chokes on DOCTYPE\n\n          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n        }\n\n        if (!xml || !xml.documentElement) {\n          callback && callback(null);\n          return false;\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, _options, elements, allElements) {\n          callback && callback(results, _options, elements, allElements);\n        }, reviver, options);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromString: function (string, callback, reviver, options) {\n      string = string.trim();\n      var doc;\n\n      if (typeof fabric.window.DOMParser !== 'undefined') {\n        var parser = new fabric.window.DOMParser();\n\n        if (parser && parser.parseFromString) {\n          doc = parser.parseFromString(string, 'text/xml');\n        }\n      } else if (fabric.window.ActiveXObject) {\n        doc = new ActiveXObject('Microsoft.XMLDOM');\n        doc.async = 'false'; // IE chokes on DOCTYPE\n\n        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n      }\n\n      fabric.parseSVGDocument(doc.documentElement, function (results, _options, elements, allElements) {\n        callback(results, _options, elements, allElements);\n      }, reviver, options);\n    }\n  });\n})(typeof exports !== 'undefined' ? exports : this);\n\nfabric.ElementsParser = function (elements, callback, options, reviver, parsingOptions, doc) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = options && options.svgUid || 0;\n  this.parsingOptions = parsingOptions;\n  this.regexUrl = /^url\\(['\"]?#([^'\"]+)['\"]?\\)/g;\n  this.doc = doc;\n};\n\n(function (proto) {\n  proto.parse = function () {\n    this.instances = new Array(this.elements.length);\n    this.numElements = this.elements.length;\n    this.createObjects();\n  };\n\n  proto.createObjects = function () {\n    var _this = this;\n\n    this.elements.forEach(function (element, i) {\n      element.setAttribute('svgUid', _this.svgUid);\n\n      _this.createObject(element, i);\n    });\n  };\n\n  proto.findTag = function (el) {\n    return fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n  };\n\n  proto.createObject = function (el, index) {\n    var klass = this.findTag(el);\n\n    if (klass && klass.fromElement) {\n      try {\n        klass.fromElement(el, this.createCallback(index, el), this.options);\n      } catch (err) {\n        fabric.log(err);\n      }\n    } else {\n      this.checkIfDone();\n    }\n  };\n\n  proto.createCallback = function (index, el) {\n    var _this = this;\n\n    return function (obj) {\n      var _options;\n\n      _this.resolveGradient(obj, el, 'fill');\n\n      _this.resolveGradient(obj, el, 'stroke');\n\n      if (obj instanceof fabric.Image && obj._originalElement) {\n        _options = obj.parsePreserveAspectRatioAttribute(el);\n      }\n\n      obj._removeTransformMatrix(_options);\n\n      _this.resolveClipPath(obj, el);\n\n      _this.reviver && _this.reviver(el, obj);\n      _this.instances[index] = obj;\n\n      _this.checkIfDone();\n    };\n  };\n\n  proto.extractPropertyDefinition = function (obj, property, storage) {\n    var value = obj[property],\n        regex = this.regexUrl;\n\n    if (!regex.test(value)) {\n      return;\n    }\n\n    regex.lastIndex = 0;\n    var id = regex.exec(value)[1];\n    regex.lastIndex = 0;\n    return fabric[storage][this.svgUid][id];\n  };\n\n  proto.resolveGradient = function (obj, el, property) {\n    var gradientDef = this.extractPropertyDefinition(obj, property, 'gradientDefs');\n\n    if (gradientDef) {\n      var opacityAttr = el.getAttribute(property + '-opacity');\n      var gradient = fabric.Gradient.fromElement(gradientDef, obj, opacityAttr, this.options);\n      obj.set(property, gradient);\n    }\n  };\n\n  proto.createClipPathCallback = function (obj, container) {\n    return function (_newObj) {\n      _newObj._removeTransformMatrix();\n\n      _newObj.fillRule = _newObj.clipRule;\n      container.push(_newObj);\n    };\n  };\n\n  proto.resolveClipPath = function (obj, usingElement) {\n    var clipPath = this.extractPropertyDefinition(obj, 'clipPath', 'clipPaths'),\n        element,\n        klass,\n        objTransformInv,\n        container,\n        gTransform,\n        options;\n\n    if (clipPath) {\n      container = [];\n      objTransformInv = fabric.util.invertTransform(obj.calcTransformMatrix()); // move the clipPath tag as sibling to the real element that is using it\n\n      var clipPathTag = clipPath[0].parentNode;\n      var clipPathOwner = usingElement;\n\n      while (clipPathOwner.parentNode && clipPathOwner.getAttribute('clip-path') !== obj.clipPath) {\n        clipPathOwner = clipPathOwner.parentNode;\n      }\n\n      clipPathOwner.parentNode.appendChild(clipPathTag);\n\n      for (var i = 0; i < clipPath.length; i++) {\n        element = clipPath[i];\n        klass = this.findTag(element);\n        klass.fromElement(element, this.createClipPathCallback(obj, container), this.options);\n      }\n\n      if (container.length === 1) {\n        clipPath = container[0];\n      } else {\n        clipPath = new fabric.Group(container);\n      }\n\n      gTransform = fabric.util.multiplyTransformMatrices(objTransformInv, clipPath.calcTransformMatrix());\n\n      if (clipPath.clipPath) {\n        this.resolveClipPath(clipPath, clipPathOwner);\n      }\n\n      var options = fabric.util.qrDecompose(gTransform);\n      clipPath.flipX = false;\n      clipPath.flipY = false;\n      clipPath.set('scaleX', options.scaleX);\n      clipPath.set('scaleY', options.scaleY);\n      clipPath.angle = options.angle;\n      clipPath.skewX = options.skewX;\n      clipPath.skewY = 0;\n      clipPath.setPositionByOrigin({\n        x: options.translateX,\n        y: options.translateY\n      }, 'center', 'center');\n      obj.clipPath = clipPath;\n    }\n  };\n\n  proto.checkIfDone = function () {\n    if (--this.numElements === 0) {\n      this.instances = this.instances.filter(function (el) {\n        // eslint-disable-next-line no-eq-null, eqeqeq\n        return el != null;\n      });\n      this.callback(this.instances, this.elements);\n    }\n  };\n})(fabric.ElementsParser.prototype);\n\n(function (global) {\n  'use strict';\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype =\n  /** @lends fabric.Point.prototype */\n  {\n    type: 'point',\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function (that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    addEquals: function (that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function (scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarAddEquals: function (scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function (that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    subtractEquals: function (that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function (scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarSubtractEquals: function (scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Multiplies this point by a value and returns a new one\n     * TODO: rename in scalarMultiply in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function (scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Multiplies this point by a value\n     * TODO: rename in scalarMultiplyEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    multiplyEquals: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * TODO: rename in scalarDivide in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function (scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * TODO: rename in scalarDivideEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    divideEquals: function (scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function (that) {\n      return this.x === that.x && this.y === that.y;\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function (that) {\n      return this.x < that.x && this.y < that.y;\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function (that) {\n      return this.x <= that.x && this.y <= that.y;\n    },\n\n    /**\n      * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function (that) {\n      return this.x > that.x && this.y > that.y;\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function (that) {\n      return this.x >= that.x && this.y >= that.y;\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n     * @return {fabric.Point}\n     */\n    lerp: function (that, t) {\n      if (typeof t === 'undefined') {\n        t = 0.5;\n      }\n\n      t = Math.max(Math.min(1, t), 0);\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function (that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function (that) {\n      return this.lerp(that);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function (that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function (that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function () {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     * @chainable\n     */\n    setXY: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x of this point\n     * @param {Number} x\n     * @chainable\n     */\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n\n    /**\n     * Sets y of this point\n     * @param {Number} y\n     * @chainable\n     */\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     * @chainable\n     */\n    setFromPoint: function (that) {\n      this.x = that.x;\n      this.y = that.y;\n      return this;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function (that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    },\n\n    /**\n     * return a cloned instance of the point\n     * @return {fabric.Point}\n     */\n    clone: function () {\n      return new Point(this.x, this.y);\n    }\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n\n\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n  fabric.Intersection.prototype =\n  /** @lends fabric.Intersection.prototype */\n  {\n    constructor: Intersection,\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoint: function (point) {\n      this.points.push(point);\n      return this;\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoints: function (points) {\n      this.points = this.points.concat(points);\n      return this;\n    }\n  };\n  /**\n   * Checks if one line intersects another\n   * TODO: rename in intersectSegmentSegment\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      } else {\n        result = new Intersection();\n      }\n    } else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      } else {\n        result = new Intersection('Parallel');\n      }\n    }\n\n    return result;\n  };\n  /**\n   * Checks if line intersects polygon\n   * TODO: rename in intersectSegmentPolygon\n   * fix detection of coincident\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n\n\n  fabric.Intersection.intersectLinePolygon = function (a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length,\n        b1,\n        b2,\n        inter,\n        i;\n\n    for (i = 0; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n      result.appendPoints(inter.points);\n    }\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n\n    return result;\n  };\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n\n\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length,\n        i;\n\n    for (i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n      result.appendPoints(inter.points);\n    }\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n\n    return result;\n  };\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {fabric.Point} r1\n   * @param {fabric.Point} r2\n   * @return {fabric.Intersection}\n   */\n\n\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n\n    return result;\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n\n\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    } else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n  fabric.Color.prototype =\n  /** @lends fabric.Color.prototype */\n  {\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function (color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        source = [255, 255, 255, 0];\n      }\n\n      if (!source) {\n        source = Color.sourceFromHex(color);\n      }\n\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n\n      if (!source) {\n        //if color is not recognize let's make black as canvas does\n        source = [0, 0, 0, 1];\n      }\n\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function (r, g, b) {\n      r /= 255;\n      g /= 255;\n      b /= 255;\n      var h,\n          s,\n          l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      } else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n\n          case g:\n            h = (b - r) / d + 2;\n            break;\n\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n\n        h /= 6;\n      }\n\n      return [Math.round(h * 360), Math.round(s * 100), Math.round(l * 100)];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function () {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function (source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color representation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function () {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color representation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function () {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function () {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color representation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function () {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function () {\n      var source = this.getSource(),\n          r,\n          g,\n          b;\n      r = source[0].toString(16);\n      r = r.length === 1 ? '0' + r : r;\n      g = source[1].toString(16);\n      g = g.length === 1 ? '0' + g : g;\n      b = source[2].toString(16);\n      b = b.length === 1 ? '0' + b : b;\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Returns color representation in HEXA format\n     * @return {String} ex: FF5555CC\n     */\n    toHexa: function () {\n      var source = this.getSource(),\n          a;\n      a = Math.round(source[3] * 255);\n      a = a.toString(16);\n      a = a.length === 1 ? '0' + a : a;\n      return this.toHex() + a.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function () {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function (alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function () {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function (threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n      threshold = threshold || 127;\n      average = Number(average) < Number(threshold) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function (otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource(),\n          i;\n\n      for (i = 0; i < 3; i++) {\n        result.push(Math.round(source[i] * (1 - otherAlpha) + otherSource[i] * otherAlpha));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  // eslint-disable-next-line max-len\n\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/i;\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/i;\n  /**\n   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n\n  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n  /**\n   * Map of the 148 color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: https://www.w3.org/TR/css3-color/#svg-color\n   */\n\n  fabric.Color.colorNameMap = {\n    aliceblue: '#F0F8FF',\n    antiquewhite: '#FAEBD7',\n    aqua: '#00FFFF',\n    aquamarine: '#7FFFD4',\n    azure: '#F0FFFF',\n    beige: '#F5F5DC',\n    bisque: '#FFE4C4',\n    black: '#000000',\n    blanchedalmond: '#FFEBCD',\n    blue: '#0000FF',\n    blueviolet: '#8A2BE2',\n    brown: '#A52A2A',\n    burlywood: '#DEB887',\n    cadetblue: '#5F9EA0',\n    chartreuse: '#7FFF00',\n    chocolate: '#D2691E',\n    coral: '#FF7F50',\n    cornflowerblue: '#6495ED',\n    cornsilk: '#FFF8DC',\n    crimson: '#DC143C',\n    cyan: '#00FFFF',\n    darkblue: '#00008B',\n    darkcyan: '#008B8B',\n    darkgoldenrod: '#B8860B',\n    darkgray: '#A9A9A9',\n    darkgrey: '#A9A9A9',\n    darkgreen: '#006400',\n    darkkhaki: '#BDB76B',\n    darkmagenta: '#8B008B',\n    darkolivegreen: '#556B2F',\n    darkorange: '#FF8C00',\n    darkorchid: '#9932CC',\n    darkred: '#8B0000',\n    darksalmon: '#E9967A',\n    darkseagreen: '#8FBC8F',\n    darkslateblue: '#483D8B',\n    darkslategray: '#2F4F4F',\n    darkslategrey: '#2F4F4F',\n    darkturquoise: '#00CED1',\n    darkviolet: '#9400D3',\n    deeppink: '#FF1493',\n    deepskyblue: '#00BFFF',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1E90FF',\n    firebrick: '#B22222',\n    floralwhite: '#FFFAF0',\n    forestgreen: '#228B22',\n    fuchsia: '#FF00FF',\n    gainsboro: '#DCDCDC',\n    ghostwhite: '#F8F8FF',\n    gold: '#FFD700',\n    goldenrod: '#DAA520',\n    gray: '#808080',\n    grey: '#808080',\n    green: '#008000',\n    greenyellow: '#ADFF2F',\n    honeydew: '#F0FFF0',\n    hotpink: '#FF69B4',\n    indianred: '#CD5C5C',\n    indigo: '#4B0082',\n    ivory: '#FFFFF0',\n    khaki: '#F0E68C',\n    lavender: '#E6E6FA',\n    lavenderblush: '#FFF0F5',\n    lawngreen: '#7CFC00',\n    lemonchiffon: '#FFFACD',\n    lightblue: '#ADD8E6',\n    lightcoral: '#F08080',\n    lightcyan: '#E0FFFF',\n    lightgoldenrodyellow: '#FAFAD2',\n    lightgray: '#D3D3D3',\n    lightgrey: '#D3D3D3',\n    lightgreen: '#90EE90',\n    lightpink: '#FFB6C1',\n    lightsalmon: '#FFA07A',\n    lightseagreen: '#20B2AA',\n    lightskyblue: '#87CEFA',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#B0C4DE',\n    lightyellow: '#FFFFE0',\n    lime: '#00FF00',\n    limegreen: '#32CD32',\n    linen: '#FAF0E6',\n    magenta: '#FF00FF',\n    maroon: '#800000',\n    mediumaquamarine: '#66CDAA',\n    mediumblue: '#0000CD',\n    mediumorchid: '#BA55D3',\n    mediumpurple: '#9370DB',\n    mediumseagreen: '#3CB371',\n    mediumslateblue: '#7B68EE',\n    mediumspringgreen: '#00FA9A',\n    mediumturquoise: '#48D1CC',\n    mediumvioletred: '#C71585',\n    midnightblue: '#191970',\n    mintcream: '#F5FFFA',\n    mistyrose: '#FFE4E1',\n    moccasin: '#FFE4B5',\n    navajowhite: '#FFDEAD',\n    navy: '#000080',\n    oldlace: '#FDF5E6',\n    olive: '#808000',\n    olivedrab: '#6B8E23',\n    orange: '#FFA500',\n    orangered: '#FF4500',\n    orchid: '#DA70D6',\n    palegoldenrod: '#EEE8AA',\n    palegreen: '#98FB98',\n    paleturquoise: '#AFEEEE',\n    palevioletred: '#DB7093',\n    papayawhip: '#FFEFD5',\n    peachpuff: '#FFDAB9',\n    peru: '#CD853F',\n    pink: '#FFC0CB',\n    plum: '#DDA0DD',\n    powderblue: '#B0E0E6',\n    purple: '#800080',\n    rebeccapurple: '#663399',\n    red: '#FF0000',\n    rosybrown: '#BC8F8F',\n    royalblue: '#4169E1',\n    saddlebrown: '#8B4513',\n    salmon: '#FA8072',\n    sandybrown: '#F4A460',\n    seagreen: '#2E8B57',\n    seashell: '#FFF5EE',\n    sienna: '#A0522D',\n    silver: '#C0C0C0',\n    skyblue: '#87CEEB',\n    slateblue: '#6A5ACD',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#FFFAFA',\n    springgreen: '#00FF7F',\n    steelblue: '#4682B4',\n    tan: '#D2B48C',\n    teal: '#008080',\n    thistle: '#D8BFD8',\n    tomato: '#FF6347',\n    turquoise: '#40E0D0',\n    violet: '#EE82EE',\n    wheat: '#F5DEB3',\n    white: '#FFFFFF',\n    whitesmoke: '#F5F5F5',\n    yellow: '#FFFF00',\n    yellowgreen: '#9ACD32'\n  };\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n\n    if (t > 1) {\n      t -= 1;\n    }\n\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n\n    if (t < 1 / 2) {\n      return q;\n    }\n\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n\n    return p;\n  }\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n\n\n  fabric.Color.fromRgb = function (color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n\n\n  fabric.Color.sourceFromRgb = function (color) {\n    var match = color.match(Color.reRGBa);\n\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n      return [parseInt(r, 10), parseInt(g, 10), parseInt(b, 10), match[4] ? parseFloat(match[4]) : 1];\n    }\n  };\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n\n\n  fabric.Color.fromRgba = Color.fromRgb;\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n\n  fabric.Color.fromHsl = function (color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n\n\n  fabric.Color.sourceFromHsl = function (color) {\n    var match = color.match(Color.reHSLa);\n\n    if (!match) {\n      return;\n    }\n\n    var h = (parseFloat(match[1]) % 360 + 360) % 360 / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r,\n        g,\n        b;\n\n    if (s === 0) {\n      r = g = b = l;\n    } else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), match[4] ? parseFloat(match[4]) : 1];\n  };\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n\n\n  fabric.Color.fromHsla = Color.fromHsl;\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n\n  fabric.Color.fromHex = function (color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {Array} source\n   */\n\n\n  fabric.Color.sourceFromHex = function (color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = value.length === 3 || value.length === 4,\n          isRGBa = value.length === 8 || value.length === 4,\n          r = isShortNotation ? value.charAt(0) + value.charAt(0) : value.substring(0, 2),\n          g = isShortNotation ? value.charAt(1) + value.charAt(1) : value.substring(2, 4),\n          b = isShortNotation ? value.charAt(2) + value.charAt(2) : value.substring(4, 6),\n          a = isRGBa ? isShortNotation ? value.charAt(3) + value.charAt(3) : value.substring(6, 8) : 'FF';\n      return [parseInt(r, 16), parseInt(g, 16), parseInt(b, 16), parseFloat((parseInt(a, 16) / 255).toFixed(2))];\n    }\n  };\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n\n\n  fabric.Color.fromSource = function (source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function () {\n  /* _FROM_SVG_START_ */\n  function getColorStop(el, multiplier) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset') || 0,\n        color,\n        colorAlpha,\n        opacity,\n        i; // convert percents to absolute values\n\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (i = keyValuePairs.length; i--;) {\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        } else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha * multiplier;\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n\n  var clone = fabric.util.object.clone;\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n\n  fabric.Gradient = fabric.util.createClass(\n  /** @lends fabric.Gradient.prototype */\n  {\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * A transform matrix to apply to the gradient before painting.\n     * Imported from svg gradients, is not applied with the current transform in the center.\n     * Before this transform is applied, the origin point is at the top left corner of the object\n     * plus the addition of offsetY and offsetX.\n     * @type Number[]\n     * @default null\n     */\n    gradientTransform: null,\n\n    /**\n     * coordinates units for coords.\n     * If `pixels`, the number of coords are in the same unit of width / height.\n     * If set as `percentage` the coords are still a number, but 1 means 100% of width\n     * for the X and 100% of the height for the y. It can be bigger than 1 and negative.\n     * allowed values pixels or percentage.\n     * @type String\n     * @default 'pixels'\n     */\n    gradientUnits: 'pixels',\n\n    /**\n     * Gradient type linear or radial\n     * @type String\n     * @default 'pixels'\n     */\n    type: 'linear',\n\n    /**\n     * Constructor\n     * @param {Object} options Options object with type, coords, gradientUnits and colorStops\n     * @param {Object} [options.type] gradient type linear or radial\n     * @param {Object} [options.gradientUnits] gradient units\n     * @param {Object} [options.offsetX] SVG import compatibility\n     * @param {Object} [options.offsetY] SVG import compatibility\n     * @param {Object[]} options.colorStops contains the colorstops.\n     * @param {Object} options.coords contains the coords of the gradient\n     * @param {Number} [options.coords.x1] X coordiante of the first point for linear or of the focal point for radial\n     * @param {Number} [options.coords.y1] Y coordiante of the first point for linear or of the focal point for radial\n     * @param {Number} [options.coords.x2] X coordiante of the second point for linear or of the center point for radial\n     * @param {Number} [options.coords.y2] Y coordiante of the second point for linear or of the center point for radial\n     * @param {Number} [options.coords.r1] only for radial gradient, radius of the inner circle\n     * @param {Number} [options.coords.r2] only for radial gradient, radius of the external circle\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function (options) {\n      options || (options = {});\n      options.coords || (options.coords = {});\n\n      var coords,\n          _this = this; // sets everything, then coords and colorstops get sets again\n\n\n      Object.keys(options).forEach(function (option) {\n        _this[option] = options[option];\n      });\n\n      if (this.id) {\n        this.id += '_' + fabric.Object.__uid++;\n      } else {\n        this.id = fabric.Object.__uid++;\n      }\n\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function (colorStops) {\n      for (var position in colorStops) {\n        var color = new fabric.Color(colorStops[position]);\n        this.colorStops.push({\n          offset: parseFloat(position),\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object}\n     */\n    toObject: function (propertiesToInclude) {\n      var object = {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY,\n        gradientUnits: this.gradientUnits,\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function (object, options) {\n      var coords = clone(this.coords, true),\n          i,\n          len,\n          options = options || {},\n          markup,\n          commonAttributes,\n          colorStops = clone(this.colorStops, true),\n          needsSwap = coords.r1 > coords.r2,\n          transform = this.gradientTransform ? this.gradientTransform.concat() : fabric.iMatrix.concat(),\n          offsetX = -this.offsetX,\n          offsetY = -this.offsetY,\n          withViewport = !!options.additionalTransform,\n          gradientUnits = this.gradientUnits === 'pixels' ? 'userSpaceOnUse' : 'objectBoundingBox'; // colorStops must be sorted ascending\n\n      colorStops.sort(function (a, b) {\n        return a.offset - b.offset;\n      });\n\n      if (gradientUnits === 'objectBoundingBox') {\n        offsetX /= object.width;\n        offsetY /= object.height;\n      } else {\n        offsetX += object.width / 2;\n        offsetY += object.height / 2;\n      }\n\n      if (object.type === 'path') {\n        offsetX -= object.pathOffset.x;\n        offsetY -= object.pathOffset.y;\n      }\n\n      transform[4] -= offsetX;\n      transform[5] -= offsetY;\n      commonAttributes = 'id=\"SVGID_' + this.id + '\" gradientUnits=\"' + gradientUnits + '\"';\n      commonAttributes += ' gradientTransform=\"' + (withViewport ? options.additionalTransform + ' ' : '') + fabric.util.matrixToSVG(transform) + '\" ';\n\n      if (this.type === 'linear') {\n        markup = ['<linearGradient ', commonAttributes, ' x1=\"', coords.x1, '\" y1=\"', coords.y1, '\" x2=\"', coords.x2, '\" y2=\"', coords.y2, '\">\\n'];\n      } else if (this.type === 'radial') {\n        // svg radial gradient has just 1 radius. the biggest.\n        markup = ['<radialGradient ', commonAttributes, ' cx=\"', needsSwap ? coords.x1 : coords.x2, '\" cy=\"', needsSwap ? coords.y1 : coords.y2, '\" r=\"', needsSwap ? coords.r1 : coords.r2, '\" fx=\"', needsSwap ? coords.x2 : coords.x1, '\" fy=\"', needsSwap ? coords.y2 : coords.y1, '\">\\n'];\n      }\n\n      if (this.type === 'radial') {\n        if (needsSwap) {\n          // svg goes from internal to external radius. if radius are inverted, swap color stops.\n          colorStops = colorStops.concat();\n          colorStops.reverse();\n\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset = 1 - colorStops[i].offset;\n          }\n        }\n\n        var minRadius = Math.min(coords.r1, coords.r2);\n\n        if (minRadius > 0) {\n          // i have to shift all colorStops and add new one in 0.\n          var maxRadius = Math.max(coords.r1, coords.r2),\n              percentageShift = minRadius / maxRadius;\n\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\n          }\n        }\n      }\n\n      for (i = 0, len = colorStops.length; i < len; i++) {\n        var colorStop = colorStops[i];\n        markup.push('<stop ', 'offset=\"', colorStop.offset * 100 + '%', '\" style=\"stop-color:', colorStop.color, typeof colorStop.opacity !== 'undefined' ? ';stop-opacity: ' + colorStop.opacity : ';', '\"/>\\n');\n      }\n\n      markup.push(this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n');\n      return markup.join('');\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {CanvasGradient}\n     */\n    toLive: function (ctx) {\n      var gradient,\n          coords = fabric.util.object.clone(this.coords),\n          i,\n          len;\n\n      if (!this.type) {\n        return;\n      }\n\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(coords.x1, coords.y1, coords.x2, coords.y2);\n      } else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n      }\n\n      for (i = 0, len = this.colorStops.length; i < len; i++) {\n        var color = this.colorStops[i].color,\n            opacity = this.colorStops[i].opacity,\n            offset = this.colorStops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n\n        gradient.addColorStop(offset, color);\n      }\n\n      return gradient;\n    }\n  });\n  fabric.util.object.extend(fabric.Gradient, {\n    /* _FROM_SVG_START_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @param {String} opacityAttr A fill-opacity or stroke-opacity attribute to multiply to each stop's opacity.\n     * @param {Object} svgOptions an object containing the size of the SVG in order to parse correctly graidents\n     * that uses gradientUnits as 'userSpaceOnUse' and percentages.\n     * @param {Object.number} viewBoxWidth width part of the viewBox attribute on svg\n     * @param {Object.number} viewBoxHeight height part of the viewBox attribute on svg\n     * @param {Object.number} width width part of the svg tag if viewBox is not specified\n     * @param {Object.number} height height part of the svg tag if viewBox is not specified\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function (el, instance, opacityAttr, svgOptions) {\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n      var multiplier = parseFloat(opacityAttr) / (/%$/.test(opacityAttr) ? 100 : 1);\n      multiplier = multiplier < 0 ? 0 : multiplier > 1 ? 1 : multiplier;\n\n      if (isNaN(multiplier)) {\n        multiplier = 1;\n      }\n\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type,\n          gradientUnits = el.getAttribute('gradientUnits') === 'userSpaceOnUse' ? 'pixels' : 'percentage',\n          gradientTransform = el.getAttribute('gradientTransform') || '',\n          colorStops = [],\n          coords,\n          i,\n          offsetX = 0,\n          offsetY = 0,\n          transformMatrix;\n\n      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n        type = 'linear';\n        coords = getLinearCoords(el);\n      } else {\n        type = 'radial';\n        coords = getRadialCoords(el);\n      }\n\n      for (i = colorStopEls.length; i--;) {\n        colorStops.push(getColorStop(colorStopEls[i], multiplier));\n      }\n\n      transformMatrix = fabric.parseTransformAttribute(gradientTransform);\n\n      __convertPercentUnitsToValues(instance, coords, svgOptions, gradientUnits);\n\n      if (gradientUnits === 'pixels') {\n        offsetX = -instance.left;\n        offsetY = -instance.top;\n      }\n\n      var gradient = new fabric.Gradient({\n        id: el.getAttribute('id'),\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        gradientUnits: gradientUnits,\n        gradientTransform: transformMatrix,\n        offsetX: offsetX,\n        offsetY: offsetY\n      });\n      return gradient;\n    },\n\n    /* _FROM_SVG_END_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from its object representation\n     * this function is uniquely used by Object.setGradient and is deprecated with it.\n     * @static\n     * @deprecated since 3.4.0\n     * @memberOf fabric.Gradient\n     * @param {Object} obj\n     * @param {Object} [options] Options object\n     */\n    forObject: function (obj, options) {\n      options || (options = {});\n\n      __convertPercentUnitsToValues(obj, options.coords, options.gradientUnits, {\n        // those values are to avoid errors. this function is uniquely used by\n        viewBoxWidth: 100,\n        viewBoxHeight: 100\n      });\n\n      return new fabric.Gradient(options);\n    }\n  });\n  /**\n   * @private\n   */\n\n  function __convertPercentUnitsToValues(instance, options, svgOptions, gradientUnits) {\n    var propValue, finalValue;\n    Object.keys(options).forEach(function (prop) {\n      propValue = options[prop];\n\n      if (propValue === 'Infinity') {\n        finalValue = 1;\n      } else if (propValue === '-Infinity') {\n        finalValue = 0;\n      } else {\n        finalValue = parseFloat(options[prop], 10);\n\n        if (typeof propValue === 'string' && /^(\\d+\\.\\d+)%|(\\d+)%$/.test(propValue)) {\n          finalValue *= 0.01;\n\n          if (gradientUnits === 'pixels') {\n            // then we need to fix those percentages here in svg parsing\n            if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n              finalValue *= svgOptions.viewBoxWidth || svgOptions.width;\n            }\n\n            if (prop === 'y1' || prop === 'y2') {\n              finalValue *= svgOptions.viewBoxHeight || svgOptions.height;\n            }\n          }\n        }\n      }\n\n      options[prop] = finalValue;\n    });\n  }\n})();\n\n(function () {\n  'use strict';\n\n  var toFixed = fabric.util.toFixed;\n  /**\n   * Pattern class\n   * @class fabric.Pattern\n   * @see {@link http://fabricjs.com/patterns|Pattern demo}\n   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n   * @see {@link fabric.Pattern#initialize} for constructor definition\n   */\n\n  fabric.Pattern = fabric.util.createClass(\n  /** @lends fabric.Pattern.prototype */\n  {\n    /**\n     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @type String\n     * @default\n     */\n    repeat: 'repeat',\n\n    /**\n     * Pattern horizontal offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Pattern vertical offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * transform matrix to change the pattern, imported from svgs.\n     * @type Array\n     * @default\n     */\n    patternTransform: null,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @param {Function} [callback] function to invoke after callback init.\n     * @return {fabric.Pattern} thisArg\n     */\n    initialize: function (options, callback) {\n      options || (options = {});\n      this.id = fabric.Object.__uid++;\n      this.setOptions(options);\n\n      if (!options.source || options.source && typeof options.source !== 'string') {\n        callback && callback(this);\n        return;\n      } // function string\n\n\n      if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n        this.source = new Function(fabric.util.getFunctionBody(options.source));\n        callback && callback(this);\n      } else {\n        // img src string\n        var _this = this;\n\n        this.source = fabric.util.createImage();\n        fabric.util.loadImage(options.source, function (img) {\n          _this.source = img;\n          callback && callback(_this);\n        }, null, this.crossOrigin);\n      }\n    },\n\n    /**\n     * Returns object representation of a pattern\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of a pattern instance\n     */\n    toObject: function (propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          source,\n          object; // callback\n\n      if (typeof this.source === 'function') {\n        source = String(this.source);\n      } // <img> element\n      else if (typeof this.source.src === 'string') {\n          source = this.source.src;\n        } // <canvas> element\n        else if (typeof this.source === 'object' && this.source.toDataURL) {\n            source = this.source.toDataURL();\n          }\n\n      object = {\n        type: 'pattern',\n        source: source,\n        repeat: this.repeat,\n        crossOrigin: this.crossOrigin,\n        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n        patternTransform: this.patternTransform ? this.patternTransform.concat() : null\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns SVG representation of a pattern\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a pattern\n     */\n    toSVG: function (object) {\n      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n          patternWidth = patternSource.width / object.width,\n          patternHeight = patternSource.height / object.height,\n          patternOffsetX = this.offsetX / object.width,\n          patternOffsetY = this.offsetY / object.height,\n          patternImgSrc = '';\n\n      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n        patternHeight = 1;\n\n        if (patternOffsetY) {\n          patternHeight += Math.abs(patternOffsetY);\n        }\n      }\n\n      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n        patternWidth = 1;\n\n        if (patternOffsetX) {\n          patternWidth += Math.abs(patternOffsetX);\n        }\n      }\n\n      if (patternSource.src) {\n        patternImgSrc = patternSource.src;\n      } else if (patternSource.toDataURL) {\n        patternImgSrc = patternSource.toDataURL();\n      }\n\n      return '<pattern id=\"SVGID_' + this.id + '\" x=\"' + patternOffsetX + '\" y=\"' + patternOffsetY + '\" width=\"' + patternWidth + '\" height=\"' + patternHeight + '\">\\n' + '<image x=\"0\" y=\"0\"' + ' width=\"' + patternSource.width + '\" height=\"' + patternSource.height + '\" xlink:href=\"' + patternImgSrc + '\"></image>\\n' + '</pattern>\\n';\n    },\n\n    /* _TO_SVG_END_ */\n    setOptions: function (options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n    },\n\n    /**\n     * Returns an instance of CanvasPattern\n     * @param {CanvasRenderingContext2D} ctx Context to create pattern\n     * @return {CanvasPattern}\n     */\n    toLive: function (ctx) {\n      var source = typeof this.source === 'function' ? this.source() : this.source; // if the image failed to load, return, and allow rest to continue loading\n\n      if (!source) {\n        return '';\n      } // if an image\n\n\n      if (typeof source.src !== 'undefined') {\n        if (!source.complete) {\n          return '';\n        }\n\n        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n          return '';\n        }\n      }\n\n      return ctx.createPattern(source, this.repeat);\n    }\n  });\n})();\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n\n\n  fabric.Shadow = fabric.util.createClass(\n  /** @lends fabric.Shadow.prototype */\n  {\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * When `false`, the shadow will scale with the object.\n     * When `true`, the shadow's offsetX, offsetY, and blur will not be affected by the object's scale.\n     * default to false\n     * @type Boolean\n     * @default\n     */\n    nonScaling: false,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function (options) {\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function (shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n      return {\n        color: color.trim(),\n        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n        blur: parseInt(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function () {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function (object) {\n      var fBoxX = 40,\n          fBoxY = 40,\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          offset = fabric.util.rotateVector({\n        x: this.offsetX,\n        y: this.offsetY\n      }, fabric.util.degreesToRadians(-object.angle)),\n          BLUR_BOX = 20,\n          color = new fabric.Color(this.color);\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n      }\n\n      if (object.flipX) {\n        offset.x *= -1;\n      }\n\n      if (object.flipY) {\n        offset.y *= -1;\n      }\n\n      return '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' + 'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' + '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' + toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' + '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) + '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' + '\\t<feFlood flood-color=\"' + color.toRgb() + '\" flood-opacity=\"' + color.getAlpha() + '\"/>\\n' + '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' + '\\t<feMerge>\\n' + '\\t\\t<feMergeNode></feMergeNode>\\n' + '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' + '\\t</feMerge>\\n' + '</filter>\\n';\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function () {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          affectStroke: this.affectStroke,\n          nonScaling: this.nonScaling\n        };\n      }\n\n      var obj = {},\n          proto = fabric.Shadow.prototype;\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke', 'nonScaling'].forEach(function (prop) {\n        if (this[prop] !== proto[prop]) {\n          obj[prop] = this[prop];\n        }\n      }, this);\n      return obj;\n    }\n  });\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  // eslint-disable-next-line max-len\n\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function () {\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  } // aliases for faster resolution\n\n\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n      toFixed = fabric.util.toFixed,\n      transformPoint = fabric.util.transformPoint,\n      invertTransform = fabric.util.invertTransform,\n      getNodeCanvas = fabric.util.getNodeCanvas,\n      createCanvasElement = fabric.util.createCanvasElement,\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n\n  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods,\n  /** @lends fabric.StaticCanvas.prototype */\n  {\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function (el, options) {\n      options || (options = {});\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n\n      this._initStatic(el, options);\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n     * since 2.4.0 image caching is active, please when putting an image as background, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n     * since 2.4.0 image caching is active, please when putting an image as overlay, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * if set to false, takes precedence over the object value.\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: false,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove},\n     * {@link fabric.StaticCanvas.moveTo}, {@link fabric.StaticCanvas.clear} and many more, should also re-render canvas.\n     * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\n     * since the renders are quequed and executed one per frame.\n     * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\n     * Left default to true to do not break documentation and old app, fiddles.\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Function that determines clipping of entire canvas area\n     * Being passed context as first argument.\n     * If you are using code minification, ctx argument can be minified/manglied you should use\n     * as a workaround `var ctx = arguments[0];` in the function;\n     * See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n     * @deprecated since 2.0.0\n     * @type Function\n     * @default\n     */\n    clipTo: null,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * The transformation (in the format of Canvas transform) which focuses the viewport\n     * @type Array\n     * @default\n     */\n    viewportTransform: fabric.iMatrix.concat(),\n\n    /**\n     * if set to false background image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    backgroundVpt: true,\n\n    /**\n     * if set to false overlya image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    overlayVpt: true,\n\n    /**\n     * Callback; invoked right before object is about to be scaled/rotated\n     * @deprecated since 2.3.0\n     * Use before:transform event\n     */\n    onBeforeScaleRotate: function () {\n      /* NOOP */\n    },\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     * @type Boolean\n     * @default\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * Describe canvas element extension over design\n     * properties are tl,tr,bl,br.\n     * if canvas is not zoomed/panned those points are the four corner of canvas\n     * if canvas is viewportTransformed you those points indicate the extension\n     * of canvas element in plain untrasformed coordinates\n     * The coordinates get updated with @method calcViewportBoundaries.\n     * @memberOf fabric.StaticCanvas.prototype\n     */\n    vptCoords: {},\n\n    /**\n     * Based on vptCoords and object.aCoords, skip rendering of objects that\n     * are not included in current viewport.\n     * May greatly help in applications with crowded canvas and use of zoom/pan\n     * If One of the corner of the bounding box of the object is on the canvas\n     * the objects get rendered.\n     * @memberOf fabric.StaticCanvas.prototype\n     * @type Boolean\n     * @default\n     */\n    skipOffscreen: true,\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the canvas has rendered, and the context is placed in the\n     * top left corner of the canvas.\n     * clipPath will clip away controls, if you do not want this to happen use controlsAboveOverlay = true\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function (el, options) {\n      var cb = this.requestRenderAllBound;\n      this._objects = [];\n\n      this._createLowerCanvas(el);\n\n      this._initOptions(options);\n\n      this._setImageSmoothing(); // only initialize retina scaling once\n\n\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, cb);\n      }\n\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, cb);\n      }\n\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, cb);\n      }\n\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, cb);\n      }\n\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _isRetinaScaling: function () {\n      return fabric.devicePixelRatio !== 1 && this.enableRetinaScaling;\n    },\n\n    /**\n     * @private\n     * @return {Number} retinaScaling if applied, otherwise 1;\n     */\n    getRetinaScaling: function () {\n      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function () {\n      if (!this._isRetinaScaling()) {\n        return;\n      }\n\n      var scaleRatio = fabric.devicePixelRatio;\n\n      this.__initRetinaScaling(scaleRatio, this.lowerCanvasEl, this.contextContainer);\n\n      if (this.upperCanvasEl) {\n        this.__initRetinaScaling(scaleRatio, this.upperCanvasEl, this.contextTop);\n      }\n    },\n    __initRetinaScaling: function (scaleRatio, canvas, context) {\n      canvas.setAttribute('width', this.width * scaleRatio);\n      canvas.setAttribute('height', this.height * scaleRatio);\n      context.scale(scaleRatio, scaleRatio);\n    },\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function () {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/djnr8o7a/28/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    // TODO: fix stretched examples\n    setBackgroundImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|foreground color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set foreground color to\n     * @param {Function} callback Callback to invoke when foreground color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function (overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function (backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n     */\n    _setImageSmoothing: function () {\n      var ctx = this.getContext();\n      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function (property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function (img) {\n          if (img) {\n            var instance = new fabric.Image(img, options);\n            this[property] = instance;\n            instance.canvas = this;\n          }\n\n          callback && callback(img);\n        }, this, options && options.crossOrigin);\n      } else {\n        options && image.setOptions(options);\n        this[property] = image;\n        image && (image.canvas = this);\n        callback && callback(image);\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function (property, color, callback) {\n      this[property] = color;\n\n      this._initGradient(color, property);\n\n      this._initPattern(color, property, callback);\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function () {\n      var element = createCanvasElement();\n\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n\n      if (!element.style) {\n        element.style = {};\n      }\n\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function (options) {\n      var lowerCanvasEl = this.lowerCanvasEl;\n\n      this._setOptions(options);\n\n      this.width = this.width || parseInt(lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      lowerCanvasEl.width = this.width;\n      lowerCanvasEl.height = this.height;\n      lowerCanvasEl.style.width = this.width + 'px';\n      lowerCanvasEl.style.height = this.height + 'px';\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function (canvasEl) {\n      // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\n      if (canvasEl && canvasEl.getContext) {\n        this.lowerCanvasEl = canvasEl;\n      } else {\n        this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\n      }\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function () {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function () {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function (value, options) {\n      return this.setDimensions({\n        width: value\n      }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function (value, options) {\n      return this.setDimensions({\n        height: value\n      }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function (dimensions, options) {\n      var cssValue;\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n\n          cssValue += 'px';\n          this.hasLostContext = true;\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n\n      if (this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._setBrushStyles();\n      }\n\n      this._initRetinaScaling();\n\n      this._setImageSmoothing();\n\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.requestRenderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function (prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function (prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function () {\n      return this.viewportTransform[0];\n    },\n\n    /**\n     * Sets viewport transform of this canvas instance\n     * @param {Array} vpt the transform in the form of context.transform\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function (vpt) {\n      var activeObject = this._activeObject,\n          object,\n          ignoreVpt = false,\n          skipAbsolute = true,\n          i,\n          len;\n      this.viewportTransform = vpt;\n\n      for (i = 0, len = this._objects.length; i < len; i++) {\n        object = this._objects[i];\n        object.group || object.setCoords(ignoreVpt, skipAbsolute);\n      }\n\n      if (activeObject && activeObject.type === 'activeSelection') {\n        activeObject.setCoords(ignoreVpt, skipAbsolute);\n      }\n\n      this.calcViewportBoundaries();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, zoom centered around point\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function (point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point,\n          vpt = this.viewportTransform.slice(0);\n      point = transformPoint(point, invertTransform(this.viewportTransform));\n      vpt[0] = value;\n      vpt[3] = value;\n      var after = transformPoint(point, vpt);\n      vpt[4] += before.x - after.x;\n      vpt[5] += before.y - after.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function (value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function (point) {\n      var vpt = this.viewportTransform.slice(0);\n      vpt[4] = -point.x;\n      vpt[5] = -point.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function (point) {\n      return this.absolutePan(new fabric.Point(-point.x - this.viewportTransform[4], -point.y - this.viewportTransform[5]));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function () {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function (obj) {\n      this.stateful && obj.setupState();\n\n      obj._set('canvas', this);\n\n      obj.setCoords();\n      this.fire('object:added', {\n        target: obj\n      });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function (obj) {\n      this.fire('object:removed', {\n        target: obj\n      });\n      obj.fire('removed');\n      delete obj.canvas;\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function (ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function () {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this._objects.length = 0;\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this.backgroundColor = '';\n      this.overlayColor = '';\n\n      if (this._hasITextHandlers) {\n        this.off('mouse:up', this._mouseUpITextHandler);\n        this._iTextInstances = null;\n        this._hasITextHandlers = false;\n      }\n\n      this.clearContext(this.contextContainer);\n      this.fire('canvas:cleared');\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Renders the canvas\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._objects);\n      return this;\n    },\n\n    /**\n     * Function created to be instance bound at initialization\n     * used in requestAnimationFrame rendering\n     * Let the fabricJS call it. If you call it manually you could have more\n     * animationFrame stacking on to of each other\n     * for an imperative rendering, use canvas.renderAll\n     * @private\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAndReset: function () {\n      this.isRendering = 0;\n      this.renderAll();\n    },\n\n    /**\n     * Append a renderAll request to next animation frame.\n     * unless one is already in progress, in that case nothing is done\n     * a boolean flag will avoid appending more.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    requestRenderAll: function () {\n      if (!this.isRendering) {\n        this.isRendering = fabric.util.requestAnimFrame(this.renderAndResetBound);\n      }\n\n      return this;\n    },\n\n    /**\n     * Calculate the position of the 4 corner of canvas with current viewportTransform.\n     * helps to determinate when an object is in the current rendering viewport using\n     * object absolute coordinates ( aCoords )\n     * @return {Object} points.tl\n     * @chainable\n     */\n    calcViewportBoundaries: function () {\n      var points = {},\n          width = this.width,\n          height = this.height,\n          iVpt = invertTransform(this.viewportTransform);\n      points.tl = transformPoint({\n        x: 0,\n        y: 0\n      }, iVpt);\n      points.br = transformPoint({\n        x: width,\n        y: height\n      }, iVpt);\n      points.tr = new fabric.Point(points.br.x, points.tl.y);\n      points.bl = new fabric.Point(points.tl.x, points.br.y);\n      this.vptCoords = points;\n      return points;\n    },\n    cancelRequestedRender: function () {\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n    },\n\n    /**\n     * Renders background, objects, overlay and controls.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Array} objects to render\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderCanvas: function (ctx, objects) {\n      var v = this.viewportTransform,\n          path = this.clipPath;\n      this.cancelRequestedRender();\n      this.calcViewportBoundaries();\n      this.clearContext(ctx);\n      this.fire('before:render', {\n        ctx: ctx\n      });\n\n      if (this.clipTo) {\n        fabric.util.clipContext(this, ctx);\n      }\n\n      this._renderBackground(ctx);\n\n      ctx.save(); //apply viewport transform once for all rendering process\n\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\n      this._renderObjects(ctx, objects);\n\n      ctx.restore();\n\n      if (!this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n\n      if (this.clipTo) {\n        ctx.restore();\n      }\n\n      if (path) {\n        path.canvas = this; // needed to setup a couple of variables\n\n        path.shouldCache();\n        path._transformDone = true;\n        path.renderCache({\n          forClipping: true\n        });\n        this.drawClipPathOnCanvas(ctx);\n      }\n\n      this._renderOverlay(ctx);\n\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n\n      this.fire('after:render', {\n        ctx: ctx\n      });\n    },\n\n    /**\n     * Paint the cached clipPath on the lowerCanvasEl\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawClipPathOnCanvas: function (ctx) {\n      var v = this.viewportTransform,\n          path = this.clipPath;\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]); // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4;\n\n      ctx.globalCompositeOperation = 'destination-in';\n      path.transform(ctx);\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} objects to render\n     */\n    _renderObjects: function (ctx, objects) {\n      var i, len;\n\n      for (i = 0, len = objects.length; i < len; ++i) {\n        objects[i] && objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function (ctx, property) {\n      var fill = this[property + 'Color'],\n          object = this[property + 'Image'],\n          v = this.viewportTransform,\n          needsVpt = this[property + 'Vpt'];\n\n      if (!fill && !object) {\n        return;\n      }\n\n      if (fill) {\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(this.width, 0);\n        ctx.lineTo(this.width, this.height);\n        ctx.lineTo(0, this.height);\n        ctx.closePath();\n        ctx.fillStyle = fill.toLive ? fill.toLive(ctx, this) : fill;\n\n        if (needsVpt) {\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        }\n\n        ctx.transform(1, 0, 0, 1, fill.offsetX || 0, fill.offsetY || 0);\n        var m = fill.gradientTransform || fill.patternTransform;\n        m && ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        ctx.fill();\n        ctx.restore();\n      }\n\n      if (object) {\n        ctx.save();\n\n        if (needsVpt) {\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        }\n\n        object.render(ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function (ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'background');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function (ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     */\n    getCenter: function () {\n      return {\n        top: this.height / 2,\n        left: this.width / 2\n      };\n    },\n\n    /**\n     * Centers object horizontally in the canvas\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function (object) {\n      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically in the canvas\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function (object) {\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the canvas\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function (object) {\n      var center = this.getCenter();\n      return this._centerObject(object, new fabric.Point(center.left, center.top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the viewport\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObject: function (object) {\n      var vpCenter = this.getVpCenter();\n      return this._centerObject(object, vpCenter);\n    },\n\n    /**\n     * Centers object horizontally in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectH: function (object) {\n      var vpCenter = this.getVpCenter();\n\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n\n      return this;\n    },\n\n    /**\n     * Centers object Vertically in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectV: function (object) {\n      var vpCenter = this.getVpCenter();\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n    },\n\n    /**\n     * Calculate the point in canvas that correspond to the center of actual viewport.\n     * @return {fabric.Point} vpCenter, viewport center\n     * @chainable\n     */\n    getVpCenter: function () {\n      var center = this.getCenter(),\n          iVpt = invertTransform(this.viewportTransform);\n      return transformPoint({\n        x: center.left,\n        y: center.top\n      }, iVpt);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function (object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      object.setCoords();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Returs dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function (propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function (methodName, propertiesToInclude) {\n      var clipPath = this.clipPath,\n          data = {\n        version: fabric.version,\n        objects: this._toObjects(methodName, propertiesToInclude)\n      };\n\n      if (clipPath) {\n        data.clipPath = this._toObject(this.clipPath, methodName, propertiesToInclude);\n      }\n\n      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function (methodName, propertiesToInclude) {\n      return this._objects.filter(function (object) {\n        return !object.excludeFromExport;\n      }).map(function (instance) {\n        return this._toObject(instance, methodName, propertiesToInclude);\n      }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function (instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      var object = instance[methodName](propertiesToInclude);\n\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n\n      return object;\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function (methodName, propertiesToInclude) {\n      var data = {},\n          bgImage = this.backgroundImage,\n          overlay = this.overlayImage;\n\n      if (this.backgroundColor) {\n        data.background = this.backgroundColor.toObject ? this.backgroundColor.toObject(propertiesToInclude) : this.backgroundColor;\n      }\n\n      if (this.overlayColor) {\n        data.overlay = this.overlayColor.toObject ? this.overlayColor.toObject(propertiesToInclude) : this.overlayColor;\n      }\n\n      if (bgImage && !bgImage.excludeFromExport) {\n        data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\n      }\n\n      if (overlay && !overlay.excludeFromExport) {\n        data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {String} [options.width] desired width of svg with or without units\n     * @param {String} [options.height] desired height of svg with or without units\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function (options, reviver) {\n      options || (options = {});\n      options.reviver = reviver;\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n\n      this._setSVGHeader(markup, options);\n\n      if (this.clipPath) {\n        markup.push('<g clip-path=\"url(#' + this.clipPath.clipPathId + ')\" >\\n');\n      }\n\n      this._setSVGBgOverlayColor(markup, 'background');\n\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n\n      this._setSVGObjects(markup, reviver);\n\n      if (this.clipPath) {\n        markup.push('</g>\\n');\n      }\n\n      this._setSVGBgOverlayColor(markup, 'overlay');\n\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n      markup.push('</svg>');\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function (markup, options) {\n      if (options.suppressPreamble) {\n        return;\n      }\n\n      markup.push('<?xml version=\"1.0\" encoding=\"', options.encoding || 'UTF-8', '\" standalone=\"no\" ?>\\n', '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ', '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function (markup, options) {\n      var width = options.width || this.width,\n          height = options.height || this.height,\n          vpt,\n          viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (options.viewBox) {\n        viewBox = 'viewBox=\"' + options.viewBox.x + ' ' + options.viewBox.y + ' ' + options.viewBox.width + ' ' + options.viewBox.height + '\" ';\n      } else {\n        if (this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          viewBox = 'viewBox=\"' + toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' + toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' + toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' + toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n        }\n      }\n\n      markup.push('<svg ', 'xmlns=\"http://www.w3.org/2000/svg\" ', 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ', 'version=\"1.1\" ', 'width=\"', width, '\" ', 'height=\"', height, '\" ', viewBox, 'xml:space=\"preserve\">\\n', '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n', '<defs>\\n', this.createSVGFontFacesMarkup(), this.createSVGRefElementsMarkup(), this.createSVGClipPathMarkup(options), '</defs>\\n');\n    },\n    createSVGClipPathMarkup: function (options) {\n      var clipPath = this.clipPath;\n\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        return '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' + this.clipPath.toClipPathSVG(options.reviver) + '</clipPath>\\n';\n      }\n\n      return '';\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function () {\n      var _this = this,\n          markup = ['background', 'overlay'].map(function (prop) {\n        var fill = _this[prop + 'Color'];\n\n        if (fill && fill.toLive) {\n          var shouldTransform = _this[prop + 'Vpt'],\n              vpt = _this.viewportTransform,\n              object = {\n            width: _this.width / (shouldTransform ? vpt[0] : 1),\n            height: _this.height / (shouldTransform ? vpt[3] : 1)\n          };\n          return fill.toSVG(object, {\n            additionalTransform: shouldTransform ? fabric.util.matrixToSVG(vpt) : ''\n          });\n        }\n      });\n\n      return markup.join('');\n    },\n\n    /**\n     * Creates markup containing SVG font faces,\n     * font URLs for font faces must be collected by developers\n     * and are not extracted from the DOM by fabricjs\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function () {\n      var markup = '',\n          fontList = {},\n          obj,\n          fontFamily,\n          style,\n          row,\n          rowIndex,\n          _char,\n          charIndex,\n          i,\n          len,\n          fontPaths = fabric.fontPaths,\n          objects = this._objects;\n\n      for (i = 0, len = objects.length; i < len; i++) {\n        obj = objects[i];\n        fontFamily = obj.fontFamily;\n\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n          continue;\n        }\n\n        fontList[fontFamily] = true;\n\n        if (!obj.styles) {\n          continue;\n        }\n\n        style = obj.styles;\n\n        for (rowIndex in style) {\n          row = style[rowIndex];\n\n          for (charIndex in row) {\n            _char = row[charIndex];\n            fontFamily = _char.fontFamily;\n\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n              fontList[fontFamily] = true;\n            }\n          }\n        }\n      }\n\n      for (var j in fontList) {\n        markup += ['\\t\\t@font-face {\\n', '\\t\\t\\tfont-family: \\'', j, '\\';\\n', '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n', '\\t\\t}\\n'].join('');\n      }\n\n      if (markup) {\n        markup = ['\\t<style type=\"text/css\">', '<![CDATA[\\n', markup, ']]>', '</style>\\n'].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function (markup, reviver) {\n      var instance,\n          i,\n          len,\n          objects = this._objects;\n\n      for (i = 0, len = objects.length; i < len; i++) {\n        instance = objects[i];\n\n        if (instance.excludeFromExport) {\n          continue;\n        }\n\n        this._setSVGObject(markup, instance, reviver);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function (markup, instance, reviver) {\n      markup.push(instance.toSVG(reviver));\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function (markup, property, reviver) {\n      if (this[property] && !this[property].excludeFromExport && this[property].toSVG) {\n        markup.push(this[property].toSVG(reviver));\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function (markup, property) {\n      var filler = this[property + 'Color'],\n          vpt = this.viewportTransform,\n          finalWidth = this.width,\n          finalHeight = this.height;\n\n      if (!filler) {\n        return;\n      }\n\n      if (filler.toLive) {\n        var repeat = filler.repeat,\n            iVpt = fabric.util.invertTransform(vpt),\n            shouldInvert = this[property + 'Vpt'],\n            additionalTransform = shouldInvert ? fabric.util.matrixToSVG(iVpt) : '';\n        markup.push('<rect transform=\"' + additionalTransform + ' translate(', finalWidth / 2, ',', finalHeight / 2, ')\"', ' x=\"', filler.offsetX - finalWidth / 2, '\" y=\"', filler.offsetY - finalHeight / 2, '\" ', 'width=\"', repeat === 'repeat-y' || repeat === 'no-repeat' ? filler.source.width : finalWidth, '\" height=\"', repeat === 'repeat-x' || repeat === 'no-repeat' ? filler.source.height : finalHeight, '\" fill=\"url(#SVGID_' + filler.id + ')\"', '></rect>\\n');\n      } else {\n        markup.push('<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ', 'fill=\"', filler, '\"', '></rect>\\n');\n      }\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function (object) {\n      if (!object) {\n        return this;\n      }\n\n      var activeSelection = this._activeObject,\n          i,\n          obj,\n          objs;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n\n          this._objects.unshift(obj);\n        }\n      } else {\n        removeFromArray(this._objects, object);\n\n        this._objects.unshift(object);\n      }\n\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function (object) {\n      if (!object) {\n        return this;\n      }\n\n      var activeSelection = this._activeObject,\n          i,\n          obj,\n          objs;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n\n          this._objects.push(obj);\n        }\n      } else {\n        removeFromArray(this._objects, object);\n\n        this._objects.push(object);\n      }\n\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in behind\n     * the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n\n      var activeSelection = this._activeObject,\n          i,\n          obj,\n          idx,\n          newIdx,\n          objs,\n          objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n\n          if (idx > 0 + objsMoved) {\n            newIdx = idx - 1;\n            removeFromArray(this._objects, obj);\n\n            this._objects.splice(newIdx, 0, obj);\n          }\n\n          objsMoved++;\n        }\n      } else {\n        idx = this._objects.indexOf(object);\n\n        if (idx !== 0) {\n          // if object is not on the bottom of stack\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function (object, idx, intersecting) {\n      var newIdx, i;\n\n      if (intersecting) {\n        newIdx = idx; // traverse down the stack looking for the nearest intersecting object\n\n        for (i = idx - 1; i >= 0; --i) {\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) || object.isContainedWithinObject(this._objects[i]) || this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      } else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in front\n     * of the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n\n      var activeSelection = this._activeObject,\n          i,\n          obj,\n          idx,\n          newIdx,\n          objs,\n          objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n\n          if (idx < this._objects.length - 1 - objsMoved) {\n            newIdx = idx + 1;\n            removeFromArray(this._objects, obj);\n\n            this._objects.splice(newIdx, 0, obj);\n          }\n\n          objsMoved++;\n        }\n      } else {\n        idx = this._objects.indexOf(object);\n\n        if (idx !== this._objects.length - 1) {\n          // if object is not on top of stack (last item in an array)\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function (object, idx, intersecting) {\n      var newIdx, i, len;\n\n      if (intersecting) {\n        newIdx = idx; // traverse up the stack looking for the nearest intersecting object\n\n        for (i = idx + 1, len = this._objects.length; i < len; ++i) {\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) || object.isContainedWithinObject(this._objects[i]) || this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      } else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function (object, index) {\n      removeFromArray(this._objects, object);\n\n      this._objects.splice(index, 0, object);\n\n      return this.renderOnAddRemove && this.requestRenderAll();\n    },\n\n    /**\n     * Clears a canvas element and dispose objects\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      // cancel eventually ongoing renders\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n\n      this.forEachObject(function (object) {\n        object.dispose && object.dispose();\n      });\n      this._objects = [];\n\n      if (this.backgroundImage && this.backgroundImage.dispose) {\n        this.backgroundImage.dispose();\n      }\n\n      this.backgroundImage = null;\n\n      if (this.overlayImage && this.overlayImage.dispose) {\n        this.overlayImage.dispose();\n      }\n\n      this.overlayImage = null;\n      this._iTextInstances = null;\n      this.contextContainer = null;\n      fabric.util.cleanUpJsdomNode(this.lowerCanvasEl);\n      this.lowerCanvasEl = undefined;\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' + '{ objects: ' + this._objects.length + ' }>';\n    }\n  });\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n  extend(fabric.StaticCanvas,\n  /** @lends fabric.StaticCanvas */\n  {\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function (methodName) {\n      var el = createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        default:\n          return null;\n      }\n    }\n  });\n  /**\n   * Returns JSON representation of canvas\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} JSON string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n  if (fabric.isLikelyNode) {\n    fabric.StaticCanvas.prototype.createPNGStream = function () {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createPNGStream();\n    };\n\n    fabric.StaticCanvas.prototype.createJPEGStream = function (opts) {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createJPEGStream(opts);\n    };\n  }\n})();\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\n\n\nfabric.BaseBrush = fabric.util.createClass(\n/** @lends fabric.BaseBrush.prototype */\n{\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color: 'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush, has to be a Number, no string literals\n   * @type Number\n   * @default\n   */\n  width: 1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow: null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: 'round',\n\n  /**\n   * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: 'round',\n\n  /**\n   * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\n   * @type Number\n   * @default\n   */\n  strokeMiterLimit: 10,\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: null,\n\n  /**\n   * Sets shadow of an object\n   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  setShadow: function (options) {\n    this.shadow = new fabric.Shadow(options);\n    return this;\n  },\n\n  /**\n   * Sets brush styles\n   * @private\n   */\n  _setBrushStyles: function () {\n    var ctx = this.canvas.contextTop;\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.miterLimit = this.strokeMiterLimit;\n    ctx.lineJoin = this.strokeLineJoin;\n\n    if (fabric.StaticCanvas.supports('setLineDash')) {\n      ctx.setLineDash(this.strokeDashArray || []);\n    }\n  },\n\n  /**\n   * Sets the transformation on given context\n   * @param {RenderingContext2d} ctx context to render on\n   * @private\n   */\n  _saveAndTransform: function (ctx) {\n    var v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function () {\n    if (!this.shadow) {\n      return;\n    }\n\n    var canvas = this.canvas,\n        shadow = this.shadow,\n        ctx = canvas.contextTop,\n        zoom = canvas.getZoom();\n\n    if (canvas && canvas._isRetinaScaling()) {\n      zoom *= fabric.devicePixelRatio;\n    }\n\n    ctx.shadowColor = shadow.color;\n    ctx.shadowBlur = shadow.blur * zoom;\n    ctx.shadowOffsetX = shadow.offsetX * zoom;\n    ctx.shadowOffsetY = shadow.offsetY * zoom;\n  },\n  needsFullRender: function () {\n    var color = new fabric.Color(this.color);\n    return color.getAlpha() < 1 || !!this.shadow;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function () {\n    var ctx = this.canvas.contextTop;\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n});\n\n(function () {\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush,\n  /** @lends fabric.PencilBrush.prototype */\n  {\n    /**\n     * Discard points that are less than `decimate` pixel distant from each other\n     * @type Number\n     * @default 0.4\n     */\n    decimate: 0.4,\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function (canvas) {\n      this.canvas = canvas;\n      this._points = [];\n    },\n\n    /**\n     * Invoked inside on mouse down and mouse move\n     * @param {Object} pointer\n     */\n    _drawSegment: function (ctx, p1, p2) {\n      var midPoint = p1.midPointFrom(p2);\n      ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n      return midPoint;\n    },\n\n    /**\n     * Inovoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function (pointer, options) {\n      if (!this.canvas._isMainEvent(options.e)) {\n        return;\n      }\n\n      this._prepareForDrawing(pointer); // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n\n\n      this._captureDrawingPath(pointer);\n\n      this._render();\n    },\n\n    /**\n     * Inovoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function (pointer, options) {\n      if (!this.canvas._isMainEvent(options.e)) {\n        return;\n      }\n\n      if (this._captureDrawingPath(pointer) && this._points.length > 1) {\n        if (this.needsFullRender()) {\n          // redraw curve\n          // clear top canvas\n          this.canvas.clearContext(this.canvas.contextTop);\n\n          this._render();\n        } else {\n          var points = this._points,\n              length = points.length,\n              ctx = this.canvas.contextTop; // draw the curve update\n\n          this._saveAndTransform(ctx);\n\n          if (this.oldEnd) {\n            ctx.beginPath();\n            ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\n          }\n\n          this.oldEnd = this._drawSegment(ctx, points[length - 2], points[length - 1], true);\n          ctx.stroke();\n          ctx.restore();\n        }\n      }\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function (options) {\n      if (!this.canvas._isMainEvent(options.e)) {\n        return true;\n      }\n\n      this.oldEnd = undefined;\n\n      this._finalizeAndAddPath();\n\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function (pointer) {\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n\n      this._addPoint(p);\n\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function (point) {\n      if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\n        return false;\n      }\n\n      this._points.push(point);\n\n      return true;\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function () {\n      this._points = [];\n\n      this._setBrushStyles();\n\n      this._setShadow();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function (pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      return this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     */\n    _render: function () {\n      var ctx = this.canvas.contextTop,\n          i,\n          len,\n          p1 = this._points[0],\n          p2 = this._points[1];\n\n      this._saveAndTransform(ctx);\n\n      ctx.beginPath(); //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        var width = this.width / 1000;\n        p1 = new fabric.Point(p1.x, p1.y);\n        p2 = new fabric.Point(p2.x, p2.y);\n        p1.x -= width;\n        p2.x += width;\n      }\n\n      ctx.moveTo(p1.x, p1.y);\n\n      for (i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        this._drawSegment(ctx, p1, p2);\n\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      } // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n\n\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @return {String} SVG path\n     */\n    convertPointsToSVGPath: function (points) {\n      var path = [],\n          i,\n          width = this.width / 1000,\n          p1 = new fabric.Point(points[0].x, points[0].y),\n          p2 = new fabric.Point(points[1].x, points[1].y),\n          len = points.length,\n          multSignX = 1,\n          multSignY = 0,\n          manyPoints = len > 2;\n\n      if (manyPoints) {\n        multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n        multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n      }\n\n      path.push('M ', p1.x - multSignX * width, ' ', p1.y - multSignY * width, ' ');\n\n      for (i = 1; i < len; i++) {\n        if (!p1.eq(p2)) {\n          var midPoint = p1.midPointFrom(p2); // p1 is our bezier control point\n          // midpoint is our endpoint\n          // start point is p(i-1) value.\n\n          path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n        }\n\n        p1 = points[i];\n\n        if (i + 1 < points.length) {\n          p2 = points[i + 1];\n        }\n      }\n\n      if (manyPoints) {\n        multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n        multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n      }\n\n      path.push('L ', p1.x + multSignX * width, ' ', p1.y + multSignY * width);\n      return path;\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {String} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function (pathData) {\n      var path = new fabric.Path(pathData, {\n        fill: null,\n        stroke: this.color,\n        strokeWidth: this.width,\n        strokeLineCap: this.strokeLineCap,\n        strokeMiterLimit: this.strokeMiterLimit,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeDashArray: this.strokeDashArray\n      });\n\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.setShadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * Decimate poins array with the decimate value\n     */\n    decimatePoints: function (points, distance) {\n      if (points.length <= 2) {\n        return points;\n      }\n\n      var zoom = this.canvas.getZoom(),\n          adjustedDistance = Math.pow(distance / zoom, 2),\n          i,\n          l = points.length - 1,\n          lastPoint = points[0],\n          newPoints = [lastPoint],\n          cDistance;\n\n      for (i = 1; i < l; i++) {\n        cDistance = Math.pow(lastPoint.x - points[i].x, 2) + Math.pow(lastPoint.y - points[i].y, 2);\n\n        if (cDistance >= adjustedDistance) {\n          lastPoint = points[i];\n          newPoints.push(lastPoint);\n        }\n      }\n\n      if (newPoints.length === 1) {\n        newPoints.push(new fabric.Point(newPoints[0].x, newPoints[0].y));\n      }\n\n      return newPoints;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function () {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n\n      if (this.decimate) {\n        this._points = this.decimatePoints(this._points, this.decimate);\n      }\n\n      var pathData = this.convertPointsToSVGPath(this._points).join('');\n\n      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.requestRenderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.canvas.add(path);\n      this.canvas.requestRenderAll();\n      path.setCoords();\n\n      this._resetShadow(); // fire event 'path' created\n\n\n      this.canvas.fire('path:created', {\n        path: path\n      });\n    }\n  });\n})();\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\n\n\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush,\n/** @lends fabric.CircleBrush.prototype */\n{\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function (canvas) {\n    this.canvas = canvas;\n    this.points = [];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function (pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop;\n\n    this._saveAndTransform(ctx);\n\n    this.dot(ctx, point);\n    ctx.restore();\n  },\n  dot: function (ctx, point) {\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function (pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n\n    this._setShadow();\n\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Render the full state of the brush\n   * @private\n   */\n  _render: function () {\n    var ctx = this.canvas.contextTop,\n        i,\n        len,\n        points = this.points;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, len = points.length; i < len; i++) {\n      this.dot(ctx, points[i]);\n    }\n\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function (pointer) {\n    if (this.needsFullRender()) {\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.addPoint(pointer);\n\n      this._render();\n    } else {\n      this.drawDot(pointer);\n    }\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function () {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove,\n        i,\n        len;\n    this.canvas.renderOnAddRemove = false;\n    var circles = [];\n\n    for (i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n        radius: point.radius,\n        left: point.x,\n        top: point.y,\n        originX: 'center',\n        originY: 'center',\n        fill: point.fill\n      });\n      this.shadow && circle.setShadow(this.shadow);\n      circles.push(circle);\n    }\n\n    var group = new fabric.Group(circles);\n    group.canvas = this.canvas;\n    this.canvas.add(group);\n    this.canvas.fire('path:created', {\n      path: group\n    });\n    this.canvas.clearContext(this.canvas.contextTop);\n\n    this._resetShadow();\n\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function (pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n        circleRadius = fabric.util.getRandomInt(Math.max(0, this.width - 20), this.width + 20) / 2,\n        circleColor = new fabric.Color(this.color).setAlpha(fabric.util.getRandomInt(0, 100) / 100).toRgba();\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n    this.points.push(pointerPoint);\n    return pointerPoint;\n  }\n});\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\n\nfabric.SprayBrush = fabric.util.createClass(fabric.BaseBrush,\n/** @lends fabric.SprayBrush.prototype */\n{\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density: 20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth: 1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance: 1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity: false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping: true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function (canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function (pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function (pointer) {\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function () {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n    var rects = [];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects);\n    this.shadow && group.setShadow(this.shadow);\n    this.canvas.add(group);\n    this.canvas.fire('path:created', {\n      path: group\n    });\n    this.canvas.clearContext(this.canvas.contextTop);\n\n    this._resetShadow();\n\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function (rects) {\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = {},\n        key,\n        i,\n        len;\n\n    for (i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n\n    var uniqueRectsArray = [];\n\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Render new chunk of spray brush\n   */\n  render: function (sprayChunk) {\n    var ctx = this.canvas.contextTop,\n        i,\n        len;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, len = sprayChunk.length; i < len; i++) {\n      var point = sprayChunk[i];\n\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n\n    ctx.restore();\n  },\n\n  /**\n   * Render all spray chunks\n   */\n  _render: function () {\n    var ctx = this.canvas.contextTop,\n        i,\n        ilen;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      this.render(this.sprayChunks[i]);\n    }\n\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function (pointer) {\n    this.sprayChunkPoints = [];\n    var x,\n        y,\n        width,\n        radius = this.width / 2,\n        i;\n\n    for (i = 0; i < this.density; i++) {\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt( // bottom clamp width to 1\n        Math.max(1, this.dotWidth - this.dotWidthVariance), this.dotWidth + this.dotWidthVariance);\n      } else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\n\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush,\n/** @lends fabric.PatternBrush.prototype */\n{\n  getPatternSrc: function () {\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.util.createCanvasElement(),\n        patternCtx = patternCanvas.getContext('2d');\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n    return patternCanvas;\n  },\n  getPatternSrcFunction: function () {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   */\n  getPattern: function () {\n    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   */\n  _setBrushStyles: function () {\n    this.callSuper('_setBrushStyles');\n    this.canvas.contextTop.strokeStyle = this.getPattern();\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function (pathData) {\n    var path = this.callSuper('createPath', pathData),\n        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y\n    });\n    return path;\n  }\n});\n\n(function () {\n  var getPointer = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      radiansToDegrees = fabric.util.radiansToDegrees,\n      atan2 = Math.atan2,\n      abs = Math.abs,\n      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      STROKE_OFFSET = 0.5;\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:modified\n   * @fires object:rotated\n   * @fires object:scaled\n   * @fires object:moved\n   * @fires object:skewed\n   * @fires object:rotating\n   * @fires object:scaling\n   * @fires object:moving\n   * @fires object:skewing\n   * @fires object:selected this event is deprecated. use selection:created\n   *\n   * @fires before:transform\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:updated\n   * @fires selection:created\n   *\n   * @fires path:created\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:down:before\n   * @fires mouse:move:before\n   * @fires mouse:up:before\n   * @fires mouse:over\n   * @fires mouse:out\n   * @fires mouse:dblclick\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   *\n   */\n\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas,\n  /** @lends fabric.Canvas.prototype */\n  {\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function (el, options) {\n      options || (options = {});\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n\n      this._initStatic(el, options);\n\n      this._initInteractive();\n\n      this._createCacheCanvas();\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * @type Boolean\n     * @default\n     */\n    uniScaleTransform: false,\n\n    /**\n     * Indicates which key enable unproportional scaling\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    uniScaleKey: 'shiftKey',\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling: false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation: false,\n\n    /**\n     * Indicates which key enable centered Transform\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    centeredKey: 'altKey',\n\n    /**\n     * Indicates which key enable alternate action on corner\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    altActionKey: 'shiftKey',\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive: true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection: true,\n\n    /**\n     * Indicates which key or keys enable multiple click selection\n     * Pass value as a string or array of strings\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or empty or containing any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.2\n     * @type String|Array\n     * @default\n     */\n    selectionKey: 'shiftKey',\n\n    /**\n     * Indicates which key enable alternative selection\n     * in case of target overlapping with active object\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * For a series of reason that come from the general expectations on how\n     * things should work, this feature works only for preserveObjectStacking true.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.5\n     * @type null|String\n     * @default\n     */\n    altSelectionKey: null,\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(100, 100, 255, 0.3)',\n    // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray: [],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor: 'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth: 1,\n\n    /**\n     * Select only shapes that are fully contained in the dragged selection rectangle.\n     * @type Boolean\n     * @default\n     */\n    selectionFullyContained: false,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor: 'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor: 'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor: 'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor: 'crosshair',\n\n    /**\n     * Cursor value used for rotation point\n     * @type String\n     * @default\n     */\n    rotationCursor: 'crosshair',\n\n    /**\n     * Cursor value used for disabled elements ( corners with disabled action )\n     * @type String\n     * @since 2.0.0\n     * @default\n     */\n    notAllowedCursor: 'not-allowed',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass: 'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind: false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance: 0,\n\n    /**\n     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind: false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode: false,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected.\n     * When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * Indicates the angle that an object will lock to while rotating.\n     * @type Number\n     * @since 1.6.7\n     * @default\n     */\n    snapAngle: 0,\n\n    /**\n     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n     * When `null`, the snapThreshold will default to the snapAngle.\n     * @type null|Number\n     * @since 1.6.7\n     * @default\n     */\n    snapThreshold: null,\n\n    /**\n     * Indicates if the right click on canvas can output the context menu or not\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    stopContextMenu: false,\n\n    /**\n     * Indicates if the canvas can fire right click events\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    fireRightClick: false,\n\n    /**\n     * Indicates if the canvas can fire middle click events\n     * @type Boolean\n     * @since 1.7.8\n     * @default\n     */\n    fireMiddleClick: false,\n\n    /**\n     * Keep track of the subTargets for Mouse Events\n     * @type fabric.Object[]\n     */\n    targets: [],\n\n    /**\n     * Keep track of the hovered target\n     * @type fabric.Object\n     * @private\n     */\n    _hoveredTarget: null,\n\n    /**\n     * hold the list of nested targets hovered\n     * @type fabric.Object[]\n     * @private\n     */\n    _hoveredTargets: [],\n\n    /**\n     * @private\n     */\n    _initInteractive: function () {\n      this._currentTransform = null;\n      this._groupSelector = null;\n\n      this._initWrapperElement();\n\n      this._createUpperCanvas();\n\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n      this.calcOffset();\n    },\n\n    /**\n     * Divides objects in two groups, one to render immediately\n     * and one to render as activeGroup.\n     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n     */\n    _chooseObjectsToRender: function () {\n      var activeObjects = this.getActiveObjects(),\n          object,\n          objsToRender,\n          activeGroupObjects;\n\n      if (activeObjects.length > 0 && !this.preserveObjectStacking) {\n        objsToRender = [];\n        activeGroupObjects = [];\n\n        for (var i = 0, length = this._objects.length; i < length; i++) {\n          object = this._objects[i];\n\n          if (activeObjects.indexOf(object) === -1) {\n            objsToRender.push(object);\n          } else {\n            activeGroupObjects.push(object);\n          }\n        }\n\n        if (activeObjects.length > 1) {\n          this._activeObject._objects = activeGroupObjects;\n        }\n\n        objsToRender.push.apply(objsToRender, activeGroupObjects);\n      } else {\n        objsToRender = this._objects;\n      }\n\n      return objsToRender;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n        this.contextTopDirty = false;\n      }\n\n      if (this.hasLostContext) {\n        this.renderTopLayer(this.contextTop);\n      }\n\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n      return this;\n    },\n    renderTopLayer: function (ctx) {\n      ctx.save();\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._render();\n        this.contextTopDirty = true;\n      } // we render the top context - last object\n\n\n      if (this.selection && this._groupSelector) {\n        this._drawSelection(ctx);\n\n        this.contextTopDirty = true;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function () {\n      var ctx = this.contextTop;\n      this.clearContext(ctx);\n      this.renderTopLayer(ctx);\n      this.fire('after:render');\n      return this;\n    },\n\n    /**\n     * Resets the current transform to its original values and chooses the type of resizing based on the event\n     * @private\n     */\n    _resetCurrentTransform: function () {\n      var t = this._currentTransform;\n      t.target.set({\n        scaleX: t.original.scaleX,\n        scaleY: t.original.scaleY,\n        skewX: t.original.skewX,\n        skewY: t.original.skewY,\n        left: t.original.left,\n        top: t.original.top\n      });\n\n      if (this._shouldCenterTransform(t.target)) {\n        if (t.originX !== 'center') {\n          if (t.originX === 'right') {\n            t.mouseXSign = -1;\n          } else {\n            t.mouseXSign = 1;\n          }\n        }\n\n        if (t.originY !== 'center') {\n          if (t.originY === 'bottom') {\n            t.mouseYSign = -1;\n          } else {\n            t.mouseYSign = 1;\n          }\n        }\n\n        t.originX = 'center';\n        t.originY = 'center';\n      } else {\n        t.originX = t.original.originX;\n        t.originY = t.original.originY;\n      }\n    },\n\n    /**\n     * Checks if point is contained within an area of given object\n     * @param {Event} e Event object\n     * @param {fabric.Object} target Object to test against\n     * @param {Object} [point] x,y object of point coordinates we want to check.\n     * @return {Boolean} true if point is contained within an area of given object\n     */\n    containsPoint: function (e, target, point) {\n      var ignoreZoom = true,\n          pointer = point || this.getPointer(e, ignoreZoom),\n          xy;\n\n      if (target.group && target.group === this._activeObject && target.group.type === 'activeSelection') {\n        xy = this._normalizePointer(target.group, pointer);\n      } else {\n        xy = {\n          x: pointer.x,\n          y: pointer.y\n        };\n      } // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n\n\n      return target.containsPoint(xy) || target._findTargetCorner(pointer);\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function (object, pointer) {\n      var m = object.calcTransformMatrix(),\n          invertedM = fabric.util.invertTransform(m),\n          vptPointer = this.restorePointerVpt(pointer);\n      return fabric.util.transformPoint(vptPointer, invertedM);\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function (target, x, y) {\n      // in case the target is the activeObject, we cannot execute this optimization\n      // because we need to draw controls too.\n      if (target.shouldCache() && target._cacheCanvas && target !== this._activeObject) {\n        var normalizedPointer = this._normalizePointer(target, {\n          x: x,\n          y: y\n        }),\n            targetRelativeX = Math.max(target.cacheTranslationX + normalizedPointer.x * target.zoomX, 0),\n            targetRelativeY = Math.max(target.cacheTranslationY + normalizedPointer.y * target.zoomY, 0);\n\n        var isTransparent = fabric.util.isTransparent(target._cacheContext, Math.round(targetRelativeX), Math.round(targetRelativeY), this.targetFindTolerance);\n        return isTransparent;\n      }\n\n      var ctx = this.contextCache,\n          originalColor = target.selectionBackgroundColor,\n          v = this.viewportTransform;\n      target.selectionBackgroundColor = '';\n      this.clearContext(ctx);\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      target.render(ctx);\n      ctx.restore();\n      target === this._activeObject && target._renderControls(ctx, {\n        hasBorders: false,\n        transparentCorners: false\n      }, {\n        hasBorders: false\n      });\n      target.selectionBackgroundColor = originalColor;\n      var isTransparent = fabric.util.isTransparent(ctx, x, y, this.targetFindTolerance);\n      return isTransparent;\n    },\n\n    /**\n     * takes an event and determins if selection key has been pressed\n     * @private\n     * @param {Event} e Event object\n     */\n    _isSelectionKeyPressed: function (e) {\n      var selectionKeyPressed = false;\n\n      if (Object.prototype.toString.call(this.selectionKey) === '[object Array]') {\n        selectionKeyPressed = !!this.selectionKey.find(function (key) {\n          return e[key] === true;\n        });\n      } else {\n        selectionKeyPressed = e[this.selectionKey];\n      }\n\n      return selectionKeyPressed;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function (e, target) {\n      var activeObjects = this.getActiveObjects(),\n          activeObject = this._activeObject;\n      return !target || target && activeObject && activeObjects.length > 1 && activeObjects.indexOf(target) === -1 && activeObject !== target && !this._isSelectionKeyPressed(e) || target && !target.evented || target && !target.selectable && activeObject && activeObject !== target;\n    },\n\n    /**\n     * centeredScaling from object can't override centeredScaling from canvas.\n     * this should be fixed, since object setting should take precedence over canvas.\n     * @private\n     * @param {fabric.Object} target\n     */\n    _shouldCenterTransform: function (target) {\n      if (!target) {\n        return;\n      }\n\n      var t = this._currentTransform,\n          centerTransform;\n\n      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      } else if (t.action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !t.altKey : t.altKey;\n    },\n\n    /**\n     * @private\n     */\n    _getOriginFromCorner: function (target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      } else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      } else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n\n      return origin;\n    },\n\n    /**\n     * @private\n     * @param {Boolean} alreadySelected true if target is already selected\n     * @param {String} corner a string representing the corner ml, mr, tl ...\n     * @param {Event} e Event object\n     * @param {fabric.Object} [target] inserted back to help overriding. Unused\n     */\n    _getActionFromCorner: function (alreadySelected, corner, e\n    /* target */\n    ) {\n      if (!corner || !alreadySelected) {\n        return 'drag';\n      }\n\n      switch (corner) {\n        case 'mtr':\n          return 'rotate';\n\n        case 'ml':\n        case 'mr':\n          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n\n        case 'mt':\n        case 'mb':\n          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n\n        default:\n          return 'scale';\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function (e, target, alreadySelected) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e),\n          corner = target._findTargetCorner(this.getPointer(e, true)),\n          action = this._getActionFromCorner(alreadySelected, corner, e, target),\n          origin = this._getOriginFromCorner(target, corner);\n\n      this._currentTransform = {\n        target: target,\n        action: action,\n        corner: corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        // used by transation\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        // unsure they are usefull anymore.\n        // left: target.left,\n        // top: target.top,\n        theta: degreesToRadians(target.angle),\n        // end of unsure\n        width: target.width * target.scaleX,\n        mouseXSign: 1,\n        mouseYSign: 1,\n        shiftKey: e.shiftKey,\n        altKey: e[this.centeredKey],\n        original: fabric.util.saveObjectTransform(target)\n      };\n      this._currentTransform.original.originX = origin.x;\n      this._currentTransform.original.originY = origin.y;\n\n      this._resetCurrentTransform();\n\n      this._beforeTransform(e);\n    },\n\n    /**\n     * Translates object by \"setting\" its left/top\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the translation occurred\n     */\n    _translateObject: function (x, y) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          newLeft = x - transform.offsetX,\n          newTop = y - transform.offsetY,\n          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n          moveY = !target.get('lockMovementY') && target.top !== newTop;\n      moveX && target.set('left', newLeft);\n      moveY && target.set('top', newTop);\n      return moveX || moveY;\n    },\n\n    /**\n     * Check if we are increasing a positive skew or lower it,\n     * checking mouse direction and pressed corner.\n     * @private\n     */\n    _changeSkewTransformOrigin: function (mouseMove, t, by) {\n      var property = 'originX',\n          origins = {\n        0: 'center'\n      },\n          skew = t.target.skewX,\n          originA = 'left',\n          originB = 'right',\n          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n          flipSign = 1;\n      mouseMove = mouseMove > 0 ? 1 : -1;\n\n      if (by === 'y') {\n        skew = t.target.skewY;\n        originA = 'top';\n        originB = 'bottom';\n        property = 'originY';\n      }\n\n      origins[-1] = originA;\n      origins[1] = originB;\n      t.target.flipX && (flipSign *= -1);\n      t.target.flipY && (flipSign *= -1);\n\n      if (skew === 0) {\n        t.skewSign = -corner * mouseMove * flipSign;\n        t[property] = origins[-mouseMove];\n      } else {\n        skew = skew > 0 ? 1 : -1;\n        t.skewSign = skew;\n        t[property] = origins[skew * corner * flipSign];\n      }\n    },\n\n    /**\n     * Skew object by mouse events\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y'\n     * @return {Boolean} true if the skewing occurred\n     */\n    _skewObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          skewed = false,\n          lockSkewingX = target.get('lockSkewingX'),\n          lockSkewingY = target.get('lockSkewingY');\n\n      if (lockSkewingX && by === 'x' || lockSkewingY && by === 'y') {\n        return false;\n      } // Get the constraint point\n\n\n      var center = target.getCenterPoint(),\n          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n          actualMouseByOrigin,\n          constraintPosition,\n          dim = target._getTransformedDimensions();\n\n      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n\n      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY); // Actually skew the object\n\n      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n      t.lastX = x;\n      t.lastY = y; // Make sure the constraints apply\n\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return skewed;\n    },\n\n    /**\n     * Set object skew\n     * @private\n     * @return {Boolean} true if the skewing occurred\n     */\n    _setObjectSkew: function (localMouse, transform, by, _dim) {\n      var target = transform.target,\n          newValue,\n          skewed = false,\n          skewSign = transform.skewSign,\n          newDim,\n          dimNoSkew,\n          otherBy,\n          _otherBy,\n          _by,\n          newDimMouse,\n          skewX,\n          skewY;\n\n      if (by === 'x') {\n        otherBy = 'y';\n        _otherBy = 'Y';\n        _by = 'X';\n        skewX = 0;\n        skewY = target.skewY;\n      } else {\n        otherBy = 'x';\n        _otherBy = 'X';\n        _by = 'Y';\n        skewX = target.skewX;\n        skewY = 0;\n      }\n\n      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n\n      if (newDimMouse <= 2) {\n        newValue = 0;\n      } else {\n        newValue = skewSign * Math.atan(newDimMouse / target['scale' + _by] / (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n        newValue = fabric.util.radiansToDegrees(newValue);\n      }\n\n      skewed = target['skew' + _by] !== newValue;\n      target.set('skew' + _by, newValue);\n\n      if (target['skew' + _otherBy] !== 0) {\n        newDim = target._getTransformedDimensions();\n        newValue = _dim[otherBy] / newDim[otherBy] * target['scale' + _otherBy];\n        target.set('scale' + _otherBy, newValue);\n      }\n\n      return skewed;\n    },\n\n    /**\n     * Scales object by invoking its scaleX/scaleY methods\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n     *                    When not provided, an object is scaled by both dimensions equally\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          lockScalingX = target.lockScalingX,\n          lockScalingY = target.lockScalingY,\n          lockScalingFlip = target.lockScalingFlip;\n\n      if (lockScalingX && lockScalingY) {\n        return false;\n      } // Get the constraint point\n\n\n      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n          dim = target._getTransformedDimensions(),\n          scaled = false;\n\n      this._setLocalMouse(localMouse, t); // Actually scale the object\n\n\n      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim); // Make sure the constraints apply\n\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _setObjectScale: function (localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n      var target = transform.target,\n          forbidScalingX = false,\n          forbidScalingY = false,\n          scaled = false,\n          scaleX = localMouse.x * target.scaleX / _dim.x,\n          scaleY = localMouse.y * target.scaleY / _dim.y,\n          changeX = target.scaleX !== scaleX,\n          changeY = target.scaleY !== scaleY;\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n\n      if (fabric.Textbox && by === 'x' && target instanceof fabric.Textbox) {\n        var w = target.width * (localMouse.x / _dim.x);\n\n        if (w >= target.getMinWidth()) {\n          scaled = w !== target.width;\n          target.set('width', w);\n          return scaled;\n        }\n\n        return false;\n      }\n\n      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n        forbidScalingX = true;\n        localMouse.x = 0;\n      }\n\n      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n        forbidScalingY = true;\n        localMouse.y = 0;\n      }\n\n      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n        scaled = this._scaleObjectEqually(localMouse, target, transform, _dim);\n      } else if (!by) {\n        forbidScalingX || lockScalingX || target.set('scaleX', scaleX) && (scaled = scaled || changeX);\n        forbidScalingY || lockScalingY || target.set('scaleY', scaleY) && (scaled = scaled || changeY);\n      } else if (by === 'x' && !target.get('lockUniScaling')) {\n        forbidScalingX || lockScalingX || target.set('scaleX', scaleX) && (scaled = changeX);\n      } else if (by === 'y' && !target.get('lockUniScaling')) {\n        forbidScalingY || lockScalingY || target.set('scaleY', scaleY) && (scaled = changeY);\n      }\n\n      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObjectEqually: function (localMouse, target, transform, _dim) {\n      var dist = localMouse.y + localMouse.x,\n          lastDist = _dim.y * transform.original.scaleY / target.scaleY + _dim.x * transform.original.scaleX / target.scaleX,\n          scaled,\n          signX = localMouse.x < 0 ? -1 : 1,\n          signY = localMouse.y < 0 ? -1 : 1,\n          newScaleX,\n          newScaleY; // We use transform.scaleX/Y instead of target.scaleX/Y\n      // because the object may have a min scale and we'll loose the proportions\n\n      newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\n      newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\n      scaled = newScaleX !== target.scaleX || newScaleY !== target.scaleY;\n      target.set('scaleX', newScaleX);\n      target.set('scaleY', newScaleY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     */\n    _flipObject: function (transform, by) {\n      if (transform.newScaleX < 0 && by !== 'y') {\n        if (transform.originX === 'left') {\n          transform.originX = 'right';\n        } else if (transform.originX === 'right') {\n          transform.originX = 'left';\n        }\n      }\n\n      if (transform.newScaleY < 0 && by !== 'x') {\n        if (transform.originY === 'top') {\n          transform.originY = 'bottom';\n        } else if (transform.originY === 'bottom') {\n          transform.originY = 'top';\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setLocalMouse: function (localMouse, t) {\n      var target = t.target,\n          zoom = this.getZoom(),\n          padding = target.padding / zoom;\n\n      if (t.originX === 'right') {\n        localMouse.x *= -1;\n      } else if (t.originX === 'center') {\n        localMouse.x *= t.mouseXSign * 2;\n\n        if (localMouse.x < 0) {\n          t.mouseXSign = -t.mouseXSign;\n        }\n      }\n\n      if (t.originY === 'bottom') {\n        localMouse.y *= -1;\n      } else if (t.originY === 'center') {\n        localMouse.y *= t.mouseYSign * 2;\n\n        if (localMouse.y < 0) {\n          t.mouseYSign = -t.mouseYSign;\n        }\n      } // adjust the mouse coordinates when dealing with padding\n\n\n      if (abs(localMouse.x) > padding) {\n        if (localMouse.x < 0) {\n          localMouse.x += padding;\n        } else {\n          localMouse.x -= padding;\n        }\n      } else {\n        // mouse is within the padding, set to 0\n        localMouse.x = 0;\n      }\n\n      if (abs(localMouse.y) > padding) {\n        if (localMouse.y < 0) {\n          localMouse.y += padding;\n        } else {\n          localMouse.y -= padding;\n        }\n      } else {\n        localMouse.y = 0;\n      }\n    },\n\n    /**\n     * Rotates object by invoking its rotate method\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the rotation occurred\n     */\n    _rotateObject: function (x, y) {\n      var t = this._currentTransform,\n          target = t.target,\n          constraintPosition,\n          constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY);\n\n      if (target.lockRotation) {\n        return false;\n      }\n\n      var lastAngle = atan2(t.ey - constraintPosition.y, t.ex - constraintPosition.x),\n          curAngle = atan2(y - constraintPosition.y, x - constraintPosition.x),\n          angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n          hasRotated = true;\n\n      if (target.snapAngle > 0) {\n        var snapAngle = target.snapAngle,\n            snapThreshold = target.snapThreshold || snapAngle,\n            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n          angle = leftAngleLocked;\n        } else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n          angle = rightAngleLocked;\n        }\n      } // normalize angle to positive value\n\n\n      if (angle < 0) {\n        angle = 360 + angle;\n      }\n\n      angle %= 360;\n\n      if (target.angle === angle) {\n        hasRotated = false;\n      } else {\n        // rotation only happen here\n        target.angle = angle; // Make sure the constraints apply\n\n        target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      }\n\n      return hasRotated;\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function (value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n     */\n    _drawSelection: function (ctx) {\n      var groupSelector = this._groupSelector,\n          left = groupSelector.left,\n          top = groupSelector.top,\n          aleft = abs(left),\n          atop = abs(top);\n\n      if (this.selectionColor) {\n        ctx.fillStyle = this.selectionColor;\n        ctx.fillRect(groupSelector.ex - (left > 0 ? 0 : -left), groupSelector.ey - (top > 0 ? 0 : -top), aleft, atop);\n      }\n\n      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n        return;\n      }\n\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor; // selection border\n\n      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n        var px = groupSelector.ex + STROKE_OFFSET - (left > 0 ? 0 : aleft),\n            py = groupSelector.ey + STROKE_OFFSET - (top > 0 ? 0 : atop);\n        ctx.beginPath();\n        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n        ctx.closePath();\n        ctx.stroke();\n      } else {\n        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n\n        ctx.strokeRect(groupSelector.ex + STROKE_OFFSET - (left > 0 ? 0 : aleft), groupSelector.ey + STROKE_OFFSET - (top > 0 ? 0 : atop), aleft, atop);\n      }\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * the skipGroup parameter is for internal use, is needed for shift+click action\n     * 11/09/2018 TODO: would be cool if findTarget could discern between being a full target\n     * or the outside part of the corner.\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n     * @return {fabric.Object} the target found\n     */\n    findTarget: function (e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      var ignoreZoom = true,\n          pointer = this.getPointer(e, ignoreZoom),\n          activeObject = this._activeObject,\n          aObjects = this.getActiveObjects(),\n          activeTarget,\n          activeTargetSubs; // first check current group (if one exists)\n      // active group does not check sub targets like normal groups.\n      // if active group just exits.\n\n      this.targets = [];\n\n      if (aObjects.length > 1 && !skipGroup && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        return activeObject;\n      } // if we hit the corner of an activeObject, let's return that.\n\n\n      if (aObjects.length === 1 && activeObject._findTargetCorner(pointer)) {\n        return activeObject;\n      }\n\n      if (aObjects.length === 1 && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        if (!this.preserveObjectStacking) {\n          return activeObject;\n        } else {\n          activeTarget = activeObject;\n          activeTargetSubs = this.targets;\n          this.targets = [];\n        }\n      }\n\n      var target = this._searchPossibleTargets(this._objects, pointer);\n\n      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n        target = activeTarget;\n        this.targets = activeTargetSubs;\n      }\n\n      return target;\n    },\n\n    /**\n     * Checks point is inside the object.\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @param {fabric.Object} obj Object to test against\n     * @param {Object} [globalPointer] x,y object of point coordinates relative to canvas used to search per pixel target.\n     * @return {Boolean} true if point is contained within an area of given object\n     * @private\n     */\n    _checkTarget: function (pointer, obj, globalPointer) {\n      if (obj && obj.visible && obj.evented && this.containsPoint(null, obj, pointer)) {\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, globalPointer.x, globalPointer.y);\n\n          if (!isTransparent) {\n            return true;\n          }\n        } else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\n     * @param {Array} [objects] objects array to look into\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @return {fabric.Object} object that contains pointer\n     * @private\n     */\n    _searchPossibleTargets: function (objects, pointer) {\n      // Cache all targets where their bounding box contains point.\n      var target,\n          i = objects.length,\n          subTarget; // Do not check for currently grouped objects, since we check the parent group itself.\n      // until we call this function specifically to search inside the activeGroup\n\n      while (i--) {\n        var objToCheck = objects[i];\n        var pointerToUse = objToCheck.group && objToCheck.group.type !== 'activeSelection' ? this._normalizePointer(objToCheck.group, pointer) : pointer;\n\n        if (this._checkTarget(pointerToUse, objToCheck, pointer)) {\n          target = objects[i];\n\n          if (target.subTargetCheck && target instanceof fabric.Group) {\n            subTarget = this._searchPossibleTargets(target._objects, pointer);\n            subTarget && this.targets.push(subTarget);\n          }\n\n          break;\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates without the effect of the viewport\n     * @param {Object} pointer with \"x\" and \"y\" number values\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    restorePointerVpt: function (pointer) {\n      return fabric.util.transformPoint(pointer, fabric.util.invertTransform(this.viewportTransform));\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * Can return coordinates with or without viewportTransform.\n     * ignoreZoom false gives back coordinates that represent\n     * the point clicked on canvas element.\n     * ignoreZoom true gives back coordinates after being processed\n     * by the viewportTransform ( sort of coordinates of what is displayed\n     * on the canvas where you are clicking.\n     * ignoreZoom true = HTMLElement coordinates relative to top,left\n     * ignoreZoom false, default = fabric space coordinates, the same used for shape position\n     * To interact with your shapes top and left you want to use ignoreZoom true\n     * most of the time, while ignoreZoom false will give you coordinates\n     * compatible with the object.oCoords system.\n     * of the time.\n     * @param {Event} e\n     * @param {Boolean} ignoreZoom\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function (e, ignoreZoom) {\n      // return cached values if we are in the event processing chain\n      if (this._absolutePointer && !ignoreZoom) {\n        return this._absolutePointer;\n      }\n\n      if (this._pointer && ignoreZoom) {\n        return this._pointer;\n      }\n\n      var pointer = getPointer(e),\n          upperCanvasEl = this.upperCanvasEl,\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs(bounds.top - bounds.bottom);\n        }\n\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs(bounds.right - bounds.left);\n        }\n      }\n\n      this.calcOffset();\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n\n      if (!ignoreZoom) {\n        pointer = this.restorePointerVpt(pointer);\n      }\n\n      var retinaScaling = this.getRetinaScaling();\n\n      if (retinaScaling !== 1) {\n        pointer.x /= retinaScaling;\n        pointer.y /= retinaScaling;\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = {\n          width: 1,\n          height: 1\n        };\n      } else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function () {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, ''),\n          lowerCanvasEl = this.lowerCanvasEl,\n          upperCanvasEl = this.upperCanvasEl; // there is no need to create a new upperCanvas element if we have already one.\n\n      if (upperCanvasEl) {\n        upperCanvasEl.className = '';\n      } else {\n        upperCanvasEl = this._createCanvasElement();\n        this.upperCanvasEl = upperCanvasEl;\n      }\n\n      fabric.util.addClass(upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n      this.wrapperEl.appendChild(upperCanvasEl);\n\n      this._copyCanvasStyle(lowerCanvasEl, upperCanvasEl);\n\n      this._applyCanvasStyle(upperCanvasEl);\n\n      this.contextTop = upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function () {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.width + 'px',\n        height: this.height + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function (element) {\n      var width = this.width || element.width,\n          height = this.height || element.height;\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0,\n        'touch-action': this.allowTouchScrolling ? 'manipulation' : 'none',\n        '-ms-touch-action': this.allowTouchScrolling ? 'manipulation' : 'none'\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copy the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function (fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function () {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function () {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function () {\n      return this._activeObject;\n    },\n\n    /**\n     * Returns an array with the current selected objects\n     * @return {fabric.Object} active object\n     */\n    getActiveObjects: function () {\n      var active = this._activeObject;\n\n      if (active) {\n        if (active.type === 'activeSelection' && active._objects) {\n          return active._objects.slice(0);\n        } else {\n          return [active];\n        }\n      }\n\n      return [];\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function (obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (obj === this._activeObject) {\n        this.fire('before:selection:cleared', {\n          target: obj\n        });\n\n        this._discardActiveObject();\n\n        this.fire('selection:cleared', {\n          target: obj\n        });\n        obj.fire('deselected');\n      }\n\n      if (obj === this._hoveredTarget) {\n        this._hoveredTarget = null;\n        this._hoveredTargets = [];\n      }\n\n      this.callSuper('_onObjectRemoved', obj);\n    },\n\n    /**\n     * @private\n     * Compares the old activeObject with the current one and fires correct events\n     * @param {fabric.Object} obj old activeObject\n     */\n    _fireSelectionEvents: function (oldObjects, e) {\n      var somethingChanged = false,\n          objects = this.getActiveObjects(),\n          added = [],\n          removed = [],\n          opt = {\n        e: e\n      };\n      oldObjects.forEach(function (oldObject) {\n        if (objects.indexOf(oldObject) === -1) {\n          somethingChanged = true;\n          oldObject.fire('deselected', opt);\n          removed.push(oldObject);\n        }\n      });\n      objects.forEach(function (object) {\n        if (oldObjects.indexOf(object) === -1) {\n          somethingChanged = true;\n          object.fire('selected', opt);\n          added.push(object);\n        }\n      });\n\n      if (oldObjects.length > 0 && objects.length > 0) {\n        opt.selected = added;\n        opt.deselected = removed; // added for backward compatibility\n\n        opt.updated = added[0] || removed[0];\n        opt.target = this._activeObject;\n        somethingChanged && this.fire('selection:updated', opt);\n      } else if (objects.length > 0) {\n        // deprecated event\n        if (objects.length === 1) {\n          opt.target = added[0];\n          this.fire('object:selected', opt);\n        }\n\n        opt.selected = added; // added for backward compatibility\n\n        opt.target = this._activeObject;\n        this.fire('selection:created', opt);\n      } else if (oldObjects.length > 0) {\n        opt.deselected = removed;\n        this.fire('selection:cleared', opt);\n      }\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function (object, e) {\n      var currentActives = this.getActiveObjects();\n\n      this._setActiveObject(object, e);\n\n      this._fireSelectionEvents(currentActives, e);\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} object to set as active\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {Boolean} true if the selection happened\n     */\n    _setActiveObject: function (object, e) {\n      if (this._activeObject === object) {\n        return false;\n      }\n\n      if (!this._discardActiveObject(e, object)) {\n        return false;\n      }\n\n      if (object.onSelect({\n        e: e\n      })) {\n        return false;\n      }\n\n      this._activeObject = object;\n      return true;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveObject: function (e, object) {\n      var obj = this._activeObject;\n\n      if (obj) {\n        // onDeselect return TRUE to cancel selection;\n        if (obj.onDeselect({\n          e: e,\n          object: object\n        })) {\n          return false;\n        }\n\n        this._activeObject = null;\n      }\n\n      return true;\n    },\n\n    /**\n     * Discards currently active object and fire events. If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parameter and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @param {event} e\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function (e) {\n      var currentActives = this.getActiveObjects(),\n          activeObject = this.getActiveObject();\n\n      if (currentActives.length) {\n        this.fire('before:selection:cleared', {\n          target: activeObject,\n          e: e\n        });\n      }\n\n      this._discardActiveObject(e);\n\n      this._fireSelectionEvents(currentActives, e);\n\n      return this;\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      var wrapper = this.wrapperEl;\n      this.removeListeners();\n      wrapper.removeChild(this.upperCanvasEl);\n      wrapper.removeChild(this.lowerCanvasEl);\n      this.contextCache = null;\n      this.contextTop = null;\n      ['upperCanvasEl', 'cacheCanvasEl'].forEach(function (element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }.bind(this));\n\n      if (wrapper.parentNode) {\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n      }\n\n      delete this.wrapperEl;\n      fabric.StaticCanvas.prototype.dispose.call(this);\n      return this;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      // this.discardActiveGroup();\n      this.discardActiveObject();\n      this.clearContext(this.contextTop);\n      return this.callSuper('clear');\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function (ctx) {\n      var activeObject = this._activeObject;\n\n      if (activeObject) {\n        activeObject._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function (instance, methodName, propertiesToInclude) {\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude); //Undo the damage we did by changing all of its properties\n\n\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function (instance) {\n      if (instance.group && instance.group.type === 'activeSelection' && this._activeObject === instance.group) {\n        var layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top']; //Copy all the positionally relevant properties across now\n\n        var originalValues = {};\n        layoutProps.forEach(function (prop) {\n          originalValues[prop] = instance[prop];\n        });\n\n        this._activeObject.realizeTransform(instance);\n\n        return originalValues;\n      } else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function (instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function (markup, instance, reviver) {\n      //If the object is in a selection group, simulate what would happen to that\n      //object when the group is deselected\n      var originalProperties = this._realizeGroupTransformOnObject(instance);\n\n      this.callSuper('_setSVGObject', markup, instance, reviver);\n\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n    },\n    setViewportTransform: function (vpt) {\n      if (this.renderOnAddRemove && this._activeObject && this._activeObject.isEditing) {\n        this._activeObject.clearContextTop();\n      }\n\n      fabric.StaticCanvas.prototype.setViewportTransform.call(this, vpt);\n    }\n  }); // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n})();\n\n(function () {\n  var cursorOffset = {\n    mt: 0,\n    // n\n    tr: 1,\n    // ne\n    mr: 2,\n    // e\n    br: 3,\n    // se\n    mb: 4,\n    // s\n    bl: 5,\n    // sw\n    ml: 6,\n    // w\n    tl: 7 // nw\n\n  },\n      addListener = fabric.util.addListener,\n      removeListener = fabric.util.removeListener,\n      RIGHT_CLICK = 3,\n      MIDDLE_CLICK = 2,\n      LEFT_CLICK = 1,\n      addEventOptions = {\n    passive: false\n  };\n\n  function checkClick(e, value) {\n    return e.button && e.button === value - 1;\n  }\n\n  fabric.util.object.extend(fabric.Canvas.prototype,\n  /** @lends fabric.Canvas.prototype */\n  {\n    /**\n     * Map of cursor style values for each of the object controls\n     * @private\n     */\n    cursorMap: ['n-resize', 'ne-resize', 'e-resize', 'se-resize', 's-resize', 'sw-resize', 'w-resize', 'nw-resize'],\n\n    /**\n     * Contains the id of the touch event that owns the fabric transform\n     * @type Number\n     * @private\n     */\n    mainTouchId: null,\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function () {\n      // in case we initialized the class twice. This should not happen normally\n      // but in some kind of applications where the canvas element may be changed\n      // this is a workaround to having double listeners.\n      this.removeListeners();\n\n      this._bindEvents();\n\n      this.addOrRemove(addListener, 'add');\n    },\n\n    /**\n     * return an event prefix pointer or mouse.\n     * @private\n     */\n    _getEventPrefix: function () {\n      return this.enablePointerEvents ? 'pointer' : 'mouse';\n    },\n    addOrRemove: function (functor, eventjsFunctor) {\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n\n      functor(fabric.window, 'resize', this._onResize);\n      functor(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\n      functor(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      functor(canvasElement, eventTypePrefix + 'out', this._onMouseOut);\n      functor(canvasElement, eventTypePrefix + 'enter', this._onMouseEnter);\n      functor(canvasElement, 'wheel', this._onMouseWheel);\n      functor(canvasElement, 'contextmenu', this._onContextMenu);\n      functor(canvasElement, 'dblclick', this._onDoubleClick);\n      functor(canvasElement, 'dragover', this._onDragOver);\n      functor(canvasElement, 'dragenter', this._onDragEnter);\n      functor(canvasElement, 'dragleave', this._onDragLeave);\n      functor(canvasElement, 'drop', this._onDrop);\n\n      if (!this.enablePointerEvents) {\n        functor(canvasElement, 'touchstart', this._onTouchStart, addEventOptions);\n      }\n\n      if (typeof eventjs !== 'undefined' && eventjsFunctor in eventjs) {\n        eventjs[eventjsFunctor](canvasElement, 'gesture', this._onGesture);\n        eventjs[eventjsFunctor](canvasElement, 'drag', this._onDrag);\n        eventjs[eventjsFunctor](canvasElement, 'orientation', this._onOrientationChange);\n        eventjs[eventjsFunctor](canvasElement, 'shake', this._onShake);\n        eventjs[eventjsFunctor](canvasElement, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function () {\n      this.addOrRemove(removeListener, 'remove'); // if you dispose on a mouseDown, before mouse up, you need to clean document to...\n\n      var eventTypePrefix = this._getEventPrefix();\n\n      removeListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\n      removeListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function () {\n      if (this.eventsBound) {\n        // for any reason we pass here twice we do not want to bind events twice.\n        return;\n      }\n\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onTouchStart = this._onTouchStart.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onTouchEnd = this._onTouchEnd.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n      this._onMouseOut = this._onMouseOut.bind(this);\n      this._onMouseEnter = this._onMouseEnter.bind(this);\n      this._onContextMenu = this._onContextMenu.bind(this);\n      this._onDoubleClick = this._onDoubleClick.bind(this);\n      this._onDragOver = this._onDragOver.bind(this);\n      this._onDragEnter = this._simpleEventHandler.bind(this, 'dragenter');\n      this._onDragLeave = this._simpleEventHandler.bind(this, 'dragleave');\n      this._onDrop = this._simpleEventHandler.bind(this, 'drop');\n      this.eventsBound = true;\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function (e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function (e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on wheel event\n     */\n    _onMouseWheel: function (e) {\n      this.__onMouseWheel(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseOut: function (e) {\n      var target = this._hoveredTarget;\n      this.fire('mouse:out', {\n        target: target,\n        e: e\n      });\n      this._hoveredTarget = null;\n      target && target.fire('mouseout', {\n        e: e\n      });\n\n      var _this = this;\n\n      this._hoveredTargets.forEach(function (_target) {\n        _this.fire('mouse:out', {\n          target: target,\n          e: e\n        });\n\n        _target && target.fire('mouseout', {\n          e: e\n        });\n      });\n\n      this._hoveredTargets = [];\n\n      if (this._iTextInstances) {\n        this._iTextInstances.forEach(function (obj) {\n          if (obj.isEditing) {\n            obj.hiddenTextarea.focus();\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseenter\n     */\n    _onMouseEnter: function (e) {\n      // This find target and consequent 'mouse:over' is used to\n      // clear old instances on hovered target.\n      // calling findTarget has the side effect of killing target.__corner.\n      // as a short term fix we are not firing this if we are currently transforming.\n      // as a long term fix we need to separate the action of finding a target with the\n      // side effects we added to it.\n      if (!this.currentTransform && !this.findTarget(e)) {\n        this.fire('mouse:over', {\n          target: null,\n          e: e\n        });\n        this._hoveredTarget = null;\n        this._hoveredTargets = [];\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function (e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function (e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function (e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * prevent default to allow drop event to be fired\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     */\n    _onDragOver: function (e) {\n      e.preventDefault();\n\n      var target = this._simpleEventHandler('dragover', e);\n\n      this._fireEnterLeaveEvents(target, e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onContextMenu: function (e) {\n      if (this.stopContextMenu) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onDoubleClick: function (e) {\n      this._cacheTransformEventData(e);\n\n      this._handleEvent(e, 'dblclick');\n\n      this._resetTransformEventData(e);\n    },\n\n    /**\n     * Return a the id of an event.\n     * returns either the pointerId or the identifier or 0 for the mouse event\n     * @private\n     * @param {Event} evt Event object\n     */\n    getPointerId: function (evt) {\n      var changedTouches = evt.changedTouches;\n\n      if (changedTouches) {\n        return changedTouches[0] && changedTouches[0].identifier;\n      }\n\n      if (this.enablePointerEvents) {\n        return evt.pointerId;\n      }\n\n      return -1;\n    },\n\n    /**\n     * Determines if an event has the id of the event that is considered main\n     * @private\n     * @param {evt} event Event object\n     */\n    _isMainEvent: function (evt) {\n      if (evt.isPrimary === true) {\n        return true;\n      }\n\n      if (evt.isPrimary === false) {\n        return false;\n      }\n\n      if (evt.type === 'touchend' && evt.touches.length === 0) {\n        return true;\n      }\n\n      if (evt.changedTouches) {\n        return evt.changedTouches[0].identifier === this.mainTouchId;\n      }\n\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onTouchStart: function (e) {\n      e.preventDefault();\n\n      if (this.mainTouchId === null) {\n        this.mainTouchId = this.getPointerId(e);\n      }\n\n      this.__onMouseDown(e);\n\n      this._resetTransformEventData();\n\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n\n      addListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\n      addListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions); // Unbind mousedown to prevent double triggers from touch devices\n\n      removeListener(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function (e) {\n      this.__onMouseDown(e);\n\n      this._resetTransformEventData();\n\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n\n      removeListener(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      addListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n      addListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onTouchEnd: function (e) {\n      if (e.touches.length > 0) {\n        // if there are still touches stop here\n        return;\n      }\n\n      this.__onMouseUp(e);\n\n      this._resetTransformEventData();\n\n      this.mainTouchId = null;\n\n      var eventTypePrefix = this._getEventPrefix();\n\n      removeListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n\n      var _this = this;\n\n      if (this._willAddMouseDown) {\n        clearTimeout(this._willAddMouseDown);\n      }\n\n      this._willAddMouseDown = setTimeout(function () {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        addListener(_this.upperCanvasEl, eventTypePrefix + 'down', _this._onMouseDown);\n        _this._willAddMouseDown = 0;\n      }, 400);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function (e) {\n      this.__onMouseUp(e);\n\n      this._resetTransformEventData();\n\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n\n      if (this._isMainEvent(e)) {\n        removeListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n        removeListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n        addListener(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function (e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function () {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     */\n    _shouldRender: function (target) {\n      var activeObject = this._activeObject;\n\n      if (!!activeObject !== !!target || activeObject && target && activeObject !== target) {\n        // this covers: switch of target, from target to no target, selection of target\n        // multiSelection with key and mouse\n        return true;\n      } else if (activeObject && activeObject.isEditing) {\n        // if we mouse up/down over a editing textbox a cursor change,\n        // there is no need to re render\n        return false;\n      }\n\n      return false;\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function (e) {\n      var target,\n          transform = this._currentTransform,\n          groupSelector = this._groupSelector,\n          shouldRender = false,\n          isClick = !groupSelector || groupSelector.left === 0 && groupSelector.top === 0;\n\n      this._cacheTransformEventData(e);\n\n      target = this._target;\n\n      this._handleEvent(e, 'up:before'); // if right/middle click just fire events and return\n      // target undefined will make the _handleEvent search the target\n\n\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'up', RIGHT_CLICK, isClick);\n        }\n\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'up', MIDDLE_CLICK, isClick);\n        }\n\n        this._resetTransformEventData();\n\n        return;\n      }\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n\n        return;\n      }\n\n      if (!this._isMainEvent(e)) {\n        return;\n      }\n\n      if (transform) {\n        this._finalizeCurrentTransform(e);\n\n        shouldRender = transform.actionPerformed;\n      }\n\n      if (!isClick) {\n        this._maybeGroupObjects(e);\n\n        shouldRender || (shouldRender = this._shouldRender(target));\n      }\n\n      if (target) {\n        target.isMoving = false;\n      }\n\n      this._setCursorFromEvent(e, target);\n\n      this._handleEvent(e, 'up', LEFT_CLICK, isClick);\n\n      this._groupSelector = null;\n      this._currentTransform = null; // reset the target information about which corner is selected\n\n      target && (target.__corner = 0);\n\n      if (shouldRender) {\n        this.requestRenderAll();\n      } else if (!isClick) {\n        this.renderTop();\n      }\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @return {Fabric.Object} target return the the target found, for internal reasons.\n     */\n    _simpleEventHandler: function (eventType, e) {\n      var target = this.findTarget(e),\n          targets = this.targets,\n          options = {\n        e: e,\n        target: target,\n        subTargets: targets\n      };\n      this.fire(eventType, options);\n      target && target.fire(eventType, options);\n\n      if (!targets) {\n        return target;\n      }\n\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire(eventType, options);\n      }\n\n      return target;\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @param {fabric.Object} targetObj receiving event\n     * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\n     * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\n     */\n    _handleEvent: function (e, eventType, button, isClick) {\n      var target = this._target,\n          targets = this.targets || [],\n          options = {\n        e: e,\n        target: target,\n        subTargets: targets,\n        button: button || LEFT_CLICK,\n        isClick: isClick || false,\n        pointer: this._pointer,\n        absolutePointer: this._absolutePointer,\n        transform: this._currentTransform\n      };\n      this.fire('mouse:' + eventType, options);\n      target && target.fire('mouse' + eventType, options);\n\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire('mouse' + eventType, options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n     */\n    _finalizeCurrentTransform: function (e) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          eventName,\n          options = {\n        e: e,\n        target: target,\n        transform: transform\n      };\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n\n      if (transform.actionPerformed || this.stateful && target.hasStateChanged()) {\n        if (transform.actionPerformed) {\n          eventName = this._addEventOptions(options, transform);\n\n          this._fire(eventName, options);\n        }\n\n        this._fire('modified', options);\n      }\n    },\n\n    /**\n     * Mutate option object in order to add by property and give back the event name.\n     * @private\n     * @param {Object} options to mutate\n     * @param {Object} transform to inspect action from\n     */\n    _addEventOptions: function (options, transform) {\n      // we can probably add more details at low cost\n      // scale change, rotation changes, translation changes\n      var eventName, by;\n\n      switch (transform.action) {\n        case 'scaleX':\n          eventName = 'scaled';\n          by = 'x';\n          break;\n\n        case 'scaleY':\n          eventName = 'scaled';\n          by = 'y';\n          break;\n\n        case 'skewX':\n          eventName = 'skewed';\n          by = 'x';\n          break;\n\n        case 'skewY':\n          eventName = 'skewed';\n          by = 'y';\n          break;\n\n        case 'scale':\n          eventName = 'scaled';\n          by = 'equally';\n          break;\n\n        case 'rotate':\n          eventName = 'rotated';\n          break;\n\n        case 'drag':\n          eventName = 'moved';\n          break;\n      }\n\n      options.by = by;\n      return eventName;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function (e) {\n      this._isCurrentlyDrawing = true;\n\n      if (this.getActiveObject()) {\n        this.discardActiveObject(e).requestRenderAll();\n      }\n\n      if (this.clipTo) {\n        fabric.util.clipContext(this, this.contextTop);\n      }\n\n      var pointer = this.getPointer(e);\n      this.freeDrawingBrush.onMouseDown(pointer, {\n        e: e,\n        pointer: pointer\n      });\n\n      this._handleEvent(e, 'down');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function (e) {\n      if (this._isCurrentlyDrawing) {\n        var pointer = this.getPointer(e);\n        this.freeDrawingBrush.onMouseMove(pointer, {\n          e: e,\n          pointer: pointer\n        });\n      }\n\n      this.setCursor(this.freeDrawingCursor);\n\n      this._handleEvent(e, 'move');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function (e) {\n      if (this.clipTo) {\n        this.contextTop.restore();\n      }\n\n      var pointer = this.getPointer(e);\n      this._isCurrentlyDrawing = this.freeDrawingBrush.onMouseUp({\n        e: e,\n        pointer: pointer\n      });\n\n      this._handleEvent(e, 'up');\n    },\n\n    /**\n     * Method that defines the actions when mouse is clicked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function (e) {\n      this._cacheTransformEventData(e);\n\n      this._handleEvent(e, 'down:before');\n\n      var target = this._target; // if right click just fire events\n\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'down', RIGHT_CLICK);\n        }\n\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'down', MIDDLE_CLICK);\n        }\n\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n\n        return;\n      }\n\n      if (!this._isMainEvent(e)) {\n        return;\n      } // ignore if some object is being transformed at this moment\n\n\n      if (this._currentTransform) {\n        return;\n      }\n\n      var pointer = this._pointer; // save pointer for check in __onMouseUp event\n\n      this._previousPointer = pointer;\n\n      var shouldRender = this._shouldRender(target),\n          shouldGroup = this._shouldGroup(e, target);\n\n      if (this._shouldClearSelection(e, target)) {\n        this.discardActiveObject(e);\n      } else if (shouldGroup) {\n        this._handleGrouping(e, target);\n\n        target = this._activeObject;\n      }\n\n      if (this.selection && (!target || !target.selectable && !target.isEditing && target !== this._activeObject)) {\n        this._groupSelector = {\n          ex: pointer.x,\n          ey: pointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n\n      if (target) {\n        var alreadySelected = target === this._activeObject;\n\n        if (target.selectable) {\n          this.setActiveObject(target, e);\n        }\n\n        if (target === this._activeObject && (target.__corner || !shouldGroup)) {\n          this._setupCurrentTransform(e, target, alreadySelected);\n        }\n      }\n\n      this._handleEvent(e, 'down'); // we must renderAll so that we update the visuals\n\n\n      (shouldRender || shouldGroup) && this.requestRenderAll();\n    },\n\n    /**\n     * reset cache form common information needed during event processing\n     * @private\n     */\n    _resetTransformEventData: function () {\n      this._target = null;\n      this._pointer = null;\n      this._absolutePointer = null;\n    },\n\n    /**\n     * Cache common information needed during event processing\n     * @private\n     * @param {Event} e Event object fired on event\n     */\n    _cacheTransformEventData: function (e) {\n      // reset in order to avoid stale caching\n      this._resetTransformEventData();\n\n      this._pointer = this.getPointer(e, true);\n      this._absolutePointer = this.restorePointerVpt(this._pointer);\n      this._target = this._currentTransform ? this._currentTransform.target : this.findTarget(e) || null;\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function (e) {\n      var t = this._currentTransform;\n      this.stateful && t.target.saveState();\n      this.fire('before:transform', {\n        e: e,\n        transform: t\n      }); // determine if it's a drag or rotate case\n\n      if (t.corner) {\n        this.onBeforeScaleRotate(t.target);\n      }\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will define whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function (e) {\n      this._handleEvent(e, 'move:before');\n\n      this._cacheTransformEventData(e);\n\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n\n        return;\n      }\n\n      if (!this._isMainEvent(e)) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector; // We initially clicked in an empty area, so we draw a box for multiple selection\n\n      if (groupSelector) {\n        pointer = this._pointer;\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n        this.renderTop();\n      } else if (!this._currentTransform) {\n        target = this.findTarget(e) || null;\n\n        this._setCursorFromEvent(e, target);\n\n        this._fireOverOutEvents(target, e);\n      } else {\n        this._transformObject(e);\n      }\n\n      this._handleEvent(e, 'move');\n\n      this._resetTransformEventData();\n    },\n\n    /**\n     * Manage the mouseout, mouseover events for the fabric object on the canvas\n     * @param {Fabric.Object} target the target where the target from the mousemove event\n     * @param {Event} e Event object fired on mousemove\n     * @private\n     */\n    _fireOverOutEvents: function (target, e) {\n      var _hoveredTarget = this._hoveredTarget,\n          _hoveredTargets = this._hoveredTargets,\n          targets = this.targets,\n          length = Math.max(_hoveredTargets.length, targets.length);\n      this.fireSyntheticInOutEvents(target, e, {\n        oldTarget: _hoveredTarget,\n        evtOut: 'mouseout',\n        canvasEvtOut: 'mouse:out',\n        evtIn: 'mouseover',\n        canvasEvtIn: 'mouse:over'\n      });\n\n      for (var i = 0; i < length; i++) {\n        this.fireSyntheticInOutEvents(targets[i], e, {\n          oldTarget: _hoveredTargets[i],\n          evtOut: 'mouseout',\n          evtIn: 'mouseover'\n        });\n      }\n\n      this._hoveredTarget = target;\n      this._hoveredTargets = this.targets.concat();\n    },\n\n    /**\n     * Manage the dragEnter, dragLeave events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the onDrag event\n     * @param {Event} e Event object fired on ondrag\n     * @private\n     */\n    _fireEnterLeaveEvents: function (target, e) {\n      var _draggedoverTarget = this._draggedoverTarget,\n          _hoveredTargets = this._hoveredTargets,\n          targets = this.targets,\n          length = Math.max(_hoveredTargets.length, targets.length);\n      this.fireSyntheticInOutEvents(target, e, {\n        oldTarget: _draggedoverTarget,\n        evtOut: 'dragleave',\n        evtIn: 'dragenter'\n      });\n\n      for (var i = 0; i < length; i++) {\n        this.fireSyntheticInOutEvents(targets[i], e, {\n          oldTarget: _hoveredTargets[i],\n          evtOut: 'dragleave',\n          evtIn: 'dragenter'\n        });\n      }\n\n      this._draggedoverTarget = target;\n    },\n\n    /**\n     * Manage the synthetic in/out events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the supported events\n     * @param {Event} e Event object fired\n     * @param {Object} config configuration for the function to work\n     * @param {String} config.targetName property on the canvas where the old target is stored\n     * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out\n     * @param {String} config.evtOut name of the event to fire for out\n     * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in\n     * @param {String} config.evtIn name of the event to fire for in\n     * @private\n     */\n    fireSyntheticInOutEvents: function (target, e, config) {\n      var inOpt,\n          outOpt,\n          oldTarget = config.oldTarget,\n          outFires,\n          inFires,\n          targetChanged = oldTarget !== target,\n          canvasEvtIn = config.canvasEvtIn,\n          canvasEvtOut = config.canvasEvtOut;\n\n      if (targetChanged) {\n        inOpt = {\n          e: e,\n          target: target,\n          previousTarget: oldTarget\n        };\n        outOpt = {\n          e: e,\n          target: oldTarget,\n          nextTarget: target\n        };\n      }\n\n      inFires = target && targetChanged;\n      outFires = oldTarget && targetChanged;\n\n      if (outFires) {\n        canvasEvtOut && this.fire(canvasEvtOut, outOpt);\n        oldTarget.fire(config.evtOut, outOpt);\n      }\n\n      if (inFires) {\n        canvasEvtIn && this.fire(canvasEvtIn, inOpt);\n        target.fire(config.evtIn, inOpt);\n      }\n    },\n\n    /**\n     * Method that defines actions when an Event Mouse Wheel\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseWheel: function (e) {\n      this._cacheTransformEventData(e);\n\n      this._handleEvent(e, 'wheel');\n\n      this._resetTransformEventData();\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function (e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n      transform.reset = false;\n      transform.target.isMoving = true;\n      transform.shiftKey = e.shiftKey;\n      transform.altKey = e[this.centeredKey];\n\n      this._beforeScaleTransform(e, transform);\n\n      this._performTransformAction(e, transform, pointer);\n\n      transform.actionPerformed && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function (e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          action = transform.action,\n          actionPerformed = false,\n          options = {\n        target: transform.target,\n        e: e,\n        transform: transform,\n        pointer: pointer\n      };\n\n      if (action === 'rotate') {\n        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', options);\n      } else if (action === 'scale') {\n        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', options);\n      } else if (action === 'scaleX') {\n        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', options);\n      } else if (action === 'scaleY') {\n        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', options);\n      } else if (action === 'skewX') {\n        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', options);\n      } else if (action === 'skewY') {\n        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', options);\n      } else {\n        actionPerformed = this._translateObject(x, y);\n\n        if (actionPerformed) {\n          this._fire('moving', options);\n\n          this.setCursor(options.target.moveCursor || this.moveCursor);\n        }\n      }\n\n      transform.actionPerformed = transform.actionPerformed || actionPerformed;\n    },\n\n    /**\n     * @private\n     */\n    _fire: function (eventName, options) {\n      this.fire('object:' + eventName, options);\n      options.target.fire(eventName, options);\n    },\n\n    /**\n     * @private\n     */\n    _beforeScaleTransform: function (e, transform) {\n      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n        var centerTransform = this._shouldCenterTransform(transform.target); // Switch from a normal resize to center-based\n\n\n        if (centerTransform && (transform.originX !== 'center' || transform.originY !== 'center') || // Switch from center-based resize to normal one\n        !centerTransform && transform.originX === 'center' && transform.originY === 'center') {\n          this._resetCurrentTransform();\n\n          transform.reset = true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {Object} transform current transform\n     * @param {Number} x mouse position x from origin\n     * @param {Number} y mouse position y from origin\n     * @return {Boolean} true if the scaling occurred\n     */\n    _onScale: function (e, transform, x, y) {\n      if (this._isUniscalePossible(e, transform.target)) {\n        transform.currentAction = 'scale';\n        return this._scaleObject(x, y);\n      } else {\n        // Switch from a normal resize to proportional\n        if (!transform.reset && transform.currentAction === 'scale') {\n          this._resetCurrentTransform();\n        }\n\n        transform.currentAction = 'scaleEqually';\n        return this._scaleObject(x, y, 'equally');\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target current target\n     * @return {Boolean} true if unproportional scaling is possible\n     */\n    _isUniscalePossible: function (e, target) {\n      return (e[this.uniScaleKey] || this.uniScaleTransform) && !target.get('lockUniScaling');\n    },\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function (e, target) {\n      if (!target) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n\n      var hoverCursor = target.hoverCursor || this.hoverCursor,\n          activeSelection = this._activeObject && this._activeObject.type === 'activeSelection' ? this._activeObject : null,\n          // only show proper corner when group selection is not active\n      corner = (!activeSelection || !activeSelection.contains(target)) && target._findTargetCorner(this.getPointer(e, true));\n\n      if (!corner) {\n        if (target.subTargetCheck) {\n          // hoverCursor should come from top-most subTarget,\n          // so we walk the array backwards\n          this.targets.concat().reverse().map(function (_target) {\n            hoverCursor = _target.hoverCursor || hoverCursor;\n          });\n        }\n\n        this.setCursor(hoverCursor);\n      } else {\n        this.setCursor(this.getCornerCursor(corner, target, e));\n      }\n    },\n\n    /**\n     * @private\n     */\n    getCornerCursor: function (corner, target, e) {\n      if (this.actionIsDisabled(corner, target, e)) {\n        return this.notAllowedCursor;\n      } else if (corner in cursorOffset) {\n        return this._getRotatedCornerCursor(corner, target, e);\n      } else if (corner === 'mtr' && target.hasRotatingPoint) {\n        return this.rotationCursor;\n      } else {\n        return this.defaultCursor;\n      }\n    },\n    actionIsDisabled: function (corner, target, e) {\n      if (corner === 'mt' || corner === 'mb') {\n        return e[this.altActionKey] ? target.lockSkewingX : target.lockScalingY;\n      } else if (corner === 'ml' || corner === 'mr') {\n        return e[this.altActionKey] ? target.lockSkewingY : target.lockScalingX;\n      } else if (corner === 'mtr') {\n        return target.lockRotation;\n      } else {\n        return this._isUniscalePossible(e, target) ? target.lockScalingX && target.lockScalingY : target.lockScalingX || target.lockScalingY;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getRotatedCornerCursor: function (corner, target, e) {\n      var n = Math.round(target.angle % 360 / 45);\n\n      if (n < 0) {\n        n += 8; // full circle ahead\n      }\n\n      n += cursorOffset[corner];\n\n      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n        //if we are holding shift and we are on a mx corner...\n        n += 2;\n      } // normalize n to be from 0 to 7\n\n\n      n %= 8;\n      return this.cursorMap[n];\n    }\n  });\n})();\n\n(function () {\n  var min = Math.min,\n      max = Math.max;\n  fabric.util.object.extend(fabric.Canvas.prototype,\n  /** @lends fabric.Canvas.prototype */\n  {\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function (e, target) {\n      var activeObject = this._activeObject;\n      return activeObject && this._isSelectionKeyPressed(e) && target && target.selectable && this.selection && (activeObject !== target || activeObject.type === 'activeSelection') && !target.onSelect({\n        e: e\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function (e, target) {\n      var activeObject = this._activeObject; // avoid multi select when shift click on a corner\n\n      if (activeObject.__corner) {\n        return;\n      }\n\n      if (target === activeObject) {\n        // if it's a group, find target again, using activeGroup objects\n        target = this.findTarget(e, true); // if even object is not found or we are on activeObjectCorner, bail out\n\n        if (!target || !target.selectable) {\n          return;\n        }\n      }\n\n      if (activeObject && activeObject.type === 'activeSelection') {\n        this._updateActiveSelection(target, e);\n      } else {\n        this._createActiveSelection(target, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveSelection: function (target, e) {\n      var activeSelection = this._activeObject,\n          currentActiveObjects = activeSelection._objects.slice(0);\n\n      if (activeSelection.contains(target)) {\n        activeSelection.removeWithUpdate(target);\n        this._hoveredTarget = target;\n        this._hoveredTargets = this.targets.concat();\n\n        if (activeSelection.size() === 1) {\n          // activate last remaining object\n          this._setActiveObject(activeSelection.item(0), e);\n        }\n      } else {\n        activeSelection.addWithUpdate(target);\n        this._hoveredTarget = activeSelection;\n        this._hoveredTargets = this.targets.concat();\n      }\n\n      this._fireSelectionEvents(currentActiveObjects, e);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveSelection: function (target, e) {\n      var currentActives = this.getActiveObjects(),\n          group = this._createGroup(target);\n\n      this._hoveredTarget = group; // ISSUE 4115: should we consider subTargets here?\n      // this._hoveredTargets = [];\n      // this._hoveredTargets = this.targets.concat();\n\n      this._setActiveObject(group, e);\n\n      this._fireSelectionEvents(currentActives, e);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function (target) {\n      var objects = this._objects,\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower ? [this._activeObject, target] : [target, this._activeObject];\n      this._activeObject.isEditing && this._activeObject.exitEditing();\n      return new fabric.ActiveSelection(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function (e) {\n      var group = this._collectObjects(e),\n          aGroup; // do not create group for 1 element only\n\n\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      } else if (group.length > 1) {\n        aGroup = new fabric.ActiveSelection(group.reverse(), {\n          canvas: this\n        });\n        this.setActiveObject(aGroup, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function (e) {\n      var group = [],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          allowIntersect = !this.selectionFullyContained,\n          isClick = x1 === x2 && y1 === y2; // we iterate reverse order to collect top first in case of click.\n\n      for (var i = this._objects.length; i--;) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n          continue;\n        }\n\n        if (allowIntersect && currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2) || currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) || allowIntersect && currentObject.containsPoint(selectionX1Y1) || allowIntersect && currentObject.containsPoint(selectionX2Y2)) {\n          group.push(currentObject); // only add one object if it's a click\n\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      if (group.length > 1) {\n        group = group.filter(function (object) {\n          return !object.onSelect({\n            e: e\n          });\n        });\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function (e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n\n      this.setCursor(this.defaultCursor); // clear selection and current transformation\n\n      this._groupSelector = null;\n    }\n  });\n})();\n\n(function () {\n  fabric.util.object.extend(fabric.StaticCanvas.prototype,\n  /** @lends fabric.StaticCanvas.prototype */\n  {\n    /**\n     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n     * @param {Object} [options] Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'jpeg',\n     *   quality: 0.8\n     * });\n     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   left: 100,\n     *   top: 100,\n     *   width: 200,\n     *   height: 200\n     * });\n     * @example <caption>Generate double scaled png dataURL</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   multiplier: 2\n     * });\n     */\n    toDataURL: function (options) {\n      options || (options = {});\n      var format = options.format || 'png',\n          quality = options.quality || 1,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? this.getRetinaScaling() : 1),\n          canvasEl = this.toCanvasElement(multiplier, options);\n      return fabric.util.toDataURL(canvasEl, format, quality);\n    },\n\n    /**\n     * Create a new HTMLCanvas element painted with the current canvas content.\n     * No need to resize the actual one or repaint it.\n     * Will transfer object ownership to a new canvas, paint it, and set everything back.\n     * This is an intermediary step used to get to a dataUrl but also it is useful to\n     * create quick image copies of a canvas without passing for the dataUrl string\n     * @param {Number} [multiplier] a zoom factor.\n     * @param {Object} [cropping] Cropping informations\n     * @param {Number} [cropping.left] Cropping left offset.\n     * @param {Number} [cropping.top] Cropping top offset.\n     * @param {Number} [cropping.width] Cropping width.\n     * @param {Number} [cropping.height] Cropping height.\n     */\n    toCanvasElement: function (multiplier, cropping) {\n      multiplier = multiplier || 1;\n      cropping = cropping || {};\n      var scaledWidth = (cropping.width || this.width) * multiplier,\n          scaledHeight = (cropping.height || this.height) * multiplier,\n          zoom = this.getZoom(),\n          originalWidth = this.width,\n          originalHeight = this.height,\n          newZoom = zoom * multiplier,\n          vp = this.viewportTransform,\n          translateX = (vp[4] - (cropping.left || 0)) * multiplier,\n          translateY = (vp[5] - (cropping.top || 0)) * multiplier,\n          originalInteractive = this.interactive,\n          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n          originalRetina = this.enableRetinaScaling,\n          canvasEl = fabric.util.createCanvasElement(),\n          originalContextTop = this.contextTop;\n      canvasEl.width = scaledWidth;\n      canvasEl.height = scaledHeight;\n      this.contextTop = null;\n      this.enableRetinaScaling = false;\n      this.interactive = false;\n      this.viewportTransform = newVp;\n      this.width = scaledWidth;\n      this.height = scaledHeight;\n      this.calcViewportBoundaries();\n      this.renderCanvas(canvasEl.getContext('2d'), this._objects);\n      this.viewportTransform = vp;\n      this.width = originalWidth;\n      this.height = originalHeight;\n      this.calcViewportBoundaries();\n      this.interactive = originalInteractive;\n      this.enableRetinaScaling = originalRetina;\n      this.contextTop = originalContextTop;\n      return canvasEl;\n    }\n  });\n})();\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype,\n/** @lends fabric.StaticCanvas.prototype */\n{\n  /**\n   * Populates canvas with data from the specified dataless JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n   * @deprecated since 1.2.2\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   */\n  loadFromDatalessJSON: function (json, callback, reviver) {\n    return this.loadFromJSON(json, callback, reviver);\n  },\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function (json, callback, reviver) {\n    if (!json) {\n      return;\n    } // serialize if it wasn't already\n\n\n    var serialized = typeof json === 'string' ? JSON.parse(json) : fabric.util.object.clone(json);\n\n    var _this = this,\n        clipPath = serialized.clipPath,\n        renderOnAddRemove = this.renderOnAddRemove;\n\n    this.renderOnAddRemove = false;\n    delete serialized.clipPath;\n\n    this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\n      _this.clear();\n\n      _this._setBgOverlay(serialized, function () {\n        if (clipPath) {\n          _this._enlivenObjects([clipPath], function (enlivenedCanvasClip) {\n            _this.clipPath = enlivenedCanvasClip[0];\n\n            _this.__setupCanvas.call(_this, serialized, enlivenedObjects, renderOnAddRemove, callback);\n          });\n        } else {\n          _this.__setupCanvas.call(_this, serialized, enlivenedObjects, renderOnAddRemove, callback);\n        }\n      });\n    }, reviver);\n\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Array} restored canvas objects\n   * @param {Function} cached renderOnAddRemove callback\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  __setupCanvas: function (serialized, enlivenedObjects, renderOnAddRemove, callback) {\n    var _this = this;\n\n    enlivenedObjects.forEach(function (obj, index) {\n      // we splice the array just in case some custom classes restored from JSON\n      // will add more object to canvas at canvas init.\n      _this.insertAt(obj, index);\n    });\n    this.renderOnAddRemove = renderOnAddRemove; // remove parts i cannot set as options\n\n    delete serialized.objects;\n    delete serialized.backgroundImage;\n    delete serialized.overlayImage;\n    delete serialized.background;\n    delete serialized.overlay; // this._initOptions does too many things to just\n    // call it. Normally loading an Object from JSON\n    // create the Object instance. Here the Canvas is\n    // already an instance and we are just loading things over it\n\n    this._setOptions(serialized);\n\n    this.renderAll();\n    callback && callback();\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function (serialized, callback) {\n    var loaded = {\n      backgroundColor: false,\n      overlayColor: false,\n      backgroundImage: false,\n      overlayImage: false\n    };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function () {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function (property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      callback && callback();\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.util.enlivenObjects([value], function (enlivedObject) {\n        _this[property] = enlivedObject[0];\n        loaded[property] = true;\n        callback && callback();\n      });\n    } else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function () {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function (objects, callback, reviver) {\n    if (!objects || objects.length === 0) {\n      callback && callback([]);\n      return;\n    }\n\n    fabric.util.enlivenObjects(objects, function (enlivenedObjects) {\n      callback && callback(enlivenedObjects);\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function (format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function (callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function (clone) {\n      clone.loadFromJSON(data, function () {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function (callback) {\n    var el = fabric.util.createCanvasElement();\n    el.width = this.width;\n    el.height = this.height;\n    var clone = new fabric.Canvas(el);\n    clone.clipTo = this.clipTo;\n\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function () {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    } else {\n      callback && callback(clone);\n    }\n  }\n});\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      objectCaching = !fabric.isLikelyNode,\n      ALIASING_LIMIT = 2;\n\n  if (fabric.Object) {\n    return;\n  }\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires deselected\n   * @fires modified\n   * @fires modified\n   * @fires moved\n   * @fires scaled\n   * @fires rotated\n   * @fires skewed\n   *\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   * @fires skewing\n   *\n   * @fires mousedown\n   * @fires mouseup\n   * @fires mouseover\n   * @fires mouseout\n   * @fires mousewheel\n   * @fires mousedblclick\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   */\n\n\n  fabric.Object = fabric.util.createClass(fabric.CommonMethods,\n  /** @lends fabric.Object.prototype */\n  {\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type: 'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX: 'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY: 'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top: 0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left: 0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width: 0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height: 0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX: 1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY: 1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX: false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY: false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity: 1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle: 0,\n\n    /**\n     * Angle of skew on x axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewX: 0,\n\n    /**\n     * Angle of skew on y axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewY: 0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize: 13,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners: true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor: null,\n\n    /**\n     * Default cursor value used when moving this object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor: null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding: 0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor: 'rgba(102,153,255,0.75)',\n\n    /**\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    borderDashArray: null,\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor: 'rgba(102,153,255,0.5)',\n\n    /**\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    cornerStrokeColor: null,\n\n    /**\n     * Specify style of control, 'rect' or 'circle'\n     * @since 1.6.2\n     * @type String\n     */\n    cornerStyle: 'rect',\n\n    /**\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    cornerDashArray: null,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling: false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation: true,\n\n    /**\n     * Color of object's fill\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    fill: 'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule: 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object.\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Selection Background color of an object. colored layer behind the object when it is active.\n     * does not mix good with globalCompositeOperation methods.\n     * @type String\n     * @default\n     */\n    selectionBackgroundColor: '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    stroke: null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth: 1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray: null,\n\n    /**\n     * Line offset of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeDashOffset: 0,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap: 'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin: 'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit: 4,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow: null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving: 0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * @type Number\n     * @default\n     */\n    borderScaleFactor: 1,\n\n    /**\n     * Transform matrix (similar to SVG's transform matrix)\n     * This property has been depreacted. Since caching and and qrDecompose this\n     * property can be handled with the standard top,left,scaleX,scaleY,angle and skewX.\n     * A documentation example on how to parse and merge a transformMatrix will be provided before\n     * completely removing it in fabric 4.0\n     * If you are starting a project now, DO NOT use it.\n     * @deprecated since 3.2.0\n     * @type Array\n     */\n    transformMatrix: null,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit: 0,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable: true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented: true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible: true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls: true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders: true,\n\n    /**\n     * When set to `false`, object's controlling rotating point will not be visible or selectable\n     * @type Boolean\n     * @default\n     */\n    hasRotatingPoint: true,\n\n    /**\n     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n     * @type Number\n     * @default\n     */\n    rotatingPointOffset: 40,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind: false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Function that determines clipping of an object (context is passed as a first argument).\n     * If you are using code minification, ctx argument can be minified/manglied you should use\n     * as a workaround `var ctx = arguments[0];` in the function;\n     * Note that context origin is at the object's center point (not left/top corner)\n     * @deprecated since 2.0.0\n     * @type Function\n     */\n    clipTo: null,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX: false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY: false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation: false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX: false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY: false,\n\n    /**\n     * When `true`, object non-uniform scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockUniScaling: false,\n\n    /**\n     * When `true`, object horizontal skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingX: false,\n\n    /**\n     * When `true`, object vertical skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingY: false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n    lockScalingFlip: false,\n\n    /**\n     * When `true`, object is not exported in OBJECT/JSON\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    excludeFromExport: false,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * When `false`, object is not cached unless necessary ( clipPath )\n     * default to true\n     * @since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    objectCaching: objectCaching,\n\n    /**\n     * When `true`, object properties are checked for cache invalidation. In some particular\n     * situation you may want this to be disabled ( spray brush, very big, groups)\n     * or if your application does not allow you to modify properties for groups child you want\n     * to disable it for groups.\n     * default to false\n     * since 1.7.0\n     * @type Boolean\n     * @default false\n     */\n    statefullCache: false,\n\n    /**\n     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n     * too much and will be redrawn with correct details at the end of scaling.\n     * this setting is performance and application dependant.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    noScaleCache: true,\n\n    /**\n     * When `false`, the stoke width will scale with the object.\n     * When `true`, the stroke will always match the exact pixel size entered for stroke width.\n     * default to false\n     * @since 2.6.0\n     * @type Boolean\n     * @default false\n     * @type Boolean\n     * @default false\n     */\n    strokeUniform: false,\n\n    /**\n     * When set to `true`, object's cache will be rerendered next render call.\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    dirty: true,\n\n    /**\n     * keeps the value of the last hovered corner during mouse move.\n     * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\n     * It should be private, but there is no harm in using it as\n     * a read-only property.\n     * @type number|string|any\n     * @default 0\n     */\n    __corner: 0,\n\n    /**\n     * Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")\n     * @type String\n     * @default\n     */\n    paintFirst: 'fill',\n\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: ('top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' + 'stroke strokeWidth strokeDashArray strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit ' + 'angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor ' + 'skewX skewY fillRule paintFirst clipPath strokeUniform').split(' '),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single\n     * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\n     * and refreshed at the next render\n     * @type Array\n     */\n    cacheProperties: ('fill stroke strokeWidth strokeDashArray width height paintFirst strokeUniform' + ' strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit backgroundColor clipPath').split(' '),\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the object has rendered, and the context is placed in the center\n     * of the object cacheCanvas.\n     * If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will make the object clip to the outside of the clipPath\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    inverted: false,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will have its top and left relative to canvas, and will\n     * not be influenced by the object transform. This will make the clipPath relative\n     * to the canvas, but clipping just a particular object.\n     * WARNING this is beta, this feature may change or be renamed.\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    absolutePositioned: false,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function (options) {\n      if (options) {\n        this.setOptions(options);\n      }\n    },\n\n    /**\n     * Create a the canvas used to keep the cached copy of the object\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this._cacheProperties = {};\n      this._cacheCanvas = fabric.util.createCanvasElement();\n      this._cacheContext = this._cacheCanvas.getContext('2d');\n\n      this._updateCacheCanvas(); // if canvas gets created, is empty, so dirty.\n\n\n      this.dirty = true;\n    },\n\n    /**\n     * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\n     * and each side do not cross fabric.cacheSideLimit\n     * those numbers are configurable so that you can get as much detail as you want\n     * making bargain with performances.\n     * @param {Object} dims\n     * @param {Object} dims.width width of canvas\n     * @param {Object} dims.height height of canvas\n     * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _limitCacheSize: function (dims) {\n      var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\n          width = dims.width,\n          height = dims.height,\n          max = fabric.maxCacheSideLimit,\n          min = fabric.minCacheSideLimit;\n\n      if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {\n        if (width < min) {\n          dims.width = min;\n        }\n\n        if (height < min) {\n          dims.height = min;\n        }\n\n        return dims;\n      }\n\n      var ar = width / height,\n          limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal),\n          capValue = fabric.util.capValue,\n          x = capValue(min, limitedDims.x, max),\n          y = capValue(min, limitedDims.y, max);\n\n      if (width > x) {\n        dims.zoomX /= width / x;\n        dims.width = x;\n        dims.capped = true;\n      }\n\n      if (height > y) {\n        dims.zoomY /= height / y;\n        dims.height = y;\n        dims.capped = true;\n      }\n\n      return dims;\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @return {Object}.x width of object to be cached\n     * @return {Object}.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function () {\n      var objectScale = this.getTotalObjectScaling(),\n          // caculate dimensions without skewing\n      dim = this._getTransformedDimensions(0, 0),\n          neededX = dim.x * objectScale.scaleX / this.scaleX,\n          neededY = dim.y * objectScale.scaleY / this.scaleY;\n\n      return {\n        // for sure this ALIASING_LIMIT is slightly creating problem\n        // in situation in which the cache canvas gets an upper limit\n        // also objectScale contains already scaleX and scaleY\n        width: neededX + ALIASING_LIMIT,\n        height: neededY + ALIASING_LIMIT,\n        zoomX: objectScale.scaleX,\n        zoomY: objectScale.scaleY,\n        x: neededX,\n        y: neededY\n      };\n    },\n\n    /**\n     * Update width and height of the canvas for cache\n     * returns true or false if canvas needed resize.\n     * @private\n     * @return {Boolean} true if the canvas has been resized\n     */\n    _updateCacheCanvas: function () {\n      var targetCanvas = this.canvas;\n\n      if (this.noScaleCache && targetCanvas && targetCanvas._currentTransform) {\n        var target = targetCanvas._currentTransform.target,\n            action = targetCanvas._currentTransform.action;\n\n        if (this === target && action.slice && action.slice(0, 5) === 'scale') {\n          return false;\n        }\n      }\n\n      var canvas = this._cacheCanvas,\n          dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          minCacheSize = fabric.minCacheSideLimit,\n          width = dims.width,\n          height = dims.height,\n          drawingWidth,\n          drawingHeight,\n          zoomX = dims.zoomX,\n          zoomY = dims.zoomY,\n          dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\n          zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\n          shouldRedraw = dimensionsChanged || zoomChanged,\n          additionalWidth = 0,\n          additionalHeight = 0,\n          shouldResizeCanvas = false;\n\n      if (dimensionsChanged) {\n        var canvasWidth = this._cacheCanvas.width,\n            canvasHeight = this._cacheCanvas.height,\n            sizeGrowing = width > canvasWidth || height > canvasHeight,\n            sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) && canvasWidth > minCacheSize && canvasHeight > minCacheSize;\n        shouldResizeCanvas = sizeGrowing || sizeShrinking;\n\n        if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {\n          additionalWidth = width * 0.1;\n          additionalHeight = height * 0.1;\n        }\n      }\n\n      if (shouldRedraw) {\n        if (shouldResizeCanvas) {\n          canvas.width = Math.ceil(width + additionalWidth);\n          canvas.height = Math.ceil(height + additionalHeight);\n        } else {\n          this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\n\n          this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\n        }\n\n        drawingWidth = dims.x / 2;\n        drawingHeight = dims.y / 2;\n        this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n        this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n        this.cacheWidth = width;\n        this.cacheHeight = height;\n\n        this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\n\n        this._cacheContext.scale(zoomX, zoomY);\n\n        this.zoomX = zoomX;\n        this.zoomY = zoomY;\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function (options) {\n      this._setOptions(options);\n\n      this._initGradient(options.fill, 'fill');\n\n      this._initGradient(options.stroke, 'stroke');\n\n      this._initClipping(options);\n\n      this._initPattern(options.fill, 'fill');\n\n      this._initPattern(options.stroke, 'stroke');\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     */\n    transform: function (ctx) {\n      var m;\n\n      if (this.group && !this.group._transformDone) {\n        m = this.calcTransformMatrix();\n      } else {\n        m = this.calcOwnMatrix();\n      }\n\n      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          object = {\n        type: this.type,\n        version: fabric.version,\n        originX: this.originX,\n        originY: this.originY,\n        left: toFixed(this.left, NUM_FRACTION_DIGITS),\n        top: toFixed(this.top, NUM_FRACTION_DIGITS),\n        width: toFixed(this.width, NUM_FRACTION_DIGITS),\n        height: toFixed(this.height, NUM_FRACTION_DIGITS),\n        fill: this.fill && this.fill.toObject ? this.fill.toObject() : this.fill,\n        stroke: this.stroke && this.stroke.toObject ? this.stroke.toObject() : this.stroke,\n        strokeWidth: toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n        strokeDashArray: this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n        strokeLineCap: this.strokeLineCap,\n        strokeDashOffset: this.strokeDashOffset,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeMiterLimit: toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n        scaleX: toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n        scaleY: toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n        angle: toFixed(this.angle, NUM_FRACTION_DIGITS),\n        flipX: this.flipX,\n        flipY: this.flipY,\n        opacity: toFixed(this.opacity, NUM_FRACTION_DIGITS),\n        shadow: this.shadow && this.shadow.toObject ? this.shadow.toObject() : this.shadow,\n        visible: this.visible,\n        clipTo: this.clipTo && String(this.clipTo),\n        backgroundColor: this.backgroundColor,\n        fillRule: this.fillRule,\n        paintFirst: this.paintFirst,\n        globalCompositeOperation: this.globalCompositeOperation,\n        transformMatrix: this.transformMatrix ? this.transformMatrix.concat() : null,\n        skewX: toFixed(this.skewX, NUM_FRACTION_DIGITS),\n        skewY: toFixed(this.skewY, NUM_FRACTION_DIGITS)\n      };\n\n      if (this.clipPath) {\n        object.clipPath = this.clipPath.toObject(propertiesToInclude);\n        object.clipPath.inverted = this.clipPath.inverted;\n        object.clipPath.absolutePositioned = this.clipPath.absolutePositioned;\n      }\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function (object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n      stateProperties.forEach(function (prop) {\n        if (prop === 'left' || prop === 'top') {\n          return;\n        }\n\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n\n        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' && Object.prototype.toString.call(prototype[prop]) === '[object Array]'; // basically a check for [] === []\n\n        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function () {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getObjectScaling: function () {\n      var scaleX = this.scaleX,\n          scaleY = this.scaleY;\n\n      if (this.group) {\n        var scaling = this.group.getObjectScaling();\n        scaleX *= scaling.scaleX;\n        scaleY *= scaling.scaleY;\n      }\n\n      return {\n        scaleX: scaleX,\n        scaleY: scaleY\n      };\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling, zoom and retina\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getTotalObjectScaling: function () {\n      var scale = this.getObjectScaling(),\n          scaleX = scale.scaleX,\n          scaleY = scale.scaleY;\n\n      if (this.canvas) {\n        var zoom = this.canvas.getZoom();\n        var retina = this.canvas.getRetinaScaling();\n        scaleX *= zoom * retina;\n        scaleY *= zoom * retina;\n      }\n\n      return {\n        scaleX: scaleX,\n        scaleY: scaleY\n      };\n    },\n\n    /**\n     * Return the object opacity counting also the group property\n     * @return {Number}\n     */\n    getObjectOpacity: function () {\n      var opacity = this.opacity;\n\n      if (this.group) {\n        opacity *= this.group.getObjectOpacity();\n      }\n\n      return opacity;\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function (key, value) {\n      var shouldConstrainValue = key === 'scaleX' || key === 'scaleY',\n          isChanged = this[key] !== value,\n          groupNeedsUpdate = false;\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      } else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      } else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      } else if (key === 'dirty' && this.group) {\n        this.group.set('dirty', value);\n      }\n\n      this[key] = value;\n\n      if (isChanged) {\n        groupNeedsUpdate = this.group && this.group.isOnACache();\n\n        if (this.cacheProperties.indexOf(key) > -1) {\n          this.dirty = true;\n          groupNeedsUpdate && this.group.set('dirty', true);\n        } else if (groupNeedsUpdate && this.stateProperties.indexOf(key) > -1) {\n          this.group.set('dirty', true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function () {// implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Array}\n     */\n    getViewportTransform: function () {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n\n      return fabric.iMatrix.concat();\n    },\n\n    /*\n     * @private\n     * return if the object would be visible in rendering\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    isNotVisible: function () {\n      return this.opacity === 0 || this.width === 0 && this.height === 0 && this.strokeWidth === 0 || !this.visible;\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function (ctx) {\n      // do not render if width/height are zeros or object is not visible\n      if (this.isNotVisible()) {\n        return;\n      }\n\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n\n      ctx.save();\n\n      this._setupCompositeOperation(ctx);\n\n      this.drawSelectionBackground(ctx);\n      this.transform(ctx);\n\n      this._setOpacity(ctx);\n\n      this._setShadow(ctx, this);\n\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n\n      this.clipTo && fabric.util.clipContext(this, ctx);\n\n      if (this.shouldCache()) {\n        this.renderCache();\n        this.drawCacheOnCanvas(ctx);\n      } else {\n        this._removeCacheCanvas();\n\n        this.dirty = false;\n        this.drawObject(ctx);\n\n        if (this.objectCaching && this.statefullCache) {\n          this.saveState({\n            propertySet: 'cacheProperties'\n          });\n        }\n      }\n\n      this.clipTo && ctx.restore();\n      ctx.restore();\n    },\n    renderCache: function (options) {\n      options = options || {};\n\n      if (!this._cacheCanvas) {\n        this._createCacheCanvas();\n      }\n\n      if (this.isCacheDirty()) {\n        this.statefullCache && this.saveState({\n          propertySet: 'cacheProperties'\n        });\n        this.drawObject(this._cacheContext, options.forClipping);\n        this.dirty = false;\n      }\n    },\n\n    /**\n     * Remove cacheCanvas and its dimensions from the objects\n     */\n    _removeCacheCanvas: function () {\n      this._cacheCanvas = null;\n      this.cacheWidth = 0;\n      this.cacheHeight = 0;\n    },\n\n    /**\n     * return true if the object will draw a stroke\n     * Does not consider text styles. This is just a shortcut used at rendering time\n     * We want it to be an aproximation and be fast.\n     * wrote to avoid extra caching, it has to return true when stroke happens,\n     * can guess when it will not happen at 100% chance, does not matter if it misses\n     * some use case where the stroke is invisible.\n     * @since 3.0.0\n     * @returns Boolean\n     */\n    hasStroke: function () {\n      return this.stroke && this.stroke !== 'transparent' && this.strokeWidth !== 0;\n    },\n\n    /**\n     * return true if the object will draw a fill\n     * Does not consider text styles. This is just a shortcut used at rendering time\n     * We want it to be an aproximation and be fast.\n     * wrote to avoid extra caching, it has to return true when fill happens,\n     * can guess when it will not happen at 100% chance, does not matter if it misses\n     * some use case where the fill is invisible.\n     * @since 3.0.0\n     * @returns Boolean\n     */\n    hasFill: function () {\n      return this.fill && this.fill !== 'transparent';\n    },\n\n    /**\n     * When set to `true`, force the object to have its own cache, even if it is inside a group\n     * it may be needed when your object behave in a particular way on the cache and always needs\n     * its own isolated canvas to render correctly.\n     * Created to be overridden\n     * since 1.7.12\n     * @returns Boolean\n     */\n    needsItsOwnCache: function () {\n      if (this.paintFirst === 'stroke' && this.hasFill() && this.hasStroke() && typeof this.shadow === 'object') {\n        return true;\n      }\n\n      if (this.clipPath) {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * Read as: cache if is needed, or if the feature is enabled but we are not already caching.\n     * @return {Boolean}\n     */\n    shouldCache: function () {\n      this.ownCaching = this.needsItsOwnCache() || this.objectCaching && (!this.group || !this.group.isOnACache());\n      return this.ownCaching;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * used by Group.shouldCache to know if child has a shadow recursively\n     * @return {Boolean}\n     */\n    willDrawShadow: function () {\n      return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\n    },\n\n    /**\n     * Execute the drawing operation for an object clipPath\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawClipPathOnCache: function (ctx) {\n      var path = this.clipPath;\n      ctx.save(); // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4\n\n      if (path.inverted) {\n        ctx.globalCompositeOperation = 'destination-out';\n      } else {\n        ctx.globalCompositeOperation = 'destination-in';\n      } //ctx.scale(1 / 2, 1 / 2);\n\n\n      if (path.absolutePositioned) {\n        var m = fabric.util.invertTransform(this.calcTransformMatrix());\n        ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      }\n\n      path.transform(ctx);\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function (ctx, forClipping) {\n      var originalFill = this.fill,\n          originalStroke = this.stroke;\n\n      if (forClipping) {\n        this.fill = 'black';\n        this.stroke = '';\n\n        this._setClippingProperties(ctx);\n      } else {\n        this._renderBackground(ctx);\n\n        this._setStrokeStyles(ctx, this);\n\n        this._setFillStyles(ctx, this);\n      }\n\n      this._render(ctx);\n\n      this._drawClipPath(ctx);\n\n      this.fill = originalFill;\n      this.stroke = originalStroke;\n    },\n    _drawClipPath: function (ctx) {\n      var path = this.clipPath;\n\n      if (!path) {\n        return;\n      } // needed to setup a couple of variables\n      // path canvas gets overridden with this one.\n      // TODO find a better solution?\n\n\n      path.canvas = this.canvas;\n      path.shouldCache();\n      path._transformDone = true;\n      path.renderCache({\n        forClipping: true\n      });\n      this.drawClipPathOnCache(ctx);\n    },\n\n    /**\n     * Paint the cached copy of the object on the target context.\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawCacheOnCanvas: function (ctx) {\n      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n      ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\n    },\n\n    /**\n     * Check if cache is dirty\n     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n     * on parent canvas.\n     */\n    isCacheDirty: function (skipCanvas) {\n      if (this.isNotVisible()) {\n        return false;\n      }\n\n      if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\n        // in this case the context is already cleared.\n        return true;\n      } else {\n        if (this.dirty || this.clipPath && this.clipPath.absolutePositioned || this.statefullCache && this.hasStateChanged('cacheProperties')) {\n          if (this._cacheCanvas && !skipCanvas) {\n            var width = this.cacheWidth / this.zoomX;\n            var height = this.cacheHeight / this.zoomY;\n\n            this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n          }\n\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Draws a background for the object big as its untransformed dimensions\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function (ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n\n      var dim = this._getNonTransformedDimensions();\n\n      ctx.fillStyle = this.backgroundColor;\n      ctx.fillRect(-dim.x / 2, -dim.y / 2, dim.x, dim.y); // if there is background color no other shadows\n      // should be casted\n\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function (ctx) {\n      if (this.group && !this.group._transformDone) {\n        ctx.globalAlpha = this.getObjectOpacity();\n      } else {\n        ctx.globalAlpha *= this.opacity;\n      }\n    },\n    _setStrokeStyles: function (ctx, decl) {\n      if (decl.stroke) {\n        ctx.lineWidth = decl.strokeWidth;\n        ctx.lineCap = decl.strokeLineCap;\n        ctx.lineDashOffset = decl.strokeDashOffset;\n        ctx.lineJoin = decl.strokeLineJoin;\n        ctx.miterLimit = decl.strokeMiterLimit;\n        ctx.strokeStyle = decl.stroke.toLive ? decl.stroke.toLive(ctx, this) : decl.stroke;\n      }\n    },\n    _setFillStyles: function (ctx, decl) {\n      if (decl.fill) {\n        ctx.fillStyle = decl.fill.toLive ? decl.fill.toLive(ctx, this) : decl.fill;\n      }\n    },\n    _setClippingProperties: function (ctx) {\n      ctx.globalAlpha = 1;\n      ctx.strokeStyle = 'transparent';\n      ctx.fillStyle = '#000000';\n    },\n\n    /**\n     * @private\n     * Sets line dash\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n     * @param {Array} dashArray array representing dashes\n     * @param {Function} alternative function to call if browser does not support lineDash\n     */\n    _setLineDash: function (ctx, dashArray, alternative) {\n      if (!dashArray || dashArray.length === 0) {\n        return;\n      } // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n\n\n      if (1 & dashArray.length) {\n        dashArray.push.apply(dashArray, dashArray);\n      }\n\n      if (supportsLineDash) {\n        ctx.setLineDash(dashArray);\n      } else {\n        alternative && alternative(ctx);\n      }\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     */\n    _renderControls: function (ctx, styleOverride) {\n      var vpt = this.getViewportTransform(),\n          matrix = this.calcTransformMatrix(),\n          options,\n          drawBorders,\n          drawControls;\n      styleOverride = styleOverride || {};\n      drawBorders = typeof styleOverride.hasBorders !== 'undefined' ? styleOverride.hasBorders : this.hasBorders;\n      drawControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls;\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n      options = fabric.util.qrDecompose(matrix);\n      ctx.save();\n      ctx.translate(options.translateX, options.translateY);\n      ctx.lineWidth = 1 * this.borderScaleFactor;\n\n      if (!this.group) {\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      }\n\n      if (styleOverride.forActiveSelection) {\n        ctx.rotate(degreesToRadians(options.angle));\n        drawBorders && this.drawBordersInGroup(ctx, options, styleOverride);\n      } else {\n        ctx.rotate(degreesToRadians(this.angle));\n        drawBorders && this.drawBorders(ctx, styleOverride);\n      }\n\n      drawControls && this.drawControls(ctx, styleOverride);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function (ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var shadow = this.shadow,\n          canvas = this.canvas,\n          scaling,\n          multX = canvas && canvas.viewportTransform[0] || 1,\n          multY = canvas && canvas.viewportTransform[3] || 1;\n\n      if (shadow.nonScaling) {\n        scaling = {\n          scaleX: 1,\n          scaleY: 1\n        };\n      } else {\n        scaling = this.getObjectScaling();\n      }\n\n      if (canvas && canvas._isRetinaScaling()) {\n        multX *= fabric.devicePixelRatio;\n        multY *= fabric.devicePixelRatio;\n      }\n\n      ctx.shadowColor = shadow.color;\n      ctx.shadowBlur = shadow.blur * fabric.browserShadowBlurConstant * (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n      ctx.shadowOffsetX = shadow.offsetX * multX * scaling.scaleX;\n      ctx.shadowOffsetY = shadow.offsetY * multY * scaling.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function (ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} filler fabric.Pattern or fabric.Gradient\n     * @return {Object} offset.offsetX offset for text rendering\n     * @return {Object} offset.offsetY offset for text rendering\n     */\n    _applyPatternGradientTransform: function (ctx, filler) {\n      if (!filler || !filler.toLive) {\n        return {\n          offsetX: 0,\n          offsetY: 0\n        };\n      }\n\n      var t = filler.gradientTransform || filler.patternTransform;\n      var offsetX = -this.width / 2 + filler.offsetX || 0,\n          offsetY = -this.height / 2 + filler.offsetY || 0;\n\n      if (filler.gradientUnits === 'percentage') {\n        ctx.transform(this.width, 0, 0, this.height, offsetX, offsetY);\n      } else {\n        ctx.transform(1, 0, 0, 1, offsetX, offsetY);\n      }\n\n      if (t) {\n        ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\n      }\n\n      return {\n        offsetX: offsetX,\n        offsetY: offsetY\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderPaintInOrder: function (ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderStroke(ctx);\n\n        this._renderFill(ctx);\n      } else {\n        this._renderFill(ctx);\n\n        this._renderStroke(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * function that actually render something on the context.\n     * empty here to allow Obects to work on tests to benchmark fabric functionalites\n     * not related to rendering\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function ()\n    /* ctx */\n    {},\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function (ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n\n      this._applyPatternGradientTransform(ctx, this.fill);\n\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      } else {\n        ctx.fill();\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderStroke: function (ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n\n      if (this.strokeUniform) {\n        ctx.scale(1 / this.scaleX, 1 / this.scaleY);\n      }\n\n      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n\n      if (this.stroke.toLive && this.stroke.gradientUnits === 'percentage') {\n        // need to transform gradient in a pattern.\n        // this is a slow process. If you are hitting this codepath, and the object\n        // is not using caching, you should consider switching it on.\n        // we need a canvas as big as the current object caching canvas.\n        this._applyPatternForTransformedGradient(ctx, this.stroke);\n      } else {\n        this._applyPatternGradientTransform(ctx, this.stroke);\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * This function try to patch the missing gradientTransform on canvas gradients.\n     * transforming a context to transform the gradient, is going to transform the stroke too.\n     * we want to transform the gradient but not the stroke operation, so we create\n     * a transformed gradient on a pattern and then we use the pattern instead of the gradient.\n     * this method has drwabacks: is slow, is in low resolution, needs a patch for when the size\n     * is limited.\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {fabric.Gradient} filler a fabric gradient instance\n     */\n    _applyPatternForTransformedGradient: function (ctx, filler) {\n      var dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          pCanvas = fabric.util.createCanvasElement(),\n          pCtx,\n          retinaScaling = this.canvas.getRetinaScaling(),\n          width = dims.x / this.scaleX / retinaScaling,\n          height = dims.y / this.scaleY / retinaScaling;\n\n      pCanvas.width = width;\n      pCanvas.height = height;\n      pCtx = pCanvas.getContext('2d');\n      pCtx.beginPath();\n      pCtx.moveTo(0, 0);\n      pCtx.lineTo(width, 0);\n      pCtx.lineTo(width, height);\n      pCtx.lineTo(0, height);\n      pCtx.closePath();\n      pCtx.translate(width / 2, height / 2);\n      pCtx.scale(dims.zoomX / this.scaleX / retinaScaling, dims.zoomY / this.scaleY / retinaScaling);\n\n      this._applyPatternGradientTransform(pCtx, filler);\n\n      pCtx.fillStyle = filler.toLive(ctx);\n      pCtx.fill();\n      ctx.translate(-this.width / 2 - this.strokeWidth / 2, -this.height / 2 - this.strokeWidth / 2);\n      ctx.scale(retinaScaling * this.scaleX / dims.zoomX, retinaScaling * this.scaleY / dims.zoomY);\n      ctx.strokeStyle = pCtx.createPattern(pCanvas, 'no-repeat');\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function () {\n      return {\n        x: this.left + this.width / 2,\n        y: this.top + this.height / 2\n      };\n    },\n\n    /**\n     * This function is an helper for svg import. it decompose the transformMatrix\n     * and assign properties to object.\n     * untransformed coordinates\n     * @private\n     * @chainable\n     */\n    _assignTransformMatrixProps: function () {\n      if (this.transformMatrix) {\n        var options = fabric.util.qrDecompose(this.transformMatrix);\n        this.flipX = false;\n        this.flipY = false;\n        this.set('scaleX', options.scaleX);\n        this.set('scaleY', options.scaleY);\n        this.angle = options.angle;\n        this.skewX = options.skewX;\n        this.skewY = 0;\n      }\n    },\n\n    /**\n     * This function is an helper for svg import. it removes the transform matrix\n     * and set to object properties that fabricjs can handle\n     * @private\n     * @param {Object} preserveAspectRatioOptions\n     * @return {thisArg}\n     */\n    _removeTransformMatrix: function (preserveAspectRatioOptions) {\n      var center = this._findCenterFromElement();\n\n      if (this.transformMatrix) {\n        this._assignTransformMatrixProps();\n\n        center = fabric.util.transformPoint(center, this.transformMatrix);\n      }\n\n      this.transformMatrix = null;\n\n      if (preserveAspectRatioOptions) {\n        this.scaleX *= preserveAspectRatioOptions.scaleX;\n        this.scaleY *= preserveAspectRatioOptions.scaleY;\n        this.cropX = preserveAspectRatioOptions.cropX;\n        this.cropY = preserveAspectRatioOptions.cropY;\n        center.x += preserveAspectRatioOptions.offsetLeft;\n        center.y += preserveAspectRatioOptions.offsetTop;\n        this.width = preserveAspectRatioOptions.width;\n        this.height = preserveAspectRatioOptions.height;\n      }\n\n      this.setPositionByOrigin(center, 'center', 'center');\n    },\n\n    /**\n     * Clones an instance, using a callback method will work for every object.\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     */\n    clone: function (callback, propertiesToInclude) {\n      var objectForm = this.toObject(propertiesToInclude);\n\n      if (this.constructor.fromObject) {\n        this.constructor.fromObject(objectForm, callback);\n      } else {\n        fabric.Object._fromObject('Object', objectForm, callback);\n      }\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * could make use of both toDataUrl or toCanvasElement.\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @param {Object} [options] for clone as image, passed to toDataURL\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function (callback, options) {\n      var canvasEl = this.toCanvasElement(options);\n\n      if (callback) {\n        callback(new fabric.Image(canvasEl));\n      }\n\n      return this;\n    },\n\n    /**\n     * Converts an object into a HTMLCanvas element\n     * @param {Object} options Options object\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toCanvasElement: function (options) {\n      options || (options = {});\n      var utils = fabric.util,\n          origParams = utils.saveObjectTransform(this),\n          originalGroup = this.group,\n          originalShadow = this.shadow,\n          abs = Math.abs,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? fabric.devicePixelRatio : 1);\n      delete this.group;\n\n      if (options.withoutTransform) {\n        utils.resetObjectTransform(this);\n      }\n\n      if (options.withoutShadow) {\n        this.shadow = null;\n      }\n\n      var el = fabric.util.createCanvasElement(),\n          // skip canvas zoom and calculate with setCoords now.\n      boundingRect = this.getBoundingRect(true, true),\n          shadow = this.shadow,\n          scaling,\n          shadowOffset = {\n        x: 0,\n        y: 0\n      },\n          shadowBlur;\n\n      if (shadow) {\n        shadowBlur = shadow.blur;\n\n        if (shadow.nonScaling) {\n          scaling = {\n            scaleX: 1,\n            scaleY: 1\n          };\n        } else {\n          scaling = this.getObjectScaling();\n        } // consider non scaling shadow.\n\n\n        shadowOffset.x = 2 * Math.round(abs(shadow.offsetX) + shadowBlur) * abs(scaling.scaleX);\n        shadowOffset.y = 2 * Math.round(abs(shadow.offsetY) + shadowBlur) * abs(scaling.scaleY);\n      }\n\n      el.width = boundingRect.width + shadowOffset.x;\n      el.height = boundingRect.height + shadowOffset.y;\n      el.width += el.width % 2 ? 2 - el.width % 2 : 0;\n      el.height += el.height % 2 ? 2 - el.height % 2 : 0;\n      var canvas = new fabric.StaticCanvas(el, {\n        enableRetinaScaling: false,\n        renderOnAddRemove: false,\n        skipOffscreen: false\n      });\n\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n\n      this.setPositionByOrigin(new fabric.Point(canvas.width / 2, canvas.height / 2), 'center', 'center');\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var canvasEl = canvas.toCanvasElement(multiplier || 1, options);\n      this.shadow = originalShadow;\n      this.canvas = originalCanvas;\n\n      if (originalGroup) {\n        this.group = originalGroup;\n      }\n\n      this.set(origParams).setCoords(); // canvas.dispose will call image.dispose that will nullify the elements\n      // since this canvas is a simple element for the process, we remove references\n      // to objects in this way in order to avoid object trashing.\n\n      canvas._objects = [];\n      canvas.dispose();\n      canvas = null;\n      return canvasEl;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function (options) {\n      options || (options = {});\n      return fabric.util.toDataURL(this.toCanvasElement(options), options.format || 'png', options.quality || 1);\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function (type) {\n      return this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance (is 1 unless subclassed)\n     */\n    complexity: function () {\n      return 1;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function (propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets gradient (fill or stroke) of an object\n     * percentages for x1,x2,y1,y2,r1,r2 together with gradientUnits 'pixels', are not supported.\n     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n     * @param {String} property Property name 'stroke' or 'fill'\n     * @param {Object} [options] Options object\n     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n     * @param {Number} [options.x1=0] x-coordinate of start point\n     * @param {Number} [options.y1=0] y-coordinate of start point\n     * @param {Number} [options.x2=0] x-coordinate of end point\n     * @param {Number} [options.y2=0] y-coordinate of end point\n     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n     * @param {Object} [options.gradientTransform] transformMatrix for gradient\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @deprecated since 3.4.0\n     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n     * @example <caption>Set linear gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'linear',\n     *   x1: -object.width / 2,\n     *   y1: 0,\n     *   x2: object.width / 2,\n     *   y2: 0,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     * @example <caption>Set radial gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'radial',\n     *   x1: 0,\n     *   y1: 0,\n     *   x2: 0,\n     *   y2: 0,\n     *   r1: object.width / 2,\n     *   r2: 10,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     */\n    setGradient: function (property, options) {\n      options || (options = {});\n      var gradient = {\n        colorStops: []\n      };\n      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n      gradient.coords = {\n        x1: options.x1,\n        y1: options.y1,\n        x2: options.x2,\n        y2: options.y2\n      };\n      gradient.gradientUnits = options.gradientUnits || 'pixels';\n\n      if (options.r1 || options.r2) {\n        gradient.coords.r1 = options.r1;\n        gradient.coords.r2 = options.r2;\n      }\n\n      gradient.gradientTransform = options.gradientTransform;\n      fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\n      return this.set(property, fabric.Gradient.forObject(this, gradient));\n    },\n\n    /**\n     * Sets pattern fill of an object\n     * @param {Object} options Options object\n     * @param {(String|HTMLImageElement)} options.source Pattern source\n     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n     * @param {Function} [callback] Callback to invoke when image set as a pattern\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @deprecated since 3.5.0\n     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n     * @example <caption>Set pattern</caption>\n     * object.setPatternFill({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat'\n     * },canvas.renderAll.bind(canvas));\n     */\n    setPatternFill: function (options, callback) {\n      return this.set('fill', new fabric.Pattern(options, callback));\n    },\n\n    /**\n     * Sets {@link fabric.Object#shadow|shadow} of an object\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n     * @param {Number} [options.blur=0] Shadow blur\n     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n     * @param {Number} [options.offsetY=0] Shadow vertical offset\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @deprecated since 3.5.0\n     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n     * @example <caption>Set shadow with string notation</caption>\n     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n     * canvas.renderAll();\n     * @example <caption>Set shadow with object notation</caption>\n     * object.setShadow({\n     *   color: 'red',\n     *   blur: 10,\n     *   offsetX: 20,\n     *   offsetY: 20\n     * });\n     * canvas.renderAll();\n     */\n    setShadow: function (options) {\n      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n    },\n\n    /**\n     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n     * @param {String} color Color value\n     * @return {fabric.Object} thisArg\n     * @deprecated since 3.5.0\n     * @chainable\n     */\n    setColor: function (color) {\n      this.set('fill', color);\n      return this;\n    },\n\n    /**\n     * Sets \"angle\" of an instance with centered rotation\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    rotate: function (angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function () {\n      this.canvas && this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterH: function () {\n      this.canvas && this.canvas.viewportCenterObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function () {\n      this.canvas && this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterV: function () {\n      this.canvas && this.canvas.viewportCenterObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function () {\n      this.canvas && this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Centers object on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenter: function () {\n      this.canvas && this.canvas.viewportCenterObject(this);\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function (e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(pClicked, objectLeftTop, degreesToRadians(-this.angle));\n      }\n\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specified using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function (ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    }\n  });\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Object);\n  extend(fabric.Object.prototype, fabric.Observable);\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  fabric.Object._fromObject = function (className, object, callback, extraParam) {\n    var klass = fabric[className];\n    object = clone(object, true);\n    fabric.util.enlivenPatterns([object.fill, object.stroke], function (patterns) {\n      if (typeof patterns[0] !== 'undefined') {\n        object.fill = patterns[0];\n      }\n\n      if (typeof patterns[1] !== 'undefined') {\n        object.stroke = patterns[1];\n      }\n\n      fabric.util.enlivenObjects([object.clipPath], function (enlivedProps) {\n        object.clipPath = enlivedProps[0];\n        var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n        callback && callback(instance);\n      });\n    });\n  };\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n\n\n  fabric.Object.__uid = 0;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function () {\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n    left: -0.5,\n    center: 0,\n    right: 0.5\n  },\n      originYOffset = {\n    top: -0.5,\n    center: 0,\n    bottom: 0.5\n  };\n  fabric.util.object.extend(fabric.Object.prototype,\n  /** @lends fabric.Object.prototype */\n  {\n    /**\n     * Translates the coordinates from a set of origin to another (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function (point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX,\n          offsetY,\n          dim;\n\n      if (typeof fromOriginX === 'string') {\n        fromOriginX = originXOffset[fromOriginX];\n      } else {\n        fromOriginX -= 0.5;\n      }\n\n      if (typeof toOriginX === 'string') {\n        toOriginX = originXOffset[toOriginX];\n      } else {\n        toOriginX -= 0.5;\n      }\n\n      offsetX = toOriginX - fromOriginX;\n\n      if (typeof fromOriginY === 'string') {\n        fromOriginY = originYOffset[fromOriginY];\n      } else {\n        fromOriginY -= 0.5;\n      }\n\n      if (typeof toOriginY === 'string') {\n        toOriginY = originYOffset[toOriginY];\n      } else {\n        toOriginY -= 0.5;\n      }\n\n      offsetY = toOriginY - fromOriginY;\n\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function (point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function (center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function () {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function (originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function (point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p,\n          p2;\n\n      if (typeof originX !== 'undefined' && typeof originY !== 'undefined') {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      } else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function (pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function (to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getScaledWidth(),\n          xFull = fabric.util.cos(angle) * hypotFull,\n          yFull = fabric.util.sin(angle) * hypotFull,\n          offsetFrom,\n          offsetTo; //TODO: this function does not consider mixed situation like top, center.\n\n      if (typeof this.originX === 'string') {\n        offsetFrom = originXOffset[this.originX];\n      } else {\n        offsetFrom = this.originX - 0.5;\n      }\n\n      if (typeof to === 'string') {\n        offsetTo = originXOffset[to];\n      } else {\n        offsetTo = to - 0.5;\n      }\n\n      this.left += xFull * (offsetTo - offsetFrom);\n      this.top += yFull * (offsetTo - offsetFrom);\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function () {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n      var center = this.getCenterPoint();\n      this.originX = 'center';\n      this.originY = 'center';\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function () {\n      var originPoint = this.translateToOriginPoint(this.getCenterPoint(), this._originalOriginX, this._originalOriginY);\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function () {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    }\n  });\n})();\n\n(function () {\n  function getCoords(coords) {\n    return [new fabric.Point(coords.tl.x, coords.tl.y), new fabric.Point(coords.tr.x, coords.tr.y), new fabric.Point(coords.br.x, coords.br.y), new fabric.Point(coords.bl.x, coords.bl.y)];\n  }\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      multiplyMatrices = fabric.util.multiplyTransformMatrices,\n      transformPoint = fabric.util.transformPoint;\n  fabric.util.object.extend(fabric.Object.prototype,\n  /** @lends fabric.Object.prototype */\n  {\n    /**\n     * Describe object's corner position in canvas element coordinates.\n     * properties are tl,mt,tr,ml,mr,bl,mb,br,mtr for the main controls.\n     * each property is an object with x, y and corner.\n     * The `corner` property contains in a similar manner the 4 points of the\n     * interactive area of the corner.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, viewportTransform, top, left, padding.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords;\n     * @memberOf fabric.Object.prototype\n     */\n    oCoords: null,\n\n    /**\n     * Describe object's corner position in canvas object absolute coordinates\n     * properties are tl,tr,bl,br and describe the four main corner.\n     * each property is an object with x, y, instance of Fabric.Point.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, top, left.\n     * Those coordinates are useful to understand where an object is. They get updated\n     * with oCoords but they do not need to be updated when zoom or panning change.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords(true);\n     * @memberOf fabric.Object.prototype\n     */\n    aCoords: null,\n\n    /**\n     * storage for object transform matrix\n     */\n    ownMatrixCache: null,\n\n    /**\n     * storage for object full transform matrix\n     */\n    matrixCache: null,\n\n    /**\n     * return correct set of coordinates for intersection\n     */\n    getCoords: function (absolute, calculate) {\n      if (!this.oCoords) {\n        this.setCoords();\n      }\n\n      var coords = absolute ? this.aCoords : this.oCoords;\n      return getCoords(calculate ? this.calcCoords(absolute) : coords);\n    },\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function (pointTL, pointBR, absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate),\n          intersection = fabric.Intersection.intersectPolygonRectangle(coords, pointTL, pointBR);\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function (other, absolute, calculate) {\n      var intersection = fabric.Intersection.intersectPolygonPolygon(this.getCoords(absolute, calculate), other.getCoords(absolute, calculate));\n      return intersection.status === 'Intersection' || other.isContainedWithinObject(this, absolute, calculate) || this.isContainedWithinObject(other, absolute, calculate);\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function (other, absolute, calculate) {\n      var points = this.getCoords(absolute, calculate),\n          i = 0,\n          lines = other._getImageLines(calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords);\n\n      for (; i < 4; i++) {\n        if (!other.containsPoint(points[i], lines)) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function (pointTL, pointBR, absolute, calculate) {\n      var boundingRect = this.getBoundingRect(absolute, calculate);\n      return boundingRect.left >= pointTL.x && boundingRect.left + boundingRect.width <= pointBR.x && boundingRect.top >= pointTL.y && boundingRect.top + boundingRect.height <= pointBR.y;\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @param {Object} [lines] object returned from @method _getImageLines\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function (point, lines, absolute, calculate) {\n      var lines = lines || this._getImageLines(calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords),\n          xPoints = this._findCrossPoints(point, lines); // if xPoints is odd then point is inside the object\n\n\n      return xPoints !== 0 && xPoints % 2 === 1;\n    },\n\n    /**\n     * Checks if object is contained within the canvas with current viewportTransform\n     * the check is done stopping at first point that appears on screen\n     * @param {Boolean} [calculate] use coordinates of current position instead of .aCoords\n     * @return {Boolean} true if object is fully or partially contained within canvas\n     */\n    isOnScreen: function (calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n\n      var pointTL = this.canvas.vptCoords.tl,\n          pointBR = this.canvas.vptCoords.br;\n      var points = this.getCoords(true, calculate),\n          point;\n\n      for (var i = 0; i < 4; i++) {\n        point = points[i];\n\n        if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\n          return true;\n        }\n      } // no points on screen, check intersection with absolute coordinates\n\n\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Checks if the object contains the midpoint between canvas extremities\n     * Does not make sense outside the context of isOnScreen and isPartiallyOnScreen\n     * @private\n     * @param {Fabric.Point} pointTL Top Left point\n     * @param {Fabric.Point} pointBR Top Right point\n     * @param {Boolean} calculate use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if the object contains the point\n     */\n    _containsCenterOfCanvas: function (pointTL, pointBR, calculate) {\n      // worst case scenario the object is so big that contains the screen\n      var centerPoint = {\n        x: (pointTL.x + pointBR.x) / 2,\n        y: (pointTL.y + pointBR.y) / 2\n      };\n\n      if (this.containsPoint(centerPoint, null, true, calculate)) {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Checks if object is partially contained within the canvas with current viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is partially contained within canvas\n     */\n    isPartiallyOnScreen: function (calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n\n      var pointTL = this.canvas.vptCoords.tl,\n          pointBR = this.canvas.vptCoords.br;\n\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function (oCoords) {\n      return {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} lines Coordinates of the object being evaluated\n     */\n    // remove yi, not used but left code here just in case.\n    _findCrossPoints: function (point, lines) {\n      var b1,\n          b2,\n          a1,\n          a2,\n          xi,\n          // yi,\n      xcount = 0,\n          iLine;\n\n      for (var lineKey in lines) {\n        iLine = lines[lineKey]; // optimisation 1: line below point. no cross\n\n        if (iLine.o.y < point.y && iLine.d.y < point.y) {\n          continue;\n        } // optimisation 2: line above point. no cross\n\n\n        if (iLine.o.y >= point.y && iLine.d.y >= point.y) {\n          continue;\n        } // optimisation 3: vertical line case\n\n\n        if (iLine.o.x === iLine.d.x && iLine.o.x >= point.x) {\n          xi = iLine.o.x; // yi = point.y;\n        } // calculate the intersection point\n        else {\n            b1 = 0;\n            b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n            a1 = point.y - b1 * point.x;\n            a2 = iLine.o.y - b2 * iLine.o.x;\n            xi = -(a1 - a2) / (b1 - b2); // yi = a1 + b1 * xi;\n          } // dont count xi < point.x cases\n\n\n        if (xi >= point.x) {\n          xcount += 1;\n        } // optimisation 4: specific for square images\n\n\n        if (xcount === 2) {\n          break;\n        }\n      }\n\n      return xcount;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * the box is intended as aligned to axis of canvas.\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords / .aCoords\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function (absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate);\n      return fabric.util.makeBoundingBoxFromPoints(coords);\n    },\n\n    /**\n     * Returns width of an object's bounding box counting transformations\n     * before 2.0 it was named getWidth();\n     * @return {Number} width value\n     */\n    getScaledWidth: function () {\n      return this._getTransformedDimensions().x;\n    },\n\n    /**\n     * Returns height of an object bounding box counting transformations\n     * before 2.0 it was named getHeight();\n     * @return {Number} height value\n     */\n    getScaledHeight: function () {\n      return this._getTransformedDimensions().y;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function (value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        } else {\n          return this.minScaleLimit;\n        }\n      } else if (value === 0) {\n        return 0.0001;\n      }\n\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function (value) {\n      this._set('scaleX', value);\n\n      this._set('scaleY', value);\n\n      return this.setCoords();\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function (value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).width / this.getScaledWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function (value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).height / this.getScaledHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    /**\n     * Calculates and returns the .coords of an object.\n     * @return {Object} Object with tl, tr, br, bl ....\n     * @chainable\n     */\n    calcCoords: function (absolute) {\n      var rotateMatrix = this._calcRotateMatrix(),\n          translateMatrix = this._calcTranslateMatrix(),\n          startMatrix = multiplyMatrices(translateMatrix, rotateMatrix),\n          vpt = this.getViewportTransform(),\n          finalMatrix = absolute ? startMatrix : multiplyMatrices(vpt, startMatrix),\n          dim = this._getTransformedDimensions(),\n          w = dim.x / 2,\n          h = dim.y / 2,\n          tl = transformPoint({\n        x: -w,\n        y: -h\n      }, finalMatrix),\n          tr = transformPoint({\n        x: w,\n        y: -h\n      }, finalMatrix),\n          bl = transformPoint({\n        x: -w,\n        y: h\n      }, finalMatrix),\n          br = transformPoint({\n        x: w,\n        y: h\n      }, finalMatrix);\n\n      if (!absolute) {\n        var padding = this.padding,\n            angle = degreesToRadians(this.angle),\n            cos = fabric.util.cos(angle),\n            sin = fabric.util.sin(angle),\n            cosP = cos * padding,\n            sinP = sin * padding,\n            cosPSinP = cosP + sinP,\n            cosPMinusSinP = cosP - sinP;\n\n        if (padding) {\n          tl.x -= cosPMinusSinP;\n          tl.y -= cosPSinP;\n          tr.x += cosPSinP;\n          tr.y -= cosPMinusSinP;\n          bl.x -= cosPSinP;\n          bl.y += cosPMinusSinP;\n          br.x += cosPMinusSinP;\n          br.y += cosPSinP;\n        }\n\n        var ml = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n            mt = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n            mr = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n            mb = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n            mtr = new fabric.Point(mt.x + sin * this.rotatingPointOffset, mt.y - cos * this.rotatingPointOffset);\n      } // if (!absolute) {\n      //   var canvas = this.canvas;\n      //   setTimeout(function() {\n      //     canvas.contextTop.clearRect(0, 0, 700, 700);\n      //     canvas.contextTop.fillStyle = 'green';\n      //     canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n      //     canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n      //     canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n      //     canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n      //     canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n      //     canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n      //     canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n      //     canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n      //     canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n      //   }, 50);\n      // }\n\n\n      var coords = {\n        // corners\n        tl: tl,\n        tr: tr,\n        br: br,\n        bl: bl\n      };\n\n      if (!absolute) {\n        // middle\n        coords.ml = ml;\n        coords.mt = mt;\n        coords.mr = mr;\n        coords.mb = mb; // rotating point\n\n        coords.mtr = mtr;\n      }\n\n      return coords;\n    },\n\n    /**\n     * Sets corner position coordinates based on current angle, width and height.\n     * See {@link https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords|When-to-call-setCoords}\n     * @param {Boolean} [ignoreZoom] set oCoords with or without the viewport transform.\n     * @param {Boolean} [skipAbsolute] skip calculation of aCoords, useful in setViewportTransform\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function (ignoreZoom, skipAbsolute) {\n      this.oCoords = this.calcCoords(ignoreZoom);\n\n      if (!skipAbsolute) {\n        this.aCoords = this.calcCoords(true);\n      } // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n\n\n      ignoreZoom || this._setCornerCoords && this._setCornerCoords();\n      return this;\n    },\n\n    /**\n     * calculate rotation matrix of an object\n     * @return {Array} rotation matrix for the object\n     */\n    _calcRotateMatrix: function () {\n      return fabric.util.calcRotateMatrix(this);\n    },\n\n    /**\n     * calculate the translation matrix for an object transform\n     * @return {Array} rotation matrix for the object\n     */\n    _calcTranslateMatrix: function () {\n      var center = this.getCenterPoint();\n      return [1, 0, 0, 1, center.x, center.y];\n    },\n    transformMatrixKey: function (skipGroup) {\n      var sep = '_',\n          prefix = '';\n\n      if (!skipGroup && this.group) {\n        prefix = this.group.transformMatrixKey(skipGroup) + sep;\n      }\n\n      ;\n      return prefix + this.top + sep + this.left + sep + this.scaleX + sep + this.scaleY + sep + this.skewX + sep + this.skewY + sep + this.angle + sep + this.originX + sep + this.originY + sep + this.width + sep + this.height + sep + this.strokeWidth + this.flipX + this.flipY;\n    },\n\n    /**\n     * calculate transform matrix that represents the current transformations from the\n     * object's properties.\n     * @param {Boolean} [skipGroup] return transform matrix for object not counting parent transformations\n     * @return {Array} transform matrix for the object\n     */\n    calcTransformMatrix: function (skipGroup) {\n      if (skipGroup) {\n        return this.calcOwnMatrix();\n      }\n\n      var key = this.transformMatrixKey(),\n          cache = this.matrixCache || (this.matrixCache = {});\n\n      if (cache.key === key) {\n        return cache.value;\n      }\n\n      var matrix = this.calcOwnMatrix();\n\n      if (this.group) {\n        matrix = multiplyMatrices(this.group.calcTransformMatrix(), matrix);\n      }\n\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    /**\n     * calculate transform matrix that represents the current transformations from the\n     * object's properties, this matrix does not include the group transformation\n     * @return {Array} transform matrix for the object\n     */\n    calcOwnMatrix: function () {\n      var key = this.transformMatrixKey(true),\n          cache = this.ownMatrixCache || (this.ownMatrixCache = {});\n\n      if (cache.key === key) {\n        return cache.value;\n      }\n\n      var tMatrix = this._calcTranslateMatrix();\n\n      this.translateX = tMatrix[4];\n      this.translateY = tMatrix[5];\n      cache.key = key;\n      cache.value = fabric.util.composeMatrix(this);\n      return cache.value;\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @deprecated since 3.4.0, please use fabric.util._calcDimensionsTransformMatrix\n     * not including or including flipX, flipY to emulate the flipping boolean\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _calcDimensionsTransformMatrix: function (skewX, skewY, flipping) {\n      return fabric.util.calcDimensionsMatrix({\n        skewX: skewX,\n        skewY: skewY,\n        scaleX: this.scaleX * (flipping && this.flipX ? -1 : 1),\n        scaleY: this.scaleY * (flipping && this.flipY ? -1 : 1)\n      });\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getNonTransformedDimensions: function () {\n      var strokeWidth = this.strokeWidth,\n          w = this.width + strokeWidth,\n          h = this.height + strokeWidth;\n      return {\n        x: w,\n        y: h\n      };\n    },\n\n    /*\n     * Calculate object bounding box dimensions from its properties scale, skew.\n     * @param {Number} skewX, a value to override current skewX\n     * @param {Number} skewY, a value to override current skewY\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getTransformedDimensions: function (skewX, skewY) {\n      if (typeof skewX === 'undefined') {\n        skewX = this.skewX;\n      }\n\n      if (typeof skewY === 'undefined') {\n        skewY = this.skewY;\n      }\n\n      var dimensions = this._getNonTransformedDimensions(),\n          dimX,\n          dimY,\n          noSkew = skewX === 0 && skewY === 0;\n\n      if (this.strokeUniform) {\n        dimX = this.width;\n        dimY = this.height;\n      } else {\n        dimX = dimensions.x;\n        dimY = dimensions.y;\n      }\n\n      if (noSkew) {\n        return this._finalizeDimensions(dimX * this.scaleX, dimY * this.scaleY);\n      } else {\n        dimX /= 2;\n        dimY /= 2;\n      }\n\n      var points = [{\n        x: -dimX,\n        y: -dimY\n      }, {\n        x: dimX,\n        y: -dimY\n      }, {\n        x: -dimX,\n        y: dimY\n      }, {\n        x: dimX,\n        y: dimY\n      }],\n          transformMatrix = fabric.util.calcDimensionsMatrix({\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        skewX: this.skewX,\n        skewY: this.skewY\n      }),\n          bbox = fabric.util.makeBoundingBoxFromPoints(points, transformMatrix);\n      return this._finalizeDimensions(bbox.width, bbox.height);\n    },\n\n    /*\n     * Calculate object bounding box dimensions from its properties scale, skew.\n     * @param Number width width of the bbox\n     * @param Number height height of the bbox\n     * @private\n     * @return {Object} .x finalized width dimension\n     * @return {Object} .y finalized height dimension\n     */\n    _finalizeDimensions: function (width, height) {\n      return this.strokeUniform ? {\n        x: width + this.strokeWidth,\n        y: height + this.strokeWidth\n      } : {\n        x: width,\n        y: height\n      };\n    },\n\n    /*\n     * Calculate object dimensions for controls, including padding and canvas zoom.\n     * private\n     */\n    _calculateCurrentDimensions: function () {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          p = fabric.util.transformPoint(dim, vpt, true);\n\n      return p.scalarAdd(2 * this.padding);\n    }\n  });\n})();\n\nfabric.util.object.extend(fabric.Object.prototype,\n/** @lends fabric.Object.prototype */\n{\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function () {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    } else {\n      this.canvas.sendToBack(this);\n    }\n\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function () {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    } else {\n      this.canvas.bringToFront(this);\n    }\n\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function (intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    } else {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function (intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    } else {\n      this.canvas.bringForward(this, intersecting);\n    }\n\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function (index) {\n    if (this.group && this.group.type !== 'activeSelection') {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    } else {\n      this.canvas.moveTo(this, index);\n    }\n\n    return this;\n  }\n});\n/* _TO_SVG_START_ */\n\n(function () {\n  function getSvgColorString(prop, value) {\n    if (!value) {\n      return prop + ': none; ';\n    } else if (value.toLive) {\n      return prop + ': url(#SVGID_' + value.id + '); ';\n    } else {\n      var color = new fabric.Color(value),\n          str = prop + ': ' + color.toRgb() + '; ',\n          opacity = color.getAlpha();\n\n      if (opacity !== 1) {\n        //change the color in rgb + opacity\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\n      }\n\n      return str;\n    }\n  }\n\n  var toFixed = fabric.util.toFixed;\n  fabric.util.object.extend(fabric.Object.prototype,\n  /** @lends fabric.Object.prototype */\n  {\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function (skipShadow) {\n      var fillRule = this.fillRule ? this.fillRule : 'nonzero',\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n          strokeDashOffset = this.strokeDashOffset ? this.strokeDashOffset : '0',\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n          visibility = this.visible ? '' : ' visibility: hidden;',\n          filter = skipShadow ? '' : this.getSvgFilter(),\n          fill = getSvgColorString('fill', this.fill),\n          stroke = getSvgColorString('stroke', this.stroke);\n      return [stroke, 'stroke-width: ', strokeWidth, '; ', 'stroke-dasharray: ', strokeDashArray, '; ', 'stroke-linecap: ', strokeLineCap, '; ', 'stroke-dashoffset: ', strokeDashOffset, '; ', 'stroke-linejoin: ', strokeLineJoin, '; ', 'stroke-miterlimit: ', strokeMiterLimit, '; ', fill, 'fill-rule: ', fillRule, '; ', 'opacity: ', opacity, ';', filter, visibility].join('');\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\n     * @return {String}\n     */\n    getSvgSpanStyles: function (style, useWhiteSpace) {\n      var term = '; ';\n      var fontFamily = style.fontFamily ? 'font-family: ' + (style.fontFamily.indexOf('\\'') === -1 && style.fontFamily.indexOf('\"') === -1 ? '\\'' + style.fontFamily + '\\'' : style.fontFamily) + term : '';\n      var strokeWidth = style.strokeWidth ? 'stroke-width: ' + style.strokeWidth + term : '',\n          fontFamily = fontFamily,\n          fontSize = style.fontSize ? 'font-size: ' + style.fontSize + 'px' + term : '',\n          fontStyle = style.fontStyle ? 'font-style: ' + style.fontStyle + term : '',\n          fontWeight = style.fontWeight ? 'font-weight: ' + style.fontWeight + term : '',\n          fill = style.fill ? getSvgColorString('fill', style.fill) : '',\n          stroke = style.stroke ? getSvgColorString('stroke', style.stroke) : '',\n          textDecoration = this.getSvgTextDecoration(style),\n          deltaY = style.deltaY ? 'baseline-shift: ' + -style.deltaY + '; ' : '';\n\n      if (textDecoration) {\n        textDecoration = 'text-decoration: ' + textDecoration + term;\n      }\n\n      return [stroke, strokeWidth, fontFamily, fontSize, fontStyle, fontWeight, textDecoration, fill, deltaY, useWhiteSpace ? 'white-space: pre; ' : ''].join('');\n    },\n\n    /**\n     * Returns text-decoration property for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @return {String}\n     */\n    getSvgTextDecoration: function (style) {\n      if ('overline' in style || 'underline' in style || 'linethrough' in style) {\n        return (style.overline ? 'overline ' : '') + (style.underline ? 'underline ' : '') + (style.linethrough ? 'line-through ' : '');\n      }\n\n      return '';\n    },\n\n    /**\n     * Returns filter for svg shadow\n     * @return {String}\n     */\n    getSvgFilter: function () {\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n    },\n\n    /**\n     * Returns id attribute for svg output\n     * @return {String}\n     */\n    getSvgCommons: function () {\n      return [this.id ? 'id=\"' + this.id + '\" ' : '', this.clipPath ? 'clip-path=\"url(#' + this.clipPath.clipPathId + ')\" ' : ''].join('');\n    },\n\n    /**\n     * Returns transform-string for svg-export\n     * @param {Boolean} use the full transform or the single object one.\n     * @return {String}\n     */\n    getSvgTransform: function (full, additionalTransform) {\n      var transform = full ? this.calcTransformMatrix() : this.calcOwnMatrix(),\n          svgTransform = 'transform=\"' + fabric.util.matrixToSVG(transform);\n      return svgTransform + (additionalTransform || '') + this.getSvgTransformMatrix() + '\" ';\n    },\n\n    /**\n     * Returns transform-string for svg-export from the transform matrix of single elements\n     * @return {String}\n     */\n    getSvgTransformMatrix: function () {\n      return this.transformMatrix ? ' ' + fabric.util.matrixToSVG(this.transformMatrix) : '';\n    },\n    _setSVGBg: function (textBgRects) {\n      if (this.backgroundColor) {\n        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n        textBgRects.push('\\t\\t<rect ', this._getFillAttributes(this.backgroundColor), ' x=\"', toFixed(-this.width / 2, NUM_FRACTION_DIGITS), '\" y=\"', toFixed(-this.height / 2, NUM_FRACTION_DIGITS), '\" width=\"', toFixed(this.width, NUM_FRACTION_DIGITS), '\" height=\"', toFixed(this.height, NUM_FRACTION_DIGITS), '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function (reviver) {\n      return this._createBaseSVGMarkup(this._toSVG(reviver), {\n        reviver: reviver\n      });\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function (reviver) {\n      return '\\t' + this._createBaseClipPathSVGMarkup(this._toSVG(reviver), {\n        reviver: reviver\n      });\n    },\n\n    /**\n     * @private\n     */\n    _createBaseClipPathSVGMarkup: function (objectMarkup, options) {\n      options = options || {};\n      var reviver = options.reviver,\n          additionalTransform = options.additionalTransform || '',\n          commonPieces = [this.getSvgTransform(true, additionalTransform), this.getSvgCommons()].join(''),\n          // insert commons in the markup, style and svgCommons\n      index = objectMarkup.indexOf('COMMON_PARTS');\n      objectMarkup[index] = commonPieces;\n      return reviver ? reviver(objectMarkup.join('')) : objectMarkup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _createBaseSVGMarkup: function (objectMarkup, options) {\n      options = options || {};\n      var noStyle = options.noStyle,\n          reviver = options.reviver,\n          styleInfo = noStyle ? '' : 'style=\"' + this.getSvgStyles() + '\" ',\n          shadowInfo = options.withShadow ? 'style=\"' + this.getSvgFilter() + '\" ' : '',\n          clipPath = this.clipPath,\n          vectorEffect = this.strokeUniform ? 'vector-effect=\"non-scaling-stroke\" ' : '',\n          absoluteClipPath = clipPath && clipPath.absolutePositioned,\n          stroke = this.stroke,\n          fill = this.fill,\n          shadow = this.shadow,\n          commonPieces,\n          markup = [],\n          clipPathMarkup,\n          // insert commons in the markup, style and svgCommons\n      index = objectMarkup.indexOf('COMMON_PARTS'),\n          additionalTransform = options.additionalTransform;\n\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        clipPathMarkup = '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' + clipPath.toClipPathSVG(reviver) + '</clipPath>\\n';\n      }\n\n      if (absoluteClipPath) {\n        markup.push('<g ', shadowInfo, this.getSvgCommons(), ' >\\n');\n      }\n\n      markup.push('<g ', this.getSvgTransform(false), !absoluteClipPath ? shadowInfo + this.getSvgCommons() : '', ' >\\n');\n      commonPieces = [styleInfo, vectorEffect, noStyle ? '' : this.addPaintOrder(), ' ', additionalTransform ? 'transform=\"' + additionalTransform + '\" ' : ''].join('');\n      objectMarkup[index] = commonPieces;\n\n      if (fill && fill.toLive) {\n        markup.push(fill.toSVG(this));\n      }\n\n      if (stroke && stroke.toLive) {\n        markup.push(stroke.toSVG(this));\n      }\n\n      if (shadow) {\n        markup.push(shadow.toSVG(this));\n      }\n\n      if (clipPath) {\n        markup.push(clipPathMarkup);\n      }\n\n      markup.push(objectMarkup.join(''));\n      markup.push('</g>\\n');\n      absoluteClipPath && markup.push('</g>\\n');\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    addPaintOrder: function () {\n      return this.paintFirst !== 'fill' ? ' paint-order=\"' + this.paintFirst + '\" ' : '';\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function () {\n  var extend = fabric.util.object.extend,\n      originalSet = 'stateProperties';\n  /*\n    Depends on `stateProperties`\n  */\n\n  function saveProps(origin, destination, props) {\n    var tmpObj = {},\n        deep = true;\n    props.forEach(function (prop) {\n      tmpObj[prop] = origin[prop];\n    });\n    extend(origin[destination], tmpObj, deep);\n  }\n\n  function _isEqual(origValue, currentValue, firstPass) {\n    if (origValue === currentValue) {\n      // if the objects are identical, return\n      return true;\n    } else if (Array.isArray(origValue)) {\n      if (!Array.isArray(currentValue) || origValue.length !== currentValue.length) {\n        return false;\n      }\n\n      for (var i = 0, len = origValue.length; i < len; i++) {\n        if (!_isEqual(origValue[i], currentValue[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    } else if (origValue && typeof origValue === 'object') {\n      var keys = Object.keys(origValue),\n          key;\n\n      if (!currentValue || typeof currentValue !== 'object' || !firstPass && keys.length !== Object.keys(currentValue).length) {\n        return false;\n      }\n\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i]; // since clipPath is in the statefull cache list and the clipPath objects\n        // would be iterated as an object, this would lead to possible infinite recursion\n\n        if (key === 'canvas') {\n          continue;\n        }\n\n        if (!_isEqual(origValue[key], currentValue[key])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  fabric.util.object.extend(fabric.Object.prototype,\n  /** @lends fabric.Object.prototype */\n  {\n    /**\n     * Returns true if object state (one of its state properties) was changed\n     * @param {String} [propertySet] optional name for the set of property we want to save\n     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n     */\n    hasStateChanged: function (propertySet) {\n      propertySet = propertySet || originalSet;\n      var dashedPropertySet = '_' + propertySet;\n\n      if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\n        return true;\n      }\n\n      return !_isEqual(this[dashedPropertySet], this, true);\n    },\n\n    /**\n     * Saves state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    saveState: function (options) {\n      var propertySet = options && options.propertySet || originalSet,\n          destination = '_' + propertySet;\n\n      if (!this[destination]) {\n        return this.setupState(options);\n      }\n\n      saveProps(this, destination, this[propertySet]);\n\n      if (options && options.stateProperties) {\n        saveProps(this, destination, options.stateProperties);\n      }\n\n      return this;\n    },\n\n    /**\n     * Setups state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    setupState: function (options) {\n      options = options || {};\n      var propertySet = options.propertySet || originalSet;\n      options.propertySet = propertySet;\n      this['_' + propertySet] = {};\n      this.saveState(options);\n      return this;\n    }\n  });\n})();\n\n(function () {\n  var degreesToRadians = fabric.util.degreesToRadians;\n  fabric.util.object.extend(fabric.Object.prototype,\n  /** @lends fabric.Object.prototype */\n  {\n    /**\n     * The object interactivity controls.\n     * @private\n     */\n    _controlsVisibility: null,\n\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function (pointer) {\n      // objects in group, anykind, are not self modificable,\n      // must not return an hovered corner.\n      if (!this.hasControls || this.group || !this.canvas || this.canvas._activeObject !== this) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines;\n      this.__corner = 0;\n\n      for (var i in this.oCoords) {\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        if (i === 'mtr' && !this.hasRotatingPoint) {\n          continue;\n        }\n\n        if (this.get('lockUniScaling') && (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n          continue;\n        }\n\n        lines = this._getImageLines(this.oCoords[i].corner); // debugging\n        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({\n          x: ex,\n          y: ey\n        }, lines);\n\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * @private\n     */\n    _setCornerCoords: function () {\n      var coords = this.oCoords,\n          newTheta = degreesToRadians(45 - this.angle),\n\n      /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n\n      /* 0.707106 stands for sqrt(2)/2 */\n      cornerHypotenuse = this.cornerSize * 0.707106,\n          cosHalfOffset = cornerHypotenuse * fabric.util.cos(newTheta),\n          sinHalfOffset = cornerHypotenuse * fabric.util.sin(newTheta),\n          x,\n          y;\n\n      for (var point in coords) {\n        x = coords[point].x;\n        y = coords[point].y;\n        coords[point].corner = {\n          tl: {\n            x: x - sinHalfOffset,\n            y: y - cosHalfOffset\n          },\n          tr: {\n            x: x + cosHalfOffset,\n            y: y - sinHalfOffset\n          },\n          bl: {\n            x: x - cosHalfOffset,\n            y: y + sinHalfOffset\n          },\n          br: {\n            x: x + sinHalfOffset,\n            y: y + cosHalfOffset\n          }\n        };\n      }\n    },\n\n    /**\n     * Draws a colored layer behind the object, inside its selection borders.\n     * Requires public options: padding, selectionBackgroundColor\n     * this function is called when the context is transformed\n     * has checks to be skipped when the object is on a staticCanvas\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawSelectionBackground: function (ctx) {\n      if (!this.selectionBackgroundColor || this.canvas && !this.canvas.interactive || this.canvas && this.canvas._activeObject !== this) {\n        return this;\n      }\n\n      ctx.save();\n\n      var center = this.getCenterPoint(),\n          wh = this._calculateCurrentDimensions(),\n          vpt = this.canvas.viewportTransform;\n\n      ctx.translate(center.x, center.y);\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.fillStyle = this.selectionBackgroundColor;\n      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function (ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n\n      var wh = this._calculateCurrentDimensions(),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth,\n          drawRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ? styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          hasControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls,\n          rotatingPointOffset = typeof styleOverride.rotatingPointOffset !== 'undefined' ? styleOverride.rotatingPointOffset : this.rotatingPointOffset;\n\n      ctx.save();\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n\n      ctx.strokeRect(-width / 2, -height / 2, width, height);\n\n      if (drawRotatingPoint && this.isControlVisible('mtr') && hasControls) {\n        var rotateHeight = -height / 2;\n        ctx.beginPath();\n        ctx.moveTo(0, rotateHeight);\n        ctx.lineTo(0, rotateHeight - rotatingPointOffset);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box when it is inside a group.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {object} options object representing current object parameters\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBordersInGroup: function (ctx, options, styleOverride) {\n      styleOverride = styleOverride || {};\n\n      var p = this._getNonTransformedDimensions(),\n          matrix = fabric.util.composeMatrix({\n        scaleX: options.scaleX,\n        scaleY: options.scaleY,\n        skewX: options.skewX\n      }),\n          wh = fabric.util.transformPoint(p, matrix),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n      ctx.strokeRect(-width / 2, -height / 2, width, height);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function (ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n\n      var wh = this._calculateCurrentDimensions(),\n          width = wh.x,\n          height = wh.y,\n          scaleOffset = styleOverride.cornerSize || this.cornerSize,\n          left = -(width + scaleOffset) / 2,\n          top = -(height + scaleOffset) / 2,\n          transparentCorners = typeof styleOverride.transparentCorners !== 'undefined' ? styleOverride.transparentCorners : this.transparentCorners,\n          hasRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ? styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          methodName = transparentCorners ? 'stroke' : 'fill';\n\n      ctx.save();\n      ctx.strokeStyle = ctx.fillStyle = styleOverride.cornerColor || this.cornerColor;\n\n      if (!this.transparentCorners) {\n        ctx.strokeStyle = styleOverride.cornerStrokeColor || this.cornerStrokeColor;\n      }\n\n      this._setLineDash(ctx, styleOverride.cornerDashArray || this.cornerDashArray, null); // top-left\n\n\n      this._drawControl('tl', ctx, methodName, left, top, styleOverride); // top-right\n\n\n      this._drawControl('tr', ctx, methodName, left + width, top, styleOverride); // bottom-left\n\n\n      this._drawControl('bl', ctx, methodName, left, top + height, styleOverride); // bottom-right\n\n\n      this._drawControl('br', ctx, methodName, left + width, top + height, styleOverride);\n\n      if (!this.get('lockUniScaling')) {\n        // middle-top\n        this._drawControl('mt', ctx, methodName, left + width / 2, top, styleOverride); // middle-bottom\n\n\n        this._drawControl('mb', ctx, methodName, left + width / 2, top + height, styleOverride); // middle-right\n\n\n        this._drawControl('mr', ctx, methodName, left + width, top + height / 2, styleOverride); // middle-left\n\n\n        this._drawControl('ml', ctx, methodName, left, top + height / 2, styleOverride);\n      } // middle-top-rotate\n\n\n      if (hasRotatingPoint) {\n        this._drawControl('mtr', ctx, methodName, left + width / 2, top - this.rotatingPointOffset, styleOverride);\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _drawControl: function (control, ctx, methodName, left, top, styleOverride) {\n      styleOverride = styleOverride || {};\n\n      if (!this.isControlVisible(control)) {\n        return;\n      }\n\n      var size = this.cornerSize,\n          stroke = !this.transparentCorners && this.cornerStrokeColor;\n\n      switch (styleOverride.cornerStyle || this.cornerStyle) {\n        case 'circle':\n          ctx.beginPath();\n          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n          ctx[methodName]();\n\n          if (stroke) {\n            ctx.stroke();\n          }\n\n          break;\n\n        default:\n          this.transparentCorners || ctx.clearRect(left, top, size, size);\n          ctx[methodName + 'Rect'](left, top, size, size);\n\n          if (stroke) {\n            ctx.strokeRect(left, top, size, size);\n          }\n\n      }\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function (controlName) {\n      return this._getControlsVisibility()[controlName];\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function (controlName, visible) {\n      this._getControlsVisibility()[controlName] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function (options) {\n      options || (options = {});\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns the instance of the control visibility set for this object.\n     * @private\n     * @returns {Object}\n     */\n    _getControlsVisibility: function () {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {\n          tl: true,\n          tr: true,\n          br: true,\n          bl: true,\n          ml: true,\n          mt: true,\n          mr: true,\n          mb: true,\n          mtr: true\n        };\n      }\n\n      return this._controlsVisibility;\n    },\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to deselect this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onDeselect: function () {// implemented by sub-classes, as needed.\n    },\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to select this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onSelect: function () {// implemented by sub-classes, as needed.\n    }\n  });\n})();\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype,\n/** @lends fabric.StaticCanvas.prototype */\n{\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectH: function (object, callbacks) {\n    callbacks = callbacks || {};\n\n    var empty = function () {},\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.left,\n      endValue: this.getCenter().left,\n      duration: this.FX_DURATION,\n      onChange: function (value) {\n        object.set('left', value);\n\n        _this.requestRenderAll();\n\n        onChange();\n      },\n      onComplete: function () {\n        object.setCoords();\n        onComplete();\n      }\n    });\n    return this;\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectV: function (object, callbacks) {\n    callbacks = callbacks || {};\n\n    var empty = function () {},\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.top,\n      endValue: this.getCenter().top,\n      duration: this.FX_DURATION,\n      onChange: function (value) {\n        object.set('top', value);\n\n        _this.requestRenderAll();\n\n        onChange();\n      },\n      onComplete: function () {\n        object.setCoords();\n        onComplete();\n      }\n    });\n    return this;\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxRemove: function (object, callbacks) {\n    callbacks = callbacks || {};\n\n    var empty = function () {},\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.opacity,\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onChange: function (value) {\n        object.set('opacity', value);\n\n        _this.requestRenderAll();\n\n        onChange();\n      },\n      onComplete: function () {\n        _this.remove(object);\n\n        onComplete();\n      }\n    });\n    return this;\n  }\n});\nfabric.util.object.extend(fabric.Object.prototype,\n/** @lends fabric.Object.prototype */\n{\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @chainable\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string — one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function () {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [],\n          prop,\n          skipCallbacks;\n\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n\n        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n      }\n    } else {\n      this._animate.apply(this, arguments);\n    }\n\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function (property, to, options, skipCallbacks) {\n    var _this = this,\n        propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = {};\n    } else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var currentValue = propPair ? this.get(propPair[0])[propPair[1]] : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (~to.indexOf('=')) {\n      to = currentValue + parseFloat(to.replace('=', ''));\n    } else {\n      to = parseFloat(to);\n    }\n\n    fabric.util.animate({\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function () {\n        return options.abort.call(_this);\n      },\n      onChange: function (value, valueProgress, timeProgress) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        } else {\n          _this.set(property, value);\n        }\n\n        if (skipCallbacks) {\n          return;\n        }\n\n        options.onChange && options.onChange(value, valueProgress, timeProgress);\n      },\n      onComplete: function (value, valueProgress, timeProgress) {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n\n        options.onComplete && options.onComplete(value, valueProgress, timeProgress);\n      }\n    });\n  }\n});\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      coordProps = {\n    x1: 1,\n    x2: 1,\n    y1: 1,\n    y2: 1\n  },\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n\n\n  fabric.Line = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Line.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('x1', 'x2', 'y1', 'y2'),\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function (points, options) {\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function (options) {\n      options || (options = {});\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n      this.left = 'left' in options ? options.left : this._getLeftToOriginX();\n      this.top = 'top' in options ? options.top : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     */\n    _set: function (key, value) {\n      this.callSuper('_set', key, value);\n\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter({\n      // property names\n      origin: 'originX',\n      axis1: 'x1',\n      axis2: 'x2',\n      dimension: 'width'\n    }, {\n      // possible values of origin\n      nearest: 'left',\n      center: 'center',\n      farthest: 'right'\n    }),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter({\n      // property names\n      origin: 'originY',\n      axis1: 'y1',\n      axis2: 'y2',\n      dimension: 'height'\n    }, {\n      // possible values of origin\n      nearest: 'top',\n      center: 'center',\n      farthest: 'bottom'\n    }),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function (ctx) {\n      ctx.beginPath();\n\n      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n        // move from center (of virtual box) to its left/top corner\n        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n        var p = this.calcLinePoints();\n        ctx.moveTo(p.x1, p.y1);\n        ctx.lineTo(p.x2, p.y2);\n      }\n\n      ctx.lineWidth = this.strokeWidth; // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function (ctx) {\n      var p = this.calcLinePoints();\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function () {\n      return {\n        x: (this.x1 + this.x2) / 2,\n        y: (this.y1 + this.y2) / 2\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @methd toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function () {\n      var dim = this.callSuper('_getNonTransformedDimensions');\n\n      if (this.strokeLineCap === 'butt') {\n        if (this.width === 0) {\n          dim.y -= this.strokeWidth;\n        }\n\n        if (this.height === 0) {\n          dim.x -= this.strokeWidth;\n        }\n      }\n\n      return dim;\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function () {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = xMult * this.width * 0.5,\n          y1 = yMult * this.height * 0.5,\n          x2 = xMult * this.width * -0.5,\n          y2 = yMult * this.height * -0.5;\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function () {\n      var p = this.calcLinePoints();\n      return ['<line ', 'COMMON_PARTS', 'x1=\"', p.x1, '\" y1=\"', p.y1, '\" x2=\"', p.x2, '\" y2=\"', p.y2, '\" />\\n'];\n    }\n    /* _TO_SVG_END_ */\n\n  });\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] callback function invoked after parsing\n   */\n\n  fabric.Line.fromElement = function (element, callback, options) {\n    options = options || {};\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [parsedAttributes.x1 || 0, parsedAttributes.y1 || 0, parsedAttributes.x2 || 0, parsedAttributes.y2 || 0];\n    callback(new fabric.Line(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n\n\n  fabric.Line.fromObject = function (object, callback) {\n    function _callback(instance) {\n      delete instance.points;\n      callback && callback(instance);\n    }\n\n    ;\n    var options = clone(object, true);\n    options.points = [object.x1, object.y1, object.x2, object.y2];\n\n    fabric.Object._fromObject('Line', options, _callback, 'points');\n  };\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n\n\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n    return function () {\n      switch (this.get(origin)) {\n        case nearest:\n          return Math.min(this.get(axis1), this.get(axis2));\n\n        case center:\n          return Math.min(this.get(axis1), this.get(axis2)) + 0.5 * this.get(dimension);\n\n        case farthest:\n          return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n  }\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      pi = Math.PI;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n\n\n  fabric.Circle = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Circle.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * Start angle of the circle, moving clockwise\n     * deprectated type, this should be in degree, this was an oversight.\n     * probably will change to degrees in next major version\n     * @type Number\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * deprectated type, this should be in degree, this was an oversight.\n     * probably will change to degrees in next major version\n     * @type Number\n     * @default 2Pi\n     */\n    endAngle: pi * 2,\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('radius', 'startAngle', 'endAngle'),\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function (key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function () {\n      var svgString,\n          x = 0,\n          y = 0,\n          angle = (this.endAngle - this.startAngle) % (2 * pi);\n\n      if (angle === 0) {\n        svgString = ['<circle ', 'COMMON_PARTS', 'cx=\"' + x + '\" cy=\"' + y + '\" ', 'r=\"', this.radius, '\" />\\n'];\n      } else {\n        var startX = fabric.util.cos(this.startAngle) * this.radius,\n            startY = fabric.util.sin(this.startAngle) * this.radius,\n            endX = fabric.util.cos(this.endAngle) * this.radius,\n            endY = fabric.util.sin(this.endAngle) * this.radius,\n            largeFlag = angle > pi ? '1' : '0';\n        svgString = ['<path d=\"M ' + startX + ' ' + startY, ' A ' + this.radius + ' ' + this.radius, ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY, '\" ', 'COMMON_PARTS', ' />\\n'];\n      }\n\n      return svgString;\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function (ctx) {\n      ctx.beginPath();\n      ctx.arc(0, 0, this.radius, this.startAngle, this.endAngle, false);\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function () {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function () {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function (value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    }\n  });\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @param {Object} [options] Options object\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   */\n\n  fabric.Circle.fromElement = function (element, callback) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.radius;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.radius;\n    callback(new fabric.Circle(parsedAttributes));\n  };\n  /**\n   * @private\n   */\n\n\n  function isValidRadius(attributes) {\n    return 'radius' in attributes && attributes.radius >= 0;\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {Object} Instance of fabric.Circle\n   */\n\n\n  fabric.Circle.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Circle', object, callback);\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n\n\n  fabric.Triangle = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Triangle.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Width is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    width: 100,\n\n    /**\n     * Height is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    height: 100,\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function (ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function (ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function () {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [-widthBy2 + ' ' + heightBy2, '0 ' + -heightBy2, widthBy2 + ' ' + heightBy2].join(',');\n      return ['<polygon ', 'COMMON_PARTS', 'points=\"', points, '\" />'];\n    }\n    /* _TO_SVG_END_ */\n\n  });\n  /**\n   * Returns {@link fabric.Triangle} instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n\n  fabric.Triangle.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Triangle', object, callback);\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      piBy2 = Math.PI * 2;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n\n\n  fabric.Ellipse = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Ellipse.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx: 0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry: 0,\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function (options) {\n      this.callSuper('initialize', options);\n      this.set('rx', options && options.rx || 0);\n      this.set('ry', options && options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function (key, value) {\n      this.callSuper('_set', key, value);\n\n      switch (key) {\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function () {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function () {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function () {\n      return ['<ellipse ', 'COMMON_PARTS', 'cx=\"0\" cy=\"0\" ', 'rx=\"', this.rx, '\" ry=\"', this.ry, '\" />\\n'];\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function (ctx) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n      ctx.arc(0, 0, this.rx, 0, piBy2, false);\n      ctx.restore();\n\n      this._renderPaintInOrder(ctx);\n    }\n  });\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @return {fabric.Ellipse}\n   */\n\n  fabric.Ellipse.fromElement = function (element, callback) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\n    callback(new fabric.Ellipse(parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {fabric.Ellipse}\n   */\n\n\n  fabric.Ellipse.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Ellipse', object, callback);\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n\n\n  fabric.Rect = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Rect.prototype */\n  {\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('rx', 'ry'),\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx: 0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry: 0,\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function (options) {\n      this.callSuper('initialize', options);\n\n      this._initRxRy();\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function () {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      } else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function (ctx) {\n      // 1x1 case (used in spray brush) optimization was removed because\n      // with caching and higher zoom level this makes more damage than help\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = -this.width / 2,\n          y = -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n\n      /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n      k = 1 - 0.5522847498;\n      ctx.beginPath();\n      ctx.moveTo(x + rx, y);\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function (ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function () {\n      var x = -this.width / 2,\n          y = -this.height / 2;\n      return ['<rect ', 'COMMON_PARTS', 'x=\"', x, '\" y=\"', y, '\" rx=\"', this.rx, '\" ry=\"', this.ry, '\" width=\"', this.width, '\" height=\"', this.height, '\" />\\n'];\n    }\n    /* _TO_SVG_END_ */\n\n  });\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n\n  fabric.Rect.fromElement = function (element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    options = options || {};\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top = parsedAttributes.top || 0;\n    parsedAttributes.height = parsedAttributes.height || 0;\n    parsedAttributes.width = parsedAttributes.width || 0;\n    var rect = new fabric.Rect(extend(options ? fabric.util.object.clone(options) : {}, parsedAttributes));\n    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n    callback(rect);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n   */\n\n\n  fabric.Rect.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Rect', object, callback);\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n\n\n  fabric.Polyline = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Polyline.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('points'),\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function (points, options) {\n      options = options || {};\n      this.points = points || [];\n      this.callSuper('initialize', options);\n\n      this._setPositionDimensions(options);\n    },\n    _setPositionDimensions: function (options) {\n      var calcDim = this._calcDimensions(options),\n          correctLeftTop;\n\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n\n      if (!options.fromSVG) {\n        correctLeftTop = this.translateToGivenOrigin({\n          x: calcDim.left - this.strokeWidth / 2,\n          y: calcDim.top - this.strokeWidth / 2\n        }, 'left', 'top', this.originX, this.originY);\n      }\n\n      if (typeof options.left === 'undefined') {\n        this.left = options.fromSVG ? calcDim.left : correctLeftTop.x;\n      }\n\n      if (typeof options.top === 'undefined') {\n        this.top = options.fromSVG ? calcDim.top : correctLeftTop.y;\n      }\n\n      this.pathOffset = {\n        x: calcDim.left + this.width / 2,\n        y: calcDim.top + this.height / 2\n      };\n    },\n\n    /**\n     * Calculate the polygon min and max point from points array,\n     * returning an object with left, top, widht, height to measure the\n     * polygon size\n     * @return {Object} object.left X coordinate of the polygon leftmost point\n     * @return {Object} object.top Y coordinate of the polygon topmost point\n     * @return {Object} object.width distance between X coordinates of the polygon leftmost and rightmost point\n     * @return {Object} object.height distance between Y coordinates of the polygon topmost and bottommost point\n     * @private\n     */\n    _calcDimensions: function () {\n      var points = this.points,\n          minX = min(points, 'x') || 0,\n          minY = min(points, 'y') || 0,\n          maxX = max(points, 'x') || 0,\n          maxY = max(points, 'y') || 0,\n          width = maxX - minX,\n          height = maxY - minY;\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function () {\n      var points = [],\n          diffX = this.pathOffset.x,\n          diffY = this.pathOffset.y,\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',', toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' ');\n      }\n\n      return ['<' + this.type + ' ', 'COMMON_PARTS', 'points=\"', points.join(''), '\" />\\n'];\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    commonRender: function (ctx) {\n      var point,\n          len = this.points.length,\n          x = this.pathOffset.x,\n          y = this.pathOffset.y;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n\n      ctx.beginPath();\n      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x - x, point.y - y);\n      }\n\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function (ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function (ctx) {\n      var p1, p2;\n      ctx.beginPath();\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        p1 = this.points[i];\n        p2 = this.points[i + 1] || p1;\n        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function () {\n      return this.get('points').length;\n    }\n  });\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parser\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n\n  fabric.Polyline.fromElementGenerator = function (_class) {\n    return function (element, callback, options) {\n      if (!element) {\n        return callback(null);\n      }\n\n      options || (options = {});\n      var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n          parsedAttributes = fabric.parseAttributes(element, fabric[_class].ATTRIBUTE_NAMES);\n      parsedAttributes.fromSVG = true;\n      callback(new fabric[_class](points, extend(parsedAttributes, options)));\n    };\n  };\n\n  fabric.Polyline.fromElement = fabric.Polyline.fromElementGenerator('Polyline');\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n\n  fabric.Polyline.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Polyline', object, callback, 'points');\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Polyline\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n\n\n  fabric.Polygon = fabric.util.createClass(fabric.Polyline,\n  /** @lends fabric.Polygon.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function (ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function (ctx) {\n      this.callSuper('_renderDashedStroke', ctx);\n      ctx.closePath();\n    }\n  });\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n\n  fabric.Polygon.fromElement = fabric.Polyline.fromElementGenerator('Polygon');\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n\n  fabric.Polygon.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Polygon', object, callback, 'points');\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      _toString = Object.prototype.toString,\n      drawArc = fabric.util.drawArc,\n      toFixed = fabric.util.toFixed,\n      commandLengths = {\n    m: 2,\n    l: 2,\n    h: 1,\n    v: 1,\n    c: 6,\n    s: 4,\n    q: 4,\n    t: 2,\n    a: 7\n  },\n      repeatedCommands = {\n    m: 'l',\n    M: 'L'\n  };\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n\n\n  fabric.Path = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Path.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('path', 'fillRule'),\n    stateProperties: fabric.Object.prototype.stateProperties.concat('path'),\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function (path, options) {\n      options = options || {};\n      this.callSuper('initialize', options);\n\n      if (!path) {\n        path = [];\n      }\n\n      var fromArray = _toString.call(path) === '[object Array]';\n      this.path = fromArray ? path // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n      : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n      if (!this.path) {\n        return;\n      }\n\n      if (!fromArray) {\n        this.path = this._parsePath();\n      }\n\n      fabric.Polyline.prototype._setPositionDimensions.call(this, options);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _renderPathCommands: function (ctx) {\n      var current,\n          // current instruction\n      previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0,\n          // current x\n      y = 0,\n          // current y\n      controlX = 0,\n          // current control point x\n      controlY = 0,\n          // current control point y\n      tempX,\n          tempY,\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n        current = this.path[i];\n\n        switch (current[0]) {\n          // first letter\n          case 'l':\n            // lineto, relative\n            x += current[1];\n            y += current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'L':\n            // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'h':\n            // horizontal lineto, relative\n            x += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'H':\n            // horizontal lineto, absolute\n            x = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'v':\n            // vertical lineto, relative\n            y += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'V':\n            // verical lineto, absolute\n            y = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'm':\n            // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'M':\n            // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'c':\n            // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            ctx.bezierCurveTo(x + current[1] + l, // x1\n            y + current[2] + t, // y1\n            controlX + l, // x2\n            controlY + t, // y2\n            tempX + l, tempY + t);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C':\n            // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(current[1] + l, current[2] + t, controlX + l, controlY + t, x + l, y + t);\n            break;\n\n          case 's':\n            // shorthand cubic bezierCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(controlX + l, controlY + t, x + current[1] + l, y + current[2] + t, tempX + l, tempY + t); // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S':\n            // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(controlX + l, controlY + t, current[1] + l, current[2] + t, tempX + l, tempY + t);\n            x = tempX;\n            y = tempY; // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q':\n            // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            ctx.quadraticCurveTo(controlX + l, controlY + t, tempX + l, tempY + t);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q':\n            // quadraticCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            ctx.quadraticCurveTo(current[1] + l, current[2] + t, tempX + l, tempY + t);\n            x = tempX;\n            y = tempY;\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 't':\n            // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(controlX + l, controlY + t, tempX + l, tempY + t);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(controlX + l, controlY + t, tempX + l, tempY + t);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [current[1], current[2], current[3], current[4], current[5], current[6] + x + l, current[7] + y + t]);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [current[1], current[2], current[3], current[4], current[5], current[6] + l, current[7] + t]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n\n        previous = current;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function (ctx) {\n      this._renderPathCommands(ctx);\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Path (' + this.complexity() + '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        path: this.path.map(function (item) {\n          return item.slice();\n        })\n      });\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      var o = this.toObject(['sourcePath'].concat(propertiesToInclude));\n\n      if (o.sourcePath) {\n        delete o.path;\n      }\n\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function () {\n      var path = this.path.map(function (path) {\n        return path.join(' ');\n      }).join(' ');\n      return ['<path ', 'COMMON_PARTS', 'd=\"', path, '\" stroke-linecap=\"round\" ', '/>\\n'];\n    },\n    _getOffsetTransform: function () {\n      var digits = fabric.Object.NUM_FRACTION_DIGITS;\n      return ' translate(' + toFixed(-this.pathOffset.x, digits) + ', ' + toFixed(-this.pathOffset.y, digits) + ')';\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function (reviver) {\n      var additionalTransform = this._getOffsetTransform();\n\n      return '\\t' + this._createBaseClipPathSVGMarkup(this._toSVG(), {\n        reviver: reviver,\n        additionalTransform: additionalTransform\n      });\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function (reviver) {\n      var additionalTransform = this._getOffsetTransform();\n\n      return this._createBaseSVGMarkup(this._toSVG(), {\n        reviver: reviver,\n        additionalTransform: additionalTransform\n      });\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function () {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _parsePath: function () {\n      var result = [],\n          coords = [],\n          currentPath,\n          parsed,\n          re = fabric.rePathCommand,\n          match,\n          coordsStr;\n\n      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n        currentPath = this.path[i];\n        coordsStr = currentPath.slice(1).trim();\n        coords.length = 0;\n\n        while (match = re.exec(coordsStr)) {\n          coords.push(match[0]);\n        }\n\n        coordsParsed = [currentPath.charAt(0)];\n\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          parsed = parseFloat(coords[j]);\n\n          if (!isNaN(parsed)) {\n            coordsParsed.push(parsed);\n          }\n        }\n\n        var command = coordsParsed[0],\n            commandLength = commandLengths[command.toLowerCase()],\n            repeatedCommand = repeatedCommands[command] || command;\n\n        if (coordsParsed.length - 1 > commandLength) {\n          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n            command = repeatedCommand;\n          }\n        } else {\n          result.push(coordsParsed);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _calcDimensions: function () {\n      var aX = [],\n          aY = [],\n          current,\n          // current instruction\n      previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0,\n          // current x\n      y = 0,\n          // current y\n      controlX = 0,\n          // current control point x\n      controlY = 0,\n          // current control point y\n      tempX,\n          tempY,\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n        current = this.path[i];\n\n        switch (current[0]) {\n          // first letter\n          case 'l':\n            // lineto, relative\n            x += current[1];\n            y += current[2];\n            bounds = [];\n            break;\n\n          case 'L':\n            // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [];\n            break;\n\n          case 'h':\n            // horizontal lineto, relative\n            x += current[1];\n            bounds = [];\n            break;\n\n          case 'H':\n            // horizontal lineto, absolute\n            x = current[1];\n            bounds = [];\n            break;\n\n          case 'v':\n            // vertical lineto, relative\n            y += current[1];\n            bounds = [];\n            break;\n\n          case 'V':\n            // verical lineto, absolute\n            y = current[1];\n            bounds = [];\n            break;\n\n          case 'm':\n            // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'M':\n            // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'c':\n            // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y, x + current[1], // x1\n            y + current[2], // y1\n            controlX, // x2\n            controlY, // y2\n            tempX, tempY);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C':\n            // bezierCurveTo, absolute\n            controlX = current[3];\n            controlY = current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y, current[1], current[2], controlX, controlY, current[5], current[6]);\n            x = current[5];\n            y = current[6];\n            break;\n\n          case 's':\n            // shorthand cubic bezierCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, x + current[1], y + current[2], tempX, tempY); // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S':\n            // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, current[1], current[2], tempX, tempY);\n            x = tempX;\n            y = tempY; // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q':\n            // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, controlX, controlY, tempX, tempY);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q':\n            // quadraticCurveTo, absolute\n            controlX = current[1];\n            controlY = current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, controlX, controlY, current[3], current[4]);\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 't':\n            // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, controlX, controlY, tempX, tempY);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, controlX, controlY, tempX, tempY);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y, current[1], current[2], current[3], current[4], current[5], current[6] + x, current[7] + y);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y, current[1], current[2], current[3], current[4], current[5], current[6], current[7]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n\n        previous = current;\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY;\n      return {\n        left: minX,\n        top: minY,\n        width: deltaX,\n        height: deltaY\n      };\n    }\n  });\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n\n  fabric.Path.fromObject = function (object, callback) {\n    if (typeof object.sourcePath === 'string') {\n      var pathUrl = object.sourcePath;\n      fabric.loadSVGFromURL(pathUrl, function (elements) {\n        var path = elements[0];\n        path.setOptions(object);\n        callback && callback(path);\n      });\n    } else {\n      fabric.Object._fromObject('Path', object, callback, 'path');\n    }\n  };\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n\n\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   */\n\n  fabric.Path.fromElement = function (element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    parsedAttributes.fromSVG = true;\n    callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max;\n\n  if (fabric.Group) {\n    return;\n  }\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n\n\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection,\n  /** @lends fabric.Group.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Indicates if click, mouseover, mouseout events & hoverCursor should also check for subtargets\n     * @type Boolean\n     * @default\n     */\n    subTargetCheck: false,\n\n    /**\n     * Groups are container, do not render anything on theyr own, ence no cache properties\n     * @type Array\n     * @default\n     */\n    cacheProperties: [],\n\n    /**\n     * setOnGroup is a method used for TextBox that is no more used since 2.0.0 The behavior is still\n     * available setting this boolean to true.\n     * @type Boolean\n     * @since 2.0.0\n     * @default\n     */\n    useSetOnGroup: false,\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function (objects, options, isAlreadyGrouped) {\n      options = options || {};\n      this._objects = []; // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n\n      isAlreadyGrouped && this.callSuper('initialize', options);\n      this._objects = objects || [];\n\n      for (var i = this._objects.length; i--;) {\n        this._objects[i].group = this;\n      }\n\n      if (!isAlreadyGrouped) {\n        var center = options && options.centerPoint; // we want to set origins before calculating the bounding box.\n        // so that the topleft can be set with that in mind.\n        // if specific top and left are passed, are overwritten later\n        // with the callSuper('initialize', options)\n\n        if (options.originX !== undefined) {\n          this.originX = options.originX;\n        }\n\n        if (options.originY !== undefined) {\n          this.originY = options.originY;\n        } // if coming from svg i do not want to calc bounds.\n        // i assume width and height are passed along options\n\n\n        center || this._calcBounds();\n\n        this._updateObjectsCoords(center);\n\n        delete options.centerPoint;\n        this.callSuper('initialize', options);\n      } else {\n        this._updateObjectsACoords();\n      }\n\n      this.setCoords();\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsACoords: function () {\n      var ignoreZoom = true,\n          skipAbsolute = true;\n\n      for (var i = this._objects.length; i--;) {\n        this._objects[i].setCoords(ignoreZoom, skipAbsolute);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function (center) {\n      var center = center || this.getCenterPoint();\n\n      for (var i = this._objects.length; i--;) {\n        this._updateObjectCoords(this._objects[i], center);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {fabric.Point} center, current center of group.\n     */\n    _updateObjectCoords: function (object, center) {\n      var objectLeft = object.left,\n          objectTop = object.top,\n          ignoreZoom = true,\n          skipAbsolute = true;\n      object.set({\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.group = this;\n      object.setCoords(ignoreZoom, skipAbsolute);\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function () {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function (object) {\n      this._restoreObjectsState();\n\n      fabric.util.resetObjectTransform(this);\n\n      if (object) {\n        this._objects.push(object);\n\n        object.group = this;\n\n        object._set('canvas', this.canvas);\n      }\n\n      this._calcBounds();\n\n      this._updateObjectsCoords();\n\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function (object) {\n      this._restoreObjectsState();\n\n      fabric.util.resetObjectTransform(this);\n      this.remove(object);\n\n      this._calcBounds();\n\n      this._updateObjectsCoords();\n\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function (object) {\n      this.dirty = true;\n      object.group = this;\n\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function (object) {\n      this.dirty = true;\n      delete object.group;\n    },\n\n    /**\n     * @private\n     */\n    _set: function (key, value) {\n      var i = this._objects.length;\n\n      if (this.useSetOnGroup) {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n\n      if (key === 'canvas') {\n        while (i--) {\n          this._objects[i]._set(key, value);\n        }\n      }\n\n      fabric.Object.prototype._set.call(this, key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      var _includeDefaultValues = this.includeDefaultValues;\n\n      var objsToObject = this._objects.map(function (obj) {\n        var originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = _includeDefaultValues;\n\n        var _obj = obj.toObject(propertiesToInclude);\n\n        obj.includeDefaultValues = originalDefaults;\n        return _obj;\n      });\n\n      var obj = fabric.Object.prototype.toObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Returns object representation of an instance, in dataless mode.\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      var objsToObject,\n          sourcePath = this.sourcePath;\n\n      if (sourcePath) {\n        objsToObject = sourcePath;\n      } else {\n        var _includeDefaultValues = this.includeDefaultValues;\n        objsToObject = this._objects.map(function (obj) {\n          var originalDefaults = obj.includeDefaultValues;\n          obj.includeDefaultValues = _includeDefaultValues;\n\n          var _obj = obj.toDatalessObject(propertiesToInclude);\n\n          obj.includeDefaultValues = originalDefaults;\n          return _obj;\n        });\n      }\n\n      var obj = fabric.Object.prototype.toDatalessObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function (ctx) {\n      this._transformDone = true;\n      this.callSuper('render', ctx);\n      this._transformDone = false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group is already cached.\n     * @return {Boolean}\n     */\n    shouldCache: function () {\n      var ownCache = fabric.Object.prototype.shouldCache.call(this);\n\n      if (ownCache) {\n        for (var i = 0, len = this._objects.length; i < len; i++) {\n          if (this._objects[i].willDrawShadow()) {\n            this.ownCaching = false;\n            return false;\n          }\n        }\n      }\n\n      return ownCache;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function () {\n      if (this.shadow) {\n        return fabric.Object.prototype.willDrawShadow.call(this);\n      }\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function () {\n      return this.ownCaching || this.group && this.group.isOnACache();\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function (ctx) {\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i].render(ctx);\n      }\n\n      this._drawClipPath(ctx);\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function (skipCanvas) {\n      if (this.callSuper('isCacheDirty', skipCanvas)) {\n        return true;\n      }\n\n      if (!this.statefullCache) {\n        return false;\n      }\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].isCacheDirty(true)) {\n          if (this._cacheCanvas) {\n            // if this group has not a cache canvas there is nothing to clean\n            var x = this.cacheWidth / this.zoomX,\n                y = this.cacheHeight / this.zoomY;\n\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n          }\n\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Retores original state of each of group objects (original state is that which was before group was created).\n     * @private\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function () {\n      this._objects.forEach(this._restoreObjectState, this);\n\n      return this;\n    },\n\n    /**\n     * Realises the transform from this group onto the supplied object\n     * i.e. it tells you what would happen if the supplied object was in\n     * the group, and then the group was destroyed. It mutates the supplied\n     * object.\n     * @param {fabric.Object} object\n     * @return {fabric.Object} transformedObject\n     */\n    realizeTransform: function (object) {\n      var matrix = object.calcTransformMatrix(),\n          options = fabric.util.qrDecompose(matrix),\n          center = new fabric.Point(options.translateX, options.translateY);\n      object.flipX = false;\n      object.flipY = false;\n      object.set('scaleX', options.scaleX);\n      object.set('scaleY', options.scaleY);\n      object.skewX = options.skewX;\n      object.skewY = options.skewY;\n      object.angle = options.angle;\n      object.setPositionByOrigin(center, 'center', 'center');\n      return object;\n    },\n\n    /**\n     * Restores original state of a specified object in group\n     * @private\n     * @param {fabric.Object} object\n     * @return {fabric.Group} thisArg\n     */\n    _restoreObjectState: function (object) {\n      this.realizeTransform(object);\n      object.setCoords();\n      delete object.group;\n      return this;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function () {\n      // when group is destroyed objects needs to get a repaint to be eventually\n      // displayed on canvas.\n      this._objects.forEach(function (object) {\n        object.set('dirty', true);\n      });\n\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * make a group an active selection, remove the group from canvas\n     * the group has to be on canvas for this to work.\n     * @return {fabric.ActiveSelection} thisArg\n     * @chainable\n     */\n    toActiveSelection: function () {\n      if (!this.canvas) {\n        return;\n      }\n\n      var objects = this._objects,\n          canvas = this.canvas;\n      this._objects = [];\n      var options = this.toObject();\n      delete options.objects;\n      var activeSelection = new fabric.ActiveSelection([]);\n      activeSelection.set(options);\n      activeSelection.type = 'activeSelection';\n      canvas.remove(this);\n      objects.forEach(function (object) {\n        object.group = activeSelection;\n        object.dirty = true;\n        canvas.add(object);\n      });\n      activeSelection.canvas = canvas;\n      activeSelection._objects = objects;\n      canvas._activeObject = activeSelection;\n      activeSelection.setCoords();\n      return activeSelection;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    ungroupOnCanvas: function () {\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Sets coordinates of all objects inside group\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function () {\n      var ignoreZoom = true,\n          skipAbsolute = true;\n      this.forEachObject(function (object) {\n        object.setCoords(ignoreZoom, skipAbsolute);\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function (onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o,\n          prop,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0,\n          iLen = this._objects.length,\n          j,\n          jLen = props.length,\n          ignoreZoom = true;\n\n      for (; i < iLen; ++i) {\n        o = this._objects[i];\n        o.setCoords(ignoreZoom);\n\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(o.oCoords[prop].x);\n          aY.push(o.oCoords[prop].y);\n        }\n      }\n\n      this._getBounds(aX, aY, onlyWidthHeight);\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function (aX, aY, onlyWidthHeight) {\n      var minXY = new fabric.Point(min(aX), min(aY)),\n          maxXY = new fabric.Point(max(aX), max(aY)),\n          top = minXY.y || 0,\n          left = minXY.x || 0,\n          width = maxXY.x - minXY.x || 0,\n          height = maxXY.y - minXY.y || 0;\n      this.width = width;\n      this.height = height;\n\n      if (!onlyWidthHeight) {\n        // the bounding box always finds the topleft most corner.\n        // whatever is the group origin, we set up here the left/top position.\n        this.setPositionByOrigin({\n          x: left,\n          y: top\n        }, 'left', 'top');\n      }\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    _toSVG: function (reviver) {\n      var svgString = ['<g ', 'COMMON_PARTS', ' >\\n'];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t\\t', this._objects[i].toSVG(reviver));\n      }\n\n      svgString.push('</g>\\n');\n      return svgString;\n    },\n\n    /**\n     * Returns styles-string for svg-export, specific version for group\n     * @return {String}\n     */\n    getSvgStyles: function () {\n      var opacity = typeof this.opacity !== 'undefined' && this.opacity !== 1 ? 'opacity: ' + this.opacity + ';' : '',\n          visibility = this.visible ? '' : ' visibility: hidden;';\n      return [opacity, this.getSvgFilter(), visibility].join('');\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function (reviver) {\n      var svgString = [];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t', this._objects[i].toClipPathSVG(reviver));\n      }\n\n      return this._createBaseClipPathSVGMarkup(svgString, {\n        reviver: reviver\n      });\n    }\n    /* _TO_SVG_END_ */\n\n  });\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   */\n\n  fabric.Group.fromObject = function (object, callback) {\n    var objects = object.objects,\n        options = fabric.util.object.clone(object, true);\n    delete options.objects;\n\n    if (typeof objects === 'string') {\n      // it has to be an url or something went wrong.\n      fabric.loadSVGFromURL(objects, function (elements) {\n        var group = fabric.util.groupSVGElements(elements, object, objects);\n        group.set(options);\n        callback && callback(group);\n      });\n      return;\n    }\n\n    fabric.util.enlivenObjects(objects, function (enlivenedObjects) {\n      fabric.util.enlivenObjects([object.clipPath], function (enlivedClipPath) {\n        var options = fabric.util.object.clone(object, true);\n        options.clipPath = enlivedClipPath[0];\n        delete options.objects;\n        callback && callback(new fabric.Group(enlivenedObjects, options, true));\n      });\n    });\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  if (fabric.ActiveSelection) {\n    return;\n  }\n  /**\n   * Group class\n   * @class fabric.ActiveSelection\n   * @extends fabric.Group\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.ActiveSelection#initialize} for constructor definition\n   */\n\n\n  fabric.ActiveSelection = fabric.util.createClass(fabric.Group,\n  /** @lends fabric.ActiveSelection.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'activeSelection',\n\n    /**\n     * Constructor\n     * @param {Object} objects ActiveSelection objects\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function (objects, options) {\n      options = options || {};\n      this._objects = objects || [];\n\n      for (var i = this._objects.length; i--;) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n\n      this._calcBounds();\n\n      this._updateObjectsCoords();\n\n      fabric.Object.prototype.initialize.call(this, options);\n      this.setCoords();\n    },\n\n    /**\n     * Change te activeSelection to a normal group,\n     * High level function that automatically adds it to canvas as\n     * active object. no events fired.\n     * @since 2.0.0\n     * @return {fabric.Group}\n     */\n    toGroup: function () {\n      var objects = this._objects.concat();\n\n      this._objects = [];\n      var options = fabric.Object.prototype.toObject.call(this);\n      var newGroup = new fabric.Group([]);\n      delete options.type;\n      newGroup.set(options);\n      objects.forEach(function (object) {\n        object.canvas.remove(object);\n        object.group = newGroup;\n      });\n      newGroup._objects = objects;\n\n      if (!this.canvas) {\n        return newGroup;\n      }\n\n      var canvas = this.canvas;\n      canvas.add(newGroup);\n      canvas._activeObject = newGroup;\n      newGroup.setCoords();\n      return newGroup;\n    },\n\n    /**\n     * If returns true, deselection is cancelled.\n     * @since 2.0.0\n     * @return {Boolean} [cancel]\n     */\n    onDeselect: function () {\n      this.destroy();\n      return false;\n    },\n\n    /**\n     * Returns string representation of a group\n     * @return {String}\n     */\n    toString: function () {\n      return '#<fabric.ActiveSelection: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function () {\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function () {\n      return false;\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     * @param {Object} [childrenOverride] properties to override the children overrides\n     */\n    _renderControls: function (ctx, styleOverride, childrenOverride) {\n      ctx.save();\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      this.callSuper('_renderControls', ctx, styleOverride);\n      childrenOverride = childrenOverride || {};\n\n      if (typeof childrenOverride.hasControls === 'undefined') {\n        childrenOverride.hasControls = false;\n      }\n\n      if (typeof childrenOverride.hasRotatingPoint === 'undefined') {\n        childrenOverride.hasRotatingPoint = false;\n      }\n\n      childrenOverride.forActiveSelection = true;\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx, childrenOverride);\n      }\n\n      ctx.restore();\n    }\n  });\n  /**\n   * Returns {@link fabric.ActiveSelection} instance from an object representation\n   * @static\n   * @memberOf fabric.ActiveSelection\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an ActiveSelection instance is created\n   */\n\n  fabric.ActiveSelection.fromObject = function (object, callback) {\n    fabric.util.enlivenObjects(object.objects, function (enlivenedObjects) {\n      delete object.objects;\n      callback && callback(new fabric.ActiveSelection(enlivenedObjects, object, true));\n    });\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = {};\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n\n\n  fabric.Image = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Image.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * Width of a stroke.\n     * For image quality a stroke multiple of 2 gives better results.\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * When calling {@link fabric.Image.getSrc}, return value from element src with `element.getAttribute('src')`.\n     * This allows for relative urls as image src.\n     * @since 2.7.0\n     * @type Boolean\n     * @default\n     */\n    srcFromAttribute: false,\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingX: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingY: 1,\n\n    /**\n     * minimum scale factor under which any resizeFilter is triggered to resize the image\n     * 0 will disable the automatic resize. 1 will trigger automatically always.\n     * number bigger than 1 are not implemented yet.\n     * @type Number\n     */\n    minimumScaleTrigger: 0.5,\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('cropX', 'cropY'),\n\n    /**\n     * key used to retrieve the texture representing this image\n     * @since 2.0.0\n     * @type String\n     * @default\n     */\n    cacheKey: '',\n\n    /**\n     * Image crop in pixels from original image size.\n     * @since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropX: 0,\n\n    /**\n     * Image crop in pixels from original image size.\n     * @since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropY: 0,\n\n    /**\n     * Constructor\n     * @param {HTMLImageElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @param {function} [callback] callback function to call after eventual filters applied.\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function (element, options) {\n      options || (options = {});\n      this.filters = [];\n      this.cacheKey = 'texture' + fabric.Object.__uid++;\n      this.callSuper('initialize', options);\n\n      this._initElement(element, options);\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function () {\n      return this._element || {};\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function (element, options) {\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._element = element;\n      this._originalElement = element;\n\n      this._initConfig(options);\n\n      if (this.filters.length !== 0) {\n        this.applyFilters();\n      } // resizeFilters work on the already filtered copy.\n      // we need to apply resizeFilters AFTER normal filters.\n      // applyResizeFilters is run more often than normal fiters\n      // and is triggered by user interactions rather than dev code\n\n\n      if (this.resizeFilter) {\n        this.applyResizeFilters();\n      }\n\n      return this;\n    },\n\n    /**\n     * Delete a single texture if in webgl mode\n     */\n    removeTexture: function (key) {\n      var backend = fabric.filterBackend;\n\n      if (backend && backend.evictCachesForKey) {\n        backend.evictCachesForKey(key);\n      }\n    },\n\n    /**\n     * Delete textures, reference to elements and eventually JSDOM cleanup\n     */\n    dispose: function () {\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._cacheContext = undefined;\n      ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'].forEach(function (element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }.bind(this));\n    },\n\n    /**\n     * Sets crossOrigin value (on an instance and corresponding image element)\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setCrossOrigin: function (value) {\n      this.crossOrigin = value;\n      this._element.crossOrigin = value;\n      return this;\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function () {\n      var element = this.getElement();\n      return {\n        width: element.naturalWidth || element.width,\n        height: element.naturalHeight || element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function (ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      var w = this.width / 2,\n          h = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-w, -h);\n      ctx.lineTo(w, -h);\n      ctx.lineTo(w, h);\n      ctx.lineTo(-w, h);\n      ctx.lineTo(-w, -h);\n      ctx.closePath();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function (ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n      ctx.save();\n\n      this._setStrokeStyles(ctx, this);\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      var filters = [];\n      this.filters.forEach(function (filterObj) {\n        if (filterObj) {\n          filters.push(filterObj.toObject());\n        }\n      });\n      var object = extend(this.callSuper('toObject', ['crossOrigin', 'cropX', 'cropY'].concat(propertiesToInclude)), {\n        src: this.getSrc(),\n        filters: filters\n      });\n\n      if (this.resizeFilter) {\n        object.resizeFilter = this.resizeFilter.toObject();\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,hight.\n     * @return {Boolean}\n     */\n    hasCrop: function () {\n      return this.cropX || this.cropY || this.width < this._element.width || this.height < this._element.height;\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function () {\n      var svgString = [],\n          imageMarkup = [],\n          strokeSvg,\n          x = -this.width / 2,\n          y = -this.height / 2,\n          clipPath = '';\n\n      if (this.hasCrop()) {\n        var clipPathId = fabric.Object.__uid++;\n        svgString.push('<clipPath id=\"imageCrop_' + clipPathId + '\">\\n', '\\t<rect x=\"' + x + '\" y=\"' + y + '\" width=\"' + this.width + '\" height=\"' + this.height + '\" />\\n', '</clipPath>\\n');\n        clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\n      }\n\n      imageMarkup.push('\\t<image ', 'COMMON_PARTS', 'xlink:href=\"', this.getSvgSrc(true), '\" x=\"', x - this.cropX, '\" y=\"', y - this.cropY, // we're essentially moving origin of transformation from top/left corner to the center of the shape\n      // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n      // so that object's center aligns with container's left/top\n      '\" width=\"', this._element.width || this._element.naturalWidth, '\" height=\"', this._element.height || this._element.height, '\"', clipPath, '></image>\\n');\n\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        strokeSvg = ['\\t<rect ', 'x=\"', x, '\" y=\"', y, '\" width=\"', this.width, '\" height=\"', this.height, '\" style=\"', this.getSvgStyles(), '\"/>\\n'];\n        this.fill = origFill;\n      }\n\n      if (this.paintFirst !== 'fill') {\n        svgString = svgString.concat(strokeSvg, imageMarkup);\n      } else {\n        svgString = svgString.concat(imageMarkup, strokeSvg);\n      }\n\n      return svgString;\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @param {Boolean} filtered indicates if the src is needed for svg\n     * @return {String} Source of an image\n     */\n    getSrc: function (filtered) {\n      var element = filtered ? this._element : this._originalElement;\n\n      if (element) {\n        if (element.toDataURL) {\n          return element.toDataURL();\n        }\n\n        if (this.srcFromAttribute) {\n          return element.getAttribute('src');\n        } else {\n          return element.src;\n        }\n      } else {\n        return this.src || '';\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function (src, callback, options) {\n      fabric.util.loadImage(src, function (img) {\n        this.setElement(img, options);\n\n        this._setWidthHeight();\n\n        callback && callback(this);\n      }, this, options && options.crossOrigin);\n      return this;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n    applyResizeFilters: function () {\n      var filter = this.resizeFilter,\n          minimumScale = this.minimumScaleTrigger,\n          objectScale = this.getTotalObjectScaling(),\n          scaleX = objectScale.scaleX,\n          scaleY = objectScale.scaleY,\n          elementToFilter = this._filteredEl || this._originalElement;\n\n      if (this.group) {\n        this.set('dirty', true);\n      }\n\n      if (!filter || scaleX > minimumScale && scaleY > minimumScale) {\n        this._element = elementToFilter;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        this._lastScaleX = scaleX;\n        this._lastScaleY = scaleY;\n        return;\n      }\n\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n\n      var canvasEl = fabric.util.createCanvasElement(),\n          cacheKey = this._filteredEl ? this.cacheKey + '_filtered' : this.cacheKey,\n          sourceWidth = elementToFilter.width,\n          sourceHeight = elementToFilter.height;\n      canvasEl.width = sourceWidth;\n      canvasEl.height = sourceHeight;\n      this._element = canvasEl;\n      this._lastScaleX = filter.scaleX = scaleX;\n      this._lastScaleY = filter.scaleY = scaleY;\n      fabric.filterBackend.applyFilters([filter], elementToFilter, sourceWidth, sourceHeight, this._element, cacheKey);\n      this._filterScalingX = canvasEl.width / this._originalElement.width;\n      this._filterScalingY = canvasEl.height / this._originalElement.height;\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array) or from filter param\n     * @method applyFilters\n     * @param {Array} filters to be applied\n     * @param {Boolean} forResizing specify if the filter operation is a resize operation\n     * @return {thisArg} return the fabric.Image object\n     * @chainable\n     */\n    applyFilters: function (filters) {\n      filters = filters || this.filters || [];\n      filters = filters.filter(function (filter) {\n        return filter && !filter.isNeutralState();\n      });\n      this.set('dirty', true); // needs to clear out or WEBGL will not resize correctly\n\n      this.removeTexture(this.cacheKey + '_filtered');\n\n      if (filters.length === 0) {\n        this._element = this._originalElement;\n        this._filteredEl = null;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        return this;\n      }\n\n      var imgElement = this._originalElement,\n          sourceWidth = imgElement.naturalWidth || imgElement.width,\n          sourceHeight = imgElement.naturalHeight || imgElement.height;\n\n      if (this._element === this._originalElement) {\n        // if the element is the same we need to create a new element\n        var canvasEl = fabric.util.createCanvasElement();\n        canvasEl.width = sourceWidth;\n        canvasEl.height = sourceHeight;\n        this._element = canvasEl;\n        this._filteredEl = canvasEl;\n      } else {\n        // clear the existing element to get new filter data\n        // also dereference the eventual resized _element\n        this._element = this._filteredEl;\n\n        this._filteredEl.getContext('2d').clearRect(0, 0, sourceWidth, sourceHeight); // we also need to resize again at next renderAll, so remove saved _lastScaleX/Y\n\n\n        this._lastScaleX = 1;\n        this._lastScaleY = 1;\n      }\n\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n\n      fabric.filterBackend.applyFilters(filters, this._originalElement, sourceWidth, sourceHeight, this._element, this.cacheKey);\n\n      if (this._originalElement.width !== this._element.width || this._originalElement.height !== this._element.height) {\n        this._filterScalingX = this._element.width / this._originalElement.width;\n        this._filterScalingY = this._element.height / this._originalElement.height;\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function (ctx) {\n      if (this.isMoving !== true && this.resizeFilter && this._needsResize()) {\n        this.applyResizeFilters();\n      }\n\n      this._stroke(ctx);\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * This is the special image version where we would like to avoid caching where possible.\n     * Essentially images do not benefit from caching. They may require caching, and in that\n     * case we do it. Also caching an image usually ends in a loss of details.\n     * A full performance audit should be done.\n     * @return {Boolean}\n     */\n    shouldCache: function () {\n      return this.needsItsOwnCache();\n    },\n    _renderFill: function (ctx) {\n      var elementToDraw = this._element,\n          w = this.width,\n          h = this.height,\n          sW = Math.min(elementToDraw.naturalWidth || elementToDraw.width, w * this._filterScalingX),\n          sH = Math.min(elementToDraw.naturalHeight || elementToDraw.height, h * this._filterScalingY),\n          x = -w / 2,\n          y = -h / 2,\n          sX = Math.max(0, this.cropX * this._filterScalingX),\n          sY = Math.max(0, this.cropY * this._filterScalingY);\n      elementToDraw && ctx.drawImage(elementToDraw, sX, sY, sW, sH, x, y, w, h);\n    },\n\n    /**\n     * needed to check if image needs resize\n     * @private\n     */\n    _needsResize: function () {\n      var scale = this.getTotalObjectScaling();\n      return scale.scaleX !== this._lastScaleX || scale.scaleY !== this._lastScaleY;\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function () {\n      this.set(this.getOriginalSize());\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function (element, options) {\n      this.setElement(fabric.util.getById(element), options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function (options) {\n      options || (options = {});\n      this.setOptions(options);\n\n      this._setWidthHeight(options);\n\n      if (this._element && this.crossOrigin) {\n        this._element.crossOrigin = this.crossOrigin;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function (filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function (enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      } else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * Set the width and the height of the image object, using the element or the\n     * options.\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function (options) {\n      options || (options = {});\n      var el = this.getElement();\n      this.width = options.width || el.naturalWidth || el.width || 0;\n      this.height = options.height || el.naturalHeight || el.height || 0;\n    },\n\n    /**\n     * Calculate offset for center and scale factor for the image in order to respect\n     * the preserveAspectRatio attribute\n     * @private\n     * @return {Object}\n     */\n    parsePreserveAspectRatioAttribute: function () {\n      var pAR = fabric.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || ''),\n          rWidth = this._element.width,\n          rHeight = this._element.height,\n          scaleX = 1,\n          scaleY = 1,\n          offsetLeft = 0,\n          offsetTop = 0,\n          cropX = 0,\n          cropY = 0,\n          offset,\n          pWidth = this.width,\n          pHeight = this.height,\n          parsedAttributes = {\n        width: pWidth,\n        height: pHeight\n      };\n\n      if (pAR && (pAR.alignX !== 'none' || pAR.alignY !== 'none')) {\n        if (pAR.meetOrSlice === 'meet') {\n          scaleX = scaleY = fabric.util.findScaleToFit(this._element, parsedAttributes);\n          offset = (pWidth - rWidth * scaleX) / 2;\n\n          if (pAR.alignX === 'Min') {\n            offsetLeft = -offset;\n          }\n\n          if (pAR.alignX === 'Max') {\n            offsetLeft = offset;\n          }\n\n          offset = (pHeight - rHeight * scaleY) / 2;\n\n          if (pAR.alignY === 'Min') {\n            offsetTop = -offset;\n          }\n\n          if (pAR.alignY === 'Max') {\n            offsetTop = offset;\n          }\n        }\n\n        if (pAR.meetOrSlice === 'slice') {\n          scaleX = scaleY = fabric.util.findScaleToCover(this._element, parsedAttributes);\n          offset = rWidth - pWidth / scaleX;\n\n          if (pAR.alignX === 'Mid') {\n            cropX = offset / 2;\n          }\n\n          if (pAR.alignX === 'Max') {\n            cropX = offset;\n          }\n\n          offset = rHeight - pHeight / scaleY;\n\n          if (pAR.alignY === 'Mid') {\n            cropY = offset / 2;\n          }\n\n          if (pAR.alignY === 'Max') {\n            cropY = offset;\n          }\n\n          rWidth = pWidth / scaleX;\n          rHeight = pHeight / scaleY;\n        }\n      } else {\n        scaleX = pWidth / rWidth;\n        scaleY = pHeight / rHeight;\n      }\n\n      return {\n        width: rWidth,\n        height: rHeight,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        offsetLeft: offsetLeft,\n        offsetTop: offsetTop,\n        cropX: cropX,\n        cropY: cropY\n      };\n    }\n  });\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n  /**\n   * Alias for getSrc\n   * @static\n   */\n\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an image instance is created\n   */\n\n  fabric.Image.fromObject = function (_object, callback) {\n    var object = fabric.util.object.clone(_object);\n    fabric.util.loadImage(object.src, function (img, error) {\n      if (error) {\n        callback && callback(null, error);\n        return;\n      }\n\n      fabric.Image.prototype._initFilters.call(object, object.filters, function (filters) {\n        object.filters = filters || [];\n\n        fabric.Image.prototype._initFilters.call(object, [object.resizeFilter], function (resizeFilters) {\n          object.resizeFilter = resizeFilters[0];\n          fabric.util.enlivenObjects([object.clipPath], function (enlivedProps) {\n            object.clipPath = enlivedProps[0];\n            var image = new fabric.Image(img, object);\n            callback(image);\n          });\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n   * @param {Object} [imgOptions] Options object\n   */\n\n\n  fabric.Image.fromURL = function (url, callback, imgOptions) {\n    fabric.util.loadImage(url, function (img) {\n      callback && callback(new fabric.Image(img, imgOptions));\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n\n\n  fabric.Image.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href crossOrigin'.split(' '));\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n\n  fabric.Image.fromElement = function (element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES);\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback, extend(options ? fabric.util.object.clone(options) : {}, parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\nfabric.util.object.extend(fabric.Object.prototype,\n/** @lends fabric.Object.prototype */\n{\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function () {\n    var angle = this.angle % 360;\n\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function () {\n    this.rotate(this._getAngleValueForStraighten());\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  fxStraighten: function (callbacks) {\n    callbacks = callbacks || {};\n\n    var empty = function () {},\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function (value) {\n        _this.rotate(value);\n\n        onChange();\n      },\n      onComplete: function () {\n        _this.setCoords();\n\n        onComplete();\n      }\n    });\n    return this;\n  }\n});\nfabric.util.object.extend(fabric.StaticCanvas.prototype,\n/** @lends fabric.StaticCanvas.prototype */\n{\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function (object) {\n    object.straighten();\n    this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxStraightenObject: function (object) {\n    object.fxStraighten({\n      onChange: this.requestRenderAllBound\n    });\n    return this;\n  }\n});\n\n(function () {\n  'use strict';\n  /**\n   * Tests if webgl supports certain precision\n   * @param {WebGL} Canvas WebGL context to test on\n   * @param {String} Precision to test can be any of following: 'lowp', 'mediump', 'highp'\n   * @returns {Boolean} Whether the user's browser WebGL supports given precision.\n   */\n\n  function testPrecision(gl, precision) {\n    var fragmentSource = 'precision ' + precision + ' float;\\nvoid main(){}';\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * Indicate whether this filtering backend is supported by the user's browser.\n   * @param {Number} tileSize check if the tileSize is supported\n   * @returns {Boolean} Whether the user's browser supports WebGL.\n   */\n\n\n  fabric.isWebglSupported = function (tileSize) {\n    if (fabric.isLikelyNode) {\n      return false;\n    }\n\n    tileSize = tileSize || fabric.WebglFilterBackend.prototype.tileSize;\n    var canvas = document.createElement('canvas');\n    var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n    var isSupported = false; // eslint-disable-next-line\n\n    if (gl) {\n      fabric.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      isSupported = fabric.maxTextureSize >= tileSize;\n      var precisions = ['highp', 'mediump', 'lowp'];\n\n      for (var i = 0; i < 3; i++) {\n        if (testPrecision(gl, precisions[i])) {\n          fabric.webGlPrecision = precisions[i];\n          break;\n        }\n\n        ;\n      }\n    }\n\n    this.isSupported = isSupported;\n    return isSupported;\n  };\n\n  fabric.WebglFilterBackend = WebglFilterBackend;\n  /**\n   * WebGL filter backend.\n   */\n\n  function WebglFilterBackend(options) {\n    if (options && options.tileSize) {\n      this.tileSize = options.tileSize;\n    }\n\n    this.setupGLContext(this.tileSize, this.tileSize);\n    this.captureGPUInfo();\n  }\n\n  ;\n  WebglFilterBackend.prototype =\n  /** @lends fabric.WebglFilterBackend.prototype */\n  {\n    tileSize: 2048,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you problably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {},\n\n    /**\n     * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\n     */\n    setupGLContext: function (width, height) {\n      this.dispose();\n      this.createWebGLCanvas(width, height); // eslint-disable-next-line\n\n      this.aPosition = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\n      this.chooseFastestCopyGLTo2DMethod(width, height);\n    },\n\n    /**\n     * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\n     * putImageData is faster than drawImage for that specific operation.\n     */\n    chooseFastestCopyGLTo2DMethod: function (width, height) {\n      var canMeasurePerf = typeof window.performance !== 'undefined',\n          canUseImageData;\n\n      try {\n        new ImageData(1, 1);\n        canUseImageData = true;\n      } catch (e) {\n        canUseImageData = false;\n      } // eslint-disable-next-line no-undef\n\n\n      var canUseArrayBuffer = typeof ArrayBuffer !== 'undefined'; // eslint-disable-next-line no-undef\n\n      var canUseUint8Clamped = typeof Uint8ClampedArray !== 'undefined';\n\n      if (!(canMeasurePerf && canUseImageData && canUseArrayBuffer && canUseUint8Clamped)) {\n        return;\n      }\n\n      var targetCanvas = fabric.util.createCanvasElement(); // eslint-disable-next-line no-undef\n\n      var imageBuffer = new ArrayBuffer(width * height * 4);\n\n      if (fabric.forceGLPutImageData) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n        return;\n      }\n\n      var testContext = {\n        imageBuffer: imageBuffer,\n        destinationWidth: width,\n        destinationHeight: height,\n        targetCanvas: targetCanvas\n      };\n      var startTime, drawImageTime, putImageDataTime;\n      targetCanvas.width = width;\n      targetCanvas.height = height;\n      startTime = window.performance.now();\n      copyGLTo2DDrawImage.call(testContext, this.gl, testContext);\n      drawImageTime = window.performance.now() - startTime;\n      startTime = window.performance.now();\n      copyGLTo2DPutImageData.call(testContext, this.gl, testContext);\n      putImageDataTime = window.performance.now() - startTime;\n\n      if (drawImageTime > putImageDataTime) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n      } else {\n        this.copyGLTo2D = copyGLTo2DDrawImage;\n      }\n    },\n\n    /**\n     * Create a canvas element and associated WebGL context and attaches them as\n     * class properties to the GLFilterBackend class.\n     */\n    createWebGLCanvas: function (width, height) {\n      var canvas = fabric.util.createCanvasElement();\n      canvas.width = width;\n      canvas.height = height;\n      var glOptions = {\n        alpha: true,\n        premultipliedAlpha: false,\n        depth: false,\n        stencil: false,\n        antialias: false\n      },\n          gl = canvas.getContext('webgl', glOptions);\n\n      if (!gl) {\n        gl = canvas.getContext('experimental-webgl', glOptions);\n      }\n\n      if (!gl) {\n        return;\n      }\n\n      gl.clearColor(0, 0, 0, 0); // this canvas can fire webglcontextlost and webglcontextrestored\n\n      this.canvas = canvas;\n      this.gl = gl;\n    },\n\n    /**\n     * Attempts to apply the requested filters to the source provided, drawing the filtered output\n     * to the provided target canvas.\n     *\n     * @param {Array} filters The filters to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} source The source to be filtered.\n     * @param {Number} width The width of the source input.\n     * @param {Number} height The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\n     * omitted, caching will be skipped.\n     */\n    applyFilters: function (filters, source, width, height, targetCanvas, cacheKey) {\n      var gl = this.gl;\n      var cachedTexture;\n\n      if (cacheKey) {\n        cachedTexture = this.getCachedTexture(cacheKey, source);\n      }\n\n      var pipelineState = {\n        originalWidth: source.width || source.originalWidth,\n        originalHeight: source.height || source.originalHeight,\n        sourceWidth: width,\n        sourceHeight: height,\n        destinationWidth: width,\n        destinationHeight: height,\n        context: gl,\n        sourceTexture: this.createTexture(gl, width, height, !cachedTexture && source),\n        targetTexture: this.createTexture(gl, width, height),\n        originalTexture: cachedTexture || this.createTexture(gl, width, height, !cachedTexture && source),\n        passes: filters.length,\n        webgl: true,\n        aPosition: this.aPosition,\n        programCache: this.programCache,\n        pass: 0,\n        filterBackend: this,\n        targetCanvas: targetCanvas\n      };\n      var tempFbo = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\n      filters.forEach(function (filter) {\n        filter && filter.applyTo(pipelineState);\n      });\n      resizeCanvasIfNeeded(pipelineState);\n      this.copyGLTo2D(gl, pipelineState);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n      gl.deleteTexture(pipelineState.sourceTexture);\n      gl.deleteTexture(pipelineState.targetTexture);\n      gl.deleteFramebuffer(tempFbo);\n      targetCanvas.getContext('2d').setTransform(1, 0, 0, 1, 0, 0);\n      return pipelineState;\n    },\n\n    /**\n     * Detach event listeners, remove references, and clean up caches.\n     */\n    dispose: function () {\n      if (this.canvas) {\n        this.canvas = null;\n        this.gl = null;\n      }\n\n      this.clearWebGLCaches();\n    },\n\n    /**\n     * Wipe out WebGL-related caches.\n     */\n    clearWebGLCaches: function () {\n      this.programCache = {};\n      this.textureCache = {};\n    },\n\n    /**\n     * Create a WebGL texture object.\n     *\n     * Accepts specific dimensions to initialize the textuer to or a source image.\n     *\n     * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\n     * @param {Number} width The width to initialize the texture at.\n     * @param {Number} height The height to initialize the texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source for the texture data.\n     * @returns {WebGLTexture}\n     */\n    createTexture: function (gl, width, height, textureImageSource) {\n      var texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      if (textureImageSource) {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, textureImageSource);\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n\n      return texture;\n    },\n\n    /**\n     * Can be optionally used to get a texture from the cache array\n     *\n     * If an existing texture is not found, a new texture is created and cached.\n     *\n     * @param {String} uniqueId A cache key to use to find an existing texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\n     * texture cache entry if one does not already exist.\n     */\n    getCachedTexture: function (uniqueId, textureImageSource) {\n      if (this.textureCache[uniqueId]) {\n        return this.textureCache[uniqueId];\n      } else {\n        var texture = this.createTexture(this.gl, textureImageSource.width, textureImageSource.height, textureImageSource);\n        this.textureCache[uniqueId] = texture;\n        return texture;\n      }\n    },\n\n    /**\n     * Clear out cached resources related to a source image that has been\n     * filtered previously.\n     *\n     * @param {String} cacheKey The cache key provided when the source image was filtered.\n     */\n    evictCachesForKey: function (cacheKey) {\n      if (this.textureCache[cacheKey]) {\n        this.gl.deleteTexture(this.textureCache[cacheKey]);\n        delete this.textureCache[cacheKey];\n      }\n    },\n    copyGLTo2D: copyGLTo2DDrawImage,\n\n    /**\n     * Attempt to extract GPU information strings from a WebGL context.\n     *\n     * Useful information when debugging or blacklisting specific GPUs.\n     *\n     * @returns {Object} A GPU info object with renderer and vendor strings.\n     */\n    captureGPUInfo: function () {\n      if (this.gpuInfo) {\n        return this.gpuInfo;\n      }\n\n      var gl = this.gl,\n          gpuInfo = {\n        renderer: '',\n        vendor: ''\n      };\n\n      if (!gl) {\n        return gpuInfo;\n      }\n\n      var ext = gl.getExtension('WEBGL_debug_renderer_info');\n\n      if (ext) {\n        var renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\n        var vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\n\n        if (renderer) {\n          gpuInfo.renderer = renderer.toLowerCase();\n        }\n\n        if (vendor) {\n          gpuInfo.vendor = vendor.toLowerCase();\n        }\n      }\n\n      this.gpuInfo = gpuInfo;\n      return gpuInfo;\n    }\n  };\n})();\n\nfunction resizeCanvasIfNeeded(pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas,\n      width = targetCanvas.width,\n      height = targetCanvas.height,\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight;\n\n  if (width !== dWidth || height !== dHeight) {\n    targetCanvas.width = dWidth;\n    targetCanvas.height = dHeight;\n  }\n}\n/**\n * Copy an input WebGL canvas on to an output 2D canvas.\n *\n * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\n * desired output image appearing in the bottom-left corner of the WebGL canvas.\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\n\n\nfunction copyGLTo2DDrawImage(gl, pipelineState) {\n  var glCanvas = gl.canvas,\n      targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d');\n  ctx.translate(0, targetCanvas.height); // move it down again\n\n  ctx.scale(1, -1); // vertical flip\n  // where is my image on the big glcanvas?\n\n  var sourceY = glCanvas.height - targetCanvas.height;\n  ctx.drawImage(glCanvas, 0, sourceY, targetCanvas.width, targetCanvas.height, 0, 0, targetCanvas.width, targetCanvas.height);\n}\n/**\n * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\n * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\n\n\nfunction copyGLTo2DPutImageData(gl, pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d'),\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight,\n      numBytes = dWidth * dHeight * 4; // eslint-disable-next-line no-undef\n\n  var u8 = new Uint8Array(this.imageBuffer, 0, numBytes); // eslint-disable-next-line no-undef\n\n  var u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\n  gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\n  var imgData = new ImageData(u8Clamped, dWidth, dHeight);\n  ctx.putImageData(imgData, 0, 0);\n}\n\n(function () {\n  'use strict';\n\n  var noop = function () {};\n\n  fabric.Canvas2dFilterBackend = Canvas2dFilterBackend;\n  /**\n   * Canvas 2D filter backend.\n   */\n\n  function Canvas2dFilterBackend() {}\n\n  ;\n  Canvas2dFilterBackend.prototype =\n  /** @lends fabric.Canvas2dFilterBackend.prototype */\n  {\n    evictCachesForKey: noop,\n    dispose: noop,\n    clearWebGLCaches: noop,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you probably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {},\n\n    /**\n     * Apply a set of filters against a source image and draw the filtered output\n     * to the provided destination canvas.\n     *\n     * @param {EnhancedFilter} filters The filter to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\n     * @param {Number} sourceWidth The width of the source input.\n     * @param {Number} sourceHeight The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     */\n    applyFilters: function (filters, sourceElement, sourceWidth, sourceHeight, targetCanvas) {\n      var ctx = targetCanvas.getContext('2d');\n      ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\n      var imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var pipelineState = {\n        sourceWidth: sourceWidth,\n        sourceHeight: sourceHeight,\n        imageData: imageData,\n        originalEl: sourceElement,\n        originalImageData: originalImageData,\n        canvasEl: targetCanvas,\n        ctx: ctx,\n        filterBackend: this\n      };\n      filters.forEach(function (filter) {\n        filter.applyTo(pipelineState);\n      });\n\n      if (pipelineState.imageData.width !== sourceWidth || pipelineState.imageData.height !== sourceHeight) {\n        targetCanvas.width = pipelineState.imageData.width;\n        targetCanvas.height = pipelineState.imageData.height;\n      }\n\n      ctx.putImageData(pipelineState.imageData, 0, 0);\n      return pipelineState;\n    }\n  };\n})();\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n */\n\n\nfabric.Image = fabric.Image || {};\nfabric.Image.filters = fabric.Image.filters || {};\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\n\nfabric.Image.filters.BaseFilter = fabric.util.createClass(\n/** @lends fabric.Image.filters.BaseFilter.prototype */\n{\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Array of attributes to send with buffers. do not modify\n   * @private\n   */\n  vertexSource: 'attribute vec2 aPosition;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vTexCoord = aPosition;\\n' + 'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' + '}',\n  fragmentSource: 'precision highp float;\\n' + 'varying vec2 vTexCoord;\\n' + 'uniform sampler2D uTexture;\\n' + 'void main() {\\n' + 'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' + '}',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function (options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function (options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Compile this filter's shader program.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\n   * @param {String} fragmentSource fragmentShader source for compilation\n   * @param {String} vertexSource vertexShader source for compilation\n   */\n  createProgram: function (gl, fragmentSource, vertexSource) {\n    fragmentSource = fragmentSource || this.fragmentSource;\n    vertexSource = vertexSource || this.vertexSource;\n\n    if (fabric.webGlPrecision !== 'highp') {\n      fragmentSource = fragmentSource.replace(/precision highp float/g, 'precision ' + fabric.webGlPrecision + ' float');\n    }\n\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, vertexSource);\n    gl.compileShader(vertexShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      throw new Error( // eslint-disable-next-line prefer-template\n      'Vertex shader compile error for ' + this.type + ': ' + gl.getShaderInfoLog(vertexShader));\n    }\n\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      throw new Error( // eslint-disable-next-line prefer-template\n      'Fragment shader compile error for ' + this.type + ': ' + gl.getShaderInfoLog(fragmentShader));\n    }\n\n    var program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error( // eslint-disable-next-line prefer-template\n      'Shader link error for \"${this.type}\" ' + gl.getProgramInfoLog(program));\n    }\n\n    var attributeLocations = this.getAttributeLocations(gl, program);\n    var uniformLocations = this.getUniformLocations(gl, program) || {};\n    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\n    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\n    return {\n      program: program,\n      attributeLocations: attributeLocations,\n      uniformLocations: uniformLocations\n    };\n  },\n\n  /**\n   * Return a map of attribute names to WebGLAttributeLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\n   * @returns {Object} A map of attribute names to attribute locations.\n   */\n  getAttributeLocations: function (gl, program) {\n    return {\n      aPosition: gl.getAttribLocation(program, 'aPosition')\n    };\n  },\n\n  /**\n   * Return a map of uniform names to WebGLUniformLocation objects.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\n   * @returns {Object} A map of uniform names to uniform locations.\n   */\n  getUniformLocations: function ()\n  /* gl, program */\n  {\n    // in case i do not need any special uniform i need to return an empty object\n    return {};\n  },\n\n  /**\n   * Send attribute data from this filter to its shader program on the GPU.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} attributeLocations A map of shader attribute names to their locations.\n   */\n  sendAttributeData: function (gl, attributeLocations, aPositionData) {\n    var attributeLocation = attributeLocations.aPosition;\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.enableVertexAttribArray(attributeLocation);\n    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\n  },\n  _setupFrameBuffer: function (options) {\n    var gl = options.context,\n        width,\n        height;\n\n    if (options.passes > 1) {\n      width = options.destinationWidth;\n      height = options.destinationHeight;\n\n      if (options.sourceWidth !== width || options.sourceHeight !== height) {\n        gl.deleteTexture(options.targetTexture);\n        options.targetTexture = options.filterBackend.createTexture(gl, width, height);\n      }\n\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, options.targetTexture, 0);\n    } else {\n      // draw last filter on canvas and not to framebuffer.\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.finish();\n    }\n  },\n  _swapTextures: function (options) {\n    options.passes--;\n    options.pass++;\n    var temp = options.targetTexture;\n    options.targetTexture = options.sourceTexture;\n    options.sourceTexture = temp;\n  },\n\n  /**\n   * Generic isNeutral implementation for one parameter based filters.\n   * Used only in image applyFilters to discard filters that will not have an effect\n   * on the image\n   * Other filters may need their own verison ( ColorMatrix, HueRotation, gamma, ComposedFilter )\n   * @param {Object} options\n   **/\n  isNeutralState: function ()\n  /* options */\n  {\n    var main = this.mainParameter,\n        _class = fabric.Image.filters[this.type].prototype;\n\n    if (main) {\n      if (Array.isArray(_class[main])) {\n        for (var i = _class[main].length; i--;) {\n          if (this[main][i] !== _class[main][i]) {\n            return false;\n          }\n        }\n\n        return true;\n      } else {\n        return _class[main] === this[main];\n      }\n    } else {\n      return false;\n    }\n  },\n\n  /**\n   * Apply this filter to the input image data provided.\n   *\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo: function (options) {\n    if (options.webgl) {\n      this._setupFrameBuffer(options);\n\n      this.applyToWebGL(options);\n\n      this._swapTextures(options);\n    } else {\n      this.applyTo2d(options);\n    }\n  },\n\n  /**\n   * Retrieves the cached shader.\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  retrieveShader: function (options) {\n    if (!options.programCache.hasOwnProperty(this.type)) {\n      options.programCache[this.type] = this.createProgram(options.context);\n    }\n\n    return options.programCache[this.type];\n  },\n\n  /**\n   * Apply this filter using webgl.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.originalTexture The texture of the original input image.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyToWebGL: function (options) {\n    var gl = options.context;\n    var shader = this.retrieveShader(options);\n\n    if (options.pass === 0 && options.originalTexture) {\n      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\n    } else {\n      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\n    }\n\n    gl.useProgram(shader.program);\n    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\n    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\n    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\n    this.sendUniformData(gl, shader.uniformLocations);\n    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  },\n  bindAdditionalTexture: function (gl, texture, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, texture); // reset active texture to 0 as usual\n\n    gl.activeTexture(gl.TEXTURE0);\n  },\n  unbindAdditionalTexture: function (gl, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.activeTexture(gl.TEXTURE0);\n  },\n  getMainParameter: function () {\n    return this[this.mainParameter];\n  },\n  setMainParameter: function (value) {\n    this[this.mainParameter] = value;\n  },\n\n  /**\n   * Send uniform data from this filter to its shader program on the GPU.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} uniformLocations A map of shader uniform names to their locations.\n   */\n  sendUniformData: function ()\n  /* gl, uniformLocations */\n  {// Intentionally left blank.  Override me in subclasses.\n  },\n\n  /**\n   * If needed by a 2d filter, this functions can create an helper canvas to be used\n   * remember that options.targetCanvas is available for use till end of chain.\n   */\n  createHelpLayer: function (options) {\n    if (!options.helpLayer) {\n      var helpLayer = document.createElement('canvas');\n      helpLayer.width = options.sourceWidth;\n      helpLayer.height = options.sourceHeight;\n      options.helpLayer = helpLayer;\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function () {\n    var object = {\n      type: this.type\n    },\n        mainP = this.mainParameter;\n\n    if (mainP) {\n      object[mainP] = this[mainP];\n    }\n\n    return object;\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function () {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\nfabric.Image.filters.BaseFilter.fromObject = function (object, callback) {\n  var filter = new fabric.Image.filters[object.type](object);\n  callback && callback(filter);\n  return filter;\n};\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Color Matrix filter class\n   * @class fabric.Image.filters.ColorMatrix\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n   * @example <caption>Kodachrome filter</caption>\n   * var filter = new fabric.Image.filters.ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.ColorMatrix = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.ColorMatrix.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'ColorMatrix',\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'varying vec2 vTexCoord;\\n' + 'uniform mat4 uColorMatrix;\\n' + 'uniform vec4 uConstants;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'color *= uColorMatrix;\\n' + 'color += uConstants;\\n' + 'gl_FragColor = color;\\n' + '}',\n\n    /**\n     * Colormatrix for pixels.\n     * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n     * outside the -1, 1 range.\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Array} matrix array of 20 numbers.\n     * @default\n     */\n    matrix: [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0],\n    mainParameter: 'matrix',\n\n    /**\n     * Lock the colormatrix on the color part, skipping alpha, manly for non webgl scenario\n     * to save some calculation\n     */\n    colorsOnly: true,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function (options) {\n      this.callSuper('initialize', options); // create a new array instead mutating the prototype with push\n\n      this.matrix = this.matrix.slice(0);\n    },\n\n    /**\n     * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function (options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = data.length,\n          m = this.matrix,\n          r,\n          g,\n          b,\n          a,\n          i,\n          colorsOnly = this.colorsOnly;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (colorsOnly) {\n          data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n        } else {\n          a = data[i + 3];\n          data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\n          data[i + 3] = r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        uColorMatrix: gl.getUniformLocation(program, 'uColorMatrix'),\n        uConstants: gl.getUniformLocation(program, 'uConstants')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      var m = this.matrix,\n          matrix = [m[0], m[1], m[2], m[3], m[5], m[6], m[7], m[8], m[10], m[11], m[12], m[13], m[15], m[16], m[17], m[18]],\n          constants = [m[4], m[9], m[14], m[19]];\n      gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n      gl.uniform4fv(uniformLocations.uConstants, constants);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] function to invoke after filter creation\n   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n   */\n\n  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 0.05\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.Brightness = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Brightness.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uBrightness;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'color.rgb += uBrightness;\\n' + 'gl_FragColor = color;\\n' + '}',\n\n    /**\n     * Brightness value, from -1 to 1.\n     * translated to -255 to 255 for 2d\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Number} brightness\n     * @default\n     */\n    brightness: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'brightness',\n\n    /**\n    * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n    *\n    * @param {Object} options\n    * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n    */\n    applyTo2d: function (options) {\n      if (this.brightness === 0) {\n        return;\n      }\n\n      var imageData = options.imageData,\n          data = imageData.data,\n          i,\n          len = data.length,\n          brightness = Math.round(this.brightness * 255);\n\n      for (i = 0; i < len; i += 4) {\n        data[i] = data[i] + brightness;\n        data[i + 1] = data[i + 1] + brightness;\n        data[i + 2] = data[i + 2] + brightness;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        uBrightness: gl.getUniformLocation(program, 'uBrightness')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBrightness, this.brightness);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n\n  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.Convolute = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Convolute.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /*\n     * Opaque value (true/false)\n     */\n    opaque: false,\n\n    /*\n     * matrix for the filter, max 9x9\n     */\n    matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: {\n      Convolute_3_1: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[9];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 0);\\n' + 'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\\n' + 'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\\n' + '}\\n' + '}\\n' + 'gl_FragColor = color;\\n' + '}',\n      Convolute_3_0: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[9];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 1);\\n' + 'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\\n' + 'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\\n' + '}\\n' + '}\\n' + 'float alpha = texture2D(uTexture, vTexCoord).a;\\n' + 'gl_FragColor = color;\\n' + 'gl_FragColor.a = alpha;\\n' + '}',\n      Convolute_5_1: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[25];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 0);\\n' + 'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' + 'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\\n' + '}\\n' + '}\\n' + 'gl_FragColor = color;\\n' + '}',\n      Convolute_5_0: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[25];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 1);\\n' + 'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' + 'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\\n' + '}\\n' + '}\\n' + 'float alpha = texture2D(uTexture, vTexCoord).a;\\n' + 'gl_FragColor = color;\\n' + 'gl_FragColor.a = alpha;\\n' + '}',\n      Convolute_7_1: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[49];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 0);\\n' + 'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' + 'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\\n' + '}\\n' + '}\\n' + 'gl_FragColor = color;\\n' + '}',\n      Convolute_7_0: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[49];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 1);\\n' + 'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' + 'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\\n' + '}\\n' + '}\\n' + 'float alpha = texture2D(uTexture, vTexCoord).a;\\n' + 'gl_FragColor = color;\\n' + 'gl_FragColor.a = alpha;\\n' + '}',\n      Convolute_9_1: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[81];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 0);\\n' + 'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' + 'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\\n' + '}\\n' + '}\\n' + 'gl_FragColor = color;\\n' + '}',\n      Convolute_9_0: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[81];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 1);\\n' + 'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' + 'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\\n' + '}\\n' + '}\\n' + 'float alpha = texture2D(uTexture, vTexCoord).a;\\n' + 'gl_FragColor = color;\\n' + 'gl_FragColor.a = alpha;\\n' + '}'\n    },\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n\n    /**\n    * Retrieves the cached shader.\n    * @param {Object} options\n    * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n    * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n    */\n    retrieveShader: function (options) {\n      var size = Math.sqrt(this.matrix.length);\n      var cacheKey = this.type + '_' + size + '_' + (this.opaque ? 1 : 0);\n      var shaderSource = this.fragmentSource[cacheKey];\n\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function (options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          weights = this.matrix,\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side / 2),\n          sw = imageData.width,\n          sh = imageData.height,\n          output = options.ctx.createImageData(sw, sh),\n          dst = output.data,\n          // go through the destination image pixels\n      alphaFac = this.opaque ? 1 : 0,\n          r,\n          g,\n          b,\n          a,\n          dstOff,\n          scx,\n          scy,\n          srcOff,\n          wt,\n          x,\n          y,\n          cx,\n          cy;\n\n      for (y = 0; y < sh; y++) {\n        for (x = 0; x < sw; x++) {\n          dstOff = (y * sw + x) * 4; // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n\n          r = 0;\n          g = 0;\n          b = 0;\n          a = 0;\n\n          for (cy = 0; cy < side; cy++) {\n            for (cx = 0; cx < side; cx++) {\n              scy = y + cy - halfSide;\n              scx = x + cx - halfSide; // eslint-disable-next-line max-depth\n\n              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n                continue;\n              }\n\n              srcOff = (scy * sw + scx) * 4;\n              wt = weights[cy * side + cx];\n              r += data[srcOff] * wt;\n              g += data[srcOff + 1] * wt;\n              b += data[srcOff + 2] * wt; // eslint-disable-next-line max-depth\n\n              if (!alphaFac) {\n                a += data[srcOff + 3] * wt;\n              }\n            }\n          }\n\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n\n          if (!alphaFac) {\n            dst[dstOff + 3] = a;\n          } else {\n            dst[dstOff + 3] = data[dstOff + 3];\n          }\n        }\n      }\n\n      options.imageData = output;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        uMatrix: gl.getUniformLocation(program, 'uMatrix'),\n        uOpaque: gl.getUniformLocation(program, 'uOpaque'),\n        uHalfSize: gl.getUniformLocation(program, 'uHalfSize'),\n        uSize: gl.getUniformLocation(program, 'uSize')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function () {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n\n  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.Grayscale = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Grayscale.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n    fragmentSource: {\n      average: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'float average = (color.r + color.b + color.g) / 3.0;\\n' + 'gl_FragColor = vec4(average, average, average, color.a);\\n' + '}',\n      lightness: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform int uMode;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 col = texture2D(uTexture, vTexCoord);\\n' + 'float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\\n' + 'gl_FragColor = vec4(average, average, average, col.a);\\n' + '}',\n      luminosity: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform int uMode;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 col = texture2D(uTexture, vTexCoord);\\n' + 'float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\\n' + 'gl_FragColor = vec4(average, average, average, col.a);\\n' + '}'\n    },\n\n    /**\n     * Grayscale mode, between 'average', 'lightness', 'luminosity'\n     * @param {String} type\n     * @default\n     */\n    mode: 'average',\n    mainParameter: 'mode',\n\n    /**\n     * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function (options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          i,\n          len = data.length,\n          value,\n          mode = this.mode;\n\n      for (i = 0; i < len; i += 4) {\n        if (mode === 'average') {\n          value = (data[i] + data[i + 1] + data[i + 2]) / 3;\n        } else if (mode === 'lightness') {\n          value = (Math.min(data[i], data[i + 1], data[i + 2]) + Math.max(data[i], data[i + 1], data[i + 2])) / 2;\n        } else if (mode === 'luminosity') {\n          value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];\n        }\n\n        data[i] = value;\n        data[i + 1] = value;\n        data[i + 2] = value;\n      }\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function (options) {\n      var cacheKey = this.type + '_' + this.mode;\n\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var shaderSource = this.fragmentSource[this.mode];\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        uMode: gl.getUniformLocation(program, 'uMode')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      // default average mode.\n      var mode = 1;\n      gl.uniform1i(uniformLocations.uMode, mode);\n    },\n\n    /**\n     * Grayscale filter isNeutralState implementation\n     * The filter is never neutral\n     * on the image\n     **/\n    isNeutralState: function () {\n      return false;\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n\n  fabric.Image.filters.Grayscale.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n\n  filters.Invert = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Invert.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform int uInvert;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'if (uInvert == 1) {\\n' + 'gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\\n' + '} else {\\n' + 'gl_FragColor = color;\\n' + '}\\n' + '}',\n\n    /**\n     * Filter invert. if false, does nothing\n     * @param {Boolean} invert\n     * @default\n     */\n    invert: true,\n    mainParameter: 'invert',\n\n    /**\n     * Apply the Invert operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function (options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          i,\n          len = data.length;\n\n      for (i = 0; i < len; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n    },\n\n    /**\n     * Invert filter isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function () {\n      return !this.invert;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        uInvert: gl.getUniformLocation(program, 'uInvert')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      gl.uniform1i(uniformLocations.uInvert, this.invert);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n\n  fabric.Image.filters.Invert.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.Noise = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Noise.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Fragment source for the noise program\n     */\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uStepH;\\n' + 'uniform float uNoise;\\n' + 'uniform float uSeed;\\n' + 'varying vec2 vTexCoord;\\n' + 'float rand(vec2 co, float seed, float vScale) {\\n' + 'return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\\n' + '}\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\\n' + 'gl_FragColor = color;\\n' + '}',\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'noise',\n\n    /**\n     * Noise value, from\n     * @param {Number} noise\n     * @default\n     */\n    noise: 0,\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function (options) {\n      if (this.noise === 0) {\n        return;\n      }\n\n      var imageData = options.imageData,\n          data = imageData.data,\n          i,\n          len = data.length,\n          noise = this.noise,\n          rand;\n\n      for (i = 0, len = data.length; i < len; i += 4) {\n        rand = (0.5 - Math.random()) * noise;\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        uNoise: gl.getUniformLocation(program, 'uNoise'),\n        uSeed: gl.getUniformLocation(program, 'uSeed')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n      gl.uniform1f(uniformLocations.uSeed, Math.random());\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function () {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n\n  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.Pixelate = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Pixelate.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n    blocksize: 4,\n    mainParameter: 'blocksize',\n\n    /**\n     * Fragment source for the Pixelate program\n     */\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uBlocksize;\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'float blockW = uBlocksize * uStepW;\\n' + 'float blockH = uBlocksize * uStepW;\\n' + 'int posX = int(vTexCoord.x / blockW);\\n' + 'int posY = int(vTexCoord.y / blockH);\\n' + 'float fposX = float(posX);\\n' + 'float fposY = float(posY);\\n' + 'vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\\n' + 'vec4 color = texture2D(uTexture, squareCoords);\\n' + 'gl_FragColor = color;\\n' + '}',\n\n    /**\n     * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function (options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index,\n          i,\n          j,\n          r,\n          g,\n          b,\n          a,\n          _i,\n          _j,\n          _iLen,\n          _jLen;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n          index = i * 4 * jLen + j * 4;\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n          _iLen = Math.min(i + this.blocksize, iLen);\n          _jLen = Math.min(j + this.blocksize, jLen);\n\n          for (_i = i; _i < _iLen; _i++) {\n            for (_j = j; _j < _jLen; _j++) {\n              index = _i * 4 * jLen + _j * 4;\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Indicate when the filter is not gonna apply changes to the image\n     **/\n    isNeutralState: function () {\n      return this.blocksize === 1;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        uBlocksize: gl.getUniformLocation(program, 'uBlocksize'),\n        uStepW: gl.getUniformLocation(program, 'uStepW'),\n        uStepH: gl.getUniformLocation(program, 'uStepH')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n\n  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveColor#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveColor({\n   *   threshold: 0.2,\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.RemoveColor = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.RemoveColor.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveColor',\n\n    /**\n     * Color to remove, in any format understood by fabric.Color.\n     * @param {String} type\n     * @default\n     */\n    color: '#FFFFFF',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform vec4 uLow;\\n' + 'uniform vec4 uHigh;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' + 'if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\\n' + 'gl_FragColor.a = 0.0;\\n' + '}\\n' + '}',\n\n    /**\n     * distance to actual color, as value up or down from each r,g,b\n     * between 0 and 1\n     **/\n    distance: 0.02,\n\n    /**\n     * For color to remove inside distance, use alpha channel for a smoother deletion\n     * NOT IMPLEMENTED YET\n     **/\n    useAlpha: false,\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.color=#RRGGBB] Threshold value\n     * @param {Number} [options.distance=10] Distance value\n     */\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo2d: function (options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          i,\n          distance = this.distance * 255,\n          r,\n          g,\n          b,\n          source = new fabric.Color(this.color).getSource(),\n          lowC = [source[0] - distance, source[1] - distance, source[2] - distance],\n          highC = [source[0] + distance, source[1] + distance, source[2] + distance];\n\n      for (i = 0; i < data.length; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > lowC[0] && g > lowC[1] && b > lowC[2] && r < highC[0] && g < highC[1] && b < highC[2]) {\n          data[i + 3] = 0;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        uLow: gl.getUniformLocation(program, 'uLow'),\n        uHigh: gl.getUniformLocation(program, 'uHigh')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource(),\n          distance = parseFloat(this.distance),\n          lowC = [0 + source[0] / 255 - distance, 0 + source[1] / 255 - distance, 0 + source[2] / 255 - distance, 1],\n          highC = [source[0] / 255 + distance, source[1] / 255 + distance, source[2] / 255 + distance, 1];\n      gl.uniform4fv(uniformLocations.uLow, lowC);\n      gl.uniform4fv(uniformLocations.uHigh, highC);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function () {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        distance: this.distance\n      });\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.RemoveColor} Instance of fabric.Image.filters.RemoveWhite\n   */\n\n  fabric.Image.filters.RemoveColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  var matrices = {\n    Brownie: [0.59970, 0.34553, -0.27082, 0, 0.186, -0.03770, 0.86095, 0.15059, 0, -0.1449, 0.24113, -0.07441, 0.44972, 0, -0.02965, 0, 0, 0, 1, 0],\n    Vintage: [0.62793, 0.32021, -0.03965, 0, 0.03784, 0.02578, 0.64411, 0.03259, 0, 0.02926, 0.04660, -0.08512, 0.52416, 0, 0.02023, 0, 0, 0, 1, 0],\n    Kodachrome: [1.12855, -0.39673, -0.03992, 0, 0.24991, -0.16404, 1.08352, -0.05498, 0, 0.09698, -0.16786, -0.56034, 1.60148, 0, 0.13972, 0, 0, 0, 1, 0],\n    Technicolor: [1.91252, -0.85453, -0.09155, 0, 0.04624, -0.30878, 1.76589, -0.10601, 0, -0.27589, -0.23110, -0.75018, 1.84759, 0, 0.12137, 0, 0, 0, 1, 0],\n    Polaroid: [1.438, -0.062, -0.062, 0, 0, -0.122, 1.378, -0.122, 0, 0, -0.016, -0.016, 1.483, 0, 0, 0, 0, 0, 1, 0],\n    Sepia: [0.393, 0.769, 0.189, 0, 0, 0.349, 0.686, 0.168, 0, 0, 0.272, 0.534, 0.131, 0, 0, 0, 0, 0, 1, 0],\n    BlackWhite: [1.5, 1.5, 1.5, 0, -1, 1.5, 1.5, 1.5, 0, -1, 1.5, 1.5, 1.5, 0, -1, 0, 0, 0, 1, 0]\n  };\n\n  for (var key in matrices) {\n    filters[key] = createClass(filters.ColorMatrix,\n    /** @lends fabric.Image.filters.Sepia.prototype */\n    {\n      /**\n       * Filter type\n       * @param {String} type\n       * @default\n       */\n      type: key,\n\n      /**\n       * Colormatrix for the effect\n       * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n       * outside the -1, 1 range.\n       * @param {Array} matrix array of 20 numbers.\n       * @default\n       */\n      matrix: matrices[key],\n\n      /**\n       * Lock the matrix export for this kind of static, parameter less filters.\n       */\n      mainParameter: false,\n\n      /**\n       * Lock the colormatrix on the color part, skipping alpha\n       */\n      colorsOnly: true\n    });\n    fabric.Image.filters[key].fromObject = fabric.Image.filters.BaseFilter.fromObject;\n  }\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.BlendColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendColor = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Blend.prototype */\n  {\n    type: 'BlendColor',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    color: '#F95C63',\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend color operation.\n     **/\n    alpha: 1,\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'gl_FragColor.rgb *= uColor.rgb;\\n',\n      screen: 'gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\\n',\n      add: 'gl_FragColor.rgb += uColor.rgb;\\n',\n      diff: 'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n',\n      subtract: 'gl_FragColor.rgb -= uColor.rgb;\\n',\n      lighten: 'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n',\n      darken: 'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n',\n      exclusion: 'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n',\n      overlay: 'if (uColor.r < 0.5) {\\n' + 'gl_FragColor.r *= 2.0 * uColor.r;\\n' + '} else {\\n' + 'gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\\n' + '}\\n' + 'if (uColor.g < 0.5) {\\n' + 'gl_FragColor.g *= 2.0 * uColor.g;\\n' + '} else {\\n' + 'gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\\n' + '}\\n' + 'if (uColor.b < 0.5) {\\n' + 'gl_FragColor.b *= 2.0 * uColor.b;\\n' + '} else {\\n' + 'gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\\n' + '}\\n',\n      tint: 'gl_FragColor.rgb *= (1.0 - uColor.a);\\n' + 'gl_FragColor.rgb += uColor.rgb;\\n'\n    },\n\n    /**\n     * build the fragment source for the filters, joining the common part with\n     * the specific one.\n     * @param {String} mode the mode of the filter, a key of this.fragmentSource\n     * @return {String} the source to be compiled\n     * @private\n     */\n    buildSource: function (mode) {\n      return 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform vec4 uColor;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'gl_FragColor = color;\\n' + 'if (color.a > 0.0) {\\n' + this.fragmentSource[mode] + '}\\n' + '}';\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function (options) {\n      var cacheKey = this.type + '_' + this.mode,\n          shaderSource;\n\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        shaderSource = this.buildSource(this.mode);\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function (options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = data.length,\n          tr,\n          tg,\n          tb,\n          r,\n          g,\n          b,\n          source,\n          alpha1 = 1 - this.alpha;\n      source = new fabric.Color(this.color).getSource();\n      tr = source[0] * this.alpha;\n      tg = source[1] * this.alpha;\n      tb = source[2] * this.alpha;\n\n      for (var i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n\n          case 'screen':\n            data[i] = 255 - (255 - r) * (255 - tr) / 255;\n            data[i + 1] = 255 - (255 - g) * (255 - tg) / 255;\n            data[i + 2] = 255 - (255 - b) * (255 - tb) / 255;\n            break;\n\n          case 'add':\n            data[i] = r + tr;\n            data[i + 1] = g + tg;\n            data[i + 2] = b + tb;\n            break;\n\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n\n          case 'subtract':\n            data[i] = r - tr;\n            data[i + 1] = g - tg;\n            data[i + 2] = b - tb;\n            break;\n\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n\n          case 'overlay':\n            data[i] = tr < 128 ? 2 * r * tr / 255 : 255 - 2 * (255 - r) * (255 - tr) / 255;\n            data[i + 1] = tg < 128 ? 2 * g * tg / 255 : 255 - 2 * (255 - g) * (255 - tg) / 255;\n            data[i + 2] = tb < 128 ? 2 * b * tb / 255 : 255 - 2 * (255 - b) * (255 - tb) / 255;\n            break;\n\n          case 'exclusion':\n            data[i] = tr + r - 2 * tr * r / 255;\n            data[i + 1] = tg + g - 2 * tg * g / 255;\n            data[i + 2] = tb + b - 2 * tb * b / 255;\n            break;\n\n          case 'tint':\n            data[i] = tr + r * alpha1;\n            data[i + 1] = tg + g * alpha1;\n            data[i + 2] = tb + b * alpha1;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        uColor: gl.getUniformLocation(program, 'uColor')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource();\n      source[0] = this.alpha * source[0] / 255;\n      source[1] = this.alpha * source[1] / 255;\n      source[2] = this.alpha * source[2] / 255;\n      source[3] = this.alpha;\n      gl.uniform4fv(uniformLocations.uColor, source);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function () {\n      return {\n        type: this.type,\n        color: this.color,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendColor} Instance of fabric.Image.filters.BlendColor\n   */\n\n  fabric.Image.filters.BlendColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Image Blend filter class\n   * @class fabric.Image.filter.BlendImage\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendImage = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.BlendImage.prototype */\n  {\n    type: 'BlendImage',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    image: null,\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend image operation.\n     * not implemented.\n     **/\n    alpha: 1,\n    vertexSource: 'attribute vec2 aPosition;\\n' + 'varying vec2 vTexCoord;\\n' + 'varying vec2 vTexCoord2;\\n' + 'uniform mat3 uTransformMatrix;\\n' + 'void main() {\\n' + 'vTexCoord = aPosition;\\n' + 'vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\\n' + 'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' + '}',\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform sampler2D uImage;\\n' + 'uniform vec4 uColor;\\n' + 'varying vec2 vTexCoord;\\n' + 'varying vec2 vTexCoord2;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' + 'color.rgba *= color2.rgba;\\n' + 'gl_FragColor = color;\\n' + '}',\n      mask: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform sampler2D uImage;\\n' + 'uniform vec4 uColor;\\n' + 'varying vec2 vTexCoord;\\n' + 'varying vec2 vTexCoord2;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' + 'color.a = color2.a;\\n' + 'gl_FragColor = color;\\n' + '}'\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function (options) {\n      var cacheKey = this.type + '_' + this.mode;\n      var shaderSource = this.fragmentSource[this.mode];\n\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n\n      return options.programCache[cacheKey];\n    },\n    applyToWebGL: function (options) {\n      // load texture to blend.\n      var gl = options.context,\n          texture = this.createTexture(options.filterBackend, this.image);\n      this.bindAdditionalTexture(gl, texture, gl.TEXTURE1);\n      this.callSuper('applyToWebGL', options);\n      this.unbindAdditionalTexture(gl, gl.TEXTURE1);\n    },\n    createTexture: function (backend, image) {\n      return backend.getCachedTexture(image.cacheKey, image._element);\n    },\n\n    /**\n     * Calculate a transformMatrix to adapt the image to blend over\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    calculateMatrix: function () {\n      var image = this.image,\n          width = image._element.width,\n          height = image._element.height;\n      return [1 / image.scaleX, 0, 0, 0, 1 / image.scaleY, 0, -image.left / width, -image.top / height, 1];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function (options) {\n      var imageData = options.imageData,\n          resources = options.filterBackend.resources,\n          data = imageData.data,\n          iLen = data.length,\n          width = imageData.width,\n          height = imageData.height,\n          tr,\n          tg,\n          tb,\n          ta,\n          r,\n          g,\n          b,\n          a,\n          canvas1,\n          context,\n          image = this.image,\n          blendData;\n\n      if (!resources.blendImage) {\n        resources.blendImage = fabric.util.createCanvasElement();\n      }\n\n      canvas1 = resources.blendImage;\n      context = canvas1.getContext('2d');\n\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas1.width = width;\n        canvas1.height = height;\n      } else {\n        context.clearRect(0, 0, width, height);\n      }\n\n      context.setTransform(image.scaleX, 0, 0, image.scaleY, image.left, image.top);\n      context.drawImage(image._element, 0, 0, width, height);\n      blendData = context.getImageData(0, 0, width, height).data;\n\n      for (var i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n        tr = blendData[i];\n        tg = blendData[i + 1];\n        tb = blendData[i + 2];\n        ta = blendData[i + 3];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            data[i + 3] = a * ta / 255;\n            break;\n\n          case 'mask':\n            data[i + 3] = ta;\n            break;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        uTransformMatrix: gl.getUniformLocation(program, 'uTransformMatrix'),\n        uImage: gl.getUniformLocation(program, 'uImage')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      var matrix = this.calculateMatrix();\n      gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\n\n      gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function () {\n      return {\n        type: this.type,\n        image: this.image && this.image.toObject(),\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} callback to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendImage} Instance of fabric.Image.filters.BlendImage\n   */\n\n  fabric.Image.filters.BlendImage.fromObject = function (object, callback) {\n    fabric.Image.fromObject(object.image, function (image) {\n      var options = fabric.util.object.clone(object);\n      options.image = image;\n      callback(new fabric.Image.filters.BlendImage(options));\n    });\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      pow = Math.pow,\n      floor = Math.floor,\n      sqrt = Math.sqrt,\n      abs = Math.abs,\n      round = Math.round,\n      sin = Math.sin,\n      ceil = Math.ceil,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n\n  filters.Resize = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Resize.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * for webgl resizeType is just lanczos, for canvas2d can be:\n     * bilinear, hermite, sliceHack, lanczos.\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 1,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 1,\n\n    /**\n     * LanczosLobes parameter for lanczos filter, valid for resizeType lanczos\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        uDelta: gl.getUniformLocation(program, 'uDelta'),\n        uTaps: gl.getUniformLocation(program, 'uTaps')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      gl.uniform2fv(uniformLocations.uDelta, this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]);\n      gl.uniform1fv(uniformLocations.uTaps, this.taps);\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function (options) {\n      var filterWindow = this.getFilterWindow(),\n          cacheKey = this.type + '_' + filterWindow;\n\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var fragmentShader = this.generateShader(filterWindow);\n        options.programCache[cacheKey] = this.createProgram(options.context, fragmentShader);\n      }\n\n      return options.programCache[cacheKey];\n    },\n    getFilterWindow: function () {\n      var scale = this.tempScale;\n      return Math.ceil(this.lanczosLobes / scale);\n    },\n    getTaps: function () {\n      var lobeFunction = this.lanczosCreate(this.lanczosLobes),\n          scale = this.tempScale,\n          filterWindow = this.getFilterWindow(),\n          taps = new Array(filterWindow);\n\n      for (var i = 1; i <= filterWindow; i++) {\n        taps[i - 1] = lobeFunction(i * scale);\n      }\n\n      return taps;\n    },\n\n    /**\n     * Generate vertex and shader sources from the necessary steps numbers\n     * @param {Number} filterWindow\n     */\n    generateShader: function (filterWindow) {\n      var offsets = new Array(filterWindow),\n          fragmentShader = this.fragmentSourceTOP,\n          filterWindow;\n\n      for (var i = 1; i <= filterWindow; i++) {\n        offsets[i - 1] = i + '.0 * uDelta';\n      }\n\n      fragmentShader += 'uniform float uTaps[' + filterWindow + '];\\n';\n      fragmentShader += 'void main() {\\n';\n      fragmentShader += '  vec4 color = texture2D(uTexture, vTexCoord);\\n';\n      fragmentShader += '  float sum = 1.0;\\n';\n      offsets.forEach(function (offset, i) {\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord + ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord - ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  sum += 2.0 * uTaps[' + i + '];\\n';\n      });\n      fragmentShader += '  gl_FragColor = color / sum;\\n';\n      fragmentShader += '}';\n      return fragmentShader;\n    },\n    fragmentSourceTOP: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform vec2 uDelta;\\n' + 'varying vec2 vTexCoord;\\n',\n\n    /**\n     * Apply the resize filter to the image\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function (options) {\n      if (options.webgl) {\n        options.passes++;\n        this.width = options.sourceWidth;\n        this.horizontal = true;\n        this.dW = Math.round(this.width * this.scaleX);\n        this.dH = options.sourceHeight;\n        this.tempScale = this.dW / this.width;\n        this.taps = this.getTaps();\n        options.destinationWidth = this.dW;\n\n        this._setupFrameBuffer(options);\n\n        this.applyToWebGL(options);\n\n        this._swapTextures(options);\n\n        options.sourceWidth = options.destinationWidth;\n        this.height = options.sourceHeight;\n        this.horizontal = false;\n        this.dH = Math.round(this.height * this.scaleY);\n        this.tempScale = this.dH / this.height;\n        this.taps = this.getTaps();\n        options.destinationHeight = this.dH;\n\n        this._setupFrameBuffer(options);\n\n        this.applyToWebGL(options);\n\n        this._swapTextures(options);\n\n        options.sourceHeight = options.destinationHeight;\n      } else {\n        this.applyTo2d(options);\n      }\n    },\n    isNeutralState: function () {\n      return this.scaleX === 1 && this.scaleY === 1;\n    },\n    lanczosCreate: function (lobes) {\n      return function (x) {\n        if (x >= lobes || x <= -lobes) {\n          return 0.0;\n        }\n\n        if (x < 1.19209290E-07 && x > -1.19209290E-07) {\n          return 1.0;\n        }\n\n        x *= Math.PI;\n        var xx = x / lobes;\n        return sin(x) / x * sin(xx) / xx;\n      };\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} scaleX\n     * @param {Number} scaleY\n     */\n    applyTo2d: function (options) {\n      var imageData = options.imageData,\n          scaleX = this.scaleX,\n          scaleY = this.scaleY;\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n      var oW = imageData.width,\n          oH = imageData.height,\n          dW = round(oW * scaleX),\n          dH = round(oH * scaleY),\n          newData;\n\n      if (this.resizeType === 'sliceHack') {\n        newData = this.sliceByTwo(options, oW, oH, dW, dH);\n      } else if (this.resizeType === 'hermite') {\n        newData = this.hermiteFastResize(options, oW, oH, dW, dH);\n      } else if (this.resizeType === 'bilinear') {\n        newData = this.bilinearFiltering(options, oW, oH, dW, dH);\n      } else if (this.resizeType === 'lanczos') {\n        newData = this.lanczosResize(options, oW, oH, dW, dH);\n      }\n\n      options.imageData = newData;\n    },\n\n    /**\n     * Filter sliceByTwo\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    sliceByTwo: function (options, oW, oH, dW, dH) {\n      var imageData = options.imageData,\n          mult = 0.5,\n          doneW = false,\n          doneH = false,\n          stepW = oW * mult,\n          stepH = oH * mult,\n          resources = fabric.filterBackend.resources,\n          tmpCanvas,\n          ctx,\n          sX = 0,\n          sY = 0,\n          dX = oW,\n          dY = 0;\n\n      if (!resources.sliceByTwo) {\n        resources.sliceByTwo = document.createElement('canvas');\n      }\n\n      tmpCanvas = resources.sliceByTwo;\n\n      if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\n        tmpCanvas.width = oW * 1.5;\n        tmpCanvas.height = oH;\n      }\n\n      ctx = tmpCanvas.getContext('2d');\n      ctx.clearRect(0, 0, oW * 1.5, oH);\n      ctx.putImageData(imageData, 0, 0);\n      dW = floor(dW);\n      dH = floor(dH);\n\n      while (!doneW || !doneH) {\n        oW = stepW;\n        oH = stepH;\n\n        if (dW < floor(stepW * mult)) {\n          stepW = floor(stepW * mult);\n        } else {\n          stepW = dW;\n          doneW = true;\n        }\n\n        if (dH < floor(stepH * mult)) {\n          stepH = floor(stepH * mult);\n        } else {\n          stepH = dH;\n          doneH = true;\n        }\n\n        ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\n        sX = dX;\n        sY = dY;\n        dY += stepH;\n      }\n\n      return ctx.getImageData(sX, sY, dW, dH);\n    },\n\n    /**\n     * Filter lanczosResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    lanczosResize: function (options, oW, oH, dW, dH) {\n      function process(u) {\n        var v, i, weight, idx, a, red, green, blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0;\n          red = 0;\n          green = 0;\n          blue = 0;\n          alpha = 0;\n\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n\n            fX = floor(1000 * abs(i - center.x));\n\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = {};\n            }\n\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n\n              fY = floor(1000 * abs(j - center.y));\n\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n\n              weight = cacheLanc[fX][fY];\n\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        } else {\n          return destImg;\n        }\n      }\n\n      var srcData = options.imageData.data,\n          destImg = options.ctx.createImageData(dW, dH),\n          destData = destImg.data,\n          lanczos = this.lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX,\n          rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = {},\n          center = {},\n          icenter = {};\n      return process(0);\n    },\n\n    /**\n     * bilinearFiltering\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    bilinearFiltering: function (options, oW, oH, dW, dH) {\n      var a,\n          b,\n          c,\n          d,\n          x,\n          y,\n          i,\n          j,\n          xDiff,\n          yDiff,\n          chnl,\n          color,\n          offset = 0,\n          origPix,\n          ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY,\n          w4 = 4 * (oW - 1),\n          img = options.imageData,\n          pixels = img.data,\n          destImage = options.ctx.createImageData(dW, dH),\n          destPixels = destImage.data;\n\n      for (i = 0; i < dH; i++) {\n        for (j = 0; j < dW; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * oW + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) + c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n\n      return destImage;\n    },\n\n    /**\n     * hermiteFastResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    hermiteFastResize: function (options, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX,\n          ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          img = options.imageData,\n          data = img.data,\n          img2 = options.ctx.createImageData(dW, dH),\n          data2 = img2.data;\n\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4,\n              weight = 0,\n              weights = 0,\n              weightsAlpha = 0,\n              gxR = 0,\n              gxG = 0,\n              gxB = 0,\n              gxA = 0,\n              centerY = (j + 0.5) * ratioH;\n\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW,\n                w0 = dy * dy;\n\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /* eslint-disable max-depth */\n\n              if (w > 1 && w < -1) {\n                continue;\n              } //hermite filter\n\n\n              weight = 2 * w * w * w - 3 * w * w + 1;\n\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW); //alpha\n\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight; //colors\n\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /* eslint-enable max-depth */\n\n            }\n          }\n\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function () {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n\n  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Contrast filter class\n   * @class fabric.Image.filters.Contrast\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Contrast({\n   *   contrast: 40\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.Contrast = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Contrast.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Contrast',\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uContrast;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\\n' + 'color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\\n' + 'gl_FragColor = color;\\n' + '}',\n    contrast: 0,\n    mainParameter: 'contrast',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Contrast.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.contrast=0] Value to contrast the image up (-1...1)\n     */\n\n    /**\n      * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\n      *\n      * @param {Object} options\n      * @param {ImageData} options.imageData The Uint8Array to be filtered.\n      */\n    applyTo2d: function (options) {\n      if (this.contrast === 0) {\n        return;\n      }\n\n      var imageData = options.imageData,\n          i,\n          len,\n          data = imageData.data,\n          len = data.length,\n          contrast = Math.floor(this.contrast * 255),\n          contrastF = 259 * (contrast + 255) / (255 * (259 - contrast));\n\n      for (i = 0; i < len; i += 4) {\n        data[i] = contrastF * (data[i] - 128) + 128;\n        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        uContrast: gl.getUniformLocation(program, 'uContrast')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uContrast, this.contrast);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n   */\n\n  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Saturate filter class\n   * @class fabric.Image.filters.Saturation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Saturation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Saturation({\n   *   saturation: 100\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.Saturation = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Saturation.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Saturation',\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uSaturation;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'float rgMax = max(color.r, color.g);\\n' + 'float rgbMax = max(rgMax, color.b);\\n' + 'color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\\n' + 'color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\\n' + 'color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\\n' + 'gl_FragColor = color;\\n' + '}',\n    saturation: 0,\n    mainParameter: 'saturation',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Saturate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.saturate=0] Value to saturate the image (-1...1)\n     */\n\n    /**\n     * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function (options) {\n      if (this.saturation === 0) {\n        return;\n      }\n\n      var imageData = options.imageData,\n          data = imageData.data,\n          len = data.length,\n          adjust = -this.saturation,\n          i,\n          max;\n\n      for (i = 0; i < len; i += 4) {\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\n        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        uSaturation: gl.getUniformLocation(program, 'uSaturation')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Saturation} Instance of fabric.Image.filters.Saturate\n   */\n\n  fabric.Image.filters.Saturation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Blur filter class\n   * @class fabric.Image.filters.Blur\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Blur#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Blur({\n   *   blur: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.Blur = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Blur.prototype */\n  {\n    type: 'Blur',\n\n    /*\n    'gl_FragColor = vec4(0.0);',\n    'gl_FragColor += texture2D(texture, vTexCoord + -7 * uDelta)*0.0044299121055113265;',\n    'gl_FragColor += texture2D(texture, vTexCoord + -6 * uDelta)*0.00895781211794;',\n    'gl_FragColor += texture2D(texture, vTexCoord + -5 * uDelta)*0.0215963866053;',\n    'gl_FragColor += texture2D(texture, vTexCoord + -4 * uDelta)*0.0443683338718;',\n    'gl_FragColor += texture2D(texture, vTexCoord + -3 * uDelta)*0.0776744219933;',\n    'gl_FragColor += texture2D(texture, vTexCoord + -2 * uDelta)*0.115876621105;',\n    'gl_FragColor += texture2D(texture, vTexCoord + -1 * uDelta)*0.147308056121;',\n    'gl_FragColor += texture2D(texture, vTexCoord              )*0.159576912161;',\n    'gl_FragColor += texture2D(texture, vTexCoord + 1 * uDelta)*0.147308056121;',\n    'gl_FragColor += texture2D(texture, vTexCoord + 2 * uDelta)*0.115876621105;',\n    'gl_FragColor += texture2D(texture, vTexCoord + 3 * uDelta)*0.0776744219933;',\n    'gl_FragColor += texture2D(texture, vTexCoord + 4 * uDelta)*0.0443683338718;',\n    'gl_FragColor += texture2D(texture, vTexCoord + 5 * uDelta)*0.0215963866053;',\n    'gl_FragColor += texture2D(texture, vTexCoord + 6 * uDelta)*0.00895781211794;',\n    'gl_FragColor += texture2D(texture, vTexCoord + 7 * uDelta)*0.0044299121055113265;',\n    */\n\n    /* eslint-disable max-len */\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform vec2 uDelta;\\n' + 'varying vec2 vTexCoord;\\n' + 'const float nSamples = 15.0;\\n' + 'vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\\n' + 'float random(vec3 scale) {\\n' +\n    /* use the fragment position for a different seed per-pixel */\n    'return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\\n' + '}\\n' + 'void main() {\\n' + 'vec4 color = vec4(0.0);\\n' + 'float total = 0.0;\\n' + 'float offset = random(v3offset);\\n' + 'for (float t = -nSamples; t <= nSamples; t++) {\\n' + 'float percent = (t + offset - 0.5) / nSamples;\\n' + 'float weight = 1.0 - abs(percent);\\n' + 'color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\\n' + 'total += weight;\\n' + '}\\n' + 'gl_FragColor = color / total;\\n' + '}',\n\n    /* eslint-enable max-len */\n\n    /**\n     * blur value, in percentage of image dimensions.\n     * specific to keep the image blur constant at different resolutions\n     * range bewteen 0 and 1.\n     */\n    blur: 0,\n    mainParameter: 'blur',\n    applyTo: function (options) {\n      if (options.webgl) {\n        // this aspectRatio is used to give the same blur to vertical and horizontal\n        this.aspectRatio = options.sourceWidth / options.sourceHeight;\n        options.passes++;\n\n        this._setupFrameBuffer(options);\n\n        this.horizontal = true;\n        this.applyToWebGL(options);\n\n        this._swapTextures(options);\n\n        this._setupFrameBuffer(options);\n\n        this.horizontal = false;\n        this.applyToWebGL(options);\n\n        this._swapTextures(options);\n      } else {\n        this.applyTo2d(options);\n      }\n    },\n    applyTo2d: function (options) {\n      // paint canvasEl with current image data.\n      //options.ctx.putImageData(options.imageData, 0, 0);\n      options.imageData = this.simpleBlur(options);\n    },\n    simpleBlur: function (options) {\n      var resources = options.filterBackend.resources,\n          canvas1,\n          canvas2,\n          width = options.imageData.width,\n          height = options.imageData.height;\n\n      if (!resources.blurLayer1) {\n        resources.blurLayer1 = fabric.util.createCanvasElement();\n        resources.blurLayer2 = fabric.util.createCanvasElement();\n      }\n\n      canvas1 = resources.blurLayer1;\n      canvas2 = resources.blurLayer2;\n\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas2.width = canvas1.width = width;\n        canvas2.height = canvas1.height = height;\n      }\n\n      var ctx1 = canvas1.getContext('2d'),\n          ctx2 = canvas2.getContext('2d'),\n          nSamples = 15,\n          random,\n          percent,\n          j,\n          i,\n          blur = this.blur * 0.06 * 0.5; // load first canvas\n\n      ctx1.putImageData(options.imageData, 0, 0);\n      ctx2.clearRect(0, 0, width, height);\n\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * width + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, j, random);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * height + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, random, j);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n\n      options.ctx.drawImage(canvas1, 0, 0);\n      var newImageData = options.ctx.getImageData(0, 0, canvas1.width, canvas1.height);\n      ctx1.globalAlpha = 1;\n      ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n      return newImageData;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        delta: gl.getUniformLocation(program, 'uDelta')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      var delta = this.chooseRightDelta();\n      gl.uniform2fv(uniformLocations.delta, delta);\n    },\n\n    /**\n     * choose right value of image percentage to blur with\n     * @returns {Array} a numeric array with delta values\n     */\n    chooseRightDelta: function () {\n      var blurScale = 1,\n          delta = [0, 0],\n          blur;\n\n      if (this.horizontal) {\n        if (this.aspectRatio > 1) {\n          // image is wide, i want to shrink radius horizontal\n          blurScale = 1 / this.aspectRatio;\n        }\n      } else {\n        if (this.aspectRatio < 1) {\n          // image is tall, i want to shrink radius vertical\n          blurScale = this.aspectRatio;\n        }\n      }\n\n      blur = blurScale * this.blur * 0.12;\n\n      if (this.horizontal) {\n        delta[0] = blur;\n      } else {\n        delta[1] = blur;\n      }\n\n      return delta;\n    }\n  });\n  /**\n   * Deserialize a JSON definition of a BlurFilter into a concrete instance.\n   */\n\n  filters.Blur.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Gamma filter class\n   * @class fabric.Image.filters.Gamma\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Gamma#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Gamma({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.Gamma = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Gamma.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Gamma',\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform vec3 uGamma;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'vec3 correction = (1.0 / uGamma);\\n' + 'color.r = pow(color.r, correction.r);\\n' + 'color.g = pow(color.g, correction.g);\\n' + 'color.b = pow(color.b, correction.b);\\n' + 'gl_FragColor = color;\\n' + 'gl_FragColor.rgb *= color.a;\\n' + '}',\n\n    /**\n     * Gamma array value, from 0.01 to 2.2.\n     * @param {Array} gamma\n     * @default\n     */\n    gamma: [1, 1, 1],\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'gamma',\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function (options) {\n      this.gamma = [1, 1, 1];\n      filters.BaseFilter.prototype.initialize.call(this, options);\n    },\n\n    /**\n     * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function (options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          gamma = this.gamma,\n          len = data.length,\n          rInv = 1 / gamma[0],\n          gInv = 1 / gamma[1],\n          bInv = 1 / gamma[2],\n          i;\n\n      if (!this.rVals) {\n        // eslint-disable-next-line\n        this.rVals = new Uint8Array(256); // eslint-disable-next-line\n\n        this.gVals = new Uint8Array(256); // eslint-disable-next-line\n\n        this.bVals = new Uint8Array(256);\n      } // This is an optimization - pre-compute a look-up table for each color channel\n      // instead of performing these pow calls for each pixel in the image.\n\n\n      for (i = 0, len = 256; i < len; i++) {\n        this.rVals[i] = Math.pow(i / 255, rInv) * 255;\n        this.gVals[i] = Math.pow(i / 255, gInv) * 255;\n        this.bVals[i] = Math.pow(i / 255, bInv) * 255;\n      }\n\n      for (i = 0, len = data.length; i < len; i += 4) {\n        data[i] = this.rVals[data[i]];\n        data[i + 1] = this.gVals[data[i + 1]];\n        data[i + 2] = this.bVals[data[i + 2]];\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function (gl, program) {\n      return {\n        uGamma: gl.getUniformLocation(program, 'uGamma')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function (gl, uniformLocations) {\n      gl.uniform3fv(uniformLocations.uGamma, this.gamma);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Gamma} Instance of fabric.Image.filters.Gamma\n   */\n\n  fabric.Image.filters.Gamma.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * A container class that knows how to apply a sequence of filters to an input image.\n   */\n\n  filters.Composed = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Composed.prototype */\n  {\n    type: 'Composed',\n\n    /**\n     * A non sparse array of filters to apply\n     */\n    subFilters: [],\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function (options) {\n      this.callSuper('initialize', options); // create a new array instead mutating the prototype with push\n\n      this.subFilters = this.subFilters.slice(0);\n    },\n\n    /**\n     * Apply this container's filters to the input image provided.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be applied.\n     */\n    applyTo: function (options) {\n      options.passes += this.subFilters.length - 1;\n      this.subFilters.forEach(function (filter) {\n        filter.applyTo(options);\n      });\n    },\n\n    /**\n     * Serialize this filter into JSON.\n     *\n     * @returns {Object} A JSON representation of this filter.\n     */\n    toObject: function () {\n      return fabric.util.object.extend(this.callSuper('toObject'), {\n        subFilters: this.subFilters.map(function (filter) {\n          return filter.toObject();\n        })\n      });\n    },\n    isNeutralState: function () {\n      return !this.subFilters.some(function (filter) {\n        return !filter.isNeutralState();\n      });\n    }\n  });\n  /**\n   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\n   */\n\n  fabric.Image.filters.Composed.fromObject = function (object, callback) {\n    var filters = object.subFilters || [],\n        subFilters = filters.map(function (filter) {\n      return new fabric.Image.filters[filter.type](filter);\n    }),\n        instance = new fabric.Image.filters.Composed({\n      subFilters: subFilters\n    });\n    callback && callback(instance);\n    return instance;\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * HueRotation filter class\n   * @class fabric.Image.filters.HueRotation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.HueRotation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.HueRotation({\n   *   rotation: -0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.HueRotation = createClass(filters.ColorMatrix,\n  /** @lends fabric.Image.filters.HueRotation.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'HueRotation',\n\n    /**\n     * HueRotation value, from -1 to 1.\n     * the unit is radians\n     * @param {Number} myParameter\n     * @default\n     */\n    rotation: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'rotation',\n    calculateMatrix: function () {\n      var rad = this.rotation * Math.PI,\n          cos = fabric.util.cos(rad),\n          sin = fabric.util.sin(rad),\n          aThird = 1 / 3,\n          aThirdSqtSin = Math.sqrt(aThird) * sin,\n          OneMinusCos = 1 - cos;\n      this.matrix = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0];\n      this.matrix[0] = cos + OneMinusCos / 3;\n      this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[6] = cos + aThird * OneMinusCos;\n      this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[12] = cos + aThird * OneMinusCos;\n    },\n\n    /**\n     * HueRotation isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function (options) {\n      this.calculateMatrix();\n      return filters.BaseFilter.prototype.isNeutralState.call(this, options);\n    },\n\n    /**\n     * Apply this filter to the input image data provided.\n     *\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function (options) {\n      this.calculateMatrix();\n      filters.BaseFilter.prototype.applyTo.call(this, options);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.HueRotation} Instance of fabric.Image.filters.HueRotation\n   */\n\n  fabric.Image.filters.HueRotation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      clone = fabric.util.object.clone;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n\n\n  fabric.Text = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Text.prototype */\n  {\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Array\n     * @private\n     */\n    _dimensionAffectingProps: ['fontSize', 'fontWeight', 'fontFamily', 'fontStyle', 'lineHeight', 'text', 'charSpacing', 'textAlign', 'styles'],\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespaces that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]/g,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpaceAndTab: /[ \\t\\r]/,\n\n    /**\n     * Use this regular expression to filter consecutive groups of non spaces.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reWords: /\\S+/g,\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize: 40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight: 'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily: 'Times New Roman',\n\n    /**\n     * Text decoration underline.\n     * @type Boolean\n     * @default\n     */\n    underline: false,\n\n    /**\n     * Text decoration overline.\n     * @type Boolean\n     * @default\n     */\n    overline: false,\n\n    /**\n     * Text decoration linethrough.\n     * @type Boolean\n     * @default\n     */\n    linethrough: false,\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\n     * \"justify-left\", \"justify-center\" or \"justify-right\".\n     * @type String\n     * @default\n     */\n    textAlign: 'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle: 'normal',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight: 1.16,\n\n    /**\n     * Superscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    superscript: {\n      size: 0.60,\n      // fontSize factor\n      baseline: -0.35 // baseline-shift factor (upwards)\n\n    },\n\n    /**\n     * Subscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    subscript: {\n      size: 0.60,\n      // fontSize factor\n      baseline: 0.11 // baseline-shift factor (downwards)\n\n    },\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor: '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('fontFamily', 'fontWeight', 'fontSize', 'text', 'underline', 'overline', 'linethrough', 'textAlign', 'fontStyle', 'lineHeight', 'textBackgroundColor', 'charSpacing', 'styles'),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('fontFamily', 'fontWeight', 'fontSize', 'text', 'underline', 'overline', 'linethrough', 'textAlign', 'fontStyle', 'lineHeight', 'textBackgroundColor', 'charSpacing', 'styles'),\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke: null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow: null,\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.222,\n\n    /**\n     * @private\n     */\n    offsets: {\n      underline: 0.10,\n      linethrough: -0.315,\n      overline: -0.88\n    },\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult: 1.13,\n\n    /**\n     * additional space between characters\n     * expressed in thousands of em unit\n     * @type Number\n     * @default\n     */\n    charSpacing: 0,\n\n    /**\n     * Object containing character styles - top-level properties -> line numbers,\n     * 2nd-level properties - charater numbers\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Reference to a context to measure text char or couple of chars\n     * the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas\n     * once created it will be referenced on fabric._measuringContext to avoide creating a canvas for every\n     * text object created.\n     * @type {CanvasRenderingContext2D}\n     * @default\n     */\n    _measuringContext: null,\n\n    /**\n     * Baseline shift, stlyes only, keep at 0 for the main text object\n     * @type {Number}\n     * @default\n     */\n    deltaY: 0,\n\n    /**\n     * Array of properties that define a style unit (of 'styles').\n     * @type {Array}\n     * @default\n     */\n    _styleProperties: ['stroke', 'strokeWidth', 'fill', 'fontFamily', 'fontSize', 'fontWeight', 'fontStyle', 'underline', 'overline', 'linethrough', 'deltaY', 'textBackgroundColor'],\n\n    /**\n     * contains characters bounding boxes\n     */\n    __charBounds: [],\n\n    /**\n     * use this size when measuring text. To avoid IE11 rounding errors\n     * @type {Number}\n     * @default\n     * @readonly\n     * @private\n     */\n    CACHE_FONT_SIZE: 400,\n\n    /**\n     * contains the min text width to avoid getting 0\n     * @type {Number}\n     * @default\n     */\n    MIN_TEXT_WIDTH: 2,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function (text, options) {\n      this.styles = options ? options.styles || {} : {};\n      this.text = text;\n      this.__skipDimension = true;\n      this.callSuper('initialize', options);\n      this.__skipDimension = false;\n      this.initDimensions();\n      this.setCoords();\n      this.setupState({\n        propertySet: '_dimensionAffectingProps'\n      });\n    },\n\n    /**\n     * Return a contex for measurement of text string.\n     * if created it gets stored for reuse\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    getMeasuringContext: function () {\n      // if we did not return we have to measure something.\n      if (!fabric._measuringContext) {\n        fabric._measuringContext = this.canvas && this.canvas.contextCache || fabric.util.createCanvasElement().getContext('2d');\n      }\n\n      return fabric._measuringContext;\n    },\n\n    /**\n     * @private\n     * Divides text into lines of text and lines of graphemes.\n     */\n    _splitText: function () {\n      var newLines = this._splitTextIntoLines(this.text);\n\n      this.textLines = newLines.lines;\n      this._textLines = newLines.graphemeLines;\n      this._unwrappedTextLines = newLines._unwrappedLines;\n      this._text = newLines.graphemeText;\n      return newLines;\n    },\n\n    /**\n     * Initialize or update text dimensions.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     */\n    initDimensions: function () {\n      if (this.__skipDimension) {\n        return;\n      }\n\n      this._splitText();\n\n      this._clearCache();\n\n      this.width = this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;\n\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n\n      this.height = this.calcTextHeight();\n      this.saveState({\n        propertySet: '_dimensionAffectingProps'\n      });\n    },\n\n    /**\n     * Enlarge space boxes and shift the others\n     */\n    enlargeSpaces: function () {\n      var diffSpace, currentLineWidth, numberOfSpaces, accumulatedSpace, line, charBound, spaces;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textAlign !== 'justify' && (i === len - 1 || this.isEndOfWrapping(i))) {\n          continue;\n        }\n\n        accumulatedSpace = 0;\n        line = this._textLines[i];\n        currentLineWidth = this.getLineWidth(i);\n\n        if (currentLineWidth < this.width && (spaces = this.textLines[i].match(this._reSpacesAndTabs))) {\n          numberOfSpaces = spaces.length;\n          diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\n\n          for (var j = 0, jlen = line.length; j <= jlen; j++) {\n            charBound = this.__charBounds[i][j];\n\n            if (this._reSpaceAndTab.test(line[j])) {\n              charBound.width += diffSpace;\n              charBound.kernedWidth += diffSpace;\n              charBound.left += accumulatedSpace;\n              accumulatedSpace += diffSpace;\n            } else {\n              charBound.left += accumulatedSpace;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function (lineIndex) {\n      return lineIndex === this._textLines.length - 1;\n    },\n\n    /**\n     * Detect if a line has a linebreak and so we need to account for it when moving\n     * and counting style.\n     * It return always for text and Itext.\n     * @return Number\n     */\n    missingNewlineOffset: function () {\n      return 1;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function () {\n      return '#<fabric.Text (' + this.complexity() + '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function () {\n      var dims = this.callSuper('_getCacheCanvasDimensions');\n      var fontSize = this.fontSize;\n      dims.width += fontSize * dims.zoomX;\n      dims.height += fontSize * dims.zoomY;\n      return dims;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function (ctx) {\n      this._setTextStyles(ctx);\n\n      this._renderTextLinesBackground(ctx);\n\n      this._renderTextDecoration(ctx, 'underline');\n\n      this._renderText(ctx);\n\n      this._renderTextDecoration(ctx, 'overline');\n\n      this._renderTextDecoration(ctx, 'linethrough');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function (ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderTextStroke(ctx);\n\n        this._renderTextFill(ctx);\n      } else {\n        this._renderTextFill(ctx);\n\n        this._renderTextStroke(ctx);\n      }\n    },\n\n    /**\n     * Set the font parameter of the context with the object properties or with charStyle\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [charStyle] object with font style properties\n     * @param {String} [charStyle.fontFamily] Font Family\n     * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\n     * @param {String} [charStyle.fontWeight] Font weight\n     * @param {String} [charStyle.fontStyle] Font style (italic|normal)\n     */\n    _setTextStyles: function (ctx, charStyle, forMeasuring) {\n      ctx.textBaseline = 'alphabetic';\n      ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\n    },\n\n    /**\n     * calculate and return the text Width measuring each line.\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    calcTextWidth: function () {\n      var maxWidth = this.getLineWidth(0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this.getLineWidth(i);\n\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n\n      return maxWidth;\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function (method, ctx, line, left, top, lineIndex) {\n      this._renderChars(method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * Renders the text background for lines, taking care of style\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function (ctx) {\n      if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\n        return;\n      }\n\n      var lineTopOffset = 0,\n          heightOfLine,\n          lineLeftOffset,\n          originalFill = ctx.fillStyle,\n          line,\n          lastColor,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          boxStart = 0,\n          boxWidth = 0,\n          charBox,\n          currentColor;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n\n        if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor', i)) {\n          lineTopOffset += heightOfLine;\n          continue;\n        }\n\n        line = this._textLines[i];\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxWidth = 0;\n        boxStart = 0;\n        lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n\n          if (currentColor !== lastColor) {\n            ctx.fillStyle = lastColor;\n            lastColor && ctx.fillRect(leftOffset + lineLeftOffset + boxStart, topOffset + lineTopOffset, boxWidth, heightOfLine / this.lineHeight);\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastColor = currentColor;\n          } else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n\n        if (currentColor) {\n          ctx.fillStyle = currentColor;\n          ctx.fillRect(leftOffset + lineLeftOffset + boxStart, topOffset + lineTopOffset, boxWidth, heightOfLine / this.lineHeight);\n        }\n\n        lineTopOffset += heightOfLine;\n      }\n\n      ctx.fillStyle = originalFill; // if there is text background color no\n      // other shadows should be casted\n\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {Object} decl style declaration for cache\n     * @param {String} decl.fontFamily fontFamily\n     * @param {String} decl.fontStyle fontStyle\n     * @param {String} decl.fontWeight fontWeight\n     * @return {Object} reference to cache\n     */\n    getFontCache: function (decl) {\n      var fontFamily = decl.fontFamily.toLowerCase();\n\n      if (!fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = {};\n      }\n\n      var cache = fabric.charWidthsCache[fontFamily],\n          cacheProp = decl.fontStyle.toLowerCase() + '_' + (decl.fontWeight + '').toLowerCase();\n\n      if (!cache[cacheProp]) {\n        cache[cacheProp] = {};\n      }\n\n      return cache[cacheProp];\n    },\n\n    /**\n     * apply all the character style to canvas for rendering\n     * @private\n     * @param {String} _char\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} [decl]\n     */\n    _applyCharStyles: function (method, ctx, lineIndex, charIndex, styleDeclaration) {\n      this._setFillStyles(ctx, styleDeclaration);\n\n      this._setStrokeStyles(ctx, styleDeclaration);\n\n      ctx.font = this._getFontDeclaration(styleDeclaration);\n    },\n\n    /**\n     * measure and return the width of a single character.\n     * possibly overridden to accommodate different measure logic or\n     * to hook some external lib for character measurement\n     * @private\n     * @param {String} _char, char to be measured\n     * @param {Object} charStyle style of char to be measured\n     * @param {String} [previousChar] previous char\n     * @param {Object} [prevCharStyle] style of previous char\n     */\n    _measureChar: function (_char, charStyle, previousChar, prevCharStyle) {\n      // first i try to return from cache\n      var fontCache = this.getFontCache(charStyle),\n          fontDeclaration = this._getFontDeclaration(charStyle),\n          previousFontDeclaration = this._getFontDeclaration(prevCharStyle),\n          couple = previousChar + _char,\n          stylesAreEqual = fontDeclaration === previousFontDeclaration,\n          width,\n          coupleWidth,\n          previousWidth,\n          fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE,\n          kernedWidth;\n\n      if (previousChar && fontCache[previousChar] !== undefined) {\n        previousWidth = fontCache[previousChar];\n      }\n\n      if (fontCache[_char] !== undefined) {\n        kernedWidth = width = fontCache[_char];\n      }\n\n      if (stylesAreEqual && fontCache[couple] !== undefined) {\n        coupleWidth = fontCache[couple];\n        kernedWidth = coupleWidth - previousWidth;\n      }\n\n      if (width === undefined || previousWidth === undefined || coupleWidth === undefined) {\n        var ctx = this.getMeasuringContext(); // send a TRUE to specify measuring font size CACHE_FONT_SIZE\n\n        this._setTextStyles(ctx, charStyle, true);\n      }\n\n      if (width === undefined) {\n        kernedWidth = width = ctx.measureText(_char).width;\n        fontCache[_char] = width;\n      }\n\n      if (previousWidth === undefined && stylesAreEqual && previousChar) {\n        previousWidth = ctx.measureText(previousChar).width;\n        fontCache[previousChar] = previousWidth;\n      }\n\n      if (stylesAreEqual && coupleWidth === undefined) {\n        // we can measure the kerning couple and subtract the width of the previous character\n        coupleWidth = ctx.measureText(couple).width;\n        fontCache[couple] = coupleWidth;\n        kernedWidth = coupleWidth - previousWidth;\n      }\n\n      return {\n        width: width * fontMultiplier,\n        kernedWidth: kernedWidth * fontMultiplier\n      };\n    },\n\n    /**\n     * Computes height of character at given position\n     * @param {Number} line the line index number\n     * @param {Number} _char the character index number\n     * @return {Number} fontSize of the character\n     */\n    getHeightOfChar: function (line, _char) {\n      return this.getValueOfPropertyAt(line, _char, 'fontSize');\n    },\n\n    /**\n     * measure a text line measuring all characters.\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    measureLine: function (lineIndex) {\n      var lineInfo = this._measureLine(lineIndex);\n\n      if (this.charSpacing !== 0) {\n        lineInfo.width -= this._getWidthOfCharSpacing();\n      }\n\n      if (lineInfo.width < 0) {\n        lineInfo.width = 0;\n      }\n\n      return lineInfo;\n    },\n\n    /**\n     * measure every grapheme of a line, populating __charBounds\n     * @param {Number} lineIndex\n     * @return {Object} object.width total width of characters\n     * @return {Object} object.widthOfSpaces length of chars that match this._reSpacesAndTabs\n     */\n    _measureLine: function (lineIndex) {\n      var width = 0,\n          i,\n          grapheme,\n          line = this._textLines[lineIndex],\n          prevGrapheme,\n          graphemeInfo,\n          numOfSpaces = 0,\n          lineBounds = new Array(line.length);\n      this.__charBounds[lineIndex] = lineBounds;\n\n      for (i = 0; i < line.length; i++) {\n        grapheme = line[i];\n        graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\n        lineBounds[i] = graphemeInfo;\n        width += graphemeInfo.kernedWidth;\n        prevGrapheme = grapheme;\n      } // this latest bound box represent the last character of the line\n      // to simplify cursor handling in interactive mode.\n\n\n      lineBounds[i] = {\n        left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\n        width: 0,\n        kernedWidth: 0,\n        height: this.fontSize\n      };\n      return {\n        width: width,\n        numOfSpaces: numOfSpaces\n      };\n    },\n\n    /**\n     * Measure and return the info of a single grapheme.\n     * needs the the info of previous graphemes already filled\n     * @private\n     * @param {String} grapheme to be measured\n     * @param {Number} lineIndex index of the line where the char is\n     * @param {Number} charIndex position in the line\n     * @param {String} [prevGrapheme] character preceding the one to be measured\n     */\n    _getGraphemeBox: function (grapheme, lineIndex, charIndex, prevGrapheme, skipLeft) {\n      var style = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          prevStyle = prevGrapheme ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1) : {},\n          info = this._measureChar(grapheme, style, prevGrapheme, prevStyle),\n          kernedWidth = info.kernedWidth,\n          width = info.width,\n          charSpacing;\n\n      if (this.charSpacing !== 0) {\n        charSpacing = this._getWidthOfCharSpacing();\n        width += charSpacing;\n        kernedWidth += charSpacing;\n      }\n\n      var box = {\n        width: width,\n        left: 0,\n        height: style.fontSize,\n        kernedWidth: kernedWidth,\n        deltaY: style.deltaY\n      };\n\n      if (charIndex > 0 && !skipLeft) {\n        var previousBox = this.__charBounds[lineIndex][charIndex - 1];\n        box.left = previousBox.left + previousBox.width + info.kernedWidth - info.width;\n      }\n\n      return box;\n    },\n\n    /**\n     * Calculate height of line at 'lineIndex'\n     * @param {Number} lineIndex index of line to calculate\n     * @return {Number}\n     */\n    getHeightOfLine: function (lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          // char 0 is measured before the line cycle because it nneds to char\n      // emptylines\n      maxHeight = this.getHeightOfChar(lineIndex, 0);\n\n      for (var i = 1, len = line.length; i < len; i++) {\n        maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);\n      }\n\n      return this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n    },\n\n    /**\n     * Calculate text box height\n     */\n    calcTextHeight: function () {\n      var lineHeight,\n          height = 0;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineHeight = this.getHeightOfLine(i);\n        height += i === len - 1 ? lineHeight / this.lineHeight : lineHeight;\n      }\n\n      return height;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function () {\n      return -this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function () {\n      return -this.height / 2;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     */\n    _renderTextCommon: function (ctx, method) {\n      ctx.save();\n\n      var lineHeights = 0,\n          left = this._getLeftOffset(),\n          top = this._getTopOffset(),\n          offsets = this._applyPatternGradientTransform(ctx, method === 'fillText' ? this.fill : this.stroke);\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this.getHeightOfLine(i),\n            maxHeight = heightOfLine / this.lineHeight,\n            leftOffset = this._getLineLeftOffset(i);\n\n        this._renderTextLine(method, ctx, this._textLines[i], left + leftOffset - offsets.offsetX, top + lineHeights + maxHeight - offsets.offsetY, i);\n\n        lineHeights += heightOfLine;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function (ctx) {\n      if (!this.fill && !this.styleHas('fill')) {\n        return;\n      }\n\n      this._renderTextCommon(ctx, 'fillText');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function (ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n\n      this._setLineDash(ctx, this.strokeDashArray);\n\n      ctx.beginPath();\n\n      this._renderTextCommon(ctx, 'strokeText');\n\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _renderChars: function (method, ctx, line, left, top, lineIndex) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox,\n          boxWidth = 0,\n          timeToRender,\n          shortCut = !isJustify && this.charSpacing === 0 && this.isEmptyStyles(lineIndex);\n      ctx.save();\n      top -= lineHeight * this._fontSizeFraction / this.lineHeight;\n\n      if (shortCut) {\n        // render all the line in one pass without checking\n        this._renderChar(method, ctx, lineIndex, 0, this.textLines[lineIndex], left, top, lineHeight);\n\n        ctx.restore();\n        return;\n      }\n\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n\n        if (boxWidth === 0) {\n          left += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        } else {\n          boxWidth += charBox.kernedWidth;\n        }\n\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChanged(actualStyle, nextStyle);\n        }\n\n        if (timeToRender) {\n          this._renderChar(method, ctx, lineIndex, i, charsToRender, left, top, lineHeight);\n\n          charsToRender = '';\n          actualStyle = nextStyle;\n          left += boxWidth;\n          boxWidth = 0;\n        }\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function (method, ctx, lineIndex, charIndex, _char, left, top) {\n      var decl = this._getStyleDeclaration(lineIndex, charIndex),\n          fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          shouldFill = method === 'fillText' && fullDecl.fill,\n          shouldStroke = method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;\n\n      if (!shouldStroke && !shouldFill) {\n        return;\n      }\n\n      decl && ctx.save();\n\n      this._applyCharStyles(method, ctx, lineIndex, charIndex, fullDecl);\n\n      if (decl && decl.textBackgroundColor) {\n        this._removeShadow(ctx);\n      }\n\n      if (decl && decl.deltaY) {\n        top += decl.deltaY;\n      }\n\n      shouldFill && ctx.fillText(_char, left, top);\n      shouldStroke && ctx.strokeText(_char, left, top);\n      decl && ctx.restore();\n    },\n\n    /**\n     * Turns the character into a 'superior figure' (i.e. 'superscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSuperscript: function (start, end) {\n      return this._setScript(start, end, this.superscript);\n    },\n\n    /**\n     * Turns the character into an 'inferior figure' (i.e. 'subscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSubscript: function (start, end) {\n      return this._setScript(start, end, this.subscript);\n    },\n\n    /**\n     * Applies 'schema' at given position\n     * @private\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @param {Number} schema\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    _setScript: function (start, end, schema) {\n      var loc = this.get2DCursorLocation(start, true),\n          fontSize = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'fontSize'),\n          dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'deltaY'),\n          style = {\n        fontSize: fontSize * schema.size,\n        deltaY: dy + fontSize * schema.baseline\n      };\n      this.setSelectionStyles(style, start, end);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChanged: function (prevStyle, thisStyle) {\n      return prevStyle.fill !== thisStyle.fill || prevStyle.stroke !== thisStyle.stroke || prevStyle.strokeWidth !== thisStyle.strokeWidth || prevStyle.fontSize !== thisStyle.fontSize || prevStyle.fontFamily !== thisStyle.fontFamily || prevStyle.fontWeight !== thisStyle.fontWeight || prevStyle.fontStyle !== thisStyle.fontStyle || prevStyle.deltaY !== thisStyle.deltaY;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChangedForSvg: function (prevStyle, thisStyle) {\n      return this._hasStyleChanged(prevStyle, thisStyle) || prevStyle.overline !== thisStyle.overline || prevStyle.underline !== thisStyle.underline || prevStyle.linethrough !== thisStyle.linethrough;\n    },\n\n    /**\n     * @private\n     * @param {Number} lineIndex index text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function (lineIndex) {\n      var lineWidth = this.getLineWidth(lineIndex);\n\n      if (this.textAlign === 'center') {\n        return (this.width - lineWidth) / 2;\n      }\n\n      if (this.textAlign === 'right') {\n        return this.width - lineWidth;\n      }\n\n      if (this.textAlign === 'justify-center' && this.isEndOfWrapping(lineIndex)) {\n        return (this.width - lineWidth) / 2;\n      }\n\n      if (this.textAlign === 'justify-right' && this.isEndOfWrapping(lineIndex)) {\n        return this.width - lineWidth;\n      }\n\n      return 0;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function () {\n      this.__lineWidths = [];\n      this.__lineHeights = [];\n      this.__charBounds = [];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearDimensionCache: function () {\n      var shouldClear = this._forceClearCache;\n      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\n\n      if (shouldClear) {\n        this.dirty = true;\n        this._forceClearCache = false;\n      }\n\n      return shouldClear;\n    },\n\n    /**\n     * Measure a single line given its index. Used to calculate the initial\n     * text bounding box. The values are calculated and stored in __lineWidths cache.\n     * @private\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    getLineWidth: function (lineIndex) {\n      if (this.__lineWidths[lineIndex]) {\n        return this.__lineWidths[lineIndex];\n      }\n\n      var width,\n          line = this._textLines[lineIndex],\n          lineInfo;\n\n      if (line === '') {\n        width = 0;\n      } else {\n        lineInfo = this.measureLine(lineIndex);\n        width = lineInfo.width;\n      }\n\n      this.__lineWidths[lineIndex] = width;\n      return width;\n    },\n    _getWidthOfCharSpacing: function () {\n      if (this.charSpacing !== 0) {\n        return this.fontSize * this.charSpacing / 1000;\n      }\n\n      return 0;\n    },\n\n    /**\n     * Retrieves the value of property at given character position\n     * @param {Number} lineIndex the line number\n     * @param {Number} charIndex the charater number\n     * @param {String} property the property name\n     * @returns the value of 'property'\n     */\n    getValueOfPropertyAt: function (lineIndex, charIndex, property) {\n      var charStyle = this._getStyleDeclaration(lineIndex, charIndex);\n\n      if (charStyle && typeof charStyle[property] !== 'undefined') {\n        return charStyle[property];\n      }\n\n      return this[property];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function (ctx, type) {\n      if (!this[type] && !this.styleHas(type)) {\n        return;\n      }\n\n      var heightOfLine,\n          size,\n          _size,\n          lineLeftOffset,\n          dy,\n          _dy,\n          line,\n          lastDecoration,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          top,\n          boxStart,\n          boxWidth,\n          charBox,\n          currentDecoration,\n          maxHeight,\n          currentFill,\n          lastFill,\n          charSpacing = this._getWidthOfCharSpacing();\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n\n        if (!this[type] && !this.styleHas(type, i)) {\n          topOffset += heightOfLine;\n          continue;\n        }\n\n        line = this._textLines[i];\n        maxHeight = heightOfLine / this.lineHeight;\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxStart = 0;\n        boxWidth = 0;\n        lastDecoration = this.getValueOfPropertyAt(i, 0, type);\n        lastFill = this.getValueOfPropertyAt(i, 0, 'fill');\n        top = topOffset + maxHeight * (1 - this._fontSizeFraction);\n        size = this.getHeightOfChar(i, 0);\n        dy = this.getValueOfPropertyAt(i, 0, 'deltaY');\n\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentDecoration = this.getValueOfPropertyAt(i, j, type);\n          currentFill = this.getValueOfPropertyAt(i, j, 'fill');\n          _size = this.getHeightOfChar(i, j);\n          _dy = this.getValueOfPropertyAt(i, j, 'deltaY');\n\n          if ((currentDecoration !== lastDecoration || currentFill !== lastFill || _size !== size || _dy !== dy) && boxWidth > 0) {\n            ctx.fillStyle = lastFill;\n            lastDecoration && lastFill && ctx.fillRect(leftOffset + lineLeftOffset + boxStart, top + this.offsets[type] * size + dy, boxWidth, this.fontSize / 15);\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastDecoration = currentDecoration;\n            lastFill = currentFill;\n            size = _size;\n            dy = _dy;\n          } else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n\n        ctx.fillStyle = currentFill;\n        currentDecoration && currentFill && ctx.fillRect(leftOffset + lineLeftOffset + boxStart, top + this.offsets[type] * size + dy, boxWidth - charSpacing, this.fontSize / 15);\n        topOffset += heightOfLine;\n      } // if there is text background color no\n      // other shadows should be casted\n\n\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * return font declaration string for canvas context\n     * @param {Object} [styleObject] object\n     * @returns {String} font declaration formatted for canvas context.\n     */\n    _getFontDeclaration: function (styleObject, forMeasuring) {\n      var style = styleObject || this,\n          family = this.fontFamily,\n          fontIsGeneric = fabric.Text.genericFonts.indexOf(family.toLowerCase()) > -1;\n      var fontFamily = family === undefined || family.indexOf('\\'') > -1 || family.indexOf(',') > -1 || family.indexOf('\"') > -1 || fontIsGeneric ? style.fontFamily : '\"' + style.fontFamily + '\"';\n      return [// node-canvas needs \"weight style\", while browsers need \"style weight\"\n      // verify if this can be fixed in JSDOM\n      fabric.isLikelyNode ? style.fontWeight : style.fontStyle, fabric.isLikelyNode ? style.fontStyle : style.fontWeight, forMeasuring ? this.CACHE_FONT_SIZE + 'px' : style.fontSize + 'px', fontFamily].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function (ctx) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n      }\n\n      this.callSuper('render', ctx);\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @param {String} text text to split\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function (text) {\n      var lines = text.split(this._reNewline),\n          newLines = new Array(lines.length),\n          newLine = ['\\n'],\n          newText = [];\n\n      for (var i = 0; i < lines.length; i++) {\n        newLines[i] = fabric.util.string.graphemeSplit(lines[i]);\n        newText = newText.concat(newLines[i], newLine);\n      }\n\n      newText.pop();\n      return {\n        _unwrappedLines: newLines,\n        lines: lines,\n        graphemeText: newText,\n        graphemeLines: newLines\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      var additionalProperties = ['text', 'fontSize', 'fontWeight', 'fontFamily', 'fontStyle', 'lineHeight', 'underline', 'overline', 'linethrough', 'textAlign', 'textBackgroundColor', 'charSpacing'].concat(propertiesToInclude);\n      var obj = this.callSuper('toObject', additionalProperties);\n      obj.styles = clone(this.styles, true);\n      return obj;\n    },\n\n    /**\n     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    set: function (key, value) {\n      this.callSuper('set', key, value);\n      var needsDims = false;\n\n      if (typeof key === 'object') {\n        for (var _key in key) {\n          needsDims = needsDims || this._dimensionAffectingProps.indexOf(_key) !== -1;\n        }\n      } else {\n        needsDims = this._dimensionAffectingProps.indexOf(key) !== -1;\n      }\n\n      if (needsDims) {\n        this.initDimensions();\n        this.setCoords();\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function () {\n      return 1;\n    }\n  });\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y dx dy font-family font-style font-weight font-size letter-spacing text-decoration text-anchor'.split(' '));\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n\n  fabric.Text.fromElement = function (element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES),\n        parsedAnchor = parsedAttributes.textAnchor || 'left';\n    options = fabric.util.object.extend(options ? clone(options) : {}, parsedAttributes);\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n\n    if (parsedAttributes.textDecoration) {\n      var textDecoration = parsedAttributes.textDecoration;\n\n      if (textDecoration.indexOf('underline') !== -1) {\n        options.underline = true;\n      }\n\n      if (textDecoration.indexOf('overline') !== -1) {\n        options.overline = true;\n      }\n\n      if (textDecoration.indexOf('line-through') !== -1) {\n        options.linethrough = true;\n      }\n\n      delete options.textDecoration;\n    }\n\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    var textContent = ''; // The XML is not properly parsed in IE9 so a workaround to get\n    // textContent is through firstChild.data. Another workaround would be\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n\n    if (!('textContent' in element)) {\n      if ('firstChild' in element && element.firstChild !== null) {\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\n          textContent = element.firstChild.data;\n        }\n      }\n    } else {\n      textContent = element.textContent;\n    }\n\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n    var originalStrokeWidth = options.strokeWidth;\n    options.strokeWidth = 0;\n    var text = new fabric.Text(textContent, options),\n        textHeightScaleFactor = text.getScaledHeight() / text.height,\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n        textHeight = text.getScaledHeight() + scaledDiff,\n        offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        fabric output by default at top, left.\n    */\n\n    if (parsedAnchor === 'center') {\n      offX = text.getScaledWidth() / 2;\n    }\n\n    if (parsedAnchor === 'right') {\n      offX = text.getScaledWidth();\n    }\n\n    text.set({\n      left: text.left - offX,\n      top: text.top - (textHeight - text.fontSize * (0.07 + text._fontSizeFraction)) / text.lineHeight,\n      strokeWidth: typeof originalStrokeWidth !== 'undefined' ? originalStrokeWidth : 1\n    });\n    callback(text);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n   */\n\n\n  fabric.Text.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Text', object, callback, 'text');\n  };\n\n  fabric.Text.genericFonts = ['sans-serif', 'serif', 'cursive', 'fantasy', 'monospace'];\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Text);\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function () {\n  fabric.util.object.extend(fabric.Text.prototype,\n  /** @lends fabric.Text.prototype */\n  {\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function (lineIndex) {\n      if (!this.styles) {\n        return true;\n      }\n\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return true;\n      }\n\n      var obj = typeof lineIndex === 'undefined' ? this.styles : {\n        line: this.styles[lineIndex]\n      };\n\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          // eslint-disable-next-line no-unused-vars\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * This function is used to detect if a text will use a particular property or not.\n     * @param {String} property to check for\n     * @param {Number} lineIndex to check the style on\n     * @return {Boolean}\n     */\n    styleHas: function (property, lineIndex) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return false;\n      }\n\n      var obj = typeof lineIndex === 'undefined' ? this.styles : {\n        0: this.styles[lineIndex]\n      }; // eslint-disable-next-line\n\n      for (var p1 in obj) {\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          if (typeof obj[p1][p2][property] !== 'undefined') {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Check if characters in a text have a value for a property\n     * whose value matches the textbox's value for that property.  If so,\n     * the character-level property is deleted.  If the character\n     * has no other properties, then it is also deleted.  Finally,\n     * if the line containing that character has no other characters\n     * then it also is deleted.\n     *\n     * @param {string} property The property to compare between characters and text.\n     */\n    cleanStyle: function (property) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n\n      var obj = this.styles,\n          stylesCount = 0,\n          letterCount,\n          stylePropertyValue,\n          allStyleObjectPropertiesMatch = true,\n          graphemeCount = 0,\n          styleObject; // eslint-disable-next-line\n\n      for (var p1 in obj) {\n        letterCount = 0; // eslint-disable-next-line\n\n        for (var p2 in obj[p1]) {\n          var styleObject = obj[p1][p2],\n              stylePropertyHasBeenSet = styleObject.hasOwnProperty(property);\n          stylesCount++;\n\n          if (stylePropertyHasBeenSet) {\n            if (!stylePropertyValue) {\n              stylePropertyValue = styleObject[property];\n            } else if (styleObject[property] !== stylePropertyValue) {\n              allStyleObjectPropertiesMatch = false;\n            }\n\n            if (styleObject[property] === this[property]) {\n              delete styleObject[property];\n            }\n          } else {\n            allStyleObjectPropertiesMatch = false;\n          }\n\n          if (Object.keys(styleObject).length !== 0) {\n            letterCount++;\n          } else {\n            delete obj[p1][p2];\n          }\n        }\n\n        if (letterCount === 0) {\n          delete obj[p1];\n        }\n      } // if every grapheme has the same style set then\n      // delete those styles and set it on the parent\n\n\n      for (var i = 0; i < this._textLines.length; i++) {\n        graphemeCount += this._textLines[i].length;\n      }\n\n      if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\n        this[property] = stylePropertyValue;\n        this.removeStyle(property);\n      }\n    },\n\n    /**\n     * Remove a style property or properties from all individual character styles\n     * in a text object.  Deletes the character style object if it contains no other style\n     * props.  Deletes a line style object if it contains no other character styles.\n     *\n     * @param {String} props The property to remove from character styles.\n     */\n    removeStyle: function (property) {\n      if (!this.styles || !property || property === '') {\n        return;\n      }\n\n      var obj = this.styles,\n          line,\n          lineNum,\n          charNum;\n\n      for (lineNum in obj) {\n        line = obj[lineNum];\n\n        for (charNum in line) {\n          delete line[charNum][property];\n\n          if (Object.keys(line[charNum]).length === 0) {\n            delete line[charNum];\n          }\n        }\n\n        if (Object.keys(line).length === 0) {\n          delete obj[lineNum];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function (index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex);\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. usefull to manage styles.\n     */\n    get2DCursorLocation: function (selectionStart, skipWrapping) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n\n      var lines = skipWrapping ? this._unwrappedTextLines : this._textLines,\n          len = lines.length;\n\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= lines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n\n        selectionStart -= lines[i].length + this.missingNewlineOffset(i);\n      }\n\n      return {\n        lineIndex: i - 1,\n        charIndex: lines[i - 1].length < selectionStart ? lines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * if startIndex or endIndex are not provided, slectionStart or selectionEnd will be used.\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @param {Boolean} [complete] get full style or not\n     * @return {Array} styles an array with one, zero or more Style objects\n     */\n    getSelectionStyles: function (startIndex, endIndex, complete) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n\n      var styles = [];\n\n      for (var i = startIndex; i < endIndex; i++) {\n        styles.push(this.getStyleAtPosition(i, complete));\n      }\n\n      return styles;\n    },\n\n    /**\n     * Gets style of a current selection/cursor position\n     * @param {Number} position  to get styles at\n     * @param {Boolean} [complete] full style if true\n     * @return {Object} style Style object at a specified index\n     * @private\n     */\n    getStyleAtPosition: function (position, complete) {\n      var loc = this.get2DCursorLocation(position),\n          style = complete ? this.getCompleteStyleDeclaration(loc.lineIndex, loc.charIndex) : this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection, if no selection exist, do not set anything.\n     * @param {Object} [styles] Styles object\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function (styles, startIndex, endIndex) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n\n      for (var i = startIndex; i < endIndex; i++) {\n        this._extendStyles(i, styles);\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n\n\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * get the reference, not a clone, of the style object for a given character\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @return {Object} style object\n     */\n    _getStyleDeclaration: function (lineIndex, charIndex) {\n      var lineStyle = this.styles && this.styles[lineIndex];\n\n      if (!lineStyle) {\n        return null;\n      }\n\n      return lineStyle[charIndex];\n    },\n\n    /**\n     * return a new object that contains all the style property for a character\n     * the object returned is newly created\n     * @param {Number} lineIndex of the line where the character is\n     * @param {Number} charIndex position of the character on the line\n     * @return {Object} style object\n     */\n    getCompleteStyleDeclaration: function (lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex) || {},\n          styleObject = {},\n          prop;\n\n      for (var i = 0; i < this._styleProperties.length; i++) {\n        prop = this._styleProperties[i];\n        styleObject[prop] = typeof style[prop] === 'undefined' ? this[prop] : style[prop];\n      }\n\n      return styleObject;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function (lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function (lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @return {Boolean} if the line exists or not\n     * @private\n     */\n    _getLineStyle: function (lineIndex) {\n      return !!this.styles[lineIndex];\n    },\n\n    /**\n     * Set the line style to an empty object so that is initialized\n     * @param {Number} lineIndex\n     * @private\n     */\n    _setLineStyle: function (lineIndex) {\n      this.styles[lineIndex] = {};\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function (lineIndex) {\n      delete this.styles[lineIndex];\n    }\n  });\n})();\n\n(function () {\n  function parseDecoration(object) {\n    if (object.textDecoration) {\n      object.textDecoration.indexOf('underline') > -1 && (object.underline = true);\n      object.textDecoration.indexOf('line-through') > -1 && (object.linethrough = true);\n      object.textDecoration.indexOf('overline') > -1 && (object.overline = true);\n      delete object.textDecoration;\n    }\n  }\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n\n\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable,\n  /** @lends fabric.IText.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of default cursor (when not overwritten by character style)\n     * @type String\n     * @default\n     */\n    cursorColor: '#333',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    __widthOfSpace: [],\n\n    /**\n     * Helps determining when the text is in composition, so that the cursor\n     * rendering is altered.\n     */\n    inCompositionMode: false,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function (text, options) {\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function (index) {\n      index = Math.max(index, 0);\n\n      this._updateAndFire('selectionStart', index);\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function (index) {\n      index = Math.min(index, this.text.length);\n\n      this._updateAndFire('selectionEnd', index);\n    },\n\n    /**\n     * @private\n     * @param {String} property 'selectionStart' or 'selectionEnd'\n     * @param {Number} index new position of property\n     */\n    _updateAndFire: function (property, index) {\n      if (this[property] !== index) {\n        this._fireSelectionChanged();\n\n        this[property] = index;\n      }\n\n      this._updateTextarea();\n    },\n\n    /**\n     * Fires the even of selection changed\n     * @private\n     */\n    _fireSelectionChanged: function () {\n      this.fire('selection:changed');\n      this.canvas && this.canvas.fire('text:selection:changed', {\n        target: this\n      });\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @private\n     */\n    initDimensions: function () {\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this.callSuper('initDimensions');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function (ctx) {\n      this.clearContextTop();\n      this.callSuper('render', ctx); // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n      // the correct position but not at every cursor animation.\n\n      this.cursorOffsetCache = {};\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function (ctx) {\n      this.callSuper('_render', ctx);\n    },\n\n    /**\n     * Prepare and clean the contextTop\n     */\n    clearContextTop: function (skipRestore) {\n      if (!this.isEditing || !this.canvas || !this.canvas.contextTop) {\n        return;\n      }\n\n      var ctx = this.canvas.contextTop,\n          v = this.canvas.viewportTransform;\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      this.transform(ctx);\n      this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n\n      this._clearTextArea(ctx);\n\n      skipRestore || ctx.restore();\n    },\n\n    /**\n     * Renders cursor or selection (depending on what exists)\n     * it does on the contextTop. If contextTop is not available, do nothing.\n     */\n    renderCursorOrSelection: function () {\n      if (!this.isEditing || !this.canvas || !this.canvas.contextTop) {\n        return;\n      }\n\n      var boundaries = this._getCursorBoundaries(),\n          ctx = this.canvas.contextTop;\n\n      this.clearContextTop(true);\n\n      if (this.selectionStart === this.selectionEnd) {\n        this.renderCursor(boundaries, ctx);\n      } else {\n        this.renderSelection(boundaries, ctx);\n      }\n\n      ctx.restore();\n    },\n    _clearTextArea: function (ctx) {\n      // we add 4 pixel, to be sure to do not leave any pixel out\n      var width = this.width + 4,\n          height = this.height + 4;\n      ctx.clearRect(-width / 2, -height / 2, width, height);\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function (position) {\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n      if (typeof position === 'undefined') {\n        position = this.selectionStart;\n      }\n\n      var left = this._getLeftOffset(),\n          top = this._getTopOffset(),\n          offsets = this._getCursorBoundariesOffsets(position);\n\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function (position) {\n      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n        return this.cursorOffsetCache;\n      }\n\n      var lineLeftOffset,\n          lineIndex,\n          charIndex,\n          topOffset = 0,\n          leftOffset = 0,\n          boundaries,\n          cursorPosition = this.get2DCursorLocation(position);\n      charIndex = cursorPosition.charIndex;\n      lineIndex = cursorPosition.lineIndex;\n\n      for (var i = 0; i < lineIndex; i++) {\n        topOffset += this.getHeightOfLine(i);\n      }\n\n      lineLeftOffset = this._getLineLeftOffset(lineIndex);\n      var bound = this.__charBounds[lineIndex][charIndex];\n      bound && (leftOffset = bound.left);\n\n      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n        leftOffset -= this._getWidthOfCharSpacing();\n      }\n\n      boundaries = {\n        top: topOffset,\n        left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0)\n      };\n      this.cursorOffsetCache = boundaries;\n      return this.cursorOffsetCache;\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function (boundaries, ctx) {\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\n          multiplier = this.scaleX * this.canvas.getZoom(),\n          cursorWidth = this.cursorWidth / multiplier,\n          topOffset = boundaries.topOffset,\n          dy = this.getValueOfPropertyAt(lineIndex, charIndex, 'deltaY');\n      topOffset += (1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex) / this.lineHeight - charHeight * (1 - this._fontSizeFraction);\n\n      if (this.inCompositionMode) {\n        this.renderSelection(boundaries, ctx);\n      }\n\n      ctx.fillStyle = this.getValueOfPropertyAt(lineIndex, charIndex, 'fill');\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n      ctx.fillRect(boundaries.left + boundaries.leftOffset - cursorWidth / 2, topOffset + boundaries.top + dy, cursorWidth, charHeight);\n    },\n\n    /**\n     * Renders text selection\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function (boundaries, ctx) {\n      var selectionStart = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart,\n          selectionEnd = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd,\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          start = this.get2DCursorLocation(selectionStart),\n          end = this.get2DCursorLocation(selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex,\n          startChar = start.charIndex < 0 ? 0 : start.charIndex,\n          endChar = end.charIndex < 0 ? 0 : end.charIndex;\n\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getLineLeftOffset(i) || 0,\n            lineHeight = this.getHeightOfLine(i),\n            realLineHeight = 0,\n            boxStart = 0,\n            boxEnd = 0;\n\n        if (i === startLine) {\n          boxStart = this.__charBounds[startLine][startChar].left;\n        }\n\n        if (i >= startLine && i < endLine) {\n          boxEnd = isJustify && !this.isEndOfWrapping(i) ? this.width : this.getLineWidth(i) || 5; // WTF is this 5?\n        } else if (i === endLine) {\n          if (endChar === 0) {\n            boxEnd = this.__charBounds[endLine][endChar].left;\n          } else {\n            var charSpacing = this._getWidthOfCharSpacing();\n\n            boxEnd = this.__charBounds[endLine][endChar - 1].left + this.__charBounds[endLine][endChar - 1].width - charSpacing;\n          }\n        }\n\n        realLineHeight = lineHeight;\n\n        if (this.lineHeight < 1 || i === endLine && this.lineHeight > 1) {\n          lineHeight /= this.lineHeight;\n        }\n\n        if (this.inCompositionMode) {\n          ctx.fillStyle = this.compositionColor || 'black';\n          ctx.fillRect(boundaries.left + lineOffset + boxStart, boundaries.top + boundaries.topOffset + lineHeight, boxEnd - boxStart, 1);\n        } else {\n          ctx.fillStyle = this.selectionColor;\n          ctx.fillRect(boundaries.left + lineOffset + boxStart, boundaries.top + boundaries.topOffset, boxEnd - boxStart, lineHeight);\n        }\n\n        boundaries.topOffset += realLineHeight;\n      }\n    },\n\n    /**\n     * High level function to know the height of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns fontSize of char at the current cursor\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function () {\n      var cp = this._getCurrentCharIndex();\n\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\n    },\n\n    /**\n     * High level function to know the color of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns color (fill) of char at the current cursor\n     * @return {String} Character color (fill)\n     */\n    getCurrentCharColor: function () {\n      var cp = this._getCurrentCharIndex();\n\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fill');\n    },\n\n    /**\n     * Returns the cursor position for the getCurrent.. functions\n     * @private\n     */\n    _getCurrentCharIndex: function () {\n      var cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\n          charIndex = cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\n      return {\n        l: cursorPosition.lineIndex,\n        c: charIndex\n      };\n    }\n  });\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as argument\n   */\n\n  fabric.IText.fromObject = function (object, callback) {\n    parseDecoration(object);\n\n    if (object.styles) {\n      for (var i in object.styles) {\n        for (var j in object.styles[i]) {\n          parseDecoration(object.styles[i][j]);\n        }\n      }\n    }\n\n    fabric.Object._fromObject('IText', object, callback, 'text');\n  };\n})();\n\n(function () {\n  var clone = fabric.util.object.clone;\n  fabric.util.object.extend(fabric.IText.prototype,\n  /** @lends fabric.IText.prototype */\n  {\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function () {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    },\n    onDeselect: function () {\n      this.isEditing && this.exitEditing();\n      this.selected = false;\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function () {\n      var _this = this;\n\n      this.on('added', function () {\n        var canvas = _this.canvas;\n\n        if (canvas) {\n          if (!canvas._hasITextHandlers) {\n            canvas._hasITextHandlers = true;\n\n            _this._initCanvasHandlers(canvas);\n          }\n\n          canvas._iTextInstances = canvas._iTextInstances || [];\n\n          canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n    initRemovedHandler: function () {\n      var _this = this;\n\n      this.on('removed', function () {\n        var canvas = _this.canvas;\n\n        if (canvas) {\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n\n          if (canvas._iTextInstances.length === 0) {\n            canvas._hasITextHandlers = false;\n\n            _this._removeCanvasHandlers(canvas);\n          }\n        }\n      });\n    },\n\n    /**\n     * register canvas event to manage exiting on other instances\n     * @private\n     */\n    _initCanvasHandlers: function (canvas) {\n      canvas._mouseUpITextHandler = function () {\n        if (canvas._iTextInstances) {\n          canvas._iTextInstances.forEach(function (obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      };\n\n      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * remove canvas event to manage exiting on other instances\n     * @private\n     */\n    _removeCanvasHandlers: function (canvas) {\n      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * @private\n     */\n    _tick: function () {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function (obj, targetOpacity, duration, completeMethod) {\n      var tickState;\n      tickState = {\n        isAborted: false,\n        abort: function () {\n          this.isAborted = true;\n        }\n      };\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function () {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function () {\n          // we do not want to animate a selection, only cursor\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function () {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function () {\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n\n      this._cursorTimeout1 = setTimeout(function () {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function (restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this._cursorTimeout2 = setTimeout(function () {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function () {\n      var shouldClear = this._currentTickState || this._currentTickCompleteState,\n          canvas = this.canvas;\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n      this._currentCursorOpacity = 0; // to clear just itext area we need to transform the context\n      // it may not be worth it\n\n      if (shouldClear && canvas) {\n        canvas.clearContext(canvas.contextTop || canvas.contextContainer);\n      }\n    },\n\n    /**\n     * Selects entire text\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectAll: function () {\n      this.selectionStart = 0;\n      this.selectionEnd = this._text.length;\n\n      this._fireSelectionChanged();\n\n      this._updateTextarea();\n\n      return this;\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function () {\n      return this._text.slice(this.selectionStart, this.selectionEnd).join('');\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function (startFrom) {\n      var offset = 0,\n          index = startFrom - 1; // remove space before cursor first\n\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index--;\n        }\n      }\n\n      while (/\\S/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function (startFrom) {\n      var offset = 0,\n          index = startFrom; // remove space after cursor first\n\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index++;\n        }\n      }\n\n      while (/\\S/.test(this._text[index]) && index < this._text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function (startFrom) {\n      var offset = 0,\n          index = startFrom - 1;\n\n      while (!/\\n/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function (startFrom) {\n      var offset = 0,\n          index = startFrom;\n\n      while (!/\\n/.test(this._text[index]) && index < this._text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function (selectionStart, direction) {\n      var text = this._text,\n          index = this._reSpace.test(text[selectionStart]) ? selectionStart - 1 : selectionStart,\n          _char = text[index],\n          // wrong\n      reNonWord = fabric.reNonWord;\n\n      while (!reNonWord.test(_char) && index > 0 && index < text.length) {\n        index += direction;\n        _char = text[index];\n      }\n\n      if (reNonWord.test(_char)) {\n        index += direction === 1 ? 0 : 1;\n      }\n\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function (selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1),\n\n      /* search backwards */\n      newSelectionEnd = this.searchWordBoundary(selectionStart, 1);\n      /* search forward */\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n\n      this._fireSelectionChanged();\n\n      this._updateTextarea();\n\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectLine: function (selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n\n      this._fireSelectionChanged();\n\n      this._updateTextarea();\n\n      return this;\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function (e) {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.canvas.calcOffset();\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n      this.initHiddenTextarea(e);\n      this.hiddenTextarea.focus();\n      this.hiddenTextarea.value = this.text;\n\n      this._updateTextarea();\n\n      this._saveEditingProps();\n\n      this._setEditingProps();\n\n      this._textBeforeEdit = this.text;\n\n      this._tick();\n\n      this.fire('editing:entered');\n\n      this._fireSelectionChanged();\n\n      if (!this.canvas) {\n        return this;\n      }\n\n      this.canvas.fire('text:editing:entered', {\n        target: this\n      });\n      this.initMouseMoveHandler();\n      this.canvas.requestRenderAll();\n      return this;\n    },\n    exitEditingOnOthers: function (canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function (obj) {\n          obj.selected = false;\n\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function () {\n      this.canvas.on('mouse:move', this.mouseMoveHandler);\n    },\n\n    /**\n     * @private\n     */\n    mouseMoveHandler: function (options) {\n      if (!this.__isMousedown || !this.isEditing) {\n        return;\n      }\n\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n          currentStart = this.selectionStart,\n          currentEnd = this.selectionEnd;\n\n      if ((newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd) && (currentStart === newSelectionStart || currentEnd === newSelectionStart)) {\n        return;\n      }\n\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n        this.selectionStart = this.__selectionStartOnMouseDown;\n        this.selectionEnd = newSelectionStart;\n      } else {\n        this.selectionStart = newSelectionStart;\n        this.selectionEnd = this.__selectionStartOnMouseDown;\n      }\n\n      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n        this.restartCursorIfNeeded();\n\n        this._fireSelectionChanged();\n\n        this._updateTextarea();\n\n        this.renderCursorOrSelection();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function () {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * convert from textarea to grapheme indexes\n     */\n    fromStringToGraphemeSelection: function (start, end, text) {\n      var smallerTextStart = text.slice(0, start),\n          graphemeStart = fabric.util.string.graphemeSplit(smallerTextStart).length;\n\n      if (start === end) {\n        return {\n          selectionStart: graphemeStart,\n          selectionEnd: graphemeStart\n        };\n      }\n\n      var smallerTextEnd = text.slice(start, end),\n          graphemeEnd = fabric.util.string.graphemeSplit(smallerTextEnd).length;\n      return {\n        selectionStart: graphemeStart,\n        selectionEnd: graphemeStart + graphemeEnd\n      };\n    },\n\n    /**\n     * convert from fabric to textarea values\n     */\n    fromGraphemeToStringSelection: function (start, end, _text) {\n      var smallerTextStart = _text.slice(0, start),\n          graphemeStart = smallerTextStart.join('').length;\n\n      if (start === end) {\n        return {\n          selectionStart: graphemeStart,\n          selectionEnd: graphemeStart\n        };\n      }\n\n      var smallerTextEnd = _text.slice(start, end),\n          graphemeEnd = smallerTextEnd.join('').length;\n\n      return {\n        selectionStart: graphemeStart,\n        selectionEnd: graphemeStart + graphemeEnd\n      };\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function () {\n      this.cursorOffsetCache = {};\n\n      if (!this.hiddenTextarea) {\n        return;\n      }\n\n      if (!this.inCompositionMode) {\n        var newSelection = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);\n        this.hiddenTextarea.selectionStart = newSelection.selectionStart;\n        this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\n      }\n\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateFromTextArea: function () {\n      if (!this.hiddenTextarea) {\n        return;\n      }\n\n      this.cursorOffsetCache = {};\n      this.text = this.hiddenTextarea.value;\n\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n\n      var newSelection = this.fromStringToGraphemeSelection(this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\n      this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\n\n      if (!this.inCompositionMode) {\n        this.selectionStart = newSelection.selectionStart;\n      }\n\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateTextareaPosition: function () {\n      if (this.selectionStart === this.selectionEnd) {\n        var style = this._calcTextareaPosition();\n\n        this.hiddenTextarea.style.left = style.left;\n        this.hiddenTextarea.style.top = style.top;\n      }\n    },\n\n    /**\n     * @private\n     * @return {Object} style contains style for hiddenTextarea\n     */\n    _calcTextareaPosition: function () {\n      if (!this.canvas) {\n        return {\n          x: 1,\n          y: 1\n        };\n      }\n\n      var desiredPosition = this.inCompositionMode ? this.compositionStart : this.selectionStart,\n          boundaries = this._getCursorBoundaries(desiredPosition),\n          cursorLocation = this.get2DCursorLocation(desiredPosition),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') * this.lineHeight,\n          leftOffset = boundaries.leftOffset,\n          m = this.calcTransformMatrix(),\n          p = {\n        x: boundaries.left + leftOffset,\n        y: boundaries.top + boundaries.topOffset + charHeight\n      },\n          retinaScaling = this.canvas.getRetinaScaling(),\n          upperCanvas = this.canvas.upperCanvasEl,\n          upperCanvasWidth = upperCanvas.width / retinaScaling,\n          upperCanvasHeight = upperCanvas.height / retinaScaling,\n          maxWidth = upperCanvasWidth - charHeight,\n          maxHeight = upperCanvasHeight - charHeight,\n          scaleX = upperCanvas.clientWidth / upperCanvasWidth,\n          scaleY = upperCanvas.clientHeight / upperCanvasHeight;\n\n      p = fabric.util.transformPoint(p, m);\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n      p.x *= scaleX;\n      p.y *= scaleY;\n\n      if (p.x < 0) {\n        p.x = 0;\n      }\n\n      if (p.x > maxWidth) {\n        p.x = maxWidth;\n      }\n\n      if (p.y < 0) {\n        p.y = 0;\n      }\n\n      if (p.y > maxHeight) {\n        p.y = maxHeight;\n      } // add canvas offset on document\n\n\n      p.x += this.canvas._offset.left;\n      p.y += this.canvas._offset.top;\n      return {\n        left: p.x + 'px',\n        top: p.y + 'px',\n        fontSize: charHeight + 'px',\n        charHeight: charHeight\n      };\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function () {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        selectable: this.selectable,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function () {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.hoverCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.selectable = this._savedProps.selectable;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function () {\n      var isTextChanged = this._textBeforeEdit !== this.text;\n      this.selected = false;\n      this.isEditing = false;\n      this.selectionEnd = this.selectionStart;\n\n      if (this.hiddenTextarea) {\n        this.hiddenTextarea.blur && this.hiddenTextarea.blur();\n        this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n        this.hiddenTextarea = null;\n      }\n\n      this.abortCursorAnimation();\n\n      this._restoreEditingProps();\n\n      this._currentCursorOpacity = 0;\n\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n\n      this.fire('editing:exited');\n      isTextChanged && this.fire('modified');\n\n      if (this.canvas) {\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\n        this.canvas.fire('text:editing:exited', {\n          target: this\n        });\n        isTextChanged && this.canvas.fire('object:modified', {\n          target: this\n        });\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function () {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * remove and reflow a style block from start to end.\n     * @param {Number} start linear start position for removal (included in removal)\n     * @param {Number} end linear end position for removal ( excluded from removal )\n     */\n    removeStyleFromTo: function (start, end) {\n      var cursorStart = this.get2DCursorLocation(start, true),\n          cursorEnd = this.get2DCursorLocation(end, true),\n          lineStart = cursorStart.lineIndex,\n          charStart = cursorStart.charIndex,\n          lineEnd = cursorEnd.lineIndex,\n          charEnd = cursorEnd.charIndex,\n          i,\n          styleObj;\n\n      if (lineStart !== lineEnd) {\n        // step1 remove the trailing of lineStart\n        if (this.styles[lineStart]) {\n          for (i = charStart; i < this._unwrappedTextLines[lineStart].length; i++) {\n            delete this.styles[lineStart][i];\n          }\n        } // step2 move the trailing of lineEnd to lineStart if needed\n\n\n        if (this.styles[lineEnd]) {\n          for (i = charEnd; i < this._unwrappedTextLines[lineEnd].length; i++) {\n            styleObj = this.styles[lineEnd][i];\n\n            if (styleObj) {\n              this.styles[lineStart] || (this.styles[lineStart] = {});\n              this.styles[lineStart][charStart + i - charEnd] = styleObj;\n            }\n          }\n        } // step3 detects lines will be completely removed.\n\n\n        for (i = lineStart + 1; i <= lineEnd; i++) {\n          delete this.styles[i];\n        } // step4 shift remaining lines.\n\n\n        this.shiftLineStyles(lineEnd, lineStart - lineEnd);\n      } else {\n        // remove and shift left on the same line\n        if (this.styles[lineStart]) {\n          styleObj = this.styles[lineStart];\n\n          var diff = charEnd - charStart,\n              numericChar,\n              _char;\n\n          for (i = charStart; i < charEnd; i++) {\n            delete styleObj[i];\n          }\n\n          for (_char in this.styles[lineStart]) {\n            numericChar = parseInt(_char, 10);\n\n            if (numericChar >= charEnd) {\n              styleObj[numericChar - diff] = styleObj[_char];\n              delete styleObj[_char];\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can any number?\n     */\n    shiftLineStyles: function (lineIndex, offset) {\n      // shift all line styles by offset upward or downward\n      // do not clone deep. we need new array, not new style objects\n      var clonedStyles = clone(this.styles);\n\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n    },\n    restartCursorIfNeeded: function () {\n      if (!this._currentTickState || this._currentTickState.isAborted || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted) {\n        this.initDelayedCursor();\n      }\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} qty number of lines to add\n     * @param {Array} copiedStyle Array of objects styles\n     */\n    insertNewlineStyleObject: function (lineIndex, charIndex, qty, copiedStyle) {\n      var currentCharStyle,\n          newLineStyles = {},\n          somethingAdded = false;\n      qty || (qty = 1);\n      this.shiftLineStyles(lineIndex, qty);\n\n      if (this.styles[lineIndex]) {\n        currentCharStyle = this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1];\n      } // we clone styles of all chars\n      // after cursor onto the current line\n\n\n      for (var index in this.styles[lineIndex]) {\n        var numIndex = parseInt(index, 10);\n\n        if (numIndex >= charIndex) {\n          somethingAdded = true;\n          newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index]; // remove lines from the previous line since they're on a new line now\n\n          delete this.styles[lineIndex][index];\n        }\n      }\n\n      if (somethingAdded) {\n        this.styles[lineIndex + qty] = newLineStyles;\n      } else {\n        delete this.styles[lineIndex + qty];\n      } // for the other lines\n      // we clone current char style onto the next (otherwise empty) line\n\n\n      while (qty > 1) {\n        qty--;\n\n        if (copiedStyle && copiedStyle[qty]) {\n          this.styles[lineIndex + qty] = {\n            0: clone(copiedStyle[qty])\n          };\n        } else if (currentCharStyle) {\n          this.styles[lineIndex + qty] = {\n            0: clone(currentCharStyle)\n          };\n        } else {\n          delete this.styles[lineIndex + qty];\n        }\n      }\n\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} quantity number Style object to insert, if given\n     * @param {Array} copiedStyle array of style objects\n     */\n    insertCharStyleObject: function (lineIndex, charIndex, quantity, copiedStyle) {\n      if (!this.styles) {\n        this.styles = {};\n      }\n\n      var currentLineStyles = this.styles[lineIndex],\n          currentLineStylesCloned = currentLineStyles ? clone(currentLineStyles) : {};\n      quantity || (quantity = 1); // shift all char styles by quantity forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + quantity] = currentLineStylesCloned[numericIndex]; // only delete the style if there was nothing moved there\n\n          if (!currentLineStylesCloned[numericIndex - quantity]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n\n      this._forceClearCache = true;\n\n      if (copiedStyle) {\n        while (quantity--) {\n          if (!Object.keys(copiedStyle[quantity]).length) {\n            continue;\n          }\n\n          if (!this.styles[lineIndex]) {\n            this.styles[lineIndex] = {};\n          }\n\n          this.styles[lineIndex][charIndex + quantity] = clone(copiedStyle[quantity]);\n        }\n\n        return;\n      }\n\n      if (!currentLineStyles) {\n        return;\n      }\n\n      var newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\n\n      while (newStyle && quantity--) {\n        this.styles[lineIndex][charIndex + quantity] = clone(newStyle);\n      }\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {Array} insertedText Characters at the location where style is inserted\n     * @param {Number} start cursor index for inserting style\n     * @param {Array} [copiedStyle] array of style objects to insert.\n     */\n    insertNewStyleBlock: function (insertedText, start, copiedStyle) {\n      var cursorLoc = this.get2DCursorLocation(start, true),\n          addedLines = [0],\n          linesLength = 0;\n\n      for (var i = 0; i < insertedText.length; i++) {\n        if (insertedText[i] === '\\n') {\n          linesLength++;\n          addedLines[linesLength] = 0;\n        } else {\n          addedLines[linesLength]++;\n        }\n      }\n\n      if (addedLines[0] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex, addedLines[0], copiedStyle);\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\n      }\n\n      linesLength && this.insertNewlineStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex + addedLines[0], linesLength);\n\n      for (var i = 1; i < linesLength; i++) {\n        if (addedLines[i] > 0) {\n          this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n        } else if (copiedStyle) {\n          this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\n        }\n\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\n      } // we use i outside the loop to get it like linesLength\n\n\n      if (addedLines[i] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n      }\n    },\n\n    /**\n     * Set the selectionStart and selectionEnd according to the new position of cursor\n     * mimic the key - mouse navigation when shift is pressed.\n     */\n    setSelectionStartEndWithShift: function (start, end, newSelection) {\n      if (newSelection <= start) {\n        if (end === start) {\n          this._selectionDirection = 'left';\n        } else if (this._selectionDirection === 'right') {\n          this._selectionDirection = 'left';\n          this.selectionEnd = start;\n        }\n\n        this.selectionStart = newSelection;\n      } else if (newSelection > start && newSelection < end) {\n        if (this._selectionDirection === 'right') {\n          this.selectionEnd = newSelection;\n        } else {\n          this.selectionStart = newSelection;\n        }\n      } else {\n        // newSelection is > selection start and end\n        if (end === start) {\n          this._selectionDirection = 'right';\n        } else if (this._selectionDirection === 'left') {\n          this._selectionDirection = 'right';\n          this.selectionStart = end;\n        }\n\n        this.selectionEnd = newSelection;\n      }\n    },\n    setSelectionInBoundaries: function () {\n      var length = this.text.length;\n\n      if (this.selectionStart > length) {\n        this.selectionStart = length;\n      } else if (this.selectionStart < 0) {\n        this.selectionStart = 0;\n      }\n\n      if (this.selectionEnd > length) {\n        this.selectionEnd = length;\n      } else if (this.selectionEnd < 0) {\n        this.selectionEnd = 0;\n      }\n    }\n  });\n})();\n\nfabric.util.object.extend(fabric.IText.prototype,\n/** @lends fabric.IText.prototype */\n{\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function () {\n    // for double click\n    this.__lastClickTime = +new Date(); // for triple click\n\n    this.__lastLastClickTime = +new Date();\n    this.__lastPointer = {};\n    this.on('mousedown', this.onMouseDown);\n  },\n\n  /**\n   * Default event handler to simulate triple click\n   * @private\n   */\n  onMouseDown: function (options) {\n    if (!this.canvas) {\n      return;\n    }\n\n    this.__newClickTime = +new Date();\n    var newPointer = options.pointer;\n\n    if (this.isTripleClick(newPointer)) {\n      this.fire('tripleclick', options);\n\n      this._stopEvent(options.e);\n    }\n\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n  isTripleClick: function (newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 && this.__lastClickTime - this.__lastLastClickTime < 500 && this.__lastPointer.x === newPointer.x && this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function (e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function () {\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Default handler for double click, select a word\n   */\n  doubleClickHandler: function (options) {\n    if (!this.isEditing) {\n      return;\n    }\n\n    this.selectWord(this.getSelectionStartFromPointer(options.e));\n  },\n\n  /**\n   * Default handler for triple click, select a line\n   */\n  tripleClickHandler: function (options) {\n    if (!this.isEditing) {\n      return;\n    }\n\n    this.selectLine(this.getSelectionStartFromPointer(options.e));\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function () {\n    this.on('mousedblclick', this.doubleClickHandler);\n    this.on('tripleclick', this.tripleClickHandler);\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on _mouseDown\n   * can be overridden to do something different.\n   * Scope of this implementation is: find the click position, set selectionStart\n   * find selectionEnd, initialize the drawing of either cursor or selection area\n   */\n  _mouseDownHandler: function (options) {\n    if (!this.canvas || !this.editable || options.e.button && options.e.button !== 1) {\n      return;\n    }\n\n    this.__isMousedown = true;\n\n    if (this.selected) {\n      this.setCursorByClick(options.e);\n    }\n\n    if (this.isEditing) {\n      this.__selectionStartOnMouseDown = this.selectionStart;\n\n      if (this.selectionStart === this.selectionEnd) {\n        this.abortCursorAnimation();\n      }\n\n      this.renderCursorOrSelection();\n    }\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on mousedown:before\n   * can be overridden to do something different.\n   * Scope of this implementation is: verify the object is already selected when mousing down\n   */\n  _mouseDownHandlerBefore: function (options) {\n    if (!this.canvas || !this.editable || options.e.button && options.e.button !== 1) {\n      return;\n    } // we want to avoid that an object that was selected and then becomes unselectable,\n    // may trigger editing mode in some way.\n\n\n    this.selected = this === this.canvas._activeObject;\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function () {\n    this.on('mousedown', this._mouseDownHandler);\n    this.on('mousedown:before', this._mouseDownHandlerBefore);\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function () {\n    this.on('mouseup', this.mouseUpHandler);\n  },\n\n  /**\n   * standard hander for mouse up, overridable\n   * @private\n   */\n  mouseUpHandler: function (options) {\n    this.__isMousedown = false;\n\n    if (!this.editable || this.group || options.transform && options.transform.actionPerformed || options.e.button && options.e.button !== 1) {\n      return;\n    }\n\n    if (this.canvas) {\n      var currentActive = this.canvas._activeObject;\n\n      if (currentActive && currentActive !== this) {\n        // avoid running this logic when there is an active object\n        // this because is possible with shift click and fast clicks,\n        // to rapidly deselect and reselect this object and trigger an enterEdit\n        return;\n      }\n    }\n\n    if (this.__lastSelected && !this.__corner) {\n      this.selected = false;\n      this.__lastSelected = false;\n      this.enterEditing(options.e);\n\n      if (this.selectionStart === this.selectionEnd) {\n        this.initDelayedCursor(true);\n      } else {\n        this.renderCursorOrSelection();\n      }\n    } else {\n      this.selected = true;\n    }\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function (e) {\n    var newSelection = this.getSelectionStartFromPointer(e),\n        start = this.selectionStart,\n        end = this.selectionEnd;\n\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    } else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function (e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        lineIndex = 0,\n        lineLeftOffset,\n        line;\n\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      if (height <= mouseOffset.y) {\n        height += this.getHeightOfLine(i) * this.scaleY;\n        lineIndex = i;\n\n        if (i > 0) {\n          charIndex += this._textLines[i - 1].length + this.missingNewlineOffset(i - 1);\n        }\n      } else {\n        break;\n      }\n    }\n\n    lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    width = lineLeftOffset * this.scaleX;\n    line = this._textLines[lineIndex];\n\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      prevWidth = width; // i removed something about flipX here, check.\n\n      width += this.__charBounds[lineIndex][j].kernedWidth * this.scaleX;\n\n      if (width <= mouseOffset.x) {\n        charIndex++;\n      } else {\n        break;\n      }\n    }\n\n    return this._getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, charIndex, jlen);\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function (mouseOffset, prevWidth, width, index, jlen) {\n    // we need Math.abs because when width is after the last char, the offset is given as 1, while is 0\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor || distanceBtwNextCharAndCursor < 0 ? 0 : 1,\n        newSelectionStart = index + offset; // if object is horizontally flipped, mirror cursor location from the end\n\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this._text.length) {\n      newSelectionStart = this._text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\nfabric.util.object.extend(fabric.IText.prototype,\n/** @lends fabric.IText.prototype */\n{\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function () {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    this.hiddenTextarea.setAttribute('autocorrect', 'off');\n    this.hiddenTextarea.setAttribute('autocomplete', 'off');\n    this.hiddenTextarea.setAttribute('spellcheck', 'false');\n    this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\n    this.hiddenTextarea.setAttribute('wrap', 'off');\n\n    var style = this._calcTextareaPosition(); // line-height: 1px; was removed from the style to fix this:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=870966\n\n\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top + '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' + ' paddingｰtop: ' + style.fontSize + ';';\n    fabric.document.body.appendChild(this.hiddenTextarea);\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behaviour for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the fabric.Itext or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = fabric.util.object.clone(this.keysMap);\n   * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\n   */\n  keysMap: {\n    9: 'exitEditing',\n    27: 'exitEditing',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown'\n  },\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  ctrlKeysMapUp: {\n    67: 'copy',\n    88: 'cut'\n  },\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  ctrlKeysMapDown: {\n    65: 'selectAll'\n  },\n  onClick: function () {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keyup event\n   * @param {Event} e Event object\n   */\n  onKeyDown: function (e) {\n    if (!this.isEditing || this.inCompositionMode) {\n      return;\n    }\n\n    if (e.keyCode in this.keysMap) {\n      this[this.keysMap[e.keyCode]](e);\n    } else if (e.keyCode in this.ctrlKeysMapDown && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\n    } else {\n      return;\n    }\n\n    e.stopImmediatePropagation();\n    e.preventDefault();\n\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    } else {\n      this.canvas && this.canvas.requestRenderAll();\n    }\n  },\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {Event} e Event object\n   */\n  onKeyUp: function (e) {\n    if (!this.isEditing || this._copyDone || this.inCompositionMode) {\n      this._copyDone = false;\n      return;\n    }\n\n    if (e.keyCode in this.ctrlKeysMapUp && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\n    } else {\n      return;\n    }\n\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.requestRenderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function (e) {\n    var fromPaste = this.fromPaste;\n    this.fromPaste = false;\n    e && e.stopPropagation();\n\n    if (!this.isEditing) {\n      return;\n    } // decisions about style changes.\n\n\n    var nextText = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText,\n        charCount = this._text.length,\n        nextCharCount = nextText.length,\n        removedText,\n        insertedText,\n        charDiff = nextCharCount - charCount;\n\n    if (this.hiddenTextarea.value === '') {\n      this.styles = {};\n      this.updateFromTextArea();\n      this.fire('changed');\n\n      if (this.canvas) {\n        this.canvas.fire('text:changed', {\n          target: this\n        });\n        this.canvas.requestRenderAll();\n      }\n\n      return;\n    }\n\n    var textareaSelection = this.fromStringToGraphemeSelection(this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\n    var backDelete = this.selectionStart > textareaSelection.selectionStart;\n\n    if (this.selectionStart !== this.selectionEnd) {\n      removedText = this._text.slice(this.selectionStart, this.selectionEnd);\n      charDiff += this.selectionEnd - this.selectionStart;\n    } else if (nextCharCount < charCount) {\n      if (backDelete) {\n        removedText = this._text.slice(this.selectionEnd + charDiff, this.selectionEnd);\n      } else {\n        removedText = this._text.slice(this.selectionStart, this.selectionStart - charDiff);\n      }\n    }\n\n    insertedText = nextText.slice(textareaSelection.selectionEnd - charDiff, textareaSelection.selectionEnd);\n\n    if (removedText && removedText.length) {\n      if (this.selectionStart !== this.selectionEnd) {\n        this.removeStyleFromTo(this.selectionStart, this.selectionEnd);\n      } else if (backDelete) {\n        // detect differencies between forwardDelete and backDelete\n        this.removeStyleFromTo(this.selectionEnd - removedText.length, this.selectionEnd);\n      } else {\n        this.removeStyleFromTo(this.selectionEnd, this.selectionEnd + removedText.length);\n      }\n    }\n\n    if (insertedText.length) {\n      if (fromPaste && insertedText.join('') === fabric.copiedText && !fabric.disableStyleCopyPaste) {\n        this.insertNewStyleBlock(insertedText, this.selectionStart, fabric.copiedTextStyle);\n      } else {\n        this.insertNewStyleBlock(insertedText, this.selectionStart);\n      }\n    }\n\n    this.updateFromTextArea();\n    this.fire('changed');\n\n    if (this.canvas) {\n      this.canvas.fire('text:changed', {\n        target: this\n      });\n      this.canvas.requestRenderAll();\n    }\n  },\n\n  /**\n   * Composition start\n   */\n  onCompositionStart: function () {\n    this.inCompositionMode = true;\n  },\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd: function () {\n    this.inCompositionMode = false;\n  },\n  // /**\n  //  * Composition update\n  //  */\n  onCompositionUpdate: function (e) {\n    this.compositionStart = e.target.selectionStart;\n    this.compositionEnd = e.target.selectionEnd;\n    this.updateTextareaPosition();\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function () {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n\n    fabric.copiedText = this.getSelectedText();\n\n    if (!fabric.disableStyleCopyPaste) {\n      fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, true);\n    } else {\n      fabric.copiedTextStyle = null;\n    }\n\n    this._copyDone = true;\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function () {\n    this.fromPaste = true;\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function (e) {\n    return e && e.clipboardData || fabric.window.clipboardData;\n  },\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor: function (lineIndex, charIndex) {\n    var widthBeforeCursor = this._getLineLeftOffset(lineIndex),\n        bound;\n\n    if (charIndex > 0) {\n      bound = this.__charBounds[lineIndex][charIndex - 1];\n      widthBeforeCursor += bound.left + bound.width;\n    }\n\n    return widthBeforeCursor;\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function (e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex; // if on last line, down cursor goes to end of line\n\n\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n      // move to the end of a text\n      return this._text.length - selectionProp;\n    }\n\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n\n    return textAfterCursor.length + indexOnOtherLine + 1 + this.missingNewlineOffset(lineIndex);\n  },\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset: function (e, isRight) {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    } else {\n      return this.selectionStart;\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function (e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\n        missingNewlineOffset = this.missingNewlineOffset(lineIndex - 1); // return a negative offset\n\n\n    return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length + (1 - missingNewlineOffset);\n  },\n\n  /**\n   * for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine: function (lineIndex, width) {\n    var line = this._textLines[lineIndex],\n        lineLeftOffset = this._getLineLeftOffset(lineIndex),\n        widthOfCharsOnLine = lineLeftOffset,\n        indexOnLine = 0,\n        charWidth,\n        foundMatch;\n\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      charWidth = this.__charBounds[lineIndex][j].width;\n      widthOfCharsOnLine += charWidth;\n\n      if (widthOfCharsOnLine > width) {\n        foundMatch = true;\n        var leftEdge = widthOfCharsOnLine - charWidth,\n            rightEdge = widthOfCharsOnLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - width),\n            offsetFromRightEdge = Math.abs(rightEdge - width);\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : j - 1;\n        break;\n      }\n    } // reached end\n\n\n    if (!foundMatch) {\n      indexOnLine = line.length - 1;\n    }\n\n    return indexOnLine;\n  },\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function (e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n\n    this._moveCursorUpOrDown('Down', e);\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function (e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n\n    this._moveCursorUpOrDown('Up', e);\n  },\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {Event} e Event object\n   */\n  _moveCursorUpOrDown: function (direction, e) {\n    // getUpCursorOffset\n    // getDownCursorOffset\n    var action = 'get' + direction + 'CursorOffset',\n        offset = this[action](e, this._selectionDirection === 'right');\n\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    } else {\n      this.moveCursorWithoutShift(offset);\n    }\n\n    if (offset !== 0) {\n      this.setSelectionInBoundaries();\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this.initDelayedCursor();\n\n      this._fireSelectionChanged();\n\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift: function (offset) {\n    var newSelection = this._selectionDirection === 'left' ? this.selectionStart + offset : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift: function (offset) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    } else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function (e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n\n    this._moveCursorLeftOrRight('Left', e);\n  },\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   */\n  _move: function (e, prop, direction) {\n    var newValue;\n\n    if (e.altKey) {\n      newValue = this['findWordBoundary' + direction](this[prop]);\n    } else if (e.metaKey || e.keyCode === 35 || e.keyCode === 36) {\n      newValue = this['findLineBoundary' + direction](this[prop]);\n    } else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n\n    if (typeof newValue !== undefined && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function (e, prop) {\n    return this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function (e, prop) {\n    return this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function (e) {\n    var change = true;\n    this._selectionDirection = 'left'; // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n\n    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n      change = this._moveLeft(e, 'selectionStart');\n    }\n\n    this.selectionEnd = this.selectionStart;\n    return change;\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function (e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      return this._moveLeft(e, 'selectionEnd');\n    } else if (this.selectionStart !== 0) {\n      this._selectionDirection = 'left';\n      return this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function (e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n\n    this._moveCursorLeftOrRight('Right', e);\n  },\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {Event} e Event object\n   */\n  _moveCursorLeftOrRight: function (direction, e) {\n    var actionName = 'moveCursor' + direction + 'With';\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      actionName += 'Shift';\n    } else {\n      actionName += 'outShift';\n    }\n\n    if (this[actionName](e)) {\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n\n      this._fireSelectionChanged();\n\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function (e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      return this._moveRight(e, 'selectionStart');\n    } else if (this.selectionEnd !== this._text.length) {\n      this._selectionDirection = 'right';\n      return this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function (e) {\n    var changed = true;\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    } else {\n      this.selectionStart = this.selectionEnd;\n    }\n\n    return changed;\n  },\n\n  /**\n   * Removes characters from start/end\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  removeChars: function (start, end) {\n    if (typeof end === 'undefined') {\n      end = start + 1;\n    }\n\n    this.removeStyleFromTo(start, end);\n\n    this._text.splice(start, end - start);\n\n    this.text = this._text.join('');\n    this.set('dirty', true);\n\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n\n    this._removeExtraneousStyles();\n  },\n\n  /**\n   * insert characters at start position, before start position.\n   * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\n   * if style array is provided, it must be as the same length of text in graphemes\n   * if end is provided and is bigger than start, old text is replaced.\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {String} text text to insert\n   * @param {Array} style array of style objects\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  insertChars: function (text, style, start, end) {\n    if (typeof end === 'undefined') {\n      end = start;\n    }\n\n    if (end > start) {\n      this.removeStyleFromTo(start, end);\n    }\n\n    var graphemes = fabric.util.string.graphemeSplit(text);\n    this.insertNewStyleBlock(graphemes, start, style);\n    this._text = [].concat(this._text.slice(0, start), graphemes, this._text.slice(end));\n    this.text = this._text.join('');\n    this.set('dirty', true);\n\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n\n    this._removeExtraneousStyles();\n  }\n});\n/* _TO_SVG_START_ */\n\n(function () {\n  var toFixed = fabric.util.toFixed,\n      multipleSpacesRegex = /  +/g;\n  fabric.util.object.extend(fabric.Text.prototype,\n  /** @lends fabric.Text.prototype */\n  {\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    _toSVG: function () {\n      var offsets = this._getSVGLeftTopOffsets(),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n\n      return this._wrapSVGTextAndBg(textAndBg);\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function (reviver) {\n      return this._createBaseSVGMarkup(this._toSVG(), {\n        reviver: reviver,\n        noStyle: true,\n        withShadow: true\n      });\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function () {\n      return {\n        textLeft: -this.width / 2,\n        textTop: -this.height / 2,\n        lineTop: this.getHeightOfLine(0)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function (textAndBg) {\n      var noShadow = true,\n          textDecoration = this.getSvgTextDecoration(this);\n      return [textAndBg.textBgRects.join(''), '\\t\\t<text xml:space=\"preserve\" ', this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : '', this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : '', this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : '', this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : '', textDecoration ? 'text-decoration=\"' + textDecoration + '\" ' : '', 'style=\"', this.getSvgStyles(noShadow), '\"', this.addPaintOrder(), ' >', textAndBg.textSpans.join(''), '</text>\\n'];\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function (textTopOffset, textLeftOffset) {\n      var textSpans = [],\n          textBgRects = [],\n          height = textTopOffset,\n          lineOffset; // bounding-box background\n\n      this._setSVGBg(textBgRects); // text and text-background\n\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineOffset = this._getLineLeftOffset(i);\n\n        if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset + lineOffset, height);\n        }\n\n        this._setSVGTextLineText(textSpans, i, textLeftOffset + lineOffset, height);\n\n        height += this.getHeightOfLine(i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function (_char, styleDecl, left, top) {\n      var shouldUseWhitespace = _char !== _char.trim() || _char.match(multipleSpacesRegex),\n          styleProps = this.getSvgSpanStyles(styleDecl, shouldUseWhitespace),\n          fillStyles = styleProps ? 'style=\"' + styleProps + '\"' : '',\n          dy = styleDecl.deltaY,\n          dySpan = '',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (dy) {\n        dySpan = ' dy=\"' + toFixed(dy, NUM_FRACTION_DIGITS) + '\" ';\n      }\n\n      return ['<tspan x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"', toFixed(top, NUM_FRACTION_DIGITS), '\" ', dySpan, fillStyles, '>', fabric.util.string.escapeXml(_char), '</tspan>'].join('');\n    },\n    _setSVGTextLineText: function (textSpans, lineIndex, textLeftOffset, textTopOffset) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox,\n          style,\n          boxWidth = 0,\n          line = this._textLines[lineIndex],\n          timeToRender;\n      textTopOffset += lineHeight * (1 - this._fontSizeFraction) / this.lineHeight;\n\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n\n        if (boxWidth === 0) {\n          textLeftOffset += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        } else {\n          boxWidth += charBox.kernedWidth;\n        }\n\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChangedForSvg(actualStyle, nextStyle);\n        }\n\n        if (timeToRender) {\n          style = this._getStyleDeclaration(lineIndex, i) || {};\n          textSpans.push(this._createTextCharSpan(charsToRender, style, textLeftOffset, textTopOffset));\n          charsToRender = '';\n          actualStyle = nextStyle;\n          textLeftOffset += boxWidth;\n          boxWidth = 0;\n        }\n      }\n    },\n    _pushTextBgRect: function (textBgRects, color, left, top, width, height) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      textBgRects.push('\\t\\t<rect ', this._getFillAttributes(color), ' x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"', toFixed(top, NUM_FRACTION_DIGITS), '\" width=\"', toFixed(width, NUM_FRACTION_DIGITS), '\" height=\"', toFixed(height, NUM_FRACTION_DIGITS), '\"></rect>\\n');\n    },\n    _setSVGTextLineBg: function (textBgRects, i, leftOffset, textTopOffset) {\n      var line = this._textLines[i],\n          heightOfLine = this.getHeightOfLine(i) / this.lineHeight,\n          boxWidth = 0,\n          boxStart = 0,\n          charBox,\n          currentColor,\n          lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n        charBox = this.__charBounds[i][j];\n        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n\n        if (currentColor !== lastColor) {\n          lastColor && this._pushTextBgRect(textBgRects, lastColor, leftOffset + boxStart, textTopOffset, boxWidth, heightOfLine);\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastColor = currentColor;\n        } else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n\n      currentColor && this._pushTextBgRect(textBgRects, currentColor, leftOffset + boxStart, textTopOffset, boxWidth, heightOfLine);\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {*} value\n     * @return {String}\n     */\n    _getFillAttributes: function (value) {\n      var fillColor = value && typeof value === 'string' ? new fabric.Color(value) : '';\n\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function (lineIndex) {\n      var lineTopOffset = 0,\n          lastHeight = 0;\n\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this.getHeightOfLine(j);\n      }\n\n      lastHeight = this.getHeightOfLine(j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function (skipShadow) {\n      var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\n      return svgStyle + ' white-space: pre;';\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * fixed to 2 so that an empty textbox cannot go to 0\n     * and is still selectable without text.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 2,\n\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingFlip: true,\n\n    /**\n     * Override standard Object class values\n     * Textbox needs this on false\n     */\n    noScaleCache: false,\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat('width'),\n\n    /**\n     * Use this regular expression to split strings in breakable lines\n     * @private\n     */\n    _wordJoiners: /[ \\t\\r]/,\n\n    /**\n     * Use this boolean property in order to split strings that have no white space concept.\n     * this is a cheap way to help with chinese/japaense\n     * @type Boolean\n     * @since 2.6.0\n     */\n    splitByGrapheme: false,\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @private\n     * @override\n     */\n    initDimensions: function () {\n      if (this.__skipDimension) {\n        return;\n      }\n\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n\n      this._clearCache(); // clear dynamicMinWidth as it will be different after we re-wrap line\n\n\n      this.dynamicMinWidth = 0; // wrap lines\n\n      this._styleMap = this._generateStyleMap(this._splitText()); // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      } // clear cache and re-calculate height\n\n\n      this.height = this.calcTextHeight();\n      this.saveState({\n        propertySet: '_dimensionAffectingProps'\n      });\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function (textInfo) {\n      var realLineCount = 0,\n          realLineCharCount = 0,\n          charCount = 0,\n          map = {};\n\n      for (var i = 0; i < textInfo.graphemeLines.length; i++) {\n        if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        } else if (!this.splitByGrapheme && this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) && i > 0) {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = {\n          line: realLineCount,\n          offset: realLineCharCount\n        };\n        charCount += textInfo.graphemeLines[i].length;\n        realLineCharCount += textInfo.graphemeLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * Returns true if object has a style property or has it on a specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function (property, lineIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n\n        if (map) {\n          lineIndex = map.line;\n        }\n      }\n\n      return fabric.Text.prototype.styleHas.call(this, property, lineIndex);\n    },\n\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function (lineIndex) {\n      if (!this.styles) {\n        return true;\n      }\n\n      var offset = 0,\n          nextLineIndex = lineIndex + 1,\n          nextOffset,\n          obj,\n          shouldLimit = false,\n          map = this._styleMap[lineIndex],\n          mapNextLine = this._styleMap[lineIndex + 1];\n\n      if (map) {\n        lineIndex = map.line;\n        offset = map.offset;\n      }\n\n      if (mapNextLine) {\n        nextLineIndex = mapNextLine.line;\n        shouldLimit = nextLineIndex === lineIndex;\n        nextOffset = mapNextLine.offset;\n      }\n\n      obj = typeof lineIndex === 'undefined' ? this.styles : {\n        line: this.styles[lineIndex]\n      };\n\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          if (p2 >= offset && (!shouldLimit || p2 < nextOffset)) {\n            // eslint-disable-next-line no-unused-vars\n            for (var p3 in obj[p1][p2]) {\n              return false;\n            }\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _getStyleDeclaration: function (lineIndex, charIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n\n        if (!map) {\n          return null;\n        }\n\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function (lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function (lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * probably broken need a fix\n     * Returns the real style line that correspond to the wrapped lineIndex line\n     * Used just to verify if the line does exist or not.\n     * @param {Number} lineIndex\n     * @returns {Boolean} if the line exists or not\n     * @private\n     */\n    _getLineStyle: function (lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return !!this.styles[map.line];\n    },\n\n    /**\n     * Set the line style to an empty object so that is initialized\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function (lineIndex) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = {};\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {Array} lines The string array of text that is split into lines\n     * @param {Number} desiredWidth width you want to wrap to\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function (lines, desiredWidth) {\n      var wrapped = [],\n          i;\n      this.isWrapping = true;\n\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(lines[i], i, desiredWidth));\n      }\n\n      this.isWrapping = false;\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     * it gets called when charBounds are not available yet.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureWord: function (word, lineIndex, charOffset) {\n      var width = 0,\n          prevGrapheme,\n          skipLeft = true;\n      charOffset = charOffset || 0;\n\n      for (var i = 0, len = word.length; i < len; i++) {\n        var box = this._getGraphemeBox(word[i], lineIndex, i + charOffset, prevGrapheme, skipLeft);\n\n        width += box.kernedWidth;\n        prevGrapheme = word[i];\n      }\n\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {Array} line The grapheme array that represent the line\n     * @param {Number} lineIndex\n     * @param {Number} desiredWidth width you want to wrap the line to\n     * @param {Number} reservedSpace space to remove from wrapping for custom functionalities\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function (_line, lineIndex, desiredWidth, reservedSpace) {\n      var lineWidth = 0,\n          splitByGrapheme = this.splitByGrapheme,\n          graphemeLines = [],\n          line = [],\n          // spaces in different languges?\n      words = splitByGrapheme ? fabric.util.string.graphemeSplit(_line) : _line.split(this._wordJoiners),\n          word = '',\n          offset = 0,\n          infix = splitByGrapheme ? '' : ' ',\n          wordWidth = 0,\n          infixWidth = 0,\n          largestWordWidth = 0,\n          lineJustStarted = true,\n          additionalSpace = splitByGrapheme ? 0 : this._getWidthOfCharSpacing(),\n          reservedSpace = reservedSpace || 0; // fix a difference between split and graphemeSplit\n\n      if (words.length === 0) {\n        words.push([]);\n      }\n\n      desiredWidth -= reservedSpace;\n\n      for (var i = 0; i < words.length; i++) {\n        // if using splitByGrapheme words are already in graphemes.\n        word = splitByGrapheme ? words[i] : fabric.util.string.graphemeSplit(words[i]);\n        wordWidth = this._measureWord(word, lineIndex, offset);\n        offset += word.length;\n        lineWidth += infixWidth + wordWidth - additionalSpace;\n\n        if (lineWidth >= desiredWidth && !lineJustStarted) {\n          graphemeLines.push(line);\n          line = [];\n          lineWidth = wordWidth;\n          lineJustStarted = true;\n        } else {\n          lineWidth += additionalSpace;\n        }\n\n        if (!lineJustStarted && !splitByGrapheme) {\n          line.push(infix);\n        }\n\n        line = line.concat(word);\n        infixWidth = this._measureWord([infix], lineIndex, offset);\n        offset++;\n        lineJustStarted = false; // keep track of largest word\n\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      i && graphemeLines.push(line);\n\n      if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;\n      }\n\n      return graphemeLines;\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @param {Number} lineIndex text to split\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function (lineIndex) {\n      if (!this._styleMap[lineIndex + 1]) {\n        // is last line, return true;\n        return true;\n      }\n\n      if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\n        // this is last line before a line break, return true;\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Detect if a line has a linebreak and so we need to account for it when moving\n     * and counting style.\n     * @return Number\n     */\n    missingNewlineOffset: function (lineIndex) {\n      if (this.splitByGrapheme) {\n        return this.isEndOfWrapping(lineIndex) ? 1 : 0;\n      }\n\n      return 1;\n    },\n\n    /**\n    * Gets lines of text to render in the Textbox. This function calculates\n    * text wrapping on the fly every time it is called.\n    * @param {String} text text to split\n    * @returns {Array} Array of lines in the Textbox.\n    * @override\n    */\n    _splitTextIntoLines: function (text) {\n      var newText = fabric.Text.prototype._splitTextIntoLines.call(this, text),\n          graphemeLines = this._wrapText(newText.lines, this.width),\n          lines = new Array(graphemeLines.length);\n\n      for (var i = 0; i < graphemeLines.length; i++) {\n        lines[i] = graphemeLines[i].join('');\n      }\n\n      newText.lines = lines;\n      newText.graphemeLines = graphemeLines;\n      return newText;\n    },\n    getMinWidth: function () {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n    _removeExtraneousStyles: function () {\n      var linesToKeep = {};\n\n      for (var prop in this._styleMap) {\n        if (this._textLines[prop]) {\n          linesToKeep[this._styleMap[prop].line] = 1;\n        }\n      }\n\n      for (var prop in this.styles) {\n        if (!linesToKeep[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this.callSuper('toObject', ['minWidth', 'splitByGrapheme'].concat(propertiesToInclude));\n    }\n  });\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n   */\n\n  fabric.Textbox.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Textbox', object, callback, 'text');\n  };\n})(typeof exports !== 'undefined' ? exports : this);","map":{"version":3,"sources":["/var/www/html/REACT_WORK/NEW_PLANETSHARE/web_planetshare/node_modules/tui-image-editor/node_modules/fabric/dist/fabric.js"],"names":["fabric","version","exports","define","amd","document","window","HTMLDocument","Document","implementation","createHTMLDocument","jsdom","require","virtualWindow","JSDOM","decodeURIComponent","features","FetchExternalResources","resources","jsdomImplForWrapper","implForWrapper","nodeCanvas","Canvas","DOMParser","isTouchSupported","navigator","maxTouchPoints","isLikelyNode","Buffer","SHARED_ATTRIBUTES","DPI","reNum","rePathCommand","reNonWord","fontPaths","iMatrix","svgNS","perfLimitSizeTotal","maxCacheSideLimit","minCacheSideLimit","charWidthsCache","textureSize","disableStyleCopyPaste","enableGLFiltering","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","browserShadowBlurConstant","arcToSegmentsCache","boundsOfCurveCache","cachesBoundsOfCurve","forceGLPutImageData","initFilterBackend","isWebglSupported","console","log","maxTextureSize","WebglFilterBackend","tileSize","Canvas2dFilterBackend","_removeEventListener","eventName","handler","__eventListeners","eventListener","indexOf","util","array","fill","observe","arguments","length","prop","on","push","stopObserving","call","fire","options","listenersForEvent","i","len","filter","value","Observable","off","trigger","Collection","_objects","add","apply","_onObjectAdded","renderOnAddRemove","requestRenderAll","insertAt","object","index","nonSplicing","objects","splice","remove","somethingRemoved","_onObjectRemoved","forEachObject","callback","context","getObjects","type","concat","o","item","isEmpty","size","contains","complexity","reduce","memo","current","CommonMethods","_setOptions","set","_initGradient","filler","property","colorStops","Gradient","_initPattern","source","Pattern","_initClipping","clipTo","functionBody","getFunctionBody","Function","_setObject","obj","_set","key","get","toggle","global","sqrt","Math","atan2","pow","PiBy180","PI","PiBy2","cos","angle","angleSlice","sin","sign","removeFromArray","idx","getRandomInt","min","max","floor","random","degreesToRadians","degrees","radiansToDegrees","radians","rotatePoint","point","origin","subtractEquals","v","rotateVector","Point","x","y","addEquals","vector","rx","ry","transformPoint","p","t","ignoreOffset","makeBoundingBoxFromPoints","points","transform","xPoints","minX","maxX","width","yPoints","minY","maxY","height","left","top","invertTransform","a","r","toFixed","number","fractionDigits","parseFloat","Number","parseUnit","fontSize","unit","exec","Text","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","namespace","string","camelize","charAt","toUpperCase","slice","resolveNamespace","getSvgAttributes","attributes","parts","split","loadImage","url","crossOrigin","img","createImage","onLoadCallback","onload","onerror","src","substring","loadImageInDom","div","createElement","style","position","appendChild","querySelector","parentNode","removeChild","enlivenObjects","reviver","enlivenedObjects","numLoadedObjects","numTotalObjects","onLoaded","forEach","klass","fromObject","error","enlivenPatterns","patterns","numLoadedPatterns","numPatterns","enlivenedPatterns","pattern","groupSVGElements","elements","path","centerPoint","Group","sourcePath","populateWithProperties","destination","properties","Object","prototype","toString","drawDashedLine","ctx","x2","y2","da","dx","dy","rot","dc","di","draw","save","translate","moveTo","rotate","restore","createCanvasElement","copyCanvasElement","canvas","newCanvas","getContext","drawImage","toDataURL","canvasEl","format","quality","clipContext","receiver","beginPath","clip","multiplyTransformMatrices","b","is2x2","qrDecompose","denom","scaleX","scaleY","skewX","skewY","translateX","translateY","calcRotateMatrix","theta","calcDimensionsMatrix","scaleMatrix","flipX","flipY","multiply","tan","composeMatrix","matrix","customTransformMatrix","resetObjectTransform","target","saveObjectTransform","fn","String","match","isTransparent","tolerance","_isTransparent","temp","imageData","getImageData","l","data","parsePreserveAspectRatioAttribute","attribute","meetOrSlice","alignX","alignY","aspectRatioAttrs","align","pop","clearFabricFontCache","fontFamily","toLowerCase","limitDimsByArea","ar","maximumArea","roughWidth","perfLimitSizeY","capValue","findScaleToFit","findScaleToCover","matrixToSVG","map","NUM_FRACTION_DIGITS","join","_join","Array","arcToSegments","toX","toY","large","sweep","rotateX","argsString","th","sinTh","cosTh","fromX","fromY","abs","px","py","rx2","ry2","py2","px2","pl","root","s","cx","cy","cx1","cy1","mTheta","calcVectorAngle","dtheta","segments","ceil","result","mDelta","mT","th3","segmentToBezier","th2","costh2","sinth2","costh3","sinth3","cp1X","cp1Y","cp2X","cp2Y","ux","uy","vx","vy","ta","tb","drawArc","fx","fy","coords","tx","ty","segs","segsNorm","bezierCurveTo","getBoundsOfArc","bound","bounds","getBoundsOfCurve","x0","y0","x1","y1","x3","y3","tvalues","c","t1","t2","b2ac","sqrtb2ac","j","jlen","mt","invoke","method","args","byProperty","find","value1","value2","k","condition","extend","deep","Element","hasOwnProperty","clone","replace","character","capitalize","firstLetterOnly","escapeXml","graphemeSplit","textstring","chr","graphemes","getWholeChar","str","code","charCodeAt","isNaN","next","prev","emptyFunction","IS_DONTENUM_BUGGY","addMethods","parent","superclass","constructor","returnValue","valueOf","Subclass","callSuper","methodName","parentMethod","_this","superClassMethod","createClass","shift","initialize","subclasses","couldUseAttachEvent","attachEvent","addListener","element","addEventListener","removeListener","removeEventListener","getTouchInfo","event","touchProp","changedTouches","getPointer","scroll","getScrollLeftTop","_evt","clientX","clientY","setStyle","styles","elementStyle","cssText","setOpacity","normalizedProperty","styleFloat","parseEl","supportsOpacity","opacity","supportsFilters","reOpacity","es","currentStyle","hasLayout","zoom","test","_slice","getById","id","getElementById","sliceCanConvertNodelists","toArray","arrayLike","childNodes","err","arr","makeElement","tagName","el","className","htmlFor","setAttribute","addClass","wrapElement","wrapper","replaceChild","docElement","documentElement","body","scrollLeft","scrollTop","host","nodeType","getElementOffset","docElem","doc","ownerDocument","box","offset","scrollLeftTop","offsetAttributes","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","attr","parseInt","getElementStyle","getBoundingClientRect","clientLeft","clientTop","defaultView","getComputedStyle","undefined","selectProp","makeElementUnselectable","onselectstart","unselectable","makeElementSelectable","getScript","headEl","getElementsByTagName","scriptEl","loading","onreadystatechange","e","readyState","getNodeCanvas","impl","_canvas","_image","cleanUpJsdomNode","_currentSrc","_attributes","_classList","addParamToUrl","param","emptyFn","request","onComplete","xhr","XMLHttpRequest","parameters","open","setRequestHeader","send","warn","noop","defaultEasing","d","animate","requestAnimFrame","timestamp","start","Date","duration","finish","time","onChange","abort","easing","startValue","endValue","byValue","onStart","tick","ticktime","currentTime","timePerc","valuePerc","_requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","_cancelAnimFrame","cancelAnimationFrame","clearTimeout","cancelAnimFrame","calculateColor","begin","end","pos","color","animateColor","fromColor","toColor","startColor","Color","getSource","endColor","posValue","colorEasing","normalize","asin","elastic","opts","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","ease","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","svgValidTagNames","svgViewBoxElements","svgInvalidAncestors","svgValidParents","attributesMap","display","visibility","colorAttributes","stroke","fSize","cPath","svgValidTagNamesRegEx","getSvgRegex","svgViewBoxElementsRegEx","svgInvalidAncestorsRegEx","svgValidParentsRegEx","cssRules","gradientDefs","clipPaths","normalizeAttr","normalizeValue","parentAttributes","isArray","parsed","transformMatrix","parseTransformAttribute","visible","fillIndex","strokeIndex","RegExp","_setStrokeFillOpacity","setAlpha","getAlpha","toRgba","_getMultipleNodes","nodeNames","nodeName","nodeArray","nodeList","rotateMatrix","multiplierX","multiplierY","skewMatrix","translateMatrix","commaWsp","scale","transforms","transformList","reTransformList","reTransform","attributeValue","matrices","m","operation","combinedMatrix","parseStyleString","oStyle","chunk","pair","trim","parseStyleObject","getGlobalStylesForElement","svgUid","rule","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","doesSomeParentMatch","selector","classNames","getAttribute","matcher","elementById","node","nodelist","parseUseDirectives","xlink","substr","el2","cloneNode","currentTrans","oldLength","attrs","applyViewboxTransform","el3","createElementNS","setAttributeNS","nodeValue","firstChild","removeAttribute","reViewBoxAttrValue","viewBoxAttr","viewBoxWidth","viewBoxHeight","widthAttr","heightAttr","preserveAspectRatio","missingViewBox","missingDimAttr","toBeParsed","parsedDim","widthDiff","heightDiff","viewboxTransform","hasAncestorWithNodeName","parseSVGDocument","parsingOptions","__uid","descendants","selectNodes","getGradientDefs","getCSSRules","parseElements","instances","recursivelyParseGradientsXlink","gradient","gradientsAttrs","xlinkAttr","xLink","referencedGradient","hasAttribute","children","referenceClone","reFontDeclaration","parseFontDeclaration","fontStyle","fontWeight","lineHeight","tagArray","elList","parseAttributes","parentFontSize","ownAttributes","cssAttrs","parseStyleAttribute","normalizedAttr","normalizedValue","normalizedStyle","font","mergedAttrs","ElementsParser","parse","parsePointsAttribute","parsedPoints","allRules","rules","styleContents","textContent","text","ruleObj","declaration","propertyValuePairs","_rule","loadSVGFromURL","xml","responseXML","ActiveXObject","responseText","async","loadXML","results","_options","allElements","loadSVGFromString","parser","parseFromString","regexUrl","proto","numElements","createObjects","createObject","findTag","fromElement","createCallback","checkIfDone","resolveGradient","Image","_originalElement","_removeTransformMatrix","resolveClipPath","extractPropertyDefinition","storage","regex","lastIndex","gradientDef","opacityAttr","createClipPathCallback","container","_newObj","fillRule","clipRule","usingElement","clipPath","objTransformInv","gTransform","calcTransformMatrix","clipPathTag","clipPathOwner","setPositionByOrigin","that","scalarAdd","scalar","scalarAddEquals","subtract","scalarSubtract","scalarSubtractEquals","multiplyEquals","divide","divideEquals","eq","lt","lte","gt","gte","lerp","distanceFrom","midPointFrom","setXY","setX","setY","setFromPoint","swap","Intersection","status","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","setSource","_tryParsingColor","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","g","h","round","_source","toRgb","toHsl","hsl","toHsla","toHex","toHexa","alpha","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherAlpha","otherSource","reRGBa","reHSLa","reHex","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","hue2rgb","q","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","isRGBa","oColor","getColorStop","multiplier","colorAlpha","keyValuePairs","getLinearCoords","getRadialCoords","offsetX","offsetY","gradientTransform","gradientUnits","keys","option","addColorStop","toObject","propertiesToInclude","toSVG","markup","commonAttributes","needsSwap","withViewport","additionalTransform","sort","pathOffset","reverse","minRadius","maxRadius","percentageShift","colorStop","toLive","createLinearGradient","createRadialGradient","instance","svgOptions","colorStopEls","__convertPercentUnitsToValues","forObject","propValue","finalValue","repeat","patternTransform","setOptions","patternSource","patternWidth","patternHeight","patternOffsetX","patternOffsetY","patternImgSrc","complete","naturalWidth","naturalHeight","createPattern","Shadow","blur","affectStroke","includeDefaultValues","nonScaling","_parseShadow","shadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","BLUR_BOX","StaticCanvas","CANVAS_INIT_ERROR","Error","renderAndResetBound","renderAndReset","bind","requestRenderAllBound","_initStatic","backgroundColor","backgroundImage","overlayColor","overlayImage","stateful","controlsAboveOverlay","allowTouchScrolling","imageSmoothingEnabled","viewportTransform","backgroundVpt","overlayVpt","onBeforeScaleRotate","enableRetinaScaling","vptCoords","skipOffscreen","cb","_createLowerCanvas","_initOptions","_setImageSmoothing","interactive","_initRetinaScaling","setOverlayImage","setBackgroundImage","setBackgroundColor","setOverlayColor","calcOffset","_isRetinaScaling","getRetinaScaling","scaleRatio","__initRetinaScaling","lowerCanvasEl","contextContainer","upperCanvasEl","contextTop","_offset","image","__setBgOverlayImage","__setBgOverlayColor","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","_createCanvasElement","_applyCanvasStyle","getWidth","getHeight","setWidth","setDimensions","setHeight","dimensions","cssValue","cssOnly","_setBackstoreDimension","hasLostContext","backstoreOnly","_setCssDimension","_isCurrentlyDrawing","freeDrawingBrush","_setBrushStyles","cacheCanvasEl","wrapperEl","getZoom","setViewportTransform","vpt","activeObject","_activeObject","ignoreVpt","skipAbsolute","group","setCoords","calcViewportBoundaries","zoomToPoint","before","after","setZoom","absolutePan","relativePan","getElement","setupState","clearContext","clearRect","clear","_hasITextHandlers","_mouseUpITextHandler","_iTextInstances","renderAll","canvasToDrawOn","renderCanvas","isRendering","iVpt","tl","br","tr","bl","cancelRequestedRender","_renderBackground","_renderObjects","drawControls","shouldCache","_transformDone","renderCache","forClipping","drawClipPathOnCanvas","_renderOverlay","globalCompositeOperation","zoomX","zoomY","_cacheCanvas","cacheTranslationX","cacheTranslationY","render","_renderBackgroundOrOverlay","needsVpt","lineTo","closePath","fillStyle","getCenter","centerObjectH","_centerObject","getCenterPoint","centerObjectV","centerObject","center","viewportCenterObject","vpCenter","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","toDatalessJSON","toDatalessObject","_toObjectMethod","_toObjects","_toObject","__serializeBgOverlay","excludeFromExport","originalValue","bgImage","overlay","background","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","clipPathId","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","createSVGClipPathMarkup","toClipPathSVG","shouldTransform","fontList","row","rowIndex","_char","charIndex","_setSVGObject","finalWidth","finalHeight","shouldInvert","sendToBack","activeSelection","objs","unshift","bringToFront","sendBackwards","intersecting","newIdx","objsMoved","_findNewLowerIndex","isIntersecting","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","dispose","DataURLExporter","EMPTY_JSON","supports","setLineDash","toJSON","createPNGStream","createJPEGStream","BaseBrush","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeDashArray","setShadow","strokeStyle","lineWidth","lineCap","miterLimit","lineJoin","_saveAndTransform","_setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","needsFullRender","_resetShadow","PencilBrush","decimate","_points","_drawSegment","p1","p2","midPoint","quadraticCurveTo","onMouseDown","pointer","_isMainEvent","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","oldEnd","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","convertPointsToSVGPath","multSignX","multSignY","manyPoints","createPath","pathData","Path","strokeWidth","decimatePoints","distance","adjustedDistance","lastPoint","newPoints","cDistance","CircleBrush","drawDot","addPoint","dot","arc","radius","originalRenderOnAddRemove","circles","circle","Circle","originX","originY","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","sprayChunkPoints","rects","ilen","sprayChunk","rect","Rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","globalAlpha","fillRect","PatternBrush","getPatternSrc","dotDistance","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","topLeft","_getLeftTopCoords","supportLineDash","STROKE_OFFSET","_initInteractive","_createCacheCanvas","uniScaleTransform","uniScaleKey","centeredScaling","centeredRotation","centeredKey","altActionKey","selection","selectionKey","altSelectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","selectionFullyContained","hoverCursor","moveCursor","defaultCursor","freeDrawingCursor","rotationCursor","notAllowedCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","isDrawingMode","preserveObjectStacking","snapAngle","snapThreshold","stopContextMenu","fireRightClick","fireMiddleClick","targets","_hoveredTarget","_hoveredTargets","_currentTransform","_groupSelector","_initWrapperElement","_createUpperCanvas","_initEventListeners","_chooseObjectsToRender","activeObjects","getActiveObjects","objsToRender","activeGroupObjects","contextTopDirty","renderTopLayer","_drawSelection","renderTop","_resetCurrentTransform","original","_shouldCenterTransform","mouseXSign","mouseYSign","containsPoint","ignoreZoom","xy","_normalizePointer","_findTargetCorner","invertedM","vptPointer","restorePointerVpt","isTargetTransparent","normalizedPointer","targetRelativeX","targetRelativeY","_cacheContext","contextCache","originalColor","selectionBackgroundColor","_renderControls","hasBorders","transparentCorners","_isSelectionKeyPressed","selectionKeyPressed","_shouldClearSelection","evented","selectable","centerTransform","action","altKey","_getOriginFromCorner","corner","_getActionFromCorner","alreadySelected","_setupCurrentTransform","ex","ey","lastX","lastY","shiftKey","_beforeTransform","_translateObject","newLeft","newTop","moveX","moveY","_changeSkewTransformOrigin","mouseMove","by","origins","skew","originA","originB","flipSign","skewSign","_skewObject","skewed","lockSkewingX","lockSkewingY","actualMouseByCenter","toLocalPoint","lastMouseByCenter","actualMouseByOrigin","constraintPosition","dim","_getTransformedDimensions","translateToOriginPoint","_setObjectSkew","localMouse","_dim","newValue","newDim","dimNoSkew","otherBy","_otherBy","_by","newDimMouse","atan","_scaleObject","lockScalingX","lockScalingY","lockScalingFlip","scaled","_setLocalMouse","_setObjectScale","forbidScalingX","forbidScalingY","changeX","changeY","newScaleX","newScaleY","Textbox","w","getMinWidth","_scaleObjectEqually","_flipObject","dist","lastDist","signX","signY","padding","_rotateObject","lockRotation","lastAngle","curAngle","hasRotated","rightAngleLocked","leftAngleLocked","setCursor","cursor","groupSelector","aleft","atop","_setLineDash","strokeRect","findTarget","skipGroup","aObjects","activeTarget","activeTargetSubs","_searchPossibleTargets","_checkTarget","globalPointer","isEditing","subTarget","objToCheck","pointerToUse","subTargetCheck","_absolutePointer","_pointer","boundsWidth","boundsHeight","cssScale","bottom","right","retinaScaling","lowerCanvasClass","_copyCanvasStyle","fromEl","toEl","getSelectionContext","getSelectionElement","getActiveObject","active","_discardActiveObject","_fireSelectionEvents","oldObjects","somethingChanged","added","removed","opt","oldObject","selected","deselected","updated","setActiveObject","currentActives","_setActiveObject","onSelect","onDeselect","discardActiveObject","removeListeners","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","layoutProps","originalValues","realizeTransform","clearContextTop","cursorOffset","mr","mb","ml","RIGHT_CLICK","MIDDLE_CLICK","LEFT_CLICK","addEventOptions","passive","checkClick","button","cursorMap","mainTouchId","_bindEvents","addOrRemove","_getEventPrefix","enablePointerEvents","functor","eventjsFunctor","canvasElement","eventTypePrefix","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","_onDoubleClick","_onDragOver","_onDragEnter","_onDragLeave","_onDrop","_onTouchStart","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","_onMouseUp","_onTouchEnd","eventsBound","_simpleEventHandler","self","__onTransformGesture","__onDrag","__onMouseWheel","_target","hiddenTextarea","focus","currentTransform","__onOrientationChange","__onShake","__onLongPress","preventDefault","_fireEnterLeaveEvents","stopPropagation","_cacheTransformEventData","_handleEvent","_resetTransformEventData","getPointerId","evt","identifier","pointerId","isPrimary","touches","__onMouseDown","__onMouseUp","_willAddMouseDown","__onMouseMove","_shouldRender","shouldRender","isClick","_onMouseUpInDrawingMode","_finalizeCurrentTransform","actionPerformed","_maybeGroupObjects","isMoving","_setCursorFromEvent","__corner","eventType","subTargets","absolutePointer","_scaling","hasStateChanged","_addEventOptions","_fire","_onMouseDownInDrawingMode","_onMouseMoveInDrawingMode","_previousPointer","shouldGroup","_shouldGroup","_handleGrouping","saveState","_fireOverOutEvents","_transformObject","fireSyntheticInOutEvents","oldTarget","evtOut","canvasEvtOut","evtIn","canvasEvtIn","_draggedoverTarget","config","inOpt","outOpt","outFires","inFires","targetChanged","previousTarget","nextTarget","reset","_beforeScaleTransform","_performTransformAction","_onScale","_isUniscalePossible","currentAction","getCornerCursor","actionIsDisabled","_getRotatedCornerCursor","hasRotatingPoint","n","_updateActiveSelection","_createActiveSelection","currentActiveObjects","removeWithUpdate","addWithUpdate","_createGroup","isActiveLower","groupObjects","exitEditing","ActiveSelection","_groupSelectedObjects","_collectObjects","aGroup","currentObject","selectionX1Y1","selectionX2Y2","allowIntersect","intersectsWithRect","isContainedWithinRect","toCanvasElement","cropping","scaledWidth","scaledHeight","originalWidth","originalHeight","newZoom","vp","originalInteractive","newVp","originalRetina","originalContextTop","loadFromDatalessJSON","json","loadFromJSON","serialized","JSON","_enlivenObjects","_setBgOverlay","enlivenedCanvasClip","__setupCanvas","loaded","cbIfLoaded","__setBgOverlay","enlivedObject","_toDataURL","_toDataURLWithMultiplier","toDataURLWithMultiplier","stringify","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","supportsLineDash","objectCaching","ALIASING_LIMIT","cornerSize","borderColor","borderDashArray","cornerColor","cornerStrokeColor","cornerStyle","cornerDashArray","strokeDashOffset","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","hasControls","rotatingPointOffset","lockMovementX","lockMovementY","lockUniScaling","statefullCache","noScaleCache","strokeUniform","dirty","paintFirst","stateProperties","cacheProperties","inverted","absolutePositioned","_cacheProperties","_updateCacheCanvas","_limitCacheSize","dims","limitedDims","capped","_getCacheCanvasDimensions","objectScale","getTotalObjectScaling","neededX","neededY","targetCanvas","minCacheSize","drawingWidth","drawingHeight","dimensionsChanged","cacheWidth","cacheHeight","zoomChanged","shouldRedraw","additionalWidth","additionalHeight","shouldResizeCanvas","canvasWidth","canvasHeight","sizeGrowing","sizeShrinking","setTransform","calcOwnMatrix","_removeDefaultValues","getObjectScaling","scaling","retina","getObjectOpacity","shouldConstrainValue","isChanged","groupNeedsUpdate","_constrainScale","isOnACache","setOnGroup","getViewportTransform","isNotVisible","isOnScreen","_setupCompositeOperation","drawSelectionBackground","_setOpacity","drawCacheOnCanvas","_removeCacheCanvas","drawObject","propertySet","isCacheDirty","hasStroke","hasFill","needsItsOwnCache","ownCaching","willDrawShadow","drawClipPathOnCache","originalFill","originalStroke","_setClippingProperties","_setStrokeStyles","_setFillStyles","_drawClipPath","skipCanvas","_getNonTransformedDimensions","_removeShadow","decl","lineDashOffset","dashArray","alternative","styleOverride","drawBorders","forActiveSelection","drawBordersInGroup","multX","multY","_applyPatternGradientTransform","_renderPaintInOrder","_renderStroke","_renderFill","_renderDashedStroke","_applyPatternForTransformedGradient","pCanvas","pCtx","_findCenterFromElement","_assignTransformMatrixProps","preserveAspectRatioOptions","cropX","cropY","offsetLeft","offsetTop","objectForm","_fromObject","cloneAsImage","utils","origParams","originalGroup","originalShadow","withoutTransform","withoutShadow","boundingRect","getBoundingRect","shadowOffset","originalCanvas","isType","setGradient","setPatternFill","setColor","shouldCenterOrigin","_setOriginToCenter","_resetOrigin","centerH","viewportCenterH","centerV","viewportCenterV","viewportCenter","getLocalPointer","pClicked","objectLeftTop","createAccessors","extraParam","enlivedProps","originXOffset","originYOffset","translateToGivenOrigin","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","leftTop","getPointByOrigin","adjustPosition","to","hypotFull","getScaledWidth","xFull","yFull","offsetFrom","offsetTo","_originalOriginX","_originalOriginY","originPoint","getCoords","multiplyMatrices","oCoords","aCoords","ownMatrixCache","matrixCache","absolute","calculate","calcCoords","pointTL","pointBR","intersection","other","lines","_getImageLines","_findCrossPoints","_containsCenterOfCanvas","isPartiallyOnScreen","topline","rightline","bottomline","leftline","xi","xcount","iLine","lineKey","getScaledHeight","scaleToWidth","boundingRectFactor","scaleToHeight","_calcRotateMatrix","_calcTranslateMatrix","startMatrix","finalMatrix","cosP","sinP","cosPSinP","cosPMinusSinP","mtr","_setCornerCoords","transformMatrixKey","sep","prefix","cache","tMatrix","_calcDimensionsTransformMatrix","flipping","dimX","dimY","noSkew","_finalizeDimensions","bbox","_calculateCurrentDimensions","getSvgColorString","getSvgStyles","skipShadow","getSvgFilter","getSvgSpanStyles","useWhiteSpace","term","textDecoration","getSvgTextDecoration","deltaY","overline","underline","linethrough","getSvgCommons","getSvgTransform","full","svgTransform","getSvgTransformMatrix","_setSVGBg","textBgRects","_getFillAttributes","_createBaseSVGMarkup","_toSVG","_createBaseClipPathSVGMarkup","objectMarkup","commonPieces","noStyle","styleInfo","shadowInfo","withShadow","vectorEffect","absoluteClipPath","clipPathMarkup","addPaintOrder","originalSet","saveProps","props","tmpObj","_isEqual","origValue","currentValue","firstPass","dashedPropertySet","_controlsVisibility","isControlVisible","newTheta","cornerHypotenuse","cosHalfOffset","sinHalfOffset","wh","drawRotatingPoint","rotateHeight","scaleOffset","_drawControl","control","controlName","_getControlsVisibility","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","callbacks","empty","fxCenterObjectV","fxRemove","propsToAnimate","skipCallbacks","_animate","propPair","from","valueProgress","timeProgress","coordProps","Line","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","makeEdgeToOriginGetter","axis1","axis2","dimension","nearest","farthest","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","_callback","propertyNames","originValues","pi","startAngle","endAngle","setRadius","svgString","startX","startY","endX","endY","largeFlag","getRadiusX","getRadiusY","isValidRadius","Triangle","widthBy2","heightBy2","piBy2","Ellipse","getRx","getRy","_initRxRy","isRounded","Polyline","_setPositionDimensions","calcDim","_calcDimensions","correctLeftTop","fromSVG","diffX","diffY","commonRender","fromElementGenerator","_class","Polygon","_toString","commandLengths","repeatedCommands","M","fromArray","_parsePath","_renderPathCommands","previous","subpathStartX","subpathStartY","controlX","controlY","tempX","tempY","_getOffsetTransform","digits","currentPath","re","coordsStr","coordsParsed","command","commandLength","repeatedCommand","klen","aX","aY","deltaX","pathUrl","useSetOnGroup","isAlreadyGrouped","_calcBounds","_updateObjectsCoords","_updateObjectsACoords","_updateObjectCoords","objectLeft","objectTop","_restoreObjectsState","_includeDefaultValues","objsToObject","originalDefaults","_obj","ownCache","_restoreObjectState","destroy","toActiveSelection","ungroupOnCanvas","setObjectsCoords","onlyWidthHeight","iLen","jLen","_getBounds","minXY","maxXY","enlivedClipPath","toGroup","newGroup","childrenOverride","srcFromAttribute","_lastScaleX","_lastScaleY","_filterScalingX","_filterScalingY","minimumScaleTrigger","cacheKey","filters","_initElement","_element","setElement","removeTexture","_initConfig","applyFilters","resizeFilter","applyResizeFilters","backend","filterBackend","evictCachesForKey","setCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","hasCrop","imageMarkup","strokeSvg","getSvgSrc","origFill","filtered","setSrc","minimumScale","elementToFilter","_filteredEl","sourceWidth","sourceHeight","isNeutralState","imgElement","_needsResize","elementToDraw","sW","sH","sX","sY","_resetWidthHeight","CSS_CANVAS","_initFilters","pAR","rWidth","rHeight","pWidth","pHeight","_object","resizeFilters","fromURL","imgOptions","_getAngleValueForStraighten","straighten","fxStraighten","straightenObject","fxStraightenObject","testPrecision","gl","precision","fragmentSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","isSupported","getParameter","MAX_TEXTURE_SIZE","precisions","webGlPrecision","setupGLContext","captureGPUInfo","createWebGLCanvas","aPosition","Float32Array","chooseFastestCopyGLTo2DMethod","canMeasurePerf","performance","canUseImageData","ImageData","canUseArrayBuffer","ArrayBuffer","canUseUint8Clamped","Uint8ClampedArray","imageBuffer","copyGLTo2D","copyGLTo2DPutImageData","testContext","destinationWidth","destinationHeight","startTime","drawImageTime","putImageDataTime","now","copyGLTo2DDrawImage","glOptions","premultipliedAlpha","depth","stencil","antialias","clearColor","cachedTexture","getCachedTexture","pipelineState","sourceTexture","createTexture","targetTexture","originalTexture","passes","webgl","programCache","pass","tempFbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","applyTo","resizeCanvasIfNeeded","bindTexture","TEXTURE_2D","deleteTexture","deleteFramebuffer","clearWebGLCaches","textureCache","textureImageSource","texture","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","RGBA","UNSIGNED_BYTE","uniqueId","gpuInfo","renderer","vendor","ext","getExtension","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","dWidth","dHeight","glCanvas","sourceY","numBytes","u8","Uint8Array","u8Clamped","readPixels","imgData","putImageData","sourceElement","originalImageData","originalEl","BaseFilter","vertexSource","createProgram","vertexShader","VERTEX_SHADER","getShaderInfoLog","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attributeLocations","getAttributeLocations","uniformLocations","getUniformLocations","uStepW","getUniformLocation","uStepH","getAttribLocation","sendAttributeData","aPositionData","attributeLocation","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","_setupFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","_swapTextures","main","mainParameter","applyToWebGL","applyTo2d","retrieveShader","shader","useProgram","uniform1f","sendUniformData","viewport","drawArrays","TRIANGLE_STRIP","bindAdditionalTexture","textureUnit","activeTexture","TEXTURE0","unbindAdditionalTexture","getMainParameter","setMainParameter","createHelpLayer","helpLayer","mainP","ColorMatrix","colorsOnly","uColorMatrix","uConstants","constants","uniformMatrix4fv","uniform4fv","Brightness","brightness","uBrightness","Convolute","opaque","Convolute_3_1","Convolute_3_0","Convolute_5_1","Convolute_5_0","Convolute_7_1","Convolute_7_0","Convolute_9_1","Convolute_9_0","weights","side","halfSide","sw","sh","output","createImageData","dst","alphaFac","dstOff","scx","scy","srcOff","wt","uMatrix","uOpaque","uHalfSize","uSize","uniform1fv","Grayscale","lightness","luminosity","mode","uMode","uniform1i","Invert","invert","uInvert","Noise","noise","rand","uNoise","uSeed","Pixelate","blocksize","_i","_j","_iLen","_jLen","uBlocksize","RemoveColor","useAlpha","lowC","highC","uLow","uHigh","Brownie","Vintage","Kodachrome","Technicolor","Polaroid","Sepia","BlackWhite","BlendColor","screen","diff","lighten","darken","exclusion","tint","buildSource","tg","alpha1","uColor","BlendImage","mask","TEXTURE1","calculateMatrix","canvas1","blendData","blendImage","uTransformMatrix","uImage","uniformMatrix3fv","Resize","resizeType","lanczosLobes","uDelta","uTaps","uniform2fv","horizontal","taps","filterWindow","getFilterWindow","generateShader","tempScale","getTaps","lobeFunction","lanczosCreate","offsets","fragmentSourceTOP","dW","dH","lobes","xx","rcpScaleX","rcpScaleY","oW","oH","newData","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","mult","doneW","doneH","stepW","stepH","tmpCanvas","dX","dY","process","u","weight","fX","fY","ratioX","icenter","ratioY","range2X","cacheLanc","range2Y","lanczos","rcpRatioX","rcpRatioY","srcData","destData","destImg","xDiff","yDiff","chnl","origPix","w4","pixels","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","centerX","w0","Contrast","contrast","contrastF","uContrast","Saturation","saturation","adjust","uSaturation","Blur","aspectRatio","simpleBlur","canvas2","blurLayer1","blurLayer2","ctx1","ctx2","nSamples","percent","newImageData","delta","chooseRightDelta","blurScale","Gamma","gamma","rInv","gInv","bInv","rVals","gVals","bVals","uGamma","uniform3fv","Composed","subFilters","some","HueRotation","rotation","rad","aThird","aThirdSqtSin","OneMinusCos","_dimensionAffectingProps","_reNewline","_reSpacesAndTabs","_reSpaceAndTab","_reWords","textAlign","superscript","baseline","subscript","textBackgroundColor","_fontSizeFraction","_fontSizeMult","charSpacing","_measuringContext","_styleProperties","__charBounds","CACHE_FONT_SIZE","MIN_TEXT_WIDTH","__skipDimension","initDimensions","getMeasuringContext","_splitText","newLines","_splitTextIntoLines","textLines","_textLines","graphemeLines","_unwrappedTextLines","_unwrappedLines","_text","graphemeText","_clearCache","calcTextWidth","cursorWidth","enlargeSpaces","calcTextHeight","diffSpace","currentLineWidth","numberOfSpaces","accumulatedSpace","line","charBound","spaces","isEndOfWrapping","getLineWidth","kernedWidth","lineIndex","missingNewlineOffset","_setTextStyles","_renderTextLinesBackground","_renderTextDecoration","_renderText","_renderTextStroke","_renderTextFill","charStyle","forMeasuring","textBaseline","_getFontDeclaration","maxWidth","_renderTextLine","_renderChars","styleHas","lineTopOffset","heightOfLine","lineLeftOffset","lastColor","leftOffset","_getLeftOffset","topOffset","_getTopOffset","boxStart","boxWidth","charBox","currentColor","getHeightOfLine","_getLineLeftOffset","getValueOfPropertyAt","getFontCache","cacheProp","_applyCharStyles","styleDeclaration","_measureChar","previousChar","prevCharStyle","fontCache","fontDeclaration","previousFontDeclaration","couple","stylesAreEqual","coupleWidth","previousWidth","fontMultiplier","measureText","getHeightOfChar","measureLine","lineInfo","_measureLine","_getWidthOfCharSpacing","grapheme","prevGrapheme","graphemeInfo","numOfSpaces","lineBounds","_getGraphemeBox","skipLeft","getCompleteStyleDeclaration","prevStyle","info","previousBox","__lineHeights","maxHeight","_renderTextCommon","lineHeights","isEmptyStyles","isJustify","actualStyle","nextStyle","charsToRender","timeToRender","shortCut","_renderChar","_hasStyleChanged","_getStyleDeclaration","fullDecl","shouldFill","shouldStroke","fillText","strokeText","setSuperscript","_setScript","setSubscript","schema","loc","get2DCursorLocation","setSelectionStyles","thisStyle","_hasStyleChangedForSvg","__lineWidths","_shouldClearDimensionCache","shouldClear","_forceClearCache","_size","_dy","lastDecoration","currentDecoration","currentFill","lastFill","styleObject","family","fontIsGeneric","genericFonts","newLine","newText","additionalProperties","needsDims","_key","parsedAnchor","textAnchor","originalStrokeWidth","textHeightScaleFactor","lineHeightDiff","scaledDiff","textHeight","offX","p3","cleanStyle","stylesCount","letterCount","stylePropertyValue","allStyleObjectPropertiesMatch","graphemeCount","stylePropertyHasBeenSet","removeStyle","lineNum","charNum","_extendStyles","_getLineStyle","_setLineStyle","_setStyleDeclaration","selectionStart","skipWrapping","getSelectionStyles","startIndex","endIndex","selectionEnd","getStyleAtPosition","lineStyle","_deleteStyleDeclaration","_deleteLineStyle","parseDecoration","IText","editable","editingBorderColor","cursorColor","cursorDelay","cursorDuration","caching","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","__widthOfSpace","inCompositionMode","initBehavior","setSelectionStart","_updateAndFire","setSelectionEnd","_fireSelectionChanged","_updateTextarea","initDelayedCursor","cursorOffsetCache","renderCursorOrSelection","skipRestore","_clearTextArea","boundaries","_getCursorBoundaries","renderCursor","renderSelection","_getCursorBoundariesOffsets","cursorPosition","cursorLocation","charHeight","__isMousedown","startLine","endLine","startChar","endChar","lineOffset","realLineHeight","boxEnd","compositionColor","getCurrentCharFontSize","cp","_getCurrentCharIndex","getCurrentCharColor","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","mouseMoveHandler","_initCanvasHandlers","_removeCanvasHandlers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","_currentTickCompleteState","restart","delay","abortCursorAnimation","_cursorTimeout2","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","searchWordBoundary","direction","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","exitEditingOnOthers","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","initMouseMoveHandler","getSelectionStartFromPointer","currentStart","currentEnd","__selectionStartOnMouseDown","restartCursorIfNeeded","fromStringToGraphemeSelection","smallerTextStart","graphemeStart","smallerTextEnd","graphemeEnd","fromGraphemeToStringSelection","newSelection","updateTextareaPosition","updateFromTextArea","_calcTextareaPosition","desiredPosition","compositionStart","upperCanvas","upperCanvasWidth","upperCanvasHeight","clientWidth","clientHeight","_savedProps","_restoreEditingProps","isTextChanged","_removeExtraneousStyles","removeStyleFromTo","cursorStart","cursorEnd","lineStart","charStart","lineEnd","charEnd","styleObj","shiftLineStyles","numericChar","clonedStyles","numericLine","insertNewlineStyleObject","qty","copiedStyle","currentCharStyle","newLineStyles","somethingAdded","numIndex","insertCharStyleObject","quantity","currentLineStyles","currentLineStylesCloned","numericIndex","newStyle","insertNewStyleBlock","insertedText","cursorLoc","addedLines","linesLength","setSelectionStartEndWithShift","setSelectionInBoundaries","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","__lastIsEditing","__lastSelected","initMousedownHandler","initMouseupHandler","initClicks","doubleClickHandler","tripleClickHandler","_mouseDownHandler","setCursorByClick","_mouseDownHandlerBefore","mouseUpHandler","currentActive","mouseOffset","prevWidth","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onKeyUp","onInput","copy","paste","onCompositionStart","onCompositionUpdate","onCompositionEnd","_clickHandlerInitialized","onClick","keysMap","ctrlKeysMapUp","ctrlKeysMapDown","keyCode","ctrlKey","metaKey","stopImmediatePropagation","_copyDone","fromPaste","nextText","charCount","nextCharCount","removedText","charDiff","textareaSelection","backDelete","copiedText","copiedTextStyle","compositionEnd","_getClipboardData","clipboardData","_getWidthBeforeCursor","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","textAfterCursor","getUpCursorOffset","textBeforeCursor","widthOfCharsOnLine","indexOnLine","charWidth","foundMatch","leftEdge","rightEdge","offsetFromLeftEdge","offsetFromRightEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","_moveLeft","_moveRight","moveCursorLeftWithoutShift","change","moveCursorLeftWithShift","moveCursorRight","actionName","moveCursorRightWithShift","moveCursorRightWithoutShift","changed","removeChars","insertChars","multipleSpacesRegex","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","noShadow","textSpans","textTopOffset","textLeftOffset","_setSVGTextLineBg","_setSVGTextLineText","_createTextCharSpan","styleDecl","shouldUseWhitespace","styleProps","fillStyles","dySpan","_pushTextBgRect","fillColor","_getSVGLineTopOffset","lastHeight","svgStyle","minWidth","dynamicMinWidth","__cachedLines","_wordJoiners","splitByGrapheme","_styleMap","_generateStyleMap","textInfo","realLineCount","realLineCharCount","isWrapping","nextLineIndex","nextOffset","shouldLimit","mapNextLine","_wrapText","desiredWidth","wrapped","_wrapLine","_measureWord","word","charOffset","_line","reservedSpace","words","infix","wordWidth","infixWidth","largestWordWidth","lineJustStarted","additionalSpace","linesToKeep"],"mappings":"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","sourcesContent":["/* build: `node build.js modules=ALL exclude=gestures,accessors requirejs minifier=uglifyjs` */\n/*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\nvar fabric = fabric || { version: '3.6.0' };\nif (typeof exports !== 'undefined') {\n  exports.fabric = fabric;\n}\n/* _AMD_START_ */\nelse if (typeof define === 'function' && define.amd) {\n  define([], function() { return fabric; });\n}\n/* _AMD_END_ */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  if (document instanceof (typeof HTMLDocument !== 'undefined' ? HTMLDocument : Document)) {\n    fabric.document = document;\n  }\n  else {\n    fabric.document = document.implementation.createHTMLDocument('');\n  }\n  fabric.window = window;\n}\nelse {\n  // assume we're running under node.js when document/window are not present\n  var jsdom = require('jsdom');\n  var virtualWindow = new jsdom.JSDOM(\n    decodeURIComponent('%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E'),\n    {\n      features: {\n        FetchExternalResources: ['img']\n      },\n      resources: 'usable'\n    }).window;\n  fabric.document = virtualWindow.document;\n  fabric.jsdomImplForWrapper = require('jsdom/lib/jsdom/living/generated/utils').implForWrapper;\n  fabric.nodeCanvas = require('jsdom/lib/jsdom/utils').Canvas;\n  fabric.window = virtualWindow;\n  DOMParser = fabric.window.DOMParser;\n}\n\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\nfabric.isTouchSupported = 'ontouchstart' in fabric.window || 'ontouchstart' in fabric.document ||\n  (fabric.window && fabric.window.navigator && fabric.window.navigator.maxTouchPoints > 0);\n\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\nfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n                      typeof window === 'undefined';\n\n/* _FROM_SVG_START_ */\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nfabric.SHARED_ATTRIBUTES = [\n  'display',\n  'transform',\n  'fill', 'fill-opacity', 'fill-rule',\n  'opacity',\n  'stroke', 'stroke-dasharray', 'stroke-linecap', 'stroke-dashoffset',\n  'stroke-linejoin', 'stroke-miterlimit',\n  'stroke-opacity', 'stroke-width',\n  'id', 'paint-order', 'vector-effect',\n  'instantiated_by_use', 'clip-path'\n];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:[eE][-+]?\\\\d+)?)';\nfabric.rePathCommand = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:[eE][-+]?\\d+)?)/ig;\nfabric.reNonWord = /[ \\n\\.,;!\\?\\-]/;\nfabric.fontPaths = { };\nfabric.iMatrix = [1, 0, 0, 1, 0, 0];\nfabric.svgNS = 'http://www.w3.org/2000/svg';\n\n/**\n * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.perfLimitSizeTotal = 2097152;\n\n/**\n * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.maxCacheSideLimit = 4096;\n\n/**\n * Lowest pixel limit for cache canvases, set at 256PX\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.minCacheSideLimit = 256;\n\n/**\n * Cache Object for widths of chars in text rendering.\n */\nfabric.charWidthsCache = { };\n\n/**\n * if webgl is enabled and available, textureSize will determine the size\n * of the canvas backend\n * @since 2.0.0\n * @type Number\n * @default\n */\nfabric.textureSize = 2048;\n\n/**\n * When 'true', style information is not retained when copy/pasting text, making\n * pasted text use destination style.\n * Defaults to 'false'.\n * @type Boolean\n * @default\n */\nfabric.disableStyleCopyPaste = false;\n\n/**\n * Enable webgl for filtering picture is available\n * A filtering backend will be initialized, this will both take memory and\n * time since a default 2048x2048 canvas will be created for the gl context\n * @since 2.0.0\n * @type Boolean\n * @default\n */\nfabric.enableGLFiltering = true;\n\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\nfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n                          fabric.window.webkitDevicePixelRatio ||\n                          fabric.window.mozDevicePixelRatio ||\n                          1;\n/**\n * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\n * which is unitless and not rendered equally across browsers.\n *\n * Values that work quite well (as of October 2017) are:\n * - Chrome: 1.5\n * - Edge: 1.75\n * - Firefox: 0.9\n * - Safari: 0.95\n *\n * @since 2.0.0\n * @type Number\n * @default 1\n */\nfabric.browserShadowBlurConstant = 1;\n\n/**\n * This object contains the result of arc to beizer conversion for faster retrieving if the same arc needs to be converted again.\n * It was an internal variable, is accessible since version 2.3.4\n */\nfabric.arcToSegmentsCache = { };\n\n/**\n * This object keeps the results of the boundsOfCurve calculation mapped by the joined arguments necessary to calculate it.\n * It does speed up calculation, if you parse and add always the same paths, but in case of heavy usage of freedrawing\n * you do not get any speed benefit and you get a big object in memory.\n * The object was a private variable before, while now is appended to the lib so that you have access to it and you\n * can eventually clear it.\n * It was an internal variable, is accessible since version 2.3.4\n */\nfabric.boundsOfCurveCache = { };\n\n/**\n * If disabled boundsOfCurveCache is not used. For apps that make heavy usage of pencil drawing probably disabling it is better\n * @default true\n */\nfabric.cachesBoundsOfCurve = true;\n\n/**\n * Skip performance testing of setupGLContext and force the use of putImageData that seems to be the one that works best on\n * Chrome + old hardware. if your users are experiencing empty images after filtering you may try to force this to true\n * this has to be set before instantiating the filtering backend ( before filtering the first image )\n * @type Boolean\n * @default false\n */\nfabric.forceGLPutImageData = false;\n\nfabric.initFilterBackend = function() {\n  if (fabric.enableGLFiltering && fabric.isWebglSupported && fabric.isWebglSupported(fabric.textureSize)) {\n    console.log('max texture size: ' + fabric.maxTextureSize);\n    return (new fabric.WebglFilterBackend({ tileSize: fabric.textureSize }));\n  }\n  else if (fabric.Canvas2dFilterBackend) {\n    return (new fabric.Canvas2dFilterBackend());\n  }\n};\n\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n  window.fabric = fabric;\n}\n\n\n(function() {\n\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n    var eventListener = this.__eventListeners[eventName];\n    if (handler) {\n      eventListener[eventListener.indexOf(handler)] = false;\n    }\n    else {\n      fabric.util.array.fill(eventListener, false);\n    }\n  }\n\n  /**\n   * Observes specified event\n   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function observe(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = { };\n    }\n    // one object with key/value pairs was passed\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    }\n    else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n    }\n    return this;\n  }\n\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function stopObserving(eventName, handler) {\n    if (!this.__eventListeners) {\n      return this;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (arguments.length === 0) {\n      for (eventName in this.__eventListeners) {\n        _removeEventListener.call(this, eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      for (var prop in eventName) {\n        _removeEventListener.call(this, prop, eventName[prop]);\n      }\n    }\n    else {\n      _removeEventListener.call(this, eventName, handler);\n    }\n    return this;\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n   * @memberOf fabric.Observable\n   * @alias trigger\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return this;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n    if (!listenersForEvent) {\n      return this;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n    }\n    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n      return value !== false;\n    });\n    return this;\n  }\n\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n   * @see {@link http://fabricjs.com/events|Events demo}\n   */\n  fabric.Observable = {\n    observe: observe,\n    stopObserving: stopObserving,\n    fire: fire,\n\n    on: observe,\n    off: stopObserving,\n    trigger: fire\n  };\n})();\n\n\n/**\n * @namespace fabric.Collection\n */\nfabric.Collection = {\n\n  _objects: [],\n\n  /**\n   * Adds objects to collection, Canvas or Group, then renders canvas\n   * (if `renderOnAddRemove` is not `false`).\n   * in case of Group no changes to bounding box are made.\n   * Objects should be instances of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the add method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  add: function () {\n    this._objects.push.apply(this._objects, arguments);\n    if (this._onObjectAdded) {\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        this._onObjectAdded(arguments[i]);\n      }\n    }\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the insertAt method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function (object, index, nonSplicing) {\n    var objects = this._objects;\n    if (nonSplicing) {\n      objects[index] = object;\n    }\n    else {\n      objects.splice(index, 0, object);\n    }\n    this._onObjectAdded && this._onObjectAdded(object);\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function() {\n    var objects = this._objects,\n        index, somethingRemoved = false;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]);\n\n      // only call onObjectRemoved if an object was actually removed\n      if (index !== -1) {\n        somethingRemoved = true;\n        objects.splice(index, 1);\n        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && somethingRemoved && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   * @chainable\n   */\n  forEachObject: function(callback, context) {\n    var objects = this.getObjects();\n    for (var i = 0, len = objects.length; i < len; i++) {\n      callback.call(context, objects[i], i, objects);\n    }\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * since 2.3.5 this method return always a COPY of the array;\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function(type) {\n    if (typeof type === 'undefined') {\n      return this._objects.concat();\n    }\n    return this._objects.filter(function(o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function (index) {\n    return this._objects[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function () {\n    return this._objects.length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function() {\n    return this._objects.length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function(object) {\n    return this._objects.indexOf(object) > -1;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function () {\n    return this._objects.reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n\n\n/**\n * @namespace fabric.CommonMethods\n */\nfabric.CommonMethods = {\n\n  /**\n   * Sets object's properties from options\n   * @param {Object} [options] Options object\n   */\n  _setOptions: function(options) {\n    for (var prop in options) {\n      this.set(prop, options[prop]);\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Gradient to\n   */\n  _initGradient: function(filler, property) {\n    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n      this.set(property, new fabric.Gradient(filler));\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Pattern to\n   * @param {Function} [callback] callback to invoke after pattern load\n   */\n  _initPattern: function(filler, property, callback) {\n    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n      this.set(property, new fabric.Pattern(filler, callback));\n    }\n    else {\n      callback && callback();\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [options] Options object\n   */\n  _initClipping: function(options) {\n    if (!options.clipTo || typeof options.clipTo !== 'string') {\n      return;\n    }\n\n    var functionBody = fabric.util.getFunctionBody(options.clipTo);\n    if (typeof functionBody !== 'undefined') {\n      this.clipTo = new Function('ctx', functionBody);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _setObject: function(obj) {\n    for (var prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  },\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  set: function(key, value) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    }\n    else {\n      if (typeof value === 'function' && key !== 'clipTo') {\n        this._set(key, value(this.get(key)));\n      }\n      else {\n        this._set(key, value);\n      }\n    }\n    return this;\n  },\n\n  _set: function(key, value) {\n    this[key] = value;\n  },\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  toggle: function(property) {\n    var value = this.get(property);\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n    return this;\n  },\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get: function(property) {\n    return this[property];\n  }\n};\n\n\n(function(global) {\n\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      PiBy180 = Math.PI / 180,\n      PiBy2 = Math.PI / 2;\n\n  /**\n   * @namespace fabric.util\n   */\n  fabric.util = {\n\n    /**\n     * Calculate the cos of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    cos: function(angle) {\n      if (angle === 0) { return 1; }\n      if (angle < 0) {\n        // cos(a) = cos(-a)\n        angle = -angle;\n      }\n      var angleSlice = angle / PiBy2;\n      switch (angleSlice) {\n        case 1: case 3: return 0;\n        case 2: return -1;\n      }\n      return Math.cos(angle);\n    },\n\n    /**\n     * Calculate the sin of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    sin: function(angle) {\n      if (angle === 0) { return 0; }\n      var angleSlice = angle / PiBy2, sign = 1;\n      if (angle < 0) {\n        // sin(-a) = -sin(a)\n        sign = -1;\n      }\n      switch (angleSlice) {\n        case 1: return sign;\n        case 2: return 0;\n        case 3: return -sign;\n      }\n      return Math.sin(angle);\n    },\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {*} value\n     * @return {Array} original array\n     */\n    removeFromArray: function(array, value) {\n      var idx = array.indexOf(value);\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function(degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function(radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function(point, origin, radians) {\n      point.subtractEquals(origin);\n      var v = fabric.util.rotateVector(point, radians);\n      return new fabric.Point(v.x, v.y).addEquals(origin);\n    },\n\n    /**\n     * Rotates `vector` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} vector The vector to rotate (x and y)\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {Object} The new rotated point\n     */\n    rotateVector: function(vector, radians) {\n      var sin = fabric.util.sin(radians),\n          cos = fabric.util.cos(radians),\n          rx = vector.x * cos - vector.y * sin,\n          ry = vector.x * sin + vector.y * cos;\n      return {\n        x: rx,\n        y: ry\n      };\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function(p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(\n          t[0] * p.x + t[2] * p.y,\n          t[1] * p.x + t[3] * p.y\n        );\n      }\n      return new fabric.Point(\n        t[0] * p.x + t[2] * p.y + t[4],\n        t[1] * p.x + t[3] * p.y + t[5]\n      );\n    },\n\n    /**\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n     * @param {Array} points 4 points array\n     * @param {Array} [transform] an array of 6 numbers representing a 2x3 transform matrix\n     * @return {Object} Object with left, top, width, height properties\n     */\n    makeBoundingBoxFromPoints: function(points, transform) {\n      if (transform) {\n        for (var i = 0; i < points.length; i++) {\n          points[i] = fabric.util.transformPoint(points[i], transform);\n        }\n      }\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n          minX = fabric.util.array.min(xPoints),\n          maxX = fabric.util.array.max(xPoints),\n          width = maxX - minX,\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n          minY = fabric.util.array.min(yPoints),\n          maxY = fabric.util.array.max(yPoints),\n          height = maxY - minY;\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function(t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function(number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @param {Number} fontSize\n     * @return {Number|String}\n     */\n    parseUnit: function(value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72; // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12; // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function() {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function(type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns array of attributes for given svg that fabric parses\n     * @memberOf fabric.util\n     * @param {String} type Type of svg element (eg. 'circle')\n     * @return {Array} string names of supported attributes\n     */\n    getSvgAttributes: function(type) {\n      var attributes = [\n        'instantiated_by_use',\n        'style',\n        'id',\n        'class'\n      ];\n      switch (type) {\n        case 'linearGradient':\n          attributes = attributes.concat(['x1', 'y1', 'x2', 'y2', 'gradientUnits', 'gradientTransform']);\n          break;\n        case 'radialGradient':\n          attributes = attributes.concat(['gradientUnits', 'gradientTransform', 'cx', 'cy', 'r', 'fx', 'fy', 'fr']);\n          break;\n        case 'stop':\n          attributes = attributes.concat(['offset', 'stop-color', 'stop-opacity']);\n          break;\n      }\n      return attributes;\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function(namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length, i,\n          obj = global || fabric.window;\n\n      for (i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {*} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function(url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n\n      /** @ignore */\n      var onLoadCallback = function () {\n        callback && callback.call(context, img);\n        img = img.onload = img.onerror = null;\n      };\n\n      img.onload = onLoadCallback;\n      /** @ignore */\n      img.onerror = function() {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      };\n\n      // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n      if (url.indexOf('data') !== 0 && crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      // IE10 / IE11-Fix: SVG contents from data: URI\n      // will only be available if the IMG is present\n      // in the DOM (and visible)\n      if (url.substring(0,14) === 'data:image/svg') {\n        img.onload = null;\n        fabric.util.loadImageInDom(img, onLoadCallback);\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Attaches SVG image with data: URL to the dom\n     * @memberOf fabric.util\n     * @param {Object} img Image object with data:image/svg src\n     * @param {Function} callback Callback; invoked with loaded image\n     * @return {Object} DOM element (div containing the SVG image)\n     */\n    loadImageInDom: function(img, onLoadCallback) {\n      var div = fabric.document.createElement('div');\n      div.style.width = div.style.height = '1px';\n      div.style.left = div.style.top = '-100%';\n      div.style.position = 'absolute';\n      div.appendChild(img);\n      fabric.document.querySelector('body').appendChild(div);\n      /**\n       * Wrap in function to:\n       *   1. Call existing callback\n       *   2. Cleanup DOM\n       */\n      img.onload = function () {\n        onLoadCallback();\n        div.parentNode.removeChild(div);\n        div = null;\n      };\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function(objects, callback, namespace, reviver) {\n      objects = objects || [];\n\n      var enlivenedObjects = [],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length;\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects.filter(function(obj) {\n            // filter out undefined objects (objects that gave error)\n            return obj;\n          }));\n        }\n      }\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n        var klass = fabric.util.getKlass(o.type, namespace);\n        klass.fromObject(o, function (obj, error) {\n          error || (enlivenedObjects[index] = obj);\n          reviver && reviver(o, obj, error);\n          onLoaded();\n        });\n      });\n    },\n\n    /**\n     * Create and wait for loading of patterns\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} patterns Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * called after each fabric object created.\n     */\n    enlivenPatterns: function(patterns, callback) {\n      patterns = patterns || [];\n\n      function onLoaded() {\n        if (++numLoadedPatterns === numPatterns) {\n          callback && callback(enlivenedPatterns);\n        }\n      }\n\n      var enlivenedPatterns = [],\n          numLoadedPatterns = 0,\n          numPatterns = patterns.length;\n\n      if (!numPatterns) {\n        callback && callback(enlivenedPatterns);\n        return;\n      }\n\n      patterns.forEach(function (p, index) {\n        if (p && p.source) {\n          new fabric.Pattern(p, function(pattern) {\n            enlivenedPatterns[index] = pattern;\n            onLoaded();\n          });\n        }\n        else {\n          enlivenedPatterns[index] = p;\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @param {String} path Value to set sourcePath to\n     * @return {fabric.Object|fabric.Group}\n     */\n    groupSVGElements: function(elements, options, path) {\n      var object;\n      if (elements && elements.length === 1) {\n        return elements[0];\n      }\n      if (options) {\n        if (options.width && options.height) {\n          options.centerPoint = {\n            x: options.width / 2,\n            y: options.height / 2\n          };\n        }\n        else {\n          delete options.width;\n          delete options.height;\n        }\n      }\n      object = new fabric.Group(elements, options);\n      if (typeof path !== 'undefined') {\n        object.sourcePath = path;\n      }\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Properties names to include\n     */\n    populateWithProperties: function(source, destination, properties) {\n      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Draws a dashed line between two points\n     *\n     * This method is used to draw dashed line around selection area.\n     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n     *\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x  start x coordinate\n     * @param {Number} y start y coordinate\n     * @param {Number} x2 end x coordinate\n     * @param {Number} y2 end y coordinate\n     * @param {Array} da dash array pattern\n     */\n    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n      var dx = x2 - x,\n          dy = y2 - y,\n          len = sqrt(dx * dx + dy * dy),\n          rot = atan2(dy, dx),\n          dc = da.length,\n          di = 0,\n          draw = true;\n\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.moveTo(0, 0);\n      ctx.rotate(rot);\n\n      x = 0;\n      while (len > x) {\n        x += da[di++ % dc];\n        if (x > len) {\n          x = len;\n        }\n        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n        draw = !draw;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Creates canvas element\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function() {\n      return fabric.document.createElement('canvas');\n    },\n\n    /**\n     * Creates a canvas element that is a copy of another and is also painted\n     * @param {CanvasElement} canvas to copy size and content of\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    copyCanvasElement: function(canvas) {\n      var newCanvas = fabric.util.createCanvasElement();\n      newCanvas.width = canvas.width;\n      newCanvas.height = canvas.height;\n      newCanvas.getContext('2d').drawImage(canvas, 0, 0);\n      return newCanvas;\n    },\n\n    /**\n     * since 2.6.0 moved from canvas instance to utility.\n     * @param {CanvasElement} canvasEl to copy size and content of\n     * @param {String} format 'jpeg' or 'png', in some browsers 'webp' is ok too\n     * @param {Number} quality <= 1 and > 0\n     * @static\n     * @memberOf fabric.util\n     * @return {String} data url\n     */\n    toDataURL: function(canvasEl, format, quality) {\n      return canvasEl.toDataURL('image/' + format, quality);\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function() {\n      return fabric.document.createElement('img');\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @deprecated since 2.0.0\n     * @param {fabric.Object} receiver Object implementing `clipTo` method\n     * @param {CanvasRenderingContext2D} ctx Context to clip\n     */\n    clipContext: function(receiver, ctx) {\n      ctx.save();\n      ctx.beginPath();\n      receiver.clipTo(ctx);\n      ctx.clip();\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function(a, b, is2x2) {\n      // Matrix multiply a * b\n      return [\n        a[0] * b[0] + a[2] * b[1],\n        a[1] * b[0] + a[3] * b[1],\n        a[0] * b[2] + a[2] * b[3],\n        a[1] * b[2] + a[3] * b[3],\n        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n      ];\n    },\n\n    /**\n     * Decomposes standard 2x3 matrix into transform components\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a transformMatrix\n     * @return {Object} Components of transform\n     */\n    qrDecompose: function(a) {\n      var angle = atan2(a[1], a[0]),\n          denom = pow(a[0], 2) + pow(a[1], 2),\n          scaleX = sqrt(denom),\n          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\n          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n      return {\n        angle: angle  / PiBy180,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX / PiBy180,\n        skewY: 0,\n        translateX: a[4],\n        translateY: a[5]\n      };\n    },\n\n    /**\n     * Returns a transform matrix starting from an object of the same kind of\n     * the one returned from qrDecompose, useful also if you want to calculate some\n     * transformations from an object that is not enlived yet\n     * @static\n     * @memberOf fabric.util\n     * @param  {Object} options\n     * @param  {Number} [options.angle] angle in degrees\n     * @return {Number[]} transform matrix\n     */\n    calcRotateMatrix: function(options) {\n      if (!options.angle) {\n        return fabric.iMatrix.concat();\n      }\n      var theta = fabric.util.degreesToRadians(options.angle),\n          cos = fabric.util.cos(theta),\n          sin = fabric.util.sin(theta);\n      return [cos, sin, -sin, cos, 0, 0];\n    },\n\n    /**\n     * Returns a transform matrix starting from an object of the same kind of\n     * the one returned from qrDecompose, useful also if you want to calculate some\n     * transformations from an object that is not enlived yet.\n     * is called DimensionsTransformMatrix because those properties are the one that influence\n     * the size of the resulting box of the object.\n     * @static\n     * @memberOf fabric.util\n     * @param  {Object} options\n     * @param  {Number} [options.scaleX]\n     * @param  {Number} [options.scaleY]\n     * @param  {Boolean} [options.flipX]\n     * @param  {Boolean} [options.flipY]\n     * @param  {Number} [options.skewX]\n     * @param  {Number} [options.skewX]\n     * @return {Number[]} transform matrix\n     */\n    calcDimensionsMatrix: function(options) {\n      var scaleX = typeof options.scaleX === 'undefined' ? 1 : options.scaleX,\n          scaleY = typeof options.scaleY === 'undefined' ? 1 : options.scaleY,\n          scaleMatrix = [\n            options.flipX ? -scaleX : scaleX,\n            0,\n            0,\n            options.flipY ? -scaleY : scaleY,\n            0,\n            0],\n          multiply = fabric.util.multiplyTransformMatrices,\n          degreesToRadians = fabric.util.degreesToRadians;\n      if (options.skewX) {\n        scaleMatrix = multiply(\n          scaleMatrix,\n          [1, 0, Math.tan(degreesToRadians(options.skewX)), 1],\n          true);\n      }\n      if (options.skewY) {\n        scaleMatrix = multiply(\n          scaleMatrix,\n          [1, Math.tan(degreesToRadians(options.skewY)), 0, 1],\n          true);\n      }\n      return scaleMatrix;\n    },\n\n    /**\n     * Returns a transform matrix starting from an object of the same kind of\n     * the one returned from qrDecompose, useful also if you want to calculate some\n     * transformations from an object that is not enlived yet\n     * @static\n     * @memberOf fabric.util\n     * @param  {Object} options\n     * @param  {Number} [options.angle]\n     * @param  {Number} [options.scaleX]\n     * @param  {Number} [options.scaleY]\n     * @param  {Boolean} [options.flipX]\n     * @param  {Boolean} [options.flipY]\n     * @param  {Number} [options.skewX]\n     * @param  {Number} [options.skewX]\n     * @param  {Number} [options.translateX]\n     * @param  {Number} [options.translateY]\n     * @return {Number[]} transform matrix\n     */\n    composeMatrix: function(options) {\n      var matrix = [1, 0, 0, 1, options.translateX || 0, options.translateY || 0],\n          multiply = fabric.util.multiplyTransformMatrices;\n      if (options.angle) {\n        matrix = multiply(matrix, fabric.util.calcRotateMatrix(options));\n      }\n      if (options.scaleX || options.scaleY || options.skewX || options.skewY || options.flipX || options.flipY) {\n        matrix = multiply(matrix, fabric.util.calcDimensionsMatrix(options));\n      }\n      return matrix;\n    },\n\n    /**\n     * Returns a transform matrix that has the same effect of scaleX, scaleY and skewX.\n     * Is deprecated for composeMatrix. Please do not use it.\n     * @static\n     * @deprecated since 3.4.0\n     * @memberOf fabric.util\n     * @param  {Number} scaleX\n     * @param  {Number} scaleY\n     * @param  {Number} skewX\n     * @return {Number[]} transform matrix\n     */\n    customTransformMatrix: function(scaleX, scaleY, skewX) {\n      return fabric.util.composeMatrix({ scaleX: scaleX, scaleY: scaleY, skewX: skewX });\n    },\n\n    /**\n     * reset an object transform state to neutral. Top and left are not accounted for\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to transform\n     */\n    resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.flipX = false;\n      target.flipY = false;\n      target.rotate(0);\n    },\n\n    /**\n     * Extract Object transform values\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to read from\n     * @return {Object} Components of transform\n     */\n    saveObjectTransform: function (target) {\n      return {\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        angle: target.angle,\n        left: target.left,\n        flipX: target.flipX,\n        flipY: target.flipY,\n        top: target.top\n      };\n    },\n\n    /**\n     * Returns string representation of function body\n     * @param {Function} fn Function to get body of\n     * @return {String} Function body\n     */\n    getFunctionBody: function(fn) {\n      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function(ctx, x, y, tolerance) {\n\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        }\n        else {\n          x = 0;\n        }\n        if (y > tolerance) {\n          y -= tolerance;\n        }\n        else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true, i, temp,\n          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\n          l = imageData.data.length;\n\n      // Split image data - for tolerance > 1, pixelDataSize = 4;\n      for (i = 3; i < l; i += 4) {\n        temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n\n      return _isTransparent;\n    },\n\n    /**\n     * Parse preserveAspectRatio attribute from element\n     * @param {string} attribute to be parsed\n     * @return {Object} an object containing align and meetOrSlice attribute\n     */\n    parsePreserveAspectRatioAttribute: function(attribute) {\n      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n          aspectRatioAttrs = attribute.split(' '), align;\n\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n        meetOrSlice = aspectRatioAttrs.pop();\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n          align = meetOrSlice;\n          meetOrSlice = 'meet';\n        }\n        else if (aspectRatioAttrs.length) {\n          align = aspectRatioAttrs.pop();\n        }\n      }\n      //divide align in alignX and alignY\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n      return {\n        meetOrSlice: meetOrSlice,\n        alignX: alignX,\n        alignY: alignY\n      };\n    },\n\n    /**\n     * Clear char widths cache for the given font family or all the cache if no\n     * fontFamily is specified.\n     * Use it if you know you are loading fonts in a lazy way and you are not waiting\n     * for custom fonts to load properly when adding text objects to the canvas.\n     * If a text object is added when its own font is not loaded yet, you will get wrong\n     * measurement and so wrong bounding boxes.\n     * After the font cache is cleared, either change the textObject text content or call\n     * initDimensions() to trigger a recalculation\n     * @memberOf fabric.util\n     * @param {String} [fontFamily] font family to clear\n     */\n    clearFabricFontCache: function(fontFamily) {\n      fontFamily = (fontFamily || '').toLowerCase();\n      if (!fontFamily) {\n        fabric.charWidthsCache = { };\n      }\n      else if (fabric.charWidthsCache[fontFamily]) {\n        delete fabric.charWidthsCache[fontFamily];\n      }\n    },\n\n    /**\n     * Given current aspect ratio, determines the max width and height that can\n     * respect the total allowed area for the cache.\n     * @memberOf fabric.util\n     * @param {Number} ar aspect ratio\n     * @param {Number} maximumArea Maximum area you want to achieve\n     * @return {Object.x} Limited dimensions by X\n     * @return {Object.y} Limited dimensions by Y\n     */\n    limitDimsByArea: function(ar, maximumArea) {\n      var roughWidth = Math.sqrt(maximumArea * ar),\n          perfLimitSizeY = Math.floor(maximumArea / roughWidth);\n      return { x: Math.floor(roughWidth), y: perfLimitSizeY };\n    },\n\n    capValue: function(min, value, max) {\n      return Math.max(min, Math.min(value, max));\n    },\n\n    findScaleToFit: function(source, destination) {\n      return Math.min(destination.width / source.width, destination.height / source.height);\n    },\n\n    findScaleToCover: function(source, destination) {\n      return Math.max(destination.width / source.width, destination.height / source.height);\n    },\n\n    /**\n     * given an array of 6 number returns something like `\"matrix(...numbers)\"`\n     * @memberOf fabric.util\n     * @param {Array} trasnform an array with 6 numbers\n     * @return {String} transform matrix for svg\n     * @return {Object.y} Limited dimensions by Y\n     */\n    matrixToSVG: function(transform) {\n      return 'matrix(' + transform.map(function(value) {\n        return fabric.util.toFixed(value, fabric.Object.NUM_FRACTION_DIGITS);\n      }).join(' ') + ')';\n    }\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var _join = Array.prototype.join;\n\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var argsString = _join.call(arguments);\n    if (fabric.arcToSegmentsCache[argsString]) {\n      return fabric.arcToSegmentsCache[argsString];\n    }\n\n    var PI = Math.PI, th = rotateX * PI / 180,\n        sinTh = fabric.util.sin(th),\n        cosTh = fabric.util.cos(th),\n        fromX = 0, fromY = 0;\n\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    }\n    else {\n      root = (large === sweep ? -1.0 : 1.0) *\n              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    }\n    else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    }\n\n    // Convert into cubic bezier segments <= 90deg\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [], mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][4];\n      fromY = result[i][5];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n    fabric.arcToSegmentsCache[argsString] = result;\n    return result;\n  }\n\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var costh2 = fabric.util.cos(th2),\n        sinth2 = fabric.util.sin(th2),\n        costh3 = fabric.util.cos(th3),\n        sinth3 = fabric.util.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\n    return [\n      cp1X, cp1Y,\n      cp2X, cp2Y,\n      toX, toY\n    ];\n  }\n\n  /*\n   * Private\n   */\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n    if (tb >= ta) {\n      return tb - ta;\n    }\n    else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n\n  /**\n   * Draws arc\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Array} coords\n   */\n  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n    var rx = coords[0],\n        ry = coords[1],\n        rot = coords[2],\n        large = coords[3],\n        sweep = coords[4],\n        tx = coords[5],\n        ty = coords[6],\n        segs = [[], [], [], []],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segs[i][0] = segsNorm[i][0] + fx;\n      segs[i][1] = segsNorm[i][1] + fy;\n      segs[i][2] = segsNorm[i][2] + fx;\n      segs[i][3] = segsNorm[i][3] + fy;\n      segs[i][4] = segsNorm[i][4] + fx;\n      segs[i][5] = segsNorm[i][5] + fy;\n      ctx.bezierCurveTo.apply(ctx, segs[i]);\n    }\n  };\n\n  /**\n   * Calculate bounding box of a elliptic-arc\n   * @param {Number} fx start point of arc\n   * @param {Number} fy\n   * @param {Number} rx horizontal radius\n   * @param {Number} ry vertical radius\n   * @param {Number} rot angle of horizontal axe\n   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n   * @param {Number} tx end point of arc\n   * @param {Number} ty\n   */\n  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\n    var fromX = 0, fromY = 0, bound, bounds = [],\n        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segs.length; i < len; i++) {\n      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n      bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });\n      bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });\n      fromX = segs[i][4];\n      fromY = segs[i][5];\n    }\n    return bounds;\n  };\n\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of beizer\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString;\n    if (fabric.cachesBoundsOfCurve) {\n      argsString = _join.call(arguments);\n      if (fabric.boundsOfCurveCache[argsString]) {\n        return fabric.boundsOfCurveCache[argsString];\n      }\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min, max = Math.max,\n        abs = Math.abs, tvalues = [],\n        bounds = [[], []],\n        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      if (b2ac < 0) {\n        continue;\n      }\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x, y, j = tvalues.length, jlen = j, mt;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n      bounds[0][j] = x;\n\n      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [\n      {\n        x: min.apply(null, bounds[0]),\n        y: min.apply(null, bounds[1])\n      },\n      {\n        x: max.apply(null, bounds[0]),\n        y: max.apply(null, bounds[1])\n      }\n    ];\n    if (fabric.cachesBoundsOfCurve) {\n      fabric.boundsOfCurveCache[argsString] = result;\n    }\n    return result;\n  }\n\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice;\n\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2), result = [];\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n    return result;\n  }\n\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function max(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 >= value2;\n    });\n  }\n\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function min(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 < value2;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function fill(array, value) {\n    var k = array.length;\n    while (k--) {\n      array[k] = value;\n    }\n    return array;\n  }\n\n  /**\n   * @private\n   */\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    }\n    else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @namespace fabric.util.array\n   */\n  fabric.util.array = {\n    fill: fill,\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n\n})();\n\n\n(function() {\n  /**\n   * Copies all enumerable properties of one js object to another\n   * this does not and cannot compete with generic utils.\n   * Does not clone or extend fabric.Object subclasses.\n   * This is mostly for internal use and has extra handling for fabricJS objects\n   * it skips the canvas property in deep cloning.\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @return {Object}\n   */\n\n  function extend(destination, source, deep) {\n    // JScript DontEnum bug is not taken care of\n    // the deep clone is for internal use, is not meant to avoid\n    // javascript traps or cloning html element or self referenced objects.\n    if (deep) {\n      if (!fabric.isLikelyNode && source instanceof Element) {\n        // avoid cloning deep images, canvases,\n        destination = source;\n      }\n      else if (source instanceof Array) {\n        destination = [];\n        for (var i = 0, len = source.length; i < len; i++) {\n          destination[i] = extend({ }, source[i], deep);\n        }\n      }\n      else if (source && typeof source === 'object') {\n        for (var property in source) {\n          if (property === 'canvas') {\n            destination[property] = extend({ }, source[property]);\n          }\n          else if (source.hasOwnProperty(property)) {\n            destination[property] = extend({ }, source[property], deep);\n          }\n        }\n      }\n      else {\n        // this sounds odd for an extend but is ok for recursive use\n        destination = source;\n      }\n    }\n    else {\n      for (var property in source) {\n        destination[property] = source[property];\n      }\n    }\n    return destination;\n  }\n\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * @memberOf fabric.util.object\n   * TODO: this function return an empty object if you try to clone null\n   * @param {Object} object Object to clone\n   * @return {Object}\n   */\n  function clone(object, deep) {\n    return extend({ }, object, deep);\n  }\n\n  /** @namespace fabric.util.object */\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n})();\n\n\n(function() {\n\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function(match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() +\n      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&apos;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n  }\n\n  /**\n   * Divide a string in the user perceived single units\n   * @memberOf fabric.util.string\n   * @param {String} textstring String to escape\n   * @return {Array} array containing the graphemes\n   */\n  function graphemeSplit(textstring) {\n    var i = 0, chr, graphemes = [];\n    for (i = 0, chr; i < textstring.length; i++) {\n      if ((chr = getWholeChar(textstring, i)) === false) {\n        continue;\n      }\n      graphemes.push(chr);\n    }\n    return graphemes;\n  }\n\n  // taken from mdn in the charAt doc page.\n  function getWholeChar(str, i) {\n    var code = str.charCodeAt(i);\n\n    if (isNaN(code)) {\n      return ''; // Position not found\n    }\n    if (code < 0xD800 || code > 0xDFFF) {\n      return str.charAt(i);\n    }\n\n    // High surrogate (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (str.length <= (i + 1)) {\n        throw 'High surrogate without following low surrogate';\n      }\n      var next = str.charCodeAt(i + 1);\n      if (0xDC00 > next || next > 0xDFFF) {\n        throw 'High surrogate without following low surrogate';\n      }\n      return str.charAt(i) + str.charAt(i + 1);\n    }\n    // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n    if (i === 0) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    var prev = str.charCodeAt(i - 1);\n\n    // (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 > prev || prev > 0xDBFF) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    // We can pass over low surrogates now as the second component\n    // in a pair which we have already processed\n    return false;\n  }\n\n\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml,\n    graphemeSplit: graphemeSplit\n  };\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice, emptyFunction = function() { },\n\n      IS_DONTENUM_BUGGY = (function() {\n        for (var p in { toString: 1 }) {\n          if (p === 'toString') {\n            return false;\n          }\n        }\n        return true;\n      })(),\n\n      /** @ignore */\n      addMethods = function(klass, source, parent) {\n        for (var property in source) {\n\n          if (property in klass.prototype &&\n              typeof klass.prototype[property] === 'function' &&\n              (source[property] + '').indexOf('callSuper') > -1) {\n\n            klass.prototype[property] = (function(property) {\n              return function() {\n\n                var superclass = this.constructor.superclass;\n                this.constructor.superclass = parent;\n                var returnValue = source[property].apply(this, arguments);\n                this.constructor.superclass = superclass;\n\n                if (property !== 'initialize') {\n                  return returnValue;\n                }\n              };\n            })(property);\n          }\n          else {\n            klass.prototype[property] = source[property];\n          }\n\n          if (IS_DONTENUM_BUGGY) {\n            if (source.toString !== Object.prototype.toString) {\n              klass.prototype.toString = source.toString;\n            }\n            if (source.valueOf !== Object.prototype.valueOf) {\n              klass.prototype.valueOf = source.valueOf;\n            }\n          }\n        }\n      };\n\n  function Subclass() { }\n\n  function callSuper(methodName) {\n    var parentMethod = null,\n        _this = this;\n\n    // climb prototype chain to find method not equal to callee's method\n    while (_this.constructor.superclass) {\n      var superClassMethod = _this.constructor.superclass.prototype[methodName];\n      if (_this[methodName] !== superClassMethod) {\n        parentMethod = superClassMethod;\n        break;\n      }\n      // eslint-disable-next-line\n      _this = _this.constructor.superclass.prototype;\n    }\n\n    if (!parentMethod) {\n      return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\n    }\n\n    return (arguments.length > 1)\n      ? parentMethod.apply(this, slice.call(arguments, 1))\n      : parentMethod.call(this);\n  }\n\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n\n(function () {\n  // since ie10 or ie9 can use addEventListener but they do not support options, i need to check\n  var couldUseAttachEvent = !!fabric.document.createElement('div').attachEvent;\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.addListener = function(element, eventName, handler, options) {\n    element && element.addEventListener(eventName, handler, couldUseAttachEvent ? false : options);\n  };\n\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.removeListener = function(element, eventName, handler, options) {\n    element && element.removeEventListener(eventName, handler, couldUseAttachEvent ? false : options);\n  };\n\n  function getTouchInfo(event) {\n    var touchProp = event.changedTouches;\n    if (touchProp && touchProp[0]) {\n      return touchProp[0];\n    }\n    return event;\n  }\n\n  fabric.util.getPointer = function(event) {\n    var element = event.target,\n        scroll = fabric.util.getScrollLeftTop(element),\n        _evt = getTouchInfo(event);\n    return {\n      x: _evt.clientX + scroll.left,\n      y: _evt.clientY + scroll.top\n    };\n  };\n})();\n\n\n(function () {\n\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n    if (!elementStyle) {\n      return element;\n    }\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1\n        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n        : element;\n    }\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      }\n      else {\n        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n          : property;\n        elementStyle[normalizedProperty] = styles[property];\n      }\n    }\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n      /** @ignore */\n      setOpacity = function (element) { return element; };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  }\n  else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      var es = element.style;\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n        es.filter = es.filter.replace(reOpacity, value);\n      }\n      else {\n        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n      }\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n\n})();\n\n\n(function() {\n\n  var _slice = Array.prototype.slice;\n\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n      /**\n       * Converts an array-like object (e.g. arguments or NodeList) to an array\n       * @memberOf fabric.util\n       * @param {Object} arrayLike\n       * @return {Array}\n       */\n      toArray = function(arrayLike) {\n        return _slice.call(arrayLike, 0);\n      };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  }\n  catch (err) { }\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function(arrayLike) {\n      var arr = new Array(arrayLike.length), i = arrayLike.length;\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n      return arr;\n    };\n  }\n\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      }\n      else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      }\n      else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n  function getScrollLeftTop(element) {\n\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n          scrollLeft: 0, scrollTop: 0\n        };\n\n    // While loop checks (and then sets element to) .parentNode OR .host\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n    while (element && (element.parentNode || element.host)) {\n\n      // Set element to element parent, or 'host' in case of ShadowDOM\n      element = element.parentNode || element.host;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop ||  docElement.scrollTop || 0;\n      }\n      else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 && element.style.position === 'fixed') {\n        break;\n      }\n    }\n\n    return { left: left, top: top };\n  }\n\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = { left: 0, top: 0 },\n        offset = { left: 0, top: 0 },\n        scrollLeftTop,\n        offsetAttributes = {\n          borderLeftWidth: 'left',\n          borderTopWidth:  'top',\n          paddingLeft:     'left',\n          paddingTop:      'top'\n        };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n    };\n  }\n\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n  var getElementStyle;\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function(element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  }\n  else {\n    getElementStyle = function(element, attr) {\n      var value = element.style[attr];\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style\n          ? 'userSelect'\n          : 'MozUserSelect' in style\n            ? 'MozUserSelect'\n            : 'WebkitUserSelect' in style\n              ? 'WebkitUserSelect'\n              : 'KhtmlUserSelect' in style\n                ? 'KhtmlUserSelect'\n                : '';\n\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n      return element;\n    }\n\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n      if (selectProp) {\n        element.style[selectProp] = '';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  (function() {\n\n    /**\n     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n     * @memberOf fabric.util\n     * @param {String} url URL of a script to load\n     * @param {Function} callback Callback to execute when script is finished loading\n     */\n    function getScript(url, callback) {\n      var headEl = fabric.document.getElementsByTagName('head')[0],\n          scriptEl = fabric.document.createElement('script'),\n          loading = true;\n\n      /** @ignore */\n      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n        if (loading) {\n          if (typeof this.readyState === 'string' &&\n              this.readyState !== 'loaded' &&\n              this.readyState !== 'complete') {\n            return;\n          }\n          loading = false;\n          callback(e || fabric.window.event);\n          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n        }\n      };\n      scriptEl.src = url;\n      headEl.appendChild(scriptEl);\n      // causes issue in Opera\n      // headEl.removeChild(scriptEl);\n    }\n\n    fabric.util.getScript = getScript;\n  })();\n\n  function getNodeCanvas(element) {\n    var impl = fabric.jsdomImplForWrapper(element);\n    return impl._canvas || impl._image;\n  };\n\n  function cleanUpJsdomNode(element) {\n    if (!fabric.isLikelyNode) {\n      return;\n    }\n    var impl = fabric.jsdomImplForWrapper(element);\n    if (impl) {\n      impl._image = null;\n      impl._canvas = null;\n      // unsure if necessary\n      impl._currentSrc = null;\n      impl._attributes = null;\n      impl._classList = null;\n    }\n  }\n\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.makeElement = makeElement;\n  fabric.util.addClass = addClass;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getElementStyle = getElementStyle;\n  fabric.util.getNodeCanvas = getNodeCanvas;\n  fabric.util.cleanUpJsdomNode = cleanUpJsdomNode;\n\n})();\n\n\n(function() {\n\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  function emptyFn() { }\n\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {String} [options.parameters] parameters to append to url in GET or in body\n   * @param {String} [options.body] body to send with POST or PUT request\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n  function request(url, options) {\n    options || (options = { });\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function() { },\n        xhr = new fabric.window.XMLHttpRequest(),\n        body = options.body || options.parameters;\n\n    /** @ignore */\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n\n\n/**\n * Wrapper around `console.log` (when available)\n * @param {*} [values] Values to log\n */\nfabric.log = console.log;\n\n/**\n * Wrapper around `console.warn` (when available)\n * @param {*} [values] Values to log as a warning\n */\nfabric.warn = console.warn;\n\n\n(function() {\n\n  function noop() {\n    return false;\n  }\n\n  function defaultEasing(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Number} [options.startValue=0] Starting value\n   * @param {Number} [options.endValue=100] Ending value\n   * @param {Number} [options.byValue=100] Value to modify the property by\n   * @param {Function} [options.easing] Easing function\n   * @param {Number} [options.duration=500] Duration of change (in ms)\n   * @param {Function} [options.abort] Additional function with logic. If returns true, onComplete is called.\n   */\n  function animate(options) {\n\n    requestAnimFrame(function(timestamp) {\n      options || (options = { });\n\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration, time,\n          onChange = options.onChange || noop,\n          abort = options.abort || noop,\n          onComplete = options.onComplete || noop,\n          easing = options.easing || defaultEasing,\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || endValue - startValue;\n\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        // TODO: move abort call after calculation\n        // and pass (current,valuePerc, timePerc) as arguments\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : (time - start),\n            timePerc = currentTime / duration,\n            current = easing(currentTime, startValue, byValue, duration),\n            valuePerc = Math.abs((current - startValue) / byValue);\n        if (abort()) {\n          onComplete(endValue, 1, 1);\n          return;\n        }\n        if (time > finish) {\n          onChange(endValue, 1, 1);\n          onComplete(endValue, 1, 1);\n          return;\n        }\n        else {\n          onChange(current, valuePerc, timePerc);\n          requestAnimFrame(tick);\n        }\n      })(start);\n    });\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n                          fabric.window.webkitRequestAnimationFrame ||\n                          fabric.window.mozRequestAnimationFrame    ||\n                          fabric.window.oRequestAnimationFrame      ||\n                          fabric.window.msRequestAnimationFrame     ||\n                          function(callback) {\n                            return fabric.window.setTimeout(callback, 1000 / 60);\n                          };\n\n  var _cancelAnimFrame = fabric.window.cancelAnimationFrame || fabric.window.clearTimeout;\n\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  function cancelAnimFrame() {\n    return _cancelAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n  fabric.util.cancelAnimFrame = cancelAnimFrame;\n})();\n\n\n(function() {\n  // Calculate an in-between color. Returns a \"rgba()\" string.\n  // Credit: Edwin Martin <edwin@bitstorm.org>\n  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\n  function calculateColor(begin, end, pos) {\n    var color = 'rgba('\n        + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','\n        + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','\n        + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);\n\n    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n    color += ')';\n    return color;\n  }\n\n  /**\n   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {String} fromColor The starting color in hex or rgb(a) format.\n   * @param {String} toColor The starting color in hex or rgb(a) format.\n   * @param {Number} [duration] Duration of change (in ms).\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\n   * @param {Function} [options.abort] Additional function with logic. If returns true, onComplete is called.\n   */\n  function animateColor(fromColor, toColor, duration, options) {\n    var startColor = new fabric.Color(fromColor).getSource(),\n        endColor = new fabric.Color(toColor).getSource();\n\n    options = options || {};\n\n    fabric.util.animate(fabric.util.object.extend(options, {\n      duration: duration || 500,\n      startValue: startColor,\n      endValue: endColor,\n      byValue: endColor,\n      easing: function (currentTime, startValue, byValue, duration) {\n        var posValue = options.colorEasing\n          ? options.colorEasing(currentTime, duration)\n          : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n        return calculateColor(startValue, byValue, posValue);\n      }\n    }));\n  }\n\n  fabric.util.animateColor = animateColor;\n\n})();\n\n\n(function() {\n\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    }\n    else {\n      //handle the 0/0 case:\n      if (c === 0 && a === 0) {\n        s = p / (2 * Math.PI) * Math.asin(1);\n      }\n      else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n    }\n    return { a: a, c: c, p: p, s: s };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a *\n      Math.pow(2, 10 * (t -= 1)) *\n      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n  }\n\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCubic(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInExpo(t, b, c, d) {\n    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutExpo(t, b, c, d) {\n    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n  }\n\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d / 2;\n    if (t === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    var opts = normalize(a, c, p, s);\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n  }\n\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n    }\n    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n  }\n\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce (d - t, 0, c, d) + b;\n  }\n\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < (1 / 2.75)) {\n      return c * (7.5625 * t * t) + b;\n    }\n    else if (t < (2 / 2.75)) {\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n    }\n    else if (t < (2.5 / 2.75)) {\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n    }\n    else {\n      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n    }\n  }\n\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n    }\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n  fabric.util.ease = {\n\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function(t, b, c, d) {\n      t /= (d / 2);\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\n      svgValidTagNames = ['path', 'circle', 'polygon', 'polyline', 'ellipse', 'rect', 'line',\n        'image', 'text'],\n      svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\n      svgInvalidAncestors = ['pattern', 'defs', 'symbol', 'metadata', 'clipPath', 'mask', 'desc'],\n      svgValidParents = ['symbol', 'g', 'a', 'svg', 'clipPath', 'defs'],\n\n      attributesMap = {\n        cx:                   'left',\n        x:                    'left',\n        r:                    'radius',\n        cy:                   'top',\n        y:                    'top',\n        display:              'visible',\n        visibility:           'visible',\n        transform:            'transformMatrix',\n        'fill-opacity':       'fillOpacity',\n        'fill-rule':          'fillRule',\n        'font-family':        'fontFamily',\n        'font-size':          'fontSize',\n        'font-style':         'fontStyle',\n        'font-weight':        'fontWeight',\n        'letter-spacing':     'charSpacing',\n        'paint-order':        'paintFirst',\n        'stroke-dasharray':   'strokeDashArray',\n        'stroke-dashoffset':  'strokeDashOffset',\n        'stroke-linecap':     'strokeLineCap',\n        'stroke-linejoin':    'strokeLineJoin',\n        'stroke-miterlimit':  'strokeMiterLimit',\n        'stroke-opacity':     'strokeOpacity',\n        'stroke-width':       'strokeWidth',\n        'text-decoration':    'textDecoration',\n        'text-anchor':        'textAnchor',\n        opacity:              'opacity',\n        'clip-path':          'clipPath',\n        'clip-rule':          'clipRule',\n        'vector-effect':      'strokeUniform'\n      },\n\n      colorAttributes = {\n        stroke: 'strokeOpacity',\n        fill:   'fillOpacity'\n      },\n\n      fSize = 'font-size', cPath = 'clip-path';\n\n  fabric.svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\n  fabric.svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\n  fabric.svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\n  fabric.svgValidParentsRegEx = getSvgRegex(svgValidParents);\n\n  fabric.cssRules = { };\n  fabric.gradientDefs = { };\n  fabric.clipPaths = { };\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n        parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    }\n    else if (attr === 'vector-effect') {\n      value = value === 'non-scaling-stroke';\n    }\n    else if (attr === 'strokeDashArray') {\n      if (value === 'none') {\n        value = null;\n      }\n      else {\n        value = value.replace(/,/g, ' ').split(/\\s+/).map(parseFloat);\n      }\n    }\n    else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(\n          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      }\n      else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    }\n    else if (attr === 'visible') {\n      value = value !== 'none' && value !== 'hidden';\n      // display=none on parent element always takes precedence over child element\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    }\n    else if (attr === 'opacity') {\n      value = parseFloat(value);\n      if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n        value *= parentAttributes.opacity;\n      }\n    }\n    else if (attr === 'textAnchor' /* text-anchor */) {\n      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n    }\n    else if (attr === 'charSpacing') {\n      // parseUnit returns px and we convert it to em\n      parsed = parseUnit(value, fontSize) / fontSize * 1000;\n    }\n    else if (attr === 'paintFirst') {\n      var fillIndex = value.indexOf('fill');\n      var strokeIndex = value.indexOf('stroke');\n      var value = 'fill';\n      if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\n        value = 'stroke';\n      }\n      else if (fillIndex === -1 && strokeIndex > -1) {\n        value = 'stroke';\n      }\n    }\n    else if (attr === 'href' || attr === 'xlink:href') {\n      return value;\n    }\n    else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return (!isArray && isNaN(parsed) ? value : parsed);\n  }\n\n  /**\n    * @private\n    */\n  function getSvgRegex(arr) {\n    return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\n  }\n\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n        continue;\n      }\n\n      if (typeof attributes[attr] === 'undefined') {\n        if (!fabric.Object.prototype[attr]) {\n          continue;\n        }\n        attributes[attr] = fabric.Object.prototype[attr];\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n    return attributes;\n  }\n\n  /**\n   * @private\n   */\n  function _getMultipleNodes(doc, nodeNames) {\n    var nodeName, nodeArray = [], nodeList, i, len;\n    for (i = 0, len = nodeNames.length; i < len; i++) {\n      nodeName = nodeNames[i];\n      nodeList = doc.getElementsByTagName(nodeName);\n      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n    }\n    return nodeArray;\n  }\n\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n  fabric.parseTransformAttribute = (function() {\n    function rotateMatrix(matrix, args) {\n      var cos = fabric.util.cos(args[0]), sin = fabric.util.sin(args[0]),\n          x = 0, y = 0;\n      if (args.length === 3) {\n        x = args[1];\n        y = args[2];\n      }\n\n      matrix[0] = cos;\n      matrix[1] = sin;\n      matrix[2] = -sin;\n      matrix[3] = cos;\n      matrix[4] = x - (cos * x - sin * y);\n      matrix[5] = y - (sin * x + cos * y);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = (args.length === 2) ? args[1] : args[0];\n\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewMatrix(matrix, args, pos) {\n      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    }\n\n    // identity matrix\n    var iMatrix = fabric.iMatrix,\n\n        // == begin transform regexp\n        number = fabric.reNum,\n\n        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + ')' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' +\n                  '\\\\s*\\\\))',\n\n        transform = '(?:' +\n                    matrix + '|' +\n                    translate + '|' +\n                    scale + '|' +\n                    rotate + '|' +\n                    skewX + '|' +\n                    skewY +\n                    ')',\n\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n        reTransformList = new RegExp(transformList),\n        // == end transform regexp\n\n        reTransform = new RegExp(transform, 'g');\n\n    return function(attributeValue) {\n\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = [];\n\n      // return if no argument was given or\n      // an argument does not match transform attribute regexp\n      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function(match) {\n\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n              // match !== '' && match != null\n              return (!!match);\n            }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n          case 'skewX':\n            skewMatrix(matrix, args, 2);\n            break;\n          case 'skewY':\n            skewMatrix(matrix, args, 1);\n            break;\n          case 'matrix':\n            matrix = args;\n            break;\n        }\n\n        // snapshot current matrix into matrices array\n        matrices.push(matrix.concat());\n        // reset\n        matrix = iMatrix.concat();\n      });\n\n      var combinedMatrix = matrices[0];\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n      return combinedMatrix;\n    };\n  })();\n\n  /**\n   * @private\n   */\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n\n      attr = pair[0].trim().toLowerCase();\n      value =  pair[1].trim();\n\n      oStyle[attr] = value;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = prop.toLowerCase();\n      value = style[prop];\n\n      oStyle[attr] = value;\n    }\n  }\n\n  /**\n   * @private\n   */\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = { };\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * @private\n   */\n  function elementMatchesRule(element, selectors) {\n    var firstMatching, parentMatching = true;\n    //start from rightmost selector.\n    firstMatching = selectorMatches(element, selectors.pop());\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n    return firstMatching && parentMatching && (selectors.length === 0);\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector, parentMatching = true;\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n    return selectors.length === 0;\n  }\n\n  /**\n   * @private\n   */\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'), matcher, i;\n    // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n      for (i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n    return selector.length === 0;\n  }\n\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument and on node xmlDOM\n   */\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n    if (el) {\n      return el;\n    }\n    var node, i, len, nodelist = doc.getElementsByTagName('*');\n    for (i = 0, len = nodelist.length; i < len; i++) {\n      node = nodelist[i];\n      if (id === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function parseUseDirectives(doc) {\n    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlink = (el.getAttribute('xlink:href') || el.getAttribute('href')).substr(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode, oldLength = nodelist.length, attr, j, attrs, len, namespace = fabric.svgNS;\n\n      applyViewboxTransform(el2);\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElementNS(namespace, 'g');\n        for (j = 0, attrs = el2.attributes, len = attrs.length; j < len; j++) {\n          attr = attrs.item(j);\n          el3.setAttributeNS(namespace, attr.nodeName, attr.nodeValue);\n        }\n        // el2.firstChild != null\n        while (el2.firstChild) {\n          el3.appendChild(el2.firstChild);\n        }\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {\n        attr = attrs.item(j);\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' ||\n          attr.nodeName === 'xlink:href' || attr.nodeName === 'href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        }\n        else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el);\n      // some browsers do not shorten nodelist after replaceChild (IE8)\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  }\n\n  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n  var reViewBoxAttrValue = new RegExp(\n    '^' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n    '$'\n  );\n\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n  function applyViewboxTransform(element) {\n\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth, viewBoxHeight, matrix, el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        x = element.getAttribute('x') || 0,\n        y = element.getAttribute('y') || 0,\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n        missingViewBox = (!viewBoxAttr || !fabric.svgViewBoxElementsRegEx.test(element.nodeName)\n                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = { }, translateMatrix = '', widthDiff = 0, heightDiff = 0;\n\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      return parsedDim;\n    }\n    minX = -parseFloat(viewBoxAttr[1]);\n    minY = -parseFloat(viewBoxAttr[2]);\n    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n    parsedDim.minX = minX;\n    parsedDim.minY = minY;\n    parsedDim.viewBoxWidth = viewBoxWidth;\n    parsedDim.viewBoxHeight = viewBoxHeight;\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    }\n    else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    }\n\n    // default is to preserve aspect ratio\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n    if (preserveAspectRatio.alignX !== 'none') {\n      //translate all container for the effect of Mid, Min, Max\n      if (preserveAspectRatio.meetOrSlice === 'meet') {\n        scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n        // calculate additional translation to move the viewbox\n      }\n      if (preserveAspectRatio.meetOrSlice === 'slice') {\n        scaleY = scaleX = (scaleX > scaleY ? scaleX : scaleY);\n        // calculate additional translation to move the viewbox\n      }\n      widthDiff = parsedDim.width - viewBoxWidth * scaleX;\n      heightDiff = parsedDim.height - viewBoxHeight * scaleX;\n      if (preserveAspectRatio.alignX === 'Mid') {\n        widthDiff /= 2;\n      }\n      if (preserveAspectRatio.alignY === 'Mid') {\n        heightDiff /= 2;\n      }\n      if (preserveAspectRatio.alignX === 'Min') {\n        widthDiff = 0;\n      }\n      if (preserveAspectRatio.alignY === 'Min') {\n        heightDiff = 0;\n      }\n    }\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n      return parsedDim;\n    }\n\n    if (x || y) {\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n    }\n\n    matrix = translateMatrix + ' matrix(' + scaleX +\n                  ' 0' +\n                  ' 0 ' +\n                  scaleY + ' ' +\n                  (minX * scaleX + widthDiff) + ' ' +\n                  (minY * scaleY + heightDiff) + ') ';\n    parsedDim.viewboxTransform = fabric.parseTransformAttribute(matrix);\n    if (element.nodeName === 'svg') {\n      el = element.ownerDocument.createElementNS(fabric.svgNS, 'g');\n      // element.firstChild != null\n      while (element.firstChild) {\n        el.appendChild(element.firstChild);\n      }\n      element.appendChild(el);\n    }\n    else {\n      el = element;\n      matrix = el.getAttribute('transform') + matrix;\n    }\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  function hasAncestorWithNodeName(element, nodeName) {\n    while (element && (element = element.parentNode)) {\n      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\n        && !element.getAttribute('instantiated_by_use')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished;\n   * It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   * @param {Object} [parsingOptions] options for parsing document\n   * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\n   */\n  fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {\n    if (!doc) {\n      return;\n    }\n\n    parseUseDirectives(doc);\n\n    var svgUid =  fabric.Object.__uid++, i, len,\n        options = applyViewboxTransform(doc),\n        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n    options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\n    options.svgUid = svgUid;\n\n    if (descendants.length === 0 && fabric.isLikelyNode) {\n      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n      // https://github.com/ajaxorg/node-o3-xml/issues/21\n      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n      var arr = [];\n      for (i = 0, len = descendants.length; i < len; i++) {\n        arr[i] = descendants[i];\n      }\n      descendants = arr;\n    }\n\n    var elements = descendants.filter(function(el) {\n      applyViewboxTransform(el);\n      return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', '')) &&\n            !hasAncestorWithNodeName(el, fabric.svgInvalidAncestorsRegEx); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n    });\n\n    if (!elements || (elements && !elements.length)) {\n      callback && callback([], {});\n      return;\n    }\n    var clipPaths = { };\n    descendants.filter(function(el) {\n      return el.nodeName.replace('svg:', '') === 'clipPath';\n    }).forEach(function(el) {\n      var id = el.getAttribute('id');\n      clipPaths[id] = fabric.util.toArray(el.getElementsByTagName('*')).filter(function(el) {\n        return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', ''));\n      });\n    });\n    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n    fabric.clipPaths[svgUid] = clipPaths;\n    // Precedence of rules:   style > class > attribute\n    fabric.parseElements(elements, function(instances, elements) {\n      if (callback) {\n        callback(instances, options, elements, descendants);\n        delete fabric.gradientDefs[svgUid];\n        delete fabric.cssRules[svgUid];\n        delete fabric.clipPaths[svgUid];\n      }\n    }, clone(options), reviver, parsingOptions);\n  };\n\n  function recursivelyParseGradientsXlink(doc, gradient) {\n    var gradientsAttrs = ['gradientTransform', 'x1', 'x2', 'y1', 'y2', 'gradientUnits', 'cx', 'cy', 'r', 'fx', 'fy'],\n        xlinkAttr = 'xlink:href',\n        xLink = gradient.getAttribute(xlinkAttr).substr(1),\n        referencedGradient = elementById(doc, xLink);\n    if (referencedGradient && referencedGradient.getAttribute(xlinkAttr)) {\n      recursivelyParseGradientsXlink(doc, referencedGradient);\n    }\n    gradientsAttrs.forEach(function(attr) {\n      if (referencedGradient && !gradient.hasAttribute(attr) && referencedGradient.hasAttribute(attr)) {\n        gradient.setAttribute(attr, referencedGradient.getAttribute(attr));\n      }\n    });\n    if (!gradient.children.length) {\n      var referenceClone = referencedGradient.cloneNode(true);\n      while (referenceClone.firstChild) {\n        gradient.appendChild(referenceClone.firstChild);\n      }\n    }\n    gradient.removeAttribute(xlinkAttr);\n  }\n\n  var reFontDeclaration = new RegExp(\n    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n      fabric.reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function(value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n      var fontStyle = match[1],\n          // font variant is not used\n          // fontVariant = match[2],\n          fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function(doc) {\n      var tagArray = [\n            'linearGradient',\n            'radialGradient',\n            'svg:linearGradient',\n            'svg:radialGradient'],\n          elList = _getMultipleNodes(doc, tagArray),\n          el, j = 0, gradientDefs = { };\n      j = elList.length;\n      while (j--) {\n        el = elList[j];\n        if (el.getAttribute('xlink:href')) {\n          recursivelyParseGradientsXlink(doc, el);\n        }\n        gradientDefs[el.getAttribute('id')] = el;\n      }\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function(element, attributes, svgUid) {\n\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = { },\n          fontSize, parentFontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      }\n      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n      if (element.parentNode && fabric.svgValidParentsRegEx.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n\n      var ownAttributes = attributes.reduce(function(memo, attr) {\n        value = element.getAttribute(attr);\n        if (value) { // eslint-disable-line\n          memo[attr] = value;\n        }\n        return memo;\n      }, { });\n      // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n      var cssAttrs = extend(\n        getGlobalStylesForElement(element, svgUid),\n        fabric.parseStyleAttribute(element)\n      );\n      ownAttributes = extend(\n        ownAttributes,\n        cssAttrs\n      );\n      if (cssAttrs[cPath]) {\n        element.setAttribute(cPath, cssAttrs[cPath]);\n      }\n      fontSize = parentFontSize = parentAttributes.fontSize || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      if (ownAttributes[fSize]) {\n        // looks like the minimum should be 9px when dealing with ems. this is what looks like in browsers.\n        ownAttributes[fSize] = fontSize = parseUnit(ownAttributes[fSize], parentFontSize);\n      }\n\n      var normalizedAttr, normalizedValue, normalizedStyle = {};\n      for (var attr in ownAttributes) {\n        normalizedAttr = normalizeAttr(attr);\n        normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\n        normalizedStyle[normalizedAttr] = normalizedValue;\n      }\n      if (normalizedStyle && normalizedStyle.font) {\n        fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\n      }\n      var mergedAttrs = extend(parentAttributes, normalizedStyle);\n      return fabric.svgValidParentsRegEx.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function(elements, callback, options, reviver, parsingOptions) {\n      new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function(element) {\n      var oStyle = { },\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      }\n      else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function(points) {\n\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      }\n\n      // replace commas with whitespace and remove bookending whitespace\n      points = points.replace(/,/g, ' ').trim();\n\n      points = points.split(/\\s+/);\n      var parsedPoints = [], i, len;\n\n      for (i = 0, len = points.length; i < len; i += 2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      }\n\n      // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function(doc) {\n      var styles = doc.getElementsByTagName('style'), i, len,\n          allRules = { }, rules;\n\n      // very crude parsing of style contents\n      for (i = 0, len = styles.length; i < len; i++) {\n        // IE9 doesn't support textContent, but provides text instead.\n        var styleContents = styles[i].textContent || styles[i].text;\n\n        // remove comments\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n        if (styleContents.trim() === '') {\n          continue;\n        }\n        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = rules.map(function(rule) { return rule.trim(); });\n        // eslint-disable-next-line no-loop-func\n        rules.forEach(function(rule) {\n\n          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n              ruleObj = { }, declaration = match[2].trim(),\n              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\n          for (i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n                property = pair[0],\n                value = pair[1];\n            ruleObj[property] = value;\n          }\n          rule = match[1];\n          rule.split(',').forEach(function(_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n            if (_rule === '') {\n              return;\n            }\n            if (allRules[_rule]) {\n              fabric.util.object.extend(allRules[_rule], ruleObj);\n            }\n            else {\n              allRules[_rule] = fabric.util.object.clone(ruleObj);\n            }\n          });\n        });\n      }\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromURL: function(url, callback, reviver, options) {\n\n      url = url.replace(/^\\n\\s*/, '').trim();\n      new fabric.util.request(url, {\n        method: 'get',\n        onComplete: onComplete\n      });\n\n      function onComplete(r) {\n\n        var xml = r.responseXML;\n        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n          xml = new ActiveXObject('Microsoft.XMLDOM');\n          xml.async = 'false';\n          //IE chokes on DOCTYPE\n          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n        }\n        if (!xml || !xml.documentElement) {\n          callback && callback(null);\n          return false;\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, _options, elements, allElements) {\n          callback && callback(results, _options, elements, allElements);\n        }, reviver, options);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromString: function(string, callback, reviver, options) {\n      string = string.trim();\n      var doc;\n      if (typeof fabric.window.DOMParser !== 'undefined') {\n        var parser = new fabric.window.DOMParser();\n        if (parser && parser.parseFromString) {\n          doc = parser.parseFromString(string, 'text/xml');\n        }\n      }\n      else if (fabric.window.ActiveXObject) {\n        doc = new ActiveXObject('Microsoft.XMLDOM');\n        doc.async = 'false';\n        // IE chokes on DOCTYPE\n        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n      }\n\n      fabric.parseSVGDocument(doc.documentElement, function (results, _options, elements, allElements) {\n        callback(results, _options, elements, allElements);\n      }, reviver, options);\n    }\n  });\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions, doc) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = (options && options.svgUid) || 0;\n  this.parsingOptions = parsingOptions;\n  this.regexUrl = /^url\\(['\"]?#([^'\"]+)['\"]?\\)/g;\n  this.doc = doc;\n};\n\n(function(proto) {\n  proto.parse = function() {\n    this.instances = new Array(this.elements.length);\n    this.numElements = this.elements.length;\n    this.createObjects();\n  };\n\n  proto.createObjects = function() {\n    var _this = this;\n    this.elements.forEach(function(element, i) {\n      element.setAttribute('svgUid', _this.svgUid);\n      _this.createObject(element, i);\n    });\n  };\n\n  proto.findTag = function(el) {\n    return fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n  };\n\n  proto.createObject = function(el, index) {\n    var klass = this.findTag(el);\n    if (klass && klass.fromElement) {\n      try {\n        klass.fromElement(el, this.createCallback(index, el), this.options);\n      }\n      catch (err) {\n        fabric.log(err);\n      }\n    }\n    else {\n      this.checkIfDone();\n    }\n  };\n\n  proto.createCallback = function(index, el) {\n    var _this = this;\n    return function(obj) {\n      var _options;\n      _this.resolveGradient(obj, el, 'fill');\n      _this.resolveGradient(obj, el, 'stroke');\n      if (obj instanceof fabric.Image && obj._originalElement) {\n        _options = obj.parsePreserveAspectRatioAttribute(el);\n      }\n      obj._removeTransformMatrix(_options);\n      _this.resolveClipPath(obj, el);\n      _this.reviver && _this.reviver(el, obj);\n      _this.instances[index] = obj;\n      _this.checkIfDone();\n    };\n  };\n\n  proto.extractPropertyDefinition = function(obj, property, storage) {\n    var value = obj[property], regex = this.regexUrl;\n    if (!regex.test(value)) {\n      return;\n    }\n    regex.lastIndex = 0;\n    var id = regex.exec(value)[1];\n    regex.lastIndex = 0;\n    return fabric[storage][this.svgUid][id];\n  };\n\n  proto.resolveGradient = function(obj, el, property) {\n    var gradientDef = this.extractPropertyDefinition(obj, property, 'gradientDefs');\n    if (gradientDef) {\n      var opacityAttr = el.getAttribute(property + '-opacity');\n      var gradient = fabric.Gradient.fromElement(gradientDef, obj, opacityAttr, this.options);\n      obj.set(property, gradient);\n    }\n  };\n\n  proto.createClipPathCallback = function(obj, container) {\n    return function(_newObj) {\n      _newObj._removeTransformMatrix();\n      _newObj.fillRule = _newObj.clipRule;\n      container.push(_newObj);\n    };\n  };\n\n  proto.resolveClipPath = function(obj, usingElement) {\n    var clipPath = this.extractPropertyDefinition(obj, 'clipPath', 'clipPaths'),\n        element, klass, objTransformInv, container, gTransform, options;\n    if (clipPath) {\n      container = [];\n      objTransformInv = fabric.util.invertTransform(obj.calcTransformMatrix());\n      // move the clipPath tag as sibling to the real element that is using it\n      var clipPathTag = clipPath[0].parentNode;\n      var clipPathOwner = usingElement;\n      while (clipPathOwner.parentNode && clipPathOwner.getAttribute('clip-path') !== obj.clipPath) {\n        clipPathOwner = clipPathOwner.parentNode;\n      }\n      clipPathOwner.parentNode.appendChild(clipPathTag);\n      for (var i = 0; i < clipPath.length; i++) {\n        element = clipPath[i];\n        klass = this.findTag(element);\n        klass.fromElement(\n          element,\n          this.createClipPathCallback(obj, container),\n          this.options\n        );\n      }\n      if (container.length === 1) {\n        clipPath = container[0];\n      }\n      else {\n        clipPath = new fabric.Group(container);\n      }\n      gTransform = fabric.util.multiplyTransformMatrices(\n        objTransformInv,\n        clipPath.calcTransformMatrix()\n      );\n      if (clipPath.clipPath) {\n        this.resolveClipPath(clipPath, clipPathOwner);\n      }\n      var options = fabric.util.qrDecompose(gTransform);\n      clipPath.flipX = false;\n      clipPath.flipY = false;\n      clipPath.set('scaleX', options.scaleX);\n      clipPath.set('scaleY', options.scaleY);\n      clipPath.angle = options.angle;\n      clipPath.skewX = options.skewX;\n      clipPath.skewY = 0;\n      clipPath.setPositionByOrigin({ x: options.translateX, y: options.translateY }, 'center', 'center');\n      obj.clipPath = clipPath;\n    }\n  };\n\n  proto.checkIfDone = function() {\n    if (--this.numElements === 0) {\n      this.instances = this.instances.filter(function(el) {\n        // eslint-disable-next-line no-eq-null, eqeqeq\n        return el != null;\n      });\n      this.callback(this.instances, this.elements);\n    }\n  };\n})(fabric.ElementsParser.prototype);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype = /** @lends fabric.Point.prototype */ {\n\n    type: 'point',\n\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function (that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    addEquals: function (that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function (scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarAddEquals: function (scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function (that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    subtractEquals: function (that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function (scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarSubtractEquals: function (scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Multiplies this point by a value and returns a new one\n     * TODO: rename in scalarMultiply in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function (scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Multiplies this point by a value\n     * TODO: rename in scalarMultiplyEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    multiplyEquals: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * TODO: rename in scalarDivide in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function (scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * TODO: rename in scalarDivideEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    divideEquals: function (scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function (that) {\n      return (this.x === that.x && this.y === that.y);\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function (that) {\n      return (this.x < that.x && this.y < that.y);\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function (that) {\n      return (this.x <= that.x && this.y <= that.y);\n    },\n\n    /**\n\n     * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function (that) {\n      return (this.x > that.x && this.y > that.y);\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function (that) {\n      return (this.x >= that.x && this.y >= that.y);\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n     * @return {fabric.Point}\n     */\n    lerp: function (that, t) {\n      if (typeof t === 'undefined') {\n        t = 0.5;\n      }\n      t = Math.max(Math.min(1, t), 0);\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function (that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function (that) {\n      return this.lerp(that);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function (that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function (that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function () {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     * @chainable\n     */\n    setXY: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x of this point\n     * @param {Number} x\n     * @chainable\n     */\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n\n    /**\n     * Sets y of this point\n     * @param {Number} y\n     * @chainable\n     */\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     * @chainable\n     */\n    setFromPoint: function (that) {\n      this.x = that.x;\n      this.y = that.y;\n      return this;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function (that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    },\n\n    /**\n     * return a cloned instance of the point\n     * @return {fabric.Point}\n     */\n    clone: function () {\n      return new Point(this.x, this.y);\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n\n  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\n    constructor: Intersection,\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoint: function (point) {\n      this.points.push(point);\n      return this;\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoints: function (points) {\n      this.points = this.points.concat(points);\n      return this;\n    }\n  };\n\n  /**\n   * Checks if one line intersects another\n   * TODO: rename in intersectSegmentSegment\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      }\n      else {\n        result = new Intersection();\n      }\n    }\n    else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      }\n      else {\n        result = new Intersection('Parallel');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Checks if line intersects polygon\n   * TODO: rename in intersectSegmentPolygon\n   * fix detection of coincident\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length,\n        b1, b2, inter, i;\n\n    for (i = 0; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length, i;\n\n    for (i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {fabric.Point} r1\n   * @param {fabric.Point} r2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    }\n    else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n\n  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function(color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        source = [255, 255, 255, 0];\n      }\n\n      if (!source) {\n        source = Color.sourceFromHex(color);\n      }\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n      if (!source) {\n        //if color is not recognize let's make black as canvas does\n        source = [0, 0, 0, 1];\n      }\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function(r, g, b) {\n      r /= 255; g /= 255; b /= 255;\n\n      var h, s, l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      }\n      else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n\n      return [\n        Math.round(h * 360),\n        Math.round(s * 100),\n        Math.round(l * 100)\n      ];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function() {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function(source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color representation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function() {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color representation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function() {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color representation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function() {\n      var source = this.getSource(), r, g, b;\n\n      r = source[0].toString(16);\n      r = (r.length === 1) ? ('0' + r) : r;\n\n      g = source[1].toString(16);\n      g = (g.length === 1) ? ('0' + g) : g;\n\n      b = source[2].toString(16);\n      b = (b.length === 1) ? ('0' + b) : b;\n\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Returns color representation in HEXA format\n     * @return {String} ex: FF5555CC\n     */\n    toHexa: function() {\n      var source = this.getSource(), a;\n\n      a = Math.round(source[3] * 255);\n      a = a.toString(16);\n      a = (a.length === 1) ? ('0' + a) : a;\n\n      return this.toHex() + a.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function() {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function(alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function() {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function(threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n\n      threshold = threshold || 127;\n\n      average = (Number(average) < Number(threshold)) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function(otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource(), i;\n\n      for (i = 0; i < 3; i++) {\n        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  // eslint-disable-next-line max-len\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/i;\n\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/i;\n\n  /**\n   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\n  /**\n   * Map of the 148 color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: https://www.w3.org/TR/css3-color/#svg-color\n   */\n  fabric.Color.colorNameMap = {\n    aliceblue:            '#F0F8FF',\n    antiquewhite:         '#FAEBD7',\n    aqua:                 '#00FFFF',\n    aquamarine:           '#7FFFD4',\n    azure:                '#F0FFFF',\n    beige:                '#F5F5DC',\n    bisque:               '#FFE4C4',\n    black:                '#000000',\n    blanchedalmond:       '#FFEBCD',\n    blue:                 '#0000FF',\n    blueviolet:           '#8A2BE2',\n    brown:                '#A52A2A',\n    burlywood:            '#DEB887',\n    cadetblue:            '#5F9EA0',\n    chartreuse:           '#7FFF00',\n    chocolate:            '#D2691E',\n    coral:                '#FF7F50',\n    cornflowerblue:       '#6495ED',\n    cornsilk:             '#FFF8DC',\n    crimson:              '#DC143C',\n    cyan:                 '#00FFFF',\n    darkblue:             '#00008B',\n    darkcyan:             '#008B8B',\n    darkgoldenrod:        '#B8860B',\n    darkgray:             '#A9A9A9',\n    darkgrey:             '#A9A9A9',\n    darkgreen:            '#006400',\n    darkkhaki:            '#BDB76B',\n    darkmagenta:          '#8B008B',\n    darkolivegreen:       '#556B2F',\n    darkorange:           '#FF8C00',\n    darkorchid:           '#9932CC',\n    darkred:              '#8B0000',\n    darksalmon:           '#E9967A',\n    darkseagreen:         '#8FBC8F',\n    darkslateblue:        '#483D8B',\n    darkslategray:        '#2F4F4F',\n    darkslategrey:        '#2F4F4F',\n    darkturquoise:        '#00CED1',\n    darkviolet:           '#9400D3',\n    deeppink:             '#FF1493',\n    deepskyblue:          '#00BFFF',\n    dimgray:              '#696969',\n    dimgrey:              '#696969',\n    dodgerblue:           '#1E90FF',\n    firebrick:            '#B22222',\n    floralwhite:          '#FFFAF0',\n    forestgreen:          '#228B22',\n    fuchsia:              '#FF00FF',\n    gainsboro:            '#DCDCDC',\n    ghostwhite:           '#F8F8FF',\n    gold:                 '#FFD700',\n    goldenrod:            '#DAA520',\n    gray:                 '#808080',\n    grey:                 '#808080',\n    green:                '#008000',\n    greenyellow:          '#ADFF2F',\n    honeydew:             '#F0FFF0',\n    hotpink:              '#FF69B4',\n    indianred:            '#CD5C5C',\n    indigo:               '#4B0082',\n    ivory:                '#FFFFF0',\n    khaki:                '#F0E68C',\n    lavender:             '#E6E6FA',\n    lavenderblush:        '#FFF0F5',\n    lawngreen:            '#7CFC00',\n    lemonchiffon:         '#FFFACD',\n    lightblue:            '#ADD8E6',\n    lightcoral:           '#F08080',\n    lightcyan:            '#E0FFFF',\n    lightgoldenrodyellow: '#FAFAD2',\n    lightgray:            '#D3D3D3',\n    lightgrey:            '#D3D3D3',\n    lightgreen:           '#90EE90',\n    lightpink:            '#FFB6C1',\n    lightsalmon:          '#FFA07A',\n    lightseagreen:        '#20B2AA',\n    lightskyblue:         '#87CEFA',\n    lightslategray:       '#778899',\n    lightslategrey:       '#778899',\n    lightsteelblue:       '#B0C4DE',\n    lightyellow:          '#FFFFE0',\n    lime:                 '#00FF00',\n    limegreen:            '#32CD32',\n    linen:                '#FAF0E6',\n    magenta:              '#FF00FF',\n    maroon:               '#800000',\n    mediumaquamarine:     '#66CDAA',\n    mediumblue:           '#0000CD',\n    mediumorchid:         '#BA55D3',\n    mediumpurple:         '#9370DB',\n    mediumseagreen:       '#3CB371',\n    mediumslateblue:      '#7B68EE',\n    mediumspringgreen:    '#00FA9A',\n    mediumturquoise:      '#48D1CC',\n    mediumvioletred:      '#C71585',\n    midnightblue:         '#191970',\n    mintcream:            '#F5FFFA',\n    mistyrose:            '#FFE4E1',\n    moccasin:             '#FFE4B5',\n    navajowhite:          '#FFDEAD',\n    navy:                 '#000080',\n    oldlace:              '#FDF5E6',\n    olive:                '#808000',\n    olivedrab:            '#6B8E23',\n    orange:               '#FFA500',\n    orangered:            '#FF4500',\n    orchid:               '#DA70D6',\n    palegoldenrod:        '#EEE8AA',\n    palegreen:            '#98FB98',\n    paleturquoise:        '#AFEEEE',\n    palevioletred:        '#DB7093',\n    papayawhip:           '#FFEFD5',\n    peachpuff:            '#FFDAB9',\n    peru:                 '#CD853F',\n    pink:                 '#FFC0CB',\n    plum:                 '#DDA0DD',\n    powderblue:           '#B0E0E6',\n    purple:               '#800080',\n    rebeccapurple:        '#663399',\n    red:                  '#FF0000',\n    rosybrown:            '#BC8F8F',\n    royalblue:            '#4169E1',\n    saddlebrown:          '#8B4513',\n    salmon:               '#FA8072',\n    sandybrown:           '#F4A460',\n    seagreen:             '#2E8B57',\n    seashell:             '#FFF5EE',\n    sienna:               '#A0522D',\n    silver:               '#C0C0C0',\n    skyblue:              '#87CEEB',\n    slateblue:            '#6A5ACD',\n    slategray:            '#708090',\n    slategrey:            '#708090',\n    snow:                 '#FFFAFA',\n    springgreen:          '#00FF7F',\n    steelblue:            '#4682B4',\n    tan:                  '#D2B48C',\n    teal:                 '#008080',\n    thistle:              '#D8BFD8',\n    tomato:               '#FF6347',\n    turquoise:            '#40E0D0',\n    violet:               '#EE82EE',\n    wheat:                '#F5DEB3',\n    white:                '#FFFFFF',\n    whitesmoke:           '#F5F5F5',\n    yellow:               '#FFFF00',\n    yellowgreen:          '#9ACD32'\n  };\n\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n    if (t > 1) {\n      t -= 1;\n    }\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n      return q;\n    }\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgb = function(color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromRgb = function(color) {\n    var match = color.match(Color.reRGBa);\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\n      return [\n        parseInt(r, 10),\n        parseInt(g, 10),\n        parseInt(b, 10),\n        match[4] ? parseFloat(match[4]) : 1\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgba = Color.fromRgb;\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsl = function(color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  fabric.Color.sourceFromHsl = function(color) {\n    var match = color.match(Color.reHSLa);\n    if (!match) {\n      return;\n    }\n\n    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r, g, b;\n\n    if (s === 0) {\n      r = g = b = l;\n    }\n    else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      match[4] ? parseFloat(match[4]) : 1\n    ];\n  };\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsla = Color.fromHsl;\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHex = function(color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromHex = function(color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = (value.length === 3 || value.length === 4),\n          isRGBa = (value.length === 8 || value.length === 4),\n          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\n          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\n\n      return [\n        parseInt(r, 16),\n        parseInt(g, 16),\n        parseInt(b, 16),\n        parseFloat((parseInt(a, 16) / 255).toFixed(2))\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromSource = function(source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /* _FROM_SVG_START_ */\n  function getColorStop(el, multiplier) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset') || 0,\n        color, colorAlpha, opacity, i;\n\n    // convert percents to absolute values\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (i = keyValuePairs.length; i--; ) {\n\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        }\n        else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha * multiplier;\n\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * A transform matrix to apply to the gradient before painting.\n     * Imported from svg gradients, is not applied with the current transform in the center.\n     * Before this transform is applied, the origin point is at the top left corner of the object\n     * plus the addition of offsetY and offsetX.\n     * @type Number[]\n     * @default null\n     */\n    gradientTransform: null,\n\n    /**\n     * coordinates units for coords.\n     * If `pixels`, the number of coords are in the same unit of width / height.\n     * If set as `percentage` the coords are still a number, but 1 means 100% of width\n     * for the X and 100% of the height for the y. It can be bigger than 1 and negative.\n     * allowed values pixels or percentage.\n     * @type String\n     * @default 'pixels'\n     */\n    gradientUnits: 'pixels',\n\n    /**\n     * Gradient type linear or radial\n     * @type String\n     * @default 'pixels'\n     */\n    type: 'linear',\n\n    /**\n     * Constructor\n     * @param {Object} options Options object with type, coords, gradientUnits and colorStops\n     * @param {Object} [options.type] gradient type linear or radial\n     * @param {Object} [options.gradientUnits] gradient units\n     * @param {Object} [options.offsetX] SVG import compatibility\n     * @param {Object} [options.offsetY] SVG import compatibility\n     * @param {Object[]} options.colorStops contains the colorstops.\n     * @param {Object} options.coords contains the coords of the gradient\n     * @param {Number} [options.coords.x1] X coordiante of the first point for linear or of the focal point for radial\n     * @param {Number} [options.coords.y1] Y coordiante of the first point for linear or of the focal point for radial\n     * @param {Number} [options.coords.x2] X coordiante of the second point for linear or of the center point for radial\n     * @param {Number} [options.coords.y2] Y coordiante of the second point for linear or of the center point for radial\n     * @param {Number} [options.coords.r1] only for radial gradient, radius of the inner circle\n     * @param {Number} [options.coords.r2] only for radial gradient, radius of the external circle\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function(options) {\n      options || (options = { });\n      options.coords || (options.coords = { });\n\n      var coords, _this = this;\n\n      // sets everything, then coords and colorstops get sets again\n      Object.keys(options).forEach(function(option) {\n        _this[option] = options[option];\n      });\n\n      if (this.id) {\n        this.id += '_' + fabric.Object.__uid++;\n      }\n      else {\n        this.id = fabric.Object.__uid++;\n      }\n\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function(colorStops) {\n      for (var position in colorStops) {\n        var color = new fabric.Color(colorStops[position]);\n        this.colorStops.push({\n          offset: parseFloat(position),\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object}\n     */\n    toObject: function(propertiesToInclude) {\n      var object = {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY,\n        gradientUnits: this.gradientUnits,\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function(object, options) {\n      var coords = clone(this.coords, true), i, len, options = options || {},\n          markup, commonAttributes, colorStops = clone(this.colorStops, true),\n          needsSwap = coords.r1 > coords.r2,\n          transform = this.gradientTransform ? this.gradientTransform.concat() : fabric.iMatrix.concat(),\n          offsetX = -this.offsetX, offsetY = -this.offsetY,\n          withViewport = !!options.additionalTransform,\n          gradientUnits = this.gradientUnits === 'pixels' ? 'userSpaceOnUse' : 'objectBoundingBox';\n      // colorStops must be sorted ascending\n      colorStops.sort(function(a, b) {\n        return a.offset - b.offset;\n      });\n\n      if (gradientUnits === 'objectBoundingBox') {\n        offsetX /= object.width;\n        offsetY /= object.height;\n      }\n      else {\n        offsetX += object.width / 2;\n        offsetY += object.height / 2;\n      }\n      if (object.type === 'path') {\n        offsetX -= object.pathOffset.x;\n        offsetY -= object.pathOffset.y;\n      }\n\n\n      transform[4] -= offsetX;\n      transform[5] -= offsetY;\n\n      commonAttributes = 'id=\"SVGID_' + this.id +\n                     '\" gradientUnits=\"' + gradientUnits + '\"';\n      commonAttributes += ' gradientTransform=\"' + (withViewport ?\n        options.additionalTransform + ' ' : '') + fabric.util.matrixToSVG(transform) + '\" ';\n\n      if (this.type === 'linear') {\n        markup = [\n          '<linearGradient ',\n          commonAttributes,\n          ' x1=\"', coords.x1,\n          '\" y1=\"', coords.y1,\n          '\" x2=\"', coords.x2,\n          '\" y2=\"', coords.y2,\n          '\">\\n'\n        ];\n      }\n      else if (this.type === 'radial') {\n        // svg radial gradient has just 1 radius. the biggest.\n        markup = [\n          '<radialGradient ',\n          commonAttributes,\n          ' cx=\"', needsSwap ? coords.x1 : coords.x2,\n          '\" cy=\"', needsSwap ? coords.y1 : coords.y2,\n          '\" r=\"', needsSwap ? coords.r1 : coords.r2,\n          '\" fx=\"', needsSwap ? coords.x2 : coords.x1,\n          '\" fy=\"', needsSwap ? coords.y2 : coords.y1,\n          '\">\\n'\n        ];\n      }\n\n      if (this.type === 'radial') {\n        if (needsSwap) {\n          // svg goes from internal to external radius. if radius are inverted, swap color stops.\n          colorStops = colorStops.concat();\n          colorStops.reverse();\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset = 1 - colorStops[i].offset;\n          }\n        }\n        var minRadius = Math.min(coords.r1, coords.r2);\n        if (minRadius > 0) {\n          // i have to shift all colorStops and add new one in 0.\n          var maxRadius = Math.max(coords.r1, coords.r2),\n              percentageShift = minRadius / maxRadius;\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\n          }\n        }\n      }\n\n      for (i = 0, len = colorStops.length; i < len; i++) {\n        var colorStop = colorStops[i];\n        markup.push(\n          '<stop ',\n          'offset=\"', (colorStop.offset * 100) + '%',\n          '\" style=\"stop-color:', colorStop.color,\n          (typeof colorStop.opacity !== 'undefined' ? ';stop-opacity: ' + colorStop.opacity : ';'),\n          '\"/>\\n'\n        );\n      }\n\n      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\n      return markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {CanvasGradient}\n     */\n    toLive: function(ctx) {\n      var gradient, coords = fabric.util.object.clone(this.coords), i, len;\n\n      if (!this.type) {\n        return;\n      }\n\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(\n          coords.x1, coords.y1, coords.x2, coords.y2);\n      }\n      else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(\n          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n      }\n\n      for (i = 0, len = this.colorStops.length; i < len; i++) {\n        var color = this.colorStops[i].color,\n            opacity = this.colorStops[i].opacity,\n            offset = this.colorStops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n        gradient.addColorStop(offset, color);\n      }\n\n      return gradient;\n    }\n  });\n\n  fabric.util.object.extend(fabric.Gradient, {\n\n    /* _FROM_SVG_START_ */\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @param {String} opacityAttr A fill-opacity or stroke-opacity attribute to multiply to each stop's opacity.\n     * @param {Object} svgOptions an object containing the size of the SVG in order to parse correctly graidents\n     * that uses gradientUnits as 'userSpaceOnUse' and percentages.\n     * @param {Object.number} viewBoxWidth width part of the viewBox attribute on svg\n     * @param {Object.number} viewBoxHeight height part of the viewBox attribute on svg\n     * @param {Object.number} width width part of the svg tag if viewBox is not specified\n     * @param {Object.number} height height part of the svg tag if viewBox is not specified\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function(el, instance, opacityAttr, svgOptions) {\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n\n      var multiplier = parseFloat(opacityAttr) / (/%$/.test(opacityAttr) ? 100 : 1);\n      multiplier = multiplier < 0 ? 0 : multiplier > 1 ? 1 : multiplier;\n      if (isNaN(multiplier)) {\n        multiplier = 1;\n      }\n\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type,\n          gradientUnits = el.getAttribute('gradientUnits') === 'userSpaceOnUse' ?\n            'pixels' : 'percentage',\n          gradientTransform = el.getAttribute('gradientTransform') || '',\n          colorStops = [],\n          coords, i, offsetX = 0, offsetY = 0,\n          transformMatrix;\n      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n        type = 'linear';\n        coords = getLinearCoords(el);\n      }\n      else {\n        type = 'radial';\n        coords = getRadialCoords(el);\n      }\n\n      for (i = colorStopEls.length; i--; ) {\n        colorStops.push(getColorStop(colorStopEls[i], multiplier));\n      }\n\n      transformMatrix = fabric.parseTransformAttribute(gradientTransform);\n\n      __convertPercentUnitsToValues(instance, coords, svgOptions, gradientUnits);\n\n      if (gradientUnits === 'pixels') {\n        offsetX = -instance.left;\n        offsetY = -instance.top;\n      }\n\n      var gradient = new fabric.Gradient({\n        id: el.getAttribute('id'),\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        gradientUnits: gradientUnits,\n        gradientTransform: transformMatrix,\n        offsetX: offsetX,\n        offsetY: offsetY,\n      });\n\n      return gradient;\n    },\n    /* _FROM_SVG_END_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from its object representation\n     * this function is uniquely used by Object.setGradient and is deprecated with it.\n     * @static\n     * @deprecated since 3.4.0\n     * @memberOf fabric.Gradient\n     * @param {Object} obj\n     * @param {Object} [options] Options object\n     */\n    forObject: function(obj, options) {\n      options || (options = { });\n      __convertPercentUnitsToValues(obj, options.coords, options.gradientUnits, {\n        // those values are to avoid errors. this function is uniquely used by\n        viewBoxWidth: 100,\n        viewBoxHeight: 100,\n      });\n      return new fabric.Gradient(options);\n    }\n  });\n\n  /**\n   * @private\n   */\n  function __convertPercentUnitsToValues(instance, options, svgOptions, gradientUnits) {\n    var propValue, finalValue;\n    Object.keys(options).forEach(function(prop) {\n      propValue = options[prop];\n      if (propValue === 'Infinity') {\n        finalValue = 1;\n      }\n      else if (propValue === '-Infinity') {\n        finalValue = 0;\n      }\n      else {\n        finalValue = parseFloat(options[prop], 10);\n        if (typeof propValue === 'string' && /^(\\d+\\.\\d+)%|(\\d+)%$/.test(propValue)) {\n          finalValue *= 0.01;\n          if (gradientUnits === 'pixels') {\n            // then we need to fix those percentages here in svg parsing\n            if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n              finalValue *= svgOptions.viewBoxWidth || svgOptions.width;\n            }\n            if (prop === 'y1' || prop === 'y2') {\n              finalValue *= svgOptions.viewBoxHeight || svgOptions.height;\n            }\n          }\n        }\n      }\n      options[prop] = finalValue;\n    });\n  }\n})();\n\n\n(function() {\n\n  'use strict';\n\n  var toFixed = fabric.util.toFixed;\n\n  /**\n   * Pattern class\n   * @class fabric.Pattern\n   * @see {@link http://fabricjs.com/patterns|Pattern demo}\n   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n   * @see {@link fabric.Pattern#initialize} for constructor definition\n   */\n\n\n  fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\n    /**\n     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @type String\n     * @default\n     */\n    repeat: 'repeat',\n\n    /**\n     * Pattern horizontal offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Pattern vertical offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * transform matrix to change the pattern, imported from svgs.\n     * @type Array\n     * @default\n     */\n    patternTransform: null,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @param {Function} [callback] function to invoke after callback init.\n     * @return {fabric.Pattern} thisArg\n     */\n    initialize: function(options, callback) {\n      options || (options = { });\n\n      this.id = fabric.Object.__uid++;\n      this.setOptions(options);\n      if (!options.source || (options.source && typeof options.source !== 'string')) {\n        callback && callback(this);\n        return;\n      }\n      // function string\n      if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n        this.source = new Function(fabric.util.getFunctionBody(options.source));\n        callback && callback(this);\n      }\n      else {\n        // img src string\n        var _this = this;\n        this.source = fabric.util.createImage();\n        fabric.util.loadImage(options.source, function(img) {\n          _this.source = img;\n          callback && callback(_this);\n        }, null, this.crossOrigin);\n      }\n    },\n\n    /**\n     * Returns object representation of a pattern\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of a pattern instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          source, object;\n\n      // callback\n      if (typeof this.source === 'function') {\n        source = String(this.source);\n      }\n      // <img> element\n      else if (typeof this.source.src === 'string') {\n        source = this.source.src;\n      }\n      // <canvas> element\n      else if (typeof this.source === 'object' && this.source.toDataURL) {\n        source = this.source.toDataURL();\n      }\n\n      object = {\n        type: 'pattern',\n        source: source,\n        repeat: this.repeat,\n        crossOrigin: this.crossOrigin,\n        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n        patternTransform: this.patternTransform ? this.patternTransform.concat() : null\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a pattern\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a pattern\n     */\n    toSVG: function(object) {\n      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n          patternWidth = patternSource.width / object.width,\n          patternHeight = patternSource.height / object.height,\n          patternOffsetX = this.offsetX / object.width,\n          patternOffsetY = this.offsetY / object.height,\n          patternImgSrc = '';\n      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n        patternHeight = 1;\n        if (patternOffsetY) {\n          patternHeight += Math.abs(patternOffsetY);\n        }\n      }\n      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n        patternWidth = 1;\n        if (patternOffsetX) {\n          patternWidth += Math.abs(patternOffsetX);\n        }\n\n      }\n      if (patternSource.src) {\n        patternImgSrc = patternSource.src;\n      }\n      else if (patternSource.toDataURL) {\n        patternImgSrc = patternSource.toDataURL();\n      }\n\n      return '<pattern id=\"SVGID_' + this.id +\n                    '\" x=\"' + patternOffsetX +\n                    '\" y=\"' + patternOffsetY +\n                    '\" width=\"' + patternWidth +\n                    '\" height=\"' + patternHeight + '\">\\n' +\n               '<image x=\"0\" y=\"0\"' +\n                      ' width=\"' + patternSource.width +\n                      '\" height=\"' + patternSource.height +\n                      '\" xlink:href=\"' + patternImgSrc +\n               '\"></image>\\n' +\n             '</pattern>\\n';\n    },\n    /* _TO_SVG_END_ */\n\n    setOptions: function(options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n    },\n\n    /**\n     * Returns an instance of CanvasPattern\n     * @param {CanvasRenderingContext2D} ctx Context to create pattern\n     * @return {CanvasPattern}\n     */\n    toLive: function(ctx) {\n      var source = typeof this.source === 'function' ? this.source() : this.source;\n\n      // if the image failed to load, return, and allow rest to continue loading\n      if (!source) {\n        return '';\n      }\n\n      // if an image\n      if (typeof source.src !== 'undefined') {\n        if (!source.complete) {\n          return '';\n        }\n        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n          return '';\n        }\n      }\n      return ctx.createPattern(source, this.repeat);\n    }\n  });\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * When `false`, the shadow will scale with the object.\n     * When `true`, the shadow's offsetX, offsetY, and blur will not be affected by the object's scale.\n     * default to false\n     * @type Boolean\n     * @default\n     */\n    nonScaling: false,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function(options) {\n\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function(shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\n      return {\n        color: color.trim(),\n        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n        blur: parseInt(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function() {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function(object) {\n      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          offset = fabric.util.rotateVector(\n            { x: this.offsetX, y: this.offsetY },\n            fabric.util.degreesToRadians(-object.angle)),\n          BLUR_BOX = 20, color = new fabric.Color(this.color);\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n      }\n      if (object.flipX) {\n        offset.x *= -1;\n      }\n      if (object.flipY) {\n        offset.y *= -1;\n      }\n\n      return (\n        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n          '\\t<feFlood flood-color=\"' + color.toRgb() + '\" flood-opacity=\"' + color.getAlpha() + '\"/>\\n' +\n          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n          '\\t<feMerge>\\n' +\n            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n          '\\t</feMerge>\\n' +\n        '</filter>\\n');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function() {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          affectStroke: this.affectStroke,\n          nonScaling: this.nonScaling\n        };\n      }\n      var obj = { }, proto = fabric.Shadow.prototype;\n\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke', 'nonScaling'].forEach(function(prop) {\n        if (this[prop] !== proto[prop]) {\n          obj[prop] = this[prop];\n        }\n      }, this);\n\n      return obj;\n    }\n  });\n\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  // eslint-disable-next-line max-len\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function () {\n\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  }\n\n  // aliases for faster resolution\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n      toFixed = fabric.util.toFixed,\n      transformPoint = fabric.util.transformPoint,\n      invertTransform = fabric.util.invertTransform,\n      getNodeCanvas = fabric.util.getNodeCanvas,\n      createCanvasElement = fabric.util.createCanvasElement,\n\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n      this._initStatic(el, options);\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n     * since 2.4.0 image caching is active, please when putting an image as background, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n     * since 2.4.0 image caching is active, please when putting an image as overlay, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * if set to false, takes precedence over the object value.\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: false,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove},\n     * {@link fabric.StaticCanvas.moveTo}, {@link fabric.StaticCanvas.clear} and many more, should also re-render canvas.\n     * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\n     * since the renders are quequed and executed one per frame.\n     * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\n     * Left default to true to do not break documentation and old app, fiddles.\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Function that determines clipping of entire canvas area\n     * Being passed context as first argument.\n     * If you are using code minification, ctx argument can be minified/manglied you should use\n     * as a workaround `var ctx = arguments[0];` in the function;\n     * See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n     * @deprecated since 2.0.0\n     * @type Function\n     * @default\n     */\n    clipTo: null,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * The transformation (in the format of Canvas transform) which focuses the viewport\n     * @type Array\n     * @default\n     */\n    viewportTransform: fabric.iMatrix.concat(),\n\n    /**\n     * if set to false background image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    backgroundVpt: true,\n\n    /**\n     * if set to false overlya image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    overlayVpt: true,\n\n    /**\n     * Callback; invoked right before object is about to be scaled/rotated\n     * @deprecated since 2.3.0\n     * Use before:transform event\n     */\n    onBeforeScaleRotate: function () {\n      /* NOOP */\n    },\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     * @type Boolean\n     * @default\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * Describe canvas element extension over design\n     * properties are tl,tr,bl,br.\n     * if canvas is not zoomed/panned those points are the four corner of canvas\n     * if canvas is viewportTransformed you those points indicate the extension\n     * of canvas element in plain untrasformed coordinates\n     * The coordinates get updated with @method calcViewportBoundaries.\n     * @memberOf fabric.StaticCanvas.prototype\n     */\n    vptCoords: { },\n\n    /**\n     * Based on vptCoords and object.aCoords, skip rendering of objects that\n     * are not included in current viewport.\n     * May greatly help in applications with crowded canvas and use of zoom/pan\n     * If One of the corner of the bounding box of the object is on the canvas\n     * the objects get rendered.\n     * @memberOf fabric.StaticCanvas.prototype\n     * @type Boolean\n     * @default\n     */\n    skipOffscreen: true,\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the canvas has rendered, and the context is placed in the\n     * top left corner of the canvas.\n     * clipPath will clip away controls, if you do not want this to happen use controlsAboveOverlay = true\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function(el, options) {\n      var cb = this.requestRenderAllBound;\n      this._objects = [];\n      this._createLowerCanvas(el);\n      this._initOptions(options);\n      this._setImageSmoothing();\n      // only initialize retina scaling once\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, cb);\n      }\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, cb);\n      }\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, cb);\n      }\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, cb);\n      }\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _isRetinaScaling: function() {\n      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\n    },\n\n    /**\n     * @private\n     * @return {Number} retinaScaling if applied, otherwise 1;\n     */\n    getRetinaScaling: function() {\n      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function() {\n      if (!this._isRetinaScaling()) {\n        return;\n      }\n      var scaleRatio = fabric.devicePixelRatio;\n      this.__initRetinaScaling(scaleRatio, this.lowerCanvasEl, this.contextContainer);\n      if (this.upperCanvasEl) {\n        this.__initRetinaScaling(scaleRatio, this.upperCanvasEl, this.contextTop);\n      }\n    },\n\n    __initRetinaScaling: function(scaleRatio, canvas, context) {\n      canvas.setAttribute('width', this.width * scaleRatio);\n      canvas.setAttribute('height', this.height * scaleRatio);\n      context.scale(scaleRatio, scaleRatio);\n    },\n\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function () {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/djnr8o7a/28/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    // TODO: fix stretched examples\n    setBackgroundImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|foreground color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set foreground color to\n     * @param {Function} callback Callback to invoke when foreground color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function(overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function(backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n     */\n    _setImageSmoothing: function() {\n      var ctx = this.getContext();\n\n      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function(property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function(img) {\n          if (img) {\n            var instance = new fabric.Image(img, options);\n            this[property] = instance;\n            instance.canvas = this;\n          }\n          callback && callback(img);\n        }, this, options && options.crossOrigin);\n      }\n      else {\n        options && image.setOptions(options);\n        this[property] = image;\n        image && (image.canvas = this);\n        callback && callback(image);\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function(property, color, callback) {\n      this[property] = color;\n      this._initGradient(color, property);\n      this._initPattern(color, property, callback);\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function() {\n      var element = createCanvasElement();\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n      if (!element.style) {\n        element.style = { };\n      }\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function (options) {\n      var lowerCanvasEl = this.lowerCanvasEl;\n      this._setOptions(options);\n\n      this.width = this.width || parseInt(lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      lowerCanvasEl.width = this.width;\n      lowerCanvasEl.height = this.height;\n\n      lowerCanvasEl.style.width = this.width + 'px';\n      lowerCanvasEl.style.height = this.height + 'px';\n\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function (canvasEl) {\n      // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\n      if (canvasEl && canvasEl.getContext) {\n        this.lowerCanvasEl = canvasEl;\n      }\n      else {\n        this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\n      }\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function () {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function () {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function (value, options) {\n      return this.setDimensions({ width: value }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function (value, options) {\n      return this.setDimensions({ height: value }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function (dimensions, options) {\n      var cssValue;\n\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n          cssValue += 'px';\n          this.hasLostContext = true;\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n      if (this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._setBrushStyles();\n      }\n      this._initRetinaScaling();\n      this._setImageSmoothing();\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.requestRenderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function (prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function (prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function () {\n      return this.viewportTransform[0];\n    },\n\n    /**\n     * Sets viewport transform of this canvas instance\n     * @param {Array} vpt the transform in the form of context.transform\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function (vpt) {\n      var activeObject = this._activeObject, object, ignoreVpt = false, skipAbsolute = true, i, len;\n      this.viewportTransform = vpt;\n      for (i = 0, len = this._objects.length; i < len; i++) {\n        object = this._objects[i];\n        object.group || object.setCoords(ignoreVpt, skipAbsolute);\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        activeObject.setCoords(ignoreVpt, skipAbsolute);\n      }\n      this.calcViewportBoundaries();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, zoom centered around point\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function (point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point, vpt = this.viewportTransform.slice(0);\n      point = transformPoint(point, invertTransform(this.viewportTransform));\n      vpt[0] = value;\n      vpt[3] = value;\n      var after = transformPoint(point, vpt);\n      vpt[4] += before.x - after.x;\n      vpt[5] += before.y - after.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function (value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function (point) {\n      var vpt = this.viewportTransform.slice(0);\n      vpt[4] = -point.x;\n      vpt[5] = -point.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function (point) {\n      return this.absolutePan(new fabric.Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5]\n      ));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function () {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function(obj) {\n      this.stateful && obj.setupState();\n      obj._set('canvas', this);\n      obj.setCoords();\n      this.fire('object:added', { target: obj });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      this.fire('object:removed', { target: obj });\n      obj.fire('removed');\n      delete obj.canvas;\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function(ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function () {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this._objects.length = 0;\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this.backgroundColor = '';\n      this.overlayColor = '';\n      if (this._hasITextHandlers) {\n        this.off('mouse:up', this._mouseUpITextHandler);\n        this._iTextInstances = null;\n        this._hasITextHandlers = false;\n      }\n      this.clearContext(this.contextContainer);\n      this.fire('canvas:cleared');\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Renders the canvas\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._objects);\n      return this;\n    },\n\n    /**\n     * Function created to be instance bound at initialization\n     * used in requestAnimationFrame rendering\n     * Let the fabricJS call it. If you call it manually you could have more\n     * animationFrame stacking on to of each other\n     * for an imperative rendering, use canvas.renderAll\n     * @private\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAndReset: function() {\n      this.isRendering = 0;\n      this.renderAll();\n    },\n\n    /**\n     * Append a renderAll request to next animation frame.\n     * unless one is already in progress, in that case nothing is done\n     * a boolean flag will avoid appending more.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    requestRenderAll: function () {\n      if (!this.isRendering) {\n        this.isRendering = fabric.util.requestAnimFrame(this.renderAndResetBound);\n      }\n      return this;\n    },\n\n    /**\n     * Calculate the position of the 4 corner of canvas with current viewportTransform.\n     * helps to determinate when an object is in the current rendering viewport using\n     * object absolute coordinates ( aCoords )\n     * @return {Object} points.tl\n     * @chainable\n     */\n    calcViewportBoundaries: function() {\n      var points = { }, width = this.width, height = this.height,\n          iVpt = invertTransform(this.viewportTransform);\n      points.tl = transformPoint({ x: 0, y: 0 }, iVpt);\n      points.br = transformPoint({ x: width, y: height }, iVpt);\n      points.tr = new fabric.Point(points.br.x, points.tl.y);\n      points.bl = new fabric.Point(points.tl.x, points.br.y);\n      this.vptCoords = points;\n      return points;\n    },\n\n    cancelRequestedRender: function() {\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n    },\n\n    /**\n     * Renders background, objects, overlay and controls.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Array} objects to render\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderCanvas: function(ctx, objects) {\n      var v = this.viewportTransform, path = this.clipPath;\n      this.cancelRequestedRender();\n      this.calcViewportBoundaries();\n      this.clearContext(ctx);\n      this.fire('before:render', { ctx: ctx, });\n      if (this.clipTo) {\n        fabric.util.clipContext(this, ctx);\n      }\n      this._renderBackground(ctx);\n\n      ctx.save();\n      //apply viewport transform once for all rendering process\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      this._renderObjects(ctx, objects);\n      ctx.restore();\n      if (!this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      if (this.clipTo) {\n        ctx.restore();\n      }\n      if (path) {\n        path.canvas = this;\n        // needed to setup a couple of variables\n        path.shouldCache();\n        path._transformDone = true;\n        path.renderCache({ forClipping: true });\n        this.drawClipPathOnCanvas(ctx);\n      }\n      this._renderOverlay(ctx);\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      this.fire('after:render', { ctx: ctx, });\n    },\n\n    /**\n     * Paint the cached clipPath on the lowerCanvasEl\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawClipPathOnCanvas: function(ctx) {\n      var v = this.viewportTransform, path = this.clipPath;\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4;\n      ctx.globalCompositeOperation = 'destination-in';\n      path.transform(ctx);\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} objects to render\n     */\n    _renderObjects: function(ctx, objects) {\n      var i, len;\n      for (i = 0, len = objects.length; i < len; ++i) {\n        objects[i] && objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function(ctx, property) {\n      var fill = this[property + 'Color'], object = this[property + 'Image'],\n          v = this.viewportTransform, needsVpt = this[property + 'Vpt'];\n      if (!fill && !object) {\n        return;\n      }\n      if (fill) {\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(this.width, 0);\n        ctx.lineTo(this.width, this.height);\n        ctx.lineTo(0, this.height);\n        ctx.closePath();\n        ctx.fillStyle = fill.toLive\n          ? fill.toLive(ctx, this)\n          : fill;\n        if (needsVpt) {\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        }\n        ctx.transform(1, 0, 0, 1, fill.offsetX || 0, fill.offsetY || 0);\n        var m = fill.gradientTransform || fill.patternTransform;\n        m && ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        ctx.fill();\n        ctx.restore();\n      }\n      if (object) {\n        ctx.save();\n        if (needsVpt) {\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        }\n        object.render(ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'background');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     */\n    getCenter: function () {\n      return {\n        top: this.height / 2,\n        left: this.width / 2\n      };\n    },\n\n    /**\n     * Centers object horizontally in the canvas\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function (object) {\n      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically in the canvas\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function (object) {\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the canvas\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function(object) {\n      var center = this.getCenter();\n\n      return this._centerObject(object, new fabric.Point(center.left, center.top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the viewport\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObject: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, vpCenter);\n    },\n\n    /**\n     * Centers object horizontally in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectH: function(object) {\n      var vpCenter = this.getVpCenter();\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n      return this;\n    },\n\n    /**\n     * Centers object Vertically in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectV: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n    },\n\n    /**\n     * Calculate the point in canvas that correspond to the center of actual viewport.\n     * @return {fabric.Point} vpCenter, viewport center\n     * @chainable\n     */\n    getVpCenter: function() {\n      var center = this.getCenter(),\n          iVpt = invertTransform(this.viewportTransform);\n      return transformPoint({ x: center.left, y: center.top }, iVpt);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function(object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      object.setCoords();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Returs dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function (propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function (methodName, propertiesToInclude) {\n\n      var clipPath = this.clipPath, data = {\n        version: fabric.version,\n        objects: this._toObjects(methodName, propertiesToInclude),\n      };\n      if (clipPath) {\n        data.clipPath = this._toObject(this.clipPath, methodName, propertiesToInclude);\n      }\n      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function(methodName, propertiesToInclude) {\n      return this._objects.filter(function(object) {\n        return !object.excludeFromExport;\n      }).map(function(instance) {\n        return this._toObject(instance, methodName, propertiesToInclude);\n      }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      var object = instance[methodName](propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n      return object;\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function(methodName, propertiesToInclude) {\n      var data = { }, bgImage = this.backgroundImage, overlay = this.overlayImage;\n\n      if (this.backgroundColor) {\n        data.background = this.backgroundColor.toObject\n          ? this.backgroundColor.toObject(propertiesToInclude)\n          : this.backgroundColor;\n      }\n\n      if (this.overlayColor) {\n        data.overlay = this.overlayColor.toObject\n          ? this.overlayColor.toObject(propertiesToInclude)\n          : this.overlayColor;\n      }\n      if (bgImage && !bgImage.excludeFromExport) {\n        data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\n      }\n      if (overlay && !overlay.excludeFromExport) {\n        data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {String} [options.width] desired width of svg with or without units\n     * @param {String} [options.height] desired height of svg with or without units\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function(options, reviver) {\n      options || (options = { });\n      options.reviver = reviver;\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n      this._setSVGHeader(markup, options);\n      if (this.clipPath) {\n        markup.push('<g clip-path=\"url(#' + this.clipPath.clipPathId + ')\" >\\n');\n      }\n      this._setSVGBgOverlayColor(markup, 'background');\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n      this._setSVGObjects(markup, reviver);\n      if (this.clipPath) {\n        markup.push('</g>\\n');\n      }\n      this._setSVGBgOverlayColor(markup, 'overlay');\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n      markup.push('</svg>');\n\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function(markup, options) {\n      if (options.suppressPreamble) {\n        return;\n      }\n      markup.push(\n        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n        '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n        '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n      );\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function(markup, options) {\n      var width = options.width || this.width,\n          height = options.height || this.height,\n          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (options.viewBox) {\n        viewBox = 'viewBox=\"' +\n                options.viewBox.x + ' ' +\n                options.viewBox.y + ' ' +\n                options.viewBox.width + ' ' +\n                options.viewBox.height + '\" ';\n      }\n      else {\n        if (this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          viewBox = 'viewBox=\"' +\n                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n        }\n      }\n\n      markup.push(\n        '<svg ',\n        'xmlns=\"http://www.w3.org/2000/svg\" ',\n        'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n        'version=\"1.1\" ',\n        'width=\"', width, '\" ',\n        'height=\"', height, '\" ',\n        viewBox,\n        'xml:space=\"preserve\">\\n',\n        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n        '<defs>\\n',\n        this.createSVGFontFacesMarkup(),\n        this.createSVGRefElementsMarkup(),\n        this.createSVGClipPathMarkup(options),\n        '</defs>\\n'\n      );\n    },\n\n    createSVGClipPathMarkup: function(options) {\n      var clipPath = this.clipPath;\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        return  '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' +\n          this.clipPath.toClipPathSVG(options.reviver) +\n          '</clipPath>\\n';\n      }\n      return '';\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function() {\n      var _this = this,\n          markup = ['background', 'overlay'].map(function(prop) {\n            var fill = _this[prop + 'Color'];\n            if (fill && fill.toLive) {\n              var shouldTransform = _this[prop + 'Vpt'], vpt = _this.viewportTransform,\n                  object = {\n                    width: _this.width / (shouldTransform ? vpt[0] : 1),\n                    height: _this.height / (shouldTransform ? vpt[3] : 1)\n                  };\n              return fill.toSVG(\n                object,\n                { additionalTransform: shouldTransform ? fabric.util.matrixToSVG(vpt) : '' }\n              );\n            }\n          });\n      return markup.join('');\n    },\n\n    /**\n     * Creates markup containing SVG font faces,\n     * font URLs for font faces must be collected by developers\n     * and are not extracted from the DOM by fabricjs\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function() {\n      var markup = '', fontList = { }, obj, fontFamily,\n          style, row, rowIndex, _char, charIndex, i, len,\n          fontPaths = fabric.fontPaths, objects = this._objects;\n\n      for (i = 0, len = objects.length; i < len; i++) {\n        obj = objects[i];\n        fontFamily = obj.fontFamily;\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n          continue;\n        }\n        fontList[fontFamily] = true;\n        if (!obj.styles) {\n          continue;\n        }\n        style = obj.styles;\n        for (rowIndex in style) {\n          row = style[rowIndex];\n          for (charIndex in row) {\n            _char = row[charIndex];\n            fontFamily = _char.fontFamily;\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n              fontList[fontFamily] = true;\n            }\n          }\n        }\n      }\n\n      for (var j in fontList) {\n        markup += [\n          '\\t\\t@font-face {\\n',\n          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n          '\\t\\t}\\n'\n        ].join('');\n      }\n\n      if (markup) {\n        markup = [\n          '\\t<style type=\"text/css\">',\n          '<![CDATA[\\n',\n          markup,\n          ']]>',\n          '</style>\\n'\n        ].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function(markup, reviver) {\n      var instance, i, len, objects = this._objects;\n      for (i = 0, len = objects.length; i < len; i++) {\n        instance = objects[i];\n        if (instance.excludeFromExport) {\n          continue;\n        }\n        this._setSVGObject(markup, instance, reviver);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      markup.push(instance.toSVG(reviver));\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function(markup, property, reviver) {\n      if (this[property] && !this[property].excludeFromExport && this[property].toSVG) {\n        markup.push(this[property].toSVG(reviver));\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function(markup, property) {\n      var filler = this[property + 'Color'], vpt = this.viewportTransform, finalWidth = this.width,\n          finalHeight = this.height;\n      if (!filler) {\n        return;\n      }\n      if (filler.toLive) {\n        var repeat = filler.repeat, iVpt = fabric.util.invertTransform(vpt), shouldInvert = this[property + 'Vpt'],\n            additionalTransform = shouldInvert ? fabric.util.matrixToSVG(iVpt) : '';\n        markup.push(\n          '<rect transform=\"' + additionalTransform + ' translate(', finalWidth / 2, ',', finalHeight / 2, ')\"',\n          ' x=\"', filler.offsetX - finalWidth / 2,\n          '\" y=\"', filler.offsetY - finalHeight / 2, '\" ',\n          'width=\"',\n          (repeat === 'repeat-y' || repeat === 'no-repeat'\n            ? filler.source.width\n            : finalWidth ),\n          '\" height=\"',\n          (repeat === 'repeat-x' || repeat === 'no-repeat'\n            ? filler.source.height\n            : finalHeight),\n          '\" fill=\"url(#SVGID_' + filler.id + ')\"',\n          '></rect>\\n'\n        );\n      }\n      else {\n        markup.push(\n          '<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ',\n          'fill=\"', filler, '\"',\n          '></rect>\\n'\n        );\n      }\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.unshift(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.unshift(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.push(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.push(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in behind\n     * the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx > 0 + objsMoved) {\n            newIdx = idx - 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== 0) {\n          // if object is not on the bottom of stack\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function(object, idx, intersecting) {\n      var newIdx, i;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse down the stack looking for the nearest intersecting object\n        for (i = idx - 1; i >= 0; --i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in front\n     * of the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx < this._objects.length - 1 - objsMoved) {\n            newIdx = idx + 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== this._objects.length - 1) {\n          // if object is not on top of stack (last item in an array)\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function(object, idx, intersecting) {\n      var newIdx, i, len;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse up the stack looking for the nearest intersecting object\n        for (i = idx + 1, len = this._objects.length; i < len; ++i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function (object, index) {\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      return this.renderOnAddRemove && this.requestRenderAll();\n    },\n\n    /**\n     * Clears a canvas element and dispose objects\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      // cancel eventually ongoing renders\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n      this.forEachObject(function(object) {\n        object.dispose && object.dispose();\n      });\n      this._objects = [];\n      if (this.backgroundImage && this.backgroundImage.dispose) {\n        this.backgroundImage.dispose();\n      }\n      this.backgroundImage = null;\n      if (this.overlayImage && this.overlayImage.dispose) {\n        this.overlayImage.dispose();\n      }\n      this.overlayImage = null;\n      this._iTextInstances = null;\n      this.contextContainer = null;\n      fabric.util.cleanUpJsdomNode(this.lowerCanvasEl);\n      this.lowerCanvasEl = undefined;\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n               '{ objects: ' + this._objects.length + ' }>';\n    }\n  });\n\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\n  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function (methodName) {\n      var el = createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        default:\n          return null;\n      }\n    }\n  });\n\n  /**\n   * Returns JSON representation of canvas\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} JSON string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n  if (fabric.isLikelyNode) {\n    fabric.StaticCanvas.prototype.createPNGStream = function() {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createPNGStream();\n    };\n    fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createJPEGStream(opts);\n    };\n  }\n})();\n\n\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color: 'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush, has to be a Number, no string literals\n   * @type Number\n   * @default\n   */\n  width: 1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow: null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: 'round',\n\n  /**\n   * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: 'round',\n\n  /**\n   * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\n   * @type Number\n   * @default\n   */\n  strokeMiterLimit:         10,\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: null,\n\n  /**\n   * Sets shadow of an object\n   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  setShadow: function(options) {\n    this.shadow = new fabric.Shadow(options);\n    return this;\n  },\n\n  /**\n   * Sets brush styles\n   * @private\n   */\n  _setBrushStyles: function() {\n    var ctx = this.canvas.contextTop;\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.miterLimit = this.strokeMiterLimit;\n    ctx.lineJoin = this.strokeLineJoin;\n    if (fabric.StaticCanvas.supports('setLineDash')) {\n      ctx.setLineDash(this.strokeDashArray || []);\n    }\n  },\n\n  /**\n   * Sets the transformation on given context\n   * @param {RenderingContext2d} ctx context to render on\n   * @private\n   */\n  _saveAndTransform: function(ctx) {\n    var v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function() {\n    if (!this.shadow) {\n      return;\n    }\n\n    var canvas = this.canvas,\n        shadow = this.shadow,\n        ctx = canvas.contextTop,\n        zoom = canvas.getZoom();\n    if (canvas && canvas._isRetinaScaling()) {\n      zoom *= fabric.devicePixelRatio;\n    }\n\n    ctx.shadowColor = shadow.color;\n    ctx.shadowBlur = shadow.blur * zoom;\n    ctx.shadowOffsetX = shadow.offsetX * zoom;\n    ctx.shadowOffsetY = shadow.offsetY * zoom;\n  },\n\n  needsFullRender: function() {\n    var color = new fabric.Color(this.color);\n    return color.getAlpha() < 1 || !!this.shadow;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n});\n\n\n(function() {\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\n    /**\n     * Discard points that are less than `decimate` pixel distant from each other\n     * @type Number\n     * @default 0.4\n     */\n    decimate: 0.4,\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function(canvas) {\n      this.canvas = canvas;\n      this._points = [];\n    },\n\n    /**\n     * Invoked inside on mouse down and mouse move\n     * @param {Object} pointer\n     */\n    _drawSegment: function (ctx, p1, p2) {\n      var midPoint = p1.midPointFrom(p2);\n      ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n      return midPoint;\n    },\n\n    /**\n     * Inovoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function(pointer, options) {\n      if (!this.canvas._isMainEvent(options.e)) {\n        return;\n      }\n      this._prepareForDrawing(pointer);\n      // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n      this._captureDrawingPath(pointer);\n      this._render();\n    },\n\n    /**\n     * Inovoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function(pointer, options) {\n      if (!this.canvas._isMainEvent(options.e)) {\n        return;\n      }\n      if (this._captureDrawingPath(pointer) && this._points.length > 1) {\n        if (this.needsFullRender()) {\n          // redraw curve\n          // clear top canvas\n          this.canvas.clearContext(this.canvas.contextTop);\n          this._render();\n        }\n        else {\n          var points = this._points, length = points.length, ctx = this.canvas.contextTop;\n          // draw the curve update\n          this._saveAndTransform(ctx);\n          if (this.oldEnd) {\n            ctx.beginPath();\n            ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\n          }\n          this.oldEnd = this._drawSegment(ctx, points[length - 2], points[length - 1], true);\n          ctx.stroke();\n          ctx.restore();\n        }\n      }\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function(options) {\n      if (!this.canvas._isMainEvent(options.e)) {\n        return true;\n      }\n      this.oldEnd = undefined;\n      this._finalizeAndAddPath();\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function(pointer) {\n\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n      this._addPoint(p);\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function(point) {\n      if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\n        return false;\n      }\n      this._points.push(point);\n      return true;\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function() {\n      this._points = [];\n      this._setBrushStyles();\n      this._setShadow();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function(pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      return this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     */\n    _render: function() {\n      var ctx  = this.canvas.contextTop, i, len,\n          p1 = this._points[0],\n          p2 = this._points[1];\n\n      this._saveAndTransform(ctx);\n      ctx.beginPath();\n      //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        var width = this.width / 1000;\n        p1 = new fabric.Point(p1.x, p1.y);\n        p2 = new fabric.Point(p2.x, p2.y);\n        p1.x -= width;\n        p2.x += width;\n      }\n      ctx.moveTo(p1.x, p1.y);\n\n      for (i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        this._drawSegment(ctx, p1, p2);\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      }\n      // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @return {String} SVG path\n     */\n    convertPointsToSVGPath: function(points) {\n      var path = [], i, width = this.width / 1000,\n          p1 = new fabric.Point(points[0].x, points[0].y),\n          p2 = new fabric.Point(points[1].x, points[1].y),\n          len = points.length, multSignX = 1, multSignY = 0, manyPoints = len > 2;\n\n      if (manyPoints) {\n        multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n        multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n      }\n      path.push('M ', p1.x - multSignX * width, ' ', p1.y - multSignY * width, ' ');\n      for (i = 1; i < len; i++) {\n        if (!p1.eq(p2)) {\n          var midPoint = p1.midPointFrom(p2);\n          // p1 is our bezier control point\n          // midpoint is our endpoint\n          // start point is p(i-1) value.\n          path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n        }\n        p1 = points[i];\n        if ((i + 1) < points.length) {\n          p2 = points[i + 1];\n        }\n      }\n      if (manyPoints) {\n        multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n        multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n      }\n      path.push('L ', p1.x + multSignX * width, ' ', p1.y + multSignY * width);\n      return path;\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {String} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function(pathData) {\n      var path = new fabric.Path(pathData, {\n        fill: null,\n        stroke: this.color,\n        strokeWidth: this.width,\n        strokeLineCap: this.strokeLineCap,\n        strokeMiterLimit: this.strokeMiterLimit,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeDashArray: this.strokeDashArray,\n      });\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.setShadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * Decimate poins array with the decimate value\n     */\n    decimatePoints: function(points, distance) {\n      if (points.length <= 2) {\n        return points;\n      }\n      var zoom = this.canvas.getZoom(), adjustedDistance = Math.pow(distance / zoom, 2),\n          i, l = points.length - 1, lastPoint = points[0], newPoints = [lastPoint],\n          cDistance;\n      for (i = 1; i < l; i++) {\n        cDistance = Math.pow(lastPoint.x - points[i].x, 2) + Math.pow(lastPoint.y - points[i].y, 2);\n        if (cDistance >= adjustedDistance) {\n          lastPoint = points[i];\n          newPoints.push(lastPoint);\n        }\n      }\n      if (newPoints.length === 1) {\n        newPoints.push(new fabric.Point(newPoints[0].x, newPoints[0].y));\n      }\n      return newPoints;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function() {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n      if (this.decimate) {\n        this._points = this.decimatePoints(this._points, this.decimate);\n      }\n      var pathData = this.convertPointsToSVGPath(this._points).join('');\n      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.requestRenderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.canvas.add(path);\n      this.canvas.requestRenderAll();\n      path.setCoords();\n      this._resetShadow();\n\n\n      // fire event 'path' created\n      this.canvas.fire('path:created', { path: path });\n    }\n  });\n})();\n\n\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.points = [];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function(pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop;\n    this._saveAndTransform(ctx);\n    this.dot(ctx, point);\n    ctx.restore();\n  },\n\n  dot: function(ctx, point) {\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function(pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Render the full state of the brush\n   * @private\n   */\n  _render: function() {\n    var ctx  = this.canvas.contextTop, i, len,\n        points = this.points;\n    this._saveAndTransform(ctx);\n    for (i = 0, len = points.length; i < len; i++) {\n      this.dot(ctx, points[i]);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    if (this.needsFullRender()) {\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.addPoint(pointer);\n      this._render();\n    }\n    else {\n      this.drawDot(pointer);\n    }\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove, i, len;\n    this.canvas.renderOnAddRemove = false;\n\n    var circles = [];\n\n    for (i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n            radius: point.radius,\n            left: point.x,\n            top: point.y,\n            originX: 'center',\n            originY: 'center',\n            fill: point.fill\n          });\n\n      this.shadow && circle.setShadow(this.shadow);\n\n      circles.push(circle);\n    }\n    var group = new fabric.Group(circles);\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function(pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\n        circleRadius = fabric.util.getRandomInt(\n          Math.max(0, this.width - 20), this.width + 20) / 2,\n\n        circleColor = new fabric.Color(this.color)\n          .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n          .toRgba();\n\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n});\n\n\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\nfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width:              10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density:            20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth:           1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance:   1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity:        false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping:  true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function(pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var rects = [];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects);\n    this.shadow && group.setShadow(this.shadow);\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function(rects) {\n\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = { }, key, i, len;\n\n    for (i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n    var uniqueRectsArray = [];\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Render new chunk of spray brush\n   */\n  render: function(sprayChunk) {\n    var ctx = this.canvas.contextTop, i, len;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, len = sprayChunk.length; i < len; i++) {\n      var point = sprayChunk[i];\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * Render all spray chunks\n   */\n  _render: function() {\n    var ctx = this.canvas.contextTop, i, ilen;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      this.render(this.sprayChunks[i]);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function(pointer) {\n    this.sprayChunkPoints = [];\n\n    var x, y, width, radius = this.width / 2, i;\n\n    for (i = 0; i < this.density; i++) {\n\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt(\n          // bottom clamp width to 1\n          Math.max(1, this.dotWidth - this.dotWidthVariance),\n          this.dotWidth + this.dotWidthVariance);\n      }\n      else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n\n\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\n  getPatternSrc: function() {\n\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.util.createCanvasElement(),\n        patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n\n    return patternCanvas;\n  },\n\n  getPatternSrcFunction: function() {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   */\n  getPattern: function() {\n    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   */\n  _setBrushStyles: function() {\n    this.callSuper('_setBrushStyles');\n    this.canvas.contextTop.strokeStyle = this.getPattern();\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function(pathData) {\n    var path = this.callSuper('createPath', pathData),\n        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y\n    });\n    return path;\n  }\n});\n\n\n(function() {\n\n  var getPointer = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      radiansToDegrees = fabric.util.radiansToDegrees,\n      atan2 = Math.atan2,\n      abs = Math.abs,\n      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\n      STROKE_OFFSET = 0.5;\n\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:modified\n   * @fires object:rotated\n   * @fires object:scaled\n   * @fires object:moved\n   * @fires object:skewed\n   * @fires object:rotating\n   * @fires object:scaling\n   * @fires object:moving\n   * @fires object:skewing\n   * @fires object:selected this event is deprecated. use selection:created\n   *\n   * @fires before:transform\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:updated\n   * @fires selection:created\n   *\n   * @fires path:created\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:down:before\n   * @fires mouse:move:before\n   * @fires mouse:up:before\n   * @fires mouse:over\n   * @fires mouse:out\n   * @fires mouse:dblclick\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   *\n   */\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n      this._initStatic(el, options);\n      this._initInteractive();\n      this._createCacheCanvas();\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * @type Boolean\n     * @default\n     */\n    uniScaleTransform:      false,\n\n    /**\n     * Indicates which key enable unproportional scaling\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    uniScaleKey:           'shiftKey',\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:        false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:       false,\n\n    /**\n     * Indicates which key enable centered Transform\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    centeredKey:           'altKey',\n\n    /**\n     * Indicates which key enable alternate action on corner\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    altActionKey:           'shiftKey',\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive:            true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection:              true,\n\n    /**\n     * Indicates which key or keys enable multiple click selection\n     * Pass value as a string or array of strings\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or empty or containing any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.2\n     * @type String|Array\n     * @default\n     */\n    selectionKey:           'shiftKey',\n\n    /**\n     * Indicates which key enable alternative selection\n     * in case of target overlapping with active object\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * For a series of reason that come from the general expectations on how\n     * things should work, this feature works only for preserveObjectStacking true.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.5\n     * @type null|String\n     * @default\n     */\n    altSelectionKey:           null,\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray:     [],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth:     1,\n\n    /**\n     * Select only shapes that are fully contained in the dragged selection rectangle.\n     * @type Boolean\n     * @default\n     */\n    selectionFullyContained: false,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:            'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:             'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor:          'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor:      'crosshair',\n\n    /**\n     * Cursor value used for rotation point\n     * @type String\n     * @default\n     */\n    rotationCursor:         'crosshair',\n\n    /**\n     * Cursor value used for disabled elements ( corners with disabled action )\n     * @type String\n     * @since 2.0.0\n     * @default\n     */\n    notAllowedCursor:         'not-allowed',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass:         'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:     false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance:    0,\n\n    /**\n     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind:         false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode:          false,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected.\n     * When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * Indicates the angle that an object will lock to while rotating.\n     * @type Number\n     * @since 1.6.7\n     * @default\n     */\n    snapAngle: 0,\n\n    /**\n     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n     * When `null`, the snapThreshold will default to the snapAngle.\n     * @type null|Number\n     * @since 1.6.7\n     * @default\n     */\n    snapThreshold: null,\n\n    /**\n     * Indicates if the right click on canvas can output the context menu or not\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    stopContextMenu: false,\n\n    /**\n     * Indicates if the canvas can fire right click events\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    fireRightClick: false,\n\n    /**\n     * Indicates if the canvas can fire middle click events\n     * @type Boolean\n     * @since 1.7.8\n     * @default\n     */\n    fireMiddleClick: false,\n\n    /**\n     * Keep track of the subTargets for Mouse Events\n     * @type fabric.Object[]\n     */\n    targets: [],\n\n    /**\n     * Keep track of the hovered target\n     * @type fabric.Object\n     * @private\n     */\n    _hoveredTarget: null,\n\n    /**\n     * hold the list of nested targets hovered\n     * @type fabric.Object[]\n     * @private\n     */\n    _hoveredTargets: [],\n\n    /**\n     * @private\n     */\n    _initInteractive: function() {\n      this._currentTransform = null;\n      this._groupSelector = null;\n      this._initWrapperElement();\n      this._createUpperCanvas();\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\n      this.calcOffset();\n    },\n\n    /**\n     * Divides objects in two groups, one to render immediately\n     * and one to render as activeGroup.\n     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n     */\n    _chooseObjectsToRender: function() {\n      var activeObjects = this.getActiveObjects(),\n          object, objsToRender, activeGroupObjects;\n\n      if (activeObjects.length > 0 && !this.preserveObjectStacking) {\n        objsToRender = [];\n        activeGroupObjects = [];\n        for (var i = 0, length = this._objects.length; i < length; i++) {\n          object = this._objects[i];\n          if (activeObjects.indexOf(object) === -1 ) {\n            objsToRender.push(object);\n          }\n          else {\n            activeGroupObjects.push(object);\n          }\n        }\n        if (activeObjects.length > 1) {\n          this._activeObject._objects = activeGroupObjects;\n        }\n        objsToRender.push.apply(objsToRender, activeGroupObjects);\n      }\n      else {\n        objsToRender = this._objects;\n      }\n      return objsToRender;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n        this.contextTopDirty = false;\n      }\n      if (this.hasLostContext) {\n        this.renderTopLayer(this.contextTop);\n      }\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n      return this;\n    },\n\n    renderTopLayer: function(ctx) {\n      ctx.save();\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._render();\n        this.contextTopDirty = true;\n      }\n      // we render the top context - last object\n      if (this.selection && this._groupSelector) {\n        this._drawSelection(ctx);\n        this.contextTopDirty = true;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function () {\n      var ctx = this.contextTop;\n      this.clearContext(ctx);\n      this.renderTopLayer(ctx);\n      this.fire('after:render');\n      return this;\n    },\n\n    /**\n     * Resets the current transform to its original values and chooses the type of resizing based on the event\n     * @private\n     */\n    _resetCurrentTransform: function() {\n      var t = this._currentTransform;\n\n      t.target.set({\n        scaleX: t.original.scaleX,\n        scaleY: t.original.scaleY,\n        skewX: t.original.skewX,\n        skewY: t.original.skewY,\n        left: t.original.left,\n        top: t.original.top\n      });\n\n      if (this._shouldCenterTransform(t.target)) {\n        if (t.originX !== 'center') {\n          if (t.originX === 'right') {\n            t.mouseXSign = -1;\n          }\n          else {\n            t.mouseXSign = 1;\n          }\n        }\n        if (t.originY !== 'center') {\n          if (t.originY === 'bottom') {\n            t.mouseYSign = -1;\n          }\n          else {\n            t.mouseYSign = 1;\n          }\n        }\n\n        t.originX = 'center';\n        t.originY = 'center';\n      }\n      else {\n        t.originX = t.original.originX;\n        t.originY = t.original.originY;\n      }\n    },\n\n    /**\n     * Checks if point is contained within an area of given object\n     * @param {Event} e Event object\n     * @param {fabric.Object} target Object to test against\n     * @param {Object} [point] x,y object of point coordinates we want to check.\n     * @return {Boolean} true if point is contained within an area of given object\n     */\n    containsPoint: function (e, target, point) {\n      var ignoreZoom = true,\n          pointer = point || this.getPointer(e, ignoreZoom),\n          xy;\n\n      if (target.group && target.group === this._activeObject && target.group.type === 'activeSelection') {\n        xy = this._normalizePointer(target.group, pointer);\n      }\n      else {\n        xy = { x: pointer.x, y: pointer.y };\n      }\n      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function (object, pointer) {\n      var m = object.calcTransformMatrix(),\n          invertedM = fabric.util.invertTransform(m),\n          vptPointer = this.restorePointerVpt(pointer);\n      return fabric.util.transformPoint(vptPointer, invertedM);\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function (target, x, y) {\n      // in case the target is the activeObject, we cannot execute this optimization\n      // because we need to draw controls too.\n      if (target.shouldCache() && target._cacheCanvas && target !== this._activeObject) {\n        var normalizedPointer = this._normalizePointer(target, {x: x, y: y}),\n            targetRelativeX = Math.max(target.cacheTranslationX + (normalizedPointer.x * target.zoomX), 0),\n            targetRelativeY = Math.max(target.cacheTranslationY + (normalizedPointer.y * target.zoomY), 0);\n\n        var isTransparent = fabric.util.isTransparent(\n          target._cacheContext, Math.round(targetRelativeX), Math.round(targetRelativeY), this.targetFindTolerance);\n\n        return isTransparent;\n      }\n\n      var ctx = this.contextCache,\n          originalColor = target.selectionBackgroundColor, v = this.viewportTransform;\n\n      target.selectionBackgroundColor = '';\n\n      this.clearContext(ctx);\n\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      target.render(ctx);\n      ctx.restore();\n\n      target === this._activeObject && target._renderControls(ctx, {\n        hasBorders: false,\n        transparentCorners: false\n      }, {\n        hasBorders: false,\n      });\n\n      target.selectionBackgroundColor = originalColor;\n\n      var isTransparent = fabric.util.isTransparent(\n        ctx, x, y, this.targetFindTolerance);\n\n      return isTransparent;\n    },\n\n    /**\n     * takes an event and determins if selection key has been pressed\n     * @private\n     * @param {Event} e Event object\n     */\n    _isSelectionKeyPressed: function(e) {\n      var selectionKeyPressed = false;\n\n      if (Object.prototype.toString.call(this.selectionKey) === '[object Array]') {\n        selectionKeyPressed = !!this.selectionKey.find(function(key) { return e[key] === true; });\n      }\n      else {\n        selectionKeyPressed = e[this.selectionKey];\n      }\n\n      return selectionKeyPressed;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function (e, target) {\n      var activeObjects = this.getActiveObjects(),\n          activeObject = this._activeObject;\n\n      return (\n        !target\n        ||\n        (target &&\n          activeObject &&\n          activeObjects.length > 1 &&\n          activeObjects.indexOf(target) === -1 &&\n          activeObject !== target &&\n          !this._isSelectionKeyPressed(e))\n        ||\n        (target && !target.evented)\n        ||\n        (target &&\n          !target.selectable &&\n          activeObject &&\n          activeObject !== target)\n      );\n    },\n\n    /**\n     * centeredScaling from object can't override centeredScaling from canvas.\n     * this should be fixed, since object setting should take precedence over canvas.\n     * @private\n     * @param {fabric.Object} target\n     */\n    _shouldCenterTransform: function (target) {\n      if (!target) {\n        return;\n      }\n\n      var t = this._currentTransform,\n          centerTransform;\n\n      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      }\n      else if (t.action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !t.altKey : t.altKey;\n    },\n\n    /**\n     * @private\n     */\n    _getOriginFromCorner: function(target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      }\n      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      }\n      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n\n      return origin;\n    },\n\n    /**\n     * @private\n     * @param {Boolean} alreadySelected true if target is already selected\n     * @param {String} corner a string representing the corner ml, mr, tl ...\n     * @param {Event} e Event object\n     * @param {fabric.Object} [target] inserted back to help overriding. Unused\n     */\n    _getActionFromCorner: function(alreadySelected, corner, e /* target */) {\n      if (!corner || !alreadySelected) {\n        return 'drag';\n      }\n\n      switch (corner) {\n        case 'mtr':\n          return 'rotate';\n        case 'ml':\n        case 'mr':\n          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n        case 'mt':\n        case 'mb':\n          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n        default:\n          return 'scale';\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function (e, target, alreadySelected) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e),\n          corner = target._findTargetCorner(this.getPointer(e, true)),\n          action = this._getActionFromCorner(alreadySelected, corner, e, target),\n          origin = this._getOriginFromCorner(target, corner);\n\n      this._currentTransform = {\n        target: target,\n        action: action,\n        corner: corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        // used by transation\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        // unsure they are usefull anymore.\n        // left: target.left,\n        // top: target.top,\n        theta: degreesToRadians(target.angle),\n        // end of unsure\n        width: target.width * target.scaleX,\n        mouseXSign: 1,\n        mouseYSign: 1,\n        shiftKey: e.shiftKey,\n        altKey: e[this.centeredKey],\n        original: fabric.util.saveObjectTransform(target),\n      };\n\n      this._currentTransform.original.originX = origin.x;\n      this._currentTransform.original.originY = origin.y;\n\n      this._resetCurrentTransform();\n      this._beforeTransform(e);\n    },\n\n    /**\n     * Translates object by \"setting\" its left/top\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the translation occurred\n     */\n    _translateObject: function (x, y) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          newLeft = x - transform.offsetX,\n          newTop = y - transform.offsetY,\n          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n          moveY = !target.get('lockMovementY') && target.top !== newTop;\n\n      moveX && target.set('left', newLeft);\n      moveY && target.set('top', newTop);\n      return moveX || moveY;\n    },\n\n    /**\n     * Check if we are increasing a positive skew or lower it,\n     * checking mouse direction and pressed corner.\n     * @private\n     */\n    _changeSkewTransformOrigin: function(mouseMove, t, by) {\n      var property = 'originX', origins = { 0: 'center' },\n          skew = t.target.skewX, originA = 'left', originB = 'right',\n          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n          flipSign = 1;\n\n      mouseMove = mouseMove > 0 ? 1 : -1;\n      if (by === 'y') {\n        skew = t.target.skewY;\n        originA = 'top';\n        originB = 'bottom';\n        property = 'originY';\n      }\n      origins[-1] = originA;\n      origins[1] = originB;\n\n      t.target.flipX && (flipSign *= -1);\n      t.target.flipY && (flipSign *= -1);\n\n      if (skew === 0) {\n        t.skewSign = -corner * mouseMove * flipSign;\n        t[property] = origins[-mouseMove];\n      }\n      else {\n        skew = skew > 0 ? 1 : -1;\n        t.skewSign = skew;\n        t[property] = origins[skew * corner * flipSign];\n      }\n    },\n\n    /**\n     * Skew object by mouse events\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y'\n     * @return {Boolean} true if the skewing occurred\n     */\n    _skewObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target, skewed = false,\n          lockSkewingX = target.get('lockSkewingX'),\n          lockSkewingY = target.get('lockSkewingY');\n\n      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\n        return false;\n      }\n\n      // Get the constraint point\n      var center = target.getCenterPoint(),\n          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n\n      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n      // Actually skew the object\n      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n      t.lastX = x;\n      t.lastY = y;\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return skewed;\n    },\n\n    /**\n     * Set object skew\n     * @private\n     * @return {Boolean} true if the skewing occurred\n     */\n    _setObjectSkew: function(localMouse, transform, by, _dim) {\n      var target = transform.target, newValue, skewed = false,\n          skewSign = transform.skewSign, newDim, dimNoSkew,\n          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n\n      if (by === 'x') {\n        otherBy = 'y';\n        _otherBy = 'Y';\n        _by = 'X';\n        skewX = 0;\n        skewY = target.skewY;\n      }\n      else {\n        otherBy = 'x';\n        _otherBy = 'X';\n        _by = 'Y';\n        skewX = target.skewX;\n        skewY = 0;\n      }\n\n      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n      if (newDimMouse <= 2) {\n        newValue = 0;\n      }\n      else {\n        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\n                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n        newValue = fabric.util.radiansToDegrees(newValue);\n      }\n      skewed = target['skew' + _by] !== newValue;\n      target.set('skew' + _by, newValue);\n      if (target['skew' + _otherBy] !== 0) {\n        newDim = target._getTransformedDimensions();\n        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\n        target.set('scale' + _otherBy, newValue);\n      }\n      return skewed;\n    },\n\n    /**\n     * Scales object by invoking its scaleX/scaleY methods\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n     *                    When not provided, an object is scaled by both dimensions equally\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          lockScalingX = target.lockScalingX,\n          lockScalingY = target.lockScalingY,\n          lockScalingFlip = target.lockScalingFlip;\n\n      if (lockScalingX && lockScalingY) {\n        return false;\n      }\n\n      // Get the constraint point\n      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n          dim = target._getTransformedDimensions(), scaled = false;\n\n      this._setLocalMouse(localMouse, t);\n\n      // Actually scale the object\n      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\n          scaleX = localMouse.x * target.scaleX / _dim.x,\n          scaleY = localMouse.y * target.scaleY / _dim.y,\n          changeX = target.scaleX !== scaleX,\n          changeY = target.scaleY !== scaleY;\n\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n      if (fabric.Textbox && by === 'x' && target instanceof fabric.Textbox) {\n        var w = target.width * (localMouse.x / _dim.x);\n        if (w >= target.getMinWidth()) {\n          scaled = w !== target.width;\n          target.set('width', w);\n          return scaled;\n        }\n        return false;\n      }\n\n      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n        forbidScalingX = true;\n        localMouse.x = 0;\n      }\n\n      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n        forbidScalingY = true;\n        localMouse.y = 0;\n      }\n\n      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n        scaled = this._scaleObjectEqually(localMouse, target, transform, _dim);\n      }\n      else if (!by) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      else if (by === 'x' && !target.get('lockUniScaling')) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = changeX));\n      }\n      else if (by === 'y' && !target.get('lockUniScaling')) {\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = changeY));\n      }\n      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n\n      var dist = localMouse.y + localMouse.x,\n          lastDist = _dim.y * transform.original.scaleY / target.scaleY +\n                     _dim.x * transform.original.scaleX / target.scaleX,\n          scaled, signX = localMouse.x < 0 ? -1 : 1,\n          signY = localMouse.y < 0 ? -1 : 1, newScaleX, newScaleY;\n\n      // We use transform.scaleX/Y instead of target.scaleX/Y\n      // because the object may have a min scale and we'll loose the proportions\n      newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\n      newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\n      scaled = newScaleX !== target.scaleX || newScaleY !== target.scaleY;\n      target.set('scaleX', newScaleX);\n      target.set('scaleY', newScaleY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     */\n    _flipObject: function(transform, by) {\n      if (transform.newScaleX < 0 && by !== 'y') {\n        if (transform.originX === 'left') {\n          transform.originX = 'right';\n        }\n        else if (transform.originX === 'right') {\n          transform.originX = 'left';\n        }\n      }\n\n      if (transform.newScaleY < 0 && by !== 'x') {\n        if (transform.originY === 'top') {\n          transform.originY = 'bottom';\n        }\n        else if (transform.originY === 'bottom') {\n          transform.originY = 'top';\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setLocalMouse: function(localMouse, t) {\n      var target = t.target, zoom = this.getZoom(),\n          padding = target.padding / zoom;\n\n      if (t.originX === 'right') {\n        localMouse.x *= -1;\n      }\n      else if (t.originX === 'center') {\n        localMouse.x *= t.mouseXSign * 2;\n        if (localMouse.x < 0) {\n          t.mouseXSign = -t.mouseXSign;\n        }\n      }\n\n      if (t.originY === 'bottom') {\n        localMouse.y *= -1;\n      }\n      else if (t.originY === 'center') {\n        localMouse.y *= t.mouseYSign * 2;\n        if (localMouse.y < 0) {\n          t.mouseYSign = -t.mouseYSign;\n        }\n      }\n\n      // adjust the mouse coordinates when dealing with padding\n      if (abs(localMouse.x) > padding) {\n        if (localMouse.x < 0) {\n          localMouse.x += padding;\n        }\n        else {\n          localMouse.x -= padding;\n        }\n      }\n      else { // mouse is within the padding, set to 0\n        localMouse.x = 0;\n      }\n\n      if (abs(localMouse.y) > padding) {\n        if (localMouse.y < 0) {\n          localMouse.y += padding;\n        }\n        else {\n          localMouse.y -= padding;\n        }\n      }\n      else {\n        localMouse.y = 0;\n      }\n    },\n\n    /**\n     * Rotates object by invoking its rotate method\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the rotation occurred\n     */\n    _rotateObject: function (x, y) {\n\n      var t = this._currentTransform,\n          target = t.target, constraintPosition,\n          constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY);\n\n      if (target.lockRotation) {\n        return false;\n      }\n\n      var lastAngle = atan2(t.ey - constraintPosition.y, t.ex - constraintPosition.x),\n          curAngle = atan2(y - constraintPosition.y, x - constraintPosition.x),\n          angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n          hasRotated = true;\n\n      if (target.snapAngle > 0) {\n        var snapAngle  = target.snapAngle,\n            snapThreshold  = target.snapThreshold || snapAngle,\n            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n          angle = leftAngleLocked;\n        }\n        else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n          angle = rightAngleLocked;\n        }\n      }\n\n      // normalize angle to positive value\n      if (angle < 0) {\n        angle = 360 + angle;\n      }\n      angle %= 360;\n\n      if (target.angle === angle) {\n        hasRotated = false;\n      }\n      else {\n        // rotation only happen here\n        target.angle = angle;\n        // Make sure the constraints apply\n        target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      }\n\n      return hasRotated;\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function (value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n     */\n    _drawSelection: function (ctx) {\n      var groupSelector = this._groupSelector,\n          left = groupSelector.left,\n          top = groupSelector.top,\n          aleft = abs(left),\n          atop = abs(top);\n\n      if (this.selectionColor) {\n        ctx.fillStyle = this.selectionColor;\n\n        ctx.fillRect(\n          groupSelector.ex - ((left > 0) ? 0 : -left),\n          groupSelector.ey - ((top > 0) ? 0 : -top),\n          aleft,\n          atop\n        );\n      }\n\n      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n        return;\n      }\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor;\n\n      // selection border\n      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n\n        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\n\n        ctx.beginPath();\n\n        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\n        ctx.closePath();\n        ctx.stroke();\n      }\n      else {\n        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n        ctx.strokeRect(\n          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n          aleft,\n          atop\n        );\n      }\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * the skipGroup parameter is for internal use, is needed for shift+click action\n     * 11/09/2018 TODO: would be cool if findTarget could discern between being a full target\n     * or the outside part of the corner.\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n     * @return {fabric.Object} the target found\n     */\n    findTarget: function (e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      var ignoreZoom = true,\n          pointer = this.getPointer(e, ignoreZoom),\n          activeObject = this._activeObject,\n          aObjects = this.getActiveObjects(),\n          activeTarget, activeTargetSubs;\n\n      // first check current group (if one exists)\n      // active group does not check sub targets like normal groups.\n      // if active group just exits.\n      this.targets = [];\n\n      if (aObjects.length > 1 && !skipGroup && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        return activeObject;\n      }\n      // if we hit the corner of an activeObject, let's return that.\n      if (aObjects.length === 1 && activeObject._findTargetCorner(pointer)) {\n        return activeObject;\n      }\n      if (aObjects.length === 1 &&\n        activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        if (!this.preserveObjectStacking) {\n          return activeObject;\n        }\n        else {\n          activeTarget = activeObject;\n          activeTargetSubs = this.targets;\n          this.targets = [];\n        }\n      }\n      var target = this._searchPossibleTargets(this._objects, pointer);\n      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n        target = activeTarget;\n        this.targets = activeTargetSubs;\n      }\n      return target;\n    },\n\n    /**\n     * Checks point is inside the object.\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @param {fabric.Object} obj Object to test against\n     * @param {Object} [globalPointer] x,y object of point coordinates relative to canvas used to search per pixel target.\n     * @return {Boolean} true if point is contained within an area of given object\n     * @private\n     */\n    _checkTarget: function(pointer, obj, globalPointer) {\n      if (obj &&\n          obj.visible &&\n          obj.evented &&\n          this.containsPoint(null, obj, pointer)){\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, globalPointer.x, globalPointer.y);\n          if (!isTransparent) {\n            return true;\n          }\n        }\n        else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\n     * @param {Array} [objects] objects array to look into\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @return {fabric.Object} object that contains pointer\n     * @private\n     */\n    _searchPossibleTargets: function(objects, pointer) {\n      // Cache all targets where their bounding box contains point.\n      var target, i = objects.length, subTarget;\n      // Do not check for currently grouped objects, since we check the parent group itself.\n      // until we call this function specifically to search inside the activeGroup\n      while (i--) {\n        var objToCheck = objects[i];\n        var pointerToUse = objToCheck.group && objToCheck.group.type !== 'activeSelection' ?\n          this._normalizePointer(objToCheck.group, pointer) : pointer;\n        if (this._checkTarget(pointerToUse, objToCheck, pointer)) {\n          target = objects[i];\n          if (target.subTargetCheck && target instanceof fabric.Group) {\n            subTarget = this._searchPossibleTargets(target._objects, pointer);\n            subTarget && this.targets.push(subTarget);\n          }\n          break;\n        }\n      }\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates without the effect of the viewport\n     * @param {Object} pointer with \"x\" and \"y\" number values\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    restorePointerVpt: function(pointer) {\n      return fabric.util.transformPoint(\n        pointer,\n        fabric.util.invertTransform(this.viewportTransform)\n      );\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * Can return coordinates with or without viewportTransform.\n     * ignoreZoom false gives back coordinates that represent\n     * the point clicked on canvas element.\n     * ignoreZoom true gives back coordinates after being processed\n     * by the viewportTransform ( sort of coordinates of what is displayed\n     * on the canvas where you are clicking.\n     * ignoreZoom true = HTMLElement coordinates relative to top,left\n     * ignoreZoom false, default = fabric space coordinates, the same used for shape position\n     * To interact with your shapes top and left you want to use ignoreZoom true\n     * most of the time, while ignoreZoom false will give you coordinates\n     * compatible with the object.oCoords system.\n     * of the time.\n     * @param {Event} e\n     * @param {Boolean} ignoreZoom\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function (e, ignoreZoom) {\n      // return cached values if we are in the event processing chain\n      if (this._absolutePointer && !ignoreZoom) {\n        return this._absolutePointer;\n      }\n      if (this._pointer && ignoreZoom) {\n        return this._pointer;\n      }\n\n      var pointer = getPointer(e),\n          upperCanvasEl = this.upperCanvasEl,\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight ) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n        }\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs( bounds.right - bounds.left );\n        }\n      }\n\n      this.calcOffset();\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n      if (!ignoreZoom) {\n        pointer = this.restorePointerVpt(pointer);\n      }\n\n      var retinaScaling = this.getRetinaScaling();\n      if (retinaScaling !== 1) {\n        pointer.x /= retinaScaling;\n        pointer.y /= retinaScaling;\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = { width: 1, height: 1 };\n      }\n      else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function () {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, ''),\n          lowerCanvasEl = this.lowerCanvasEl, upperCanvasEl = this.upperCanvasEl;\n\n      // there is no need to create a new upperCanvas element if we have already one.\n      if (upperCanvasEl) {\n        upperCanvasEl.className = '';\n      }\n      else {\n        upperCanvasEl = this._createCanvasElement();\n        this.upperCanvasEl = upperCanvasEl;\n      }\n      fabric.util.addClass(upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\n      this.wrapperEl.appendChild(upperCanvasEl);\n\n      this._copyCanvasStyle(lowerCanvasEl, upperCanvasEl);\n      this._applyCanvasStyle(upperCanvasEl);\n      this.contextTop = upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function () {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.width + 'px',\n        height: this.height + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function (element) {\n      var width = this.width || element.width,\n          height = this.height || element.height;\n\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0,\n        'touch-action': this.allowTouchScrolling ? 'manipulation' : 'none',\n        '-ms-touch-action': this.allowTouchScrolling ? 'manipulation' : 'none'\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copy the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function (fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function() {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function () {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function () {\n      return this._activeObject;\n    },\n\n    /**\n     * Returns an array with the current selected objects\n     * @return {fabric.Object} active object\n     */\n    getActiveObjects: function () {\n      var active = this._activeObject;\n      if (active) {\n        if (active.type === 'activeSelection' && active._objects) {\n          return active._objects.slice(0);\n        }\n        else {\n          return [active];\n        }\n      }\n      return [];\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (obj === this._activeObject) {\n        this.fire('before:selection:cleared', { target: obj });\n        this._discardActiveObject();\n        this.fire('selection:cleared', { target: obj });\n        obj.fire('deselected');\n      }\n      if (obj === this._hoveredTarget){\n        this._hoveredTarget = null;\n        this._hoveredTargets = [];\n      }\n      this.callSuper('_onObjectRemoved', obj);\n    },\n\n    /**\n     * @private\n     * Compares the old activeObject with the current one and fires correct events\n     * @param {fabric.Object} obj old activeObject\n     */\n    _fireSelectionEvents: function(oldObjects, e) {\n      var somethingChanged = false, objects = this.getActiveObjects(),\n          added = [], removed = [], opt = { e: e };\n      oldObjects.forEach(function(oldObject) {\n        if (objects.indexOf(oldObject) === -1) {\n          somethingChanged = true;\n          oldObject.fire('deselected', opt);\n          removed.push(oldObject);\n        }\n      });\n      objects.forEach(function(object) {\n        if (oldObjects.indexOf(object) === -1) {\n          somethingChanged = true;\n          object.fire('selected', opt);\n          added.push(object);\n        }\n      });\n      if (oldObjects.length > 0 && objects.length > 0) {\n        opt.selected = added;\n        opt.deselected = removed;\n        // added for backward compatibility\n        opt.updated = added[0] || removed[0];\n        opt.target = this._activeObject;\n        somethingChanged && this.fire('selection:updated', opt);\n      }\n      else if (objects.length > 0) {\n        // deprecated event\n        if (objects.length === 1) {\n          opt.target = added[0];\n          this.fire('object:selected', opt);\n        }\n        opt.selected = added;\n        // added for backward compatibility\n        opt.target = this._activeObject;\n        this.fire('selection:created', opt);\n      }\n      else if (oldObjects.length > 0) {\n        opt.deselected = removed;\n        this.fire('selection:cleared', opt);\n      }\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function (object, e) {\n      var currentActives = this.getActiveObjects();\n      this._setActiveObject(object, e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} object to set as active\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {Boolean} true if the selection happened\n     */\n    _setActiveObject: function(object, e) {\n      if (this._activeObject === object) {\n        return false;\n      }\n      if (!this._discardActiveObject(e, object)) {\n        return false;\n      }\n      if (object.onSelect({ e: e })) {\n        return false;\n      }\n      this._activeObject = object;\n      return true;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveObject: function(e, object) {\n      var obj = this._activeObject;\n      if (obj) {\n        // onDeselect return TRUE to cancel selection;\n        if (obj.onDeselect({ e: e, object: object })) {\n          return false;\n        }\n        this._activeObject = null;\n      }\n      return true;\n    },\n\n    /**\n     * Discards currently active object and fire events. If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parameter and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @param {event} e\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function (e) {\n      var currentActives = this.getActiveObjects(), activeObject = this.getActiveObject();\n      if (currentActives.length) {\n        this.fire('before:selection:cleared', { target: activeObject, e: e });\n      }\n      this._discardActiveObject(e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      var wrapper = this.wrapperEl;\n      this.removeListeners();\n      wrapper.removeChild(this.upperCanvasEl);\n      wrapper.removeChild(this.lowerCanvasEl);\n      this.contextCache = null;\n      this.contextTop = null;\n      ['upperCanvasEl', 'cacheCanvasEl'].forEach((function(element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }).bind(this));\n      if (wrapper.parentNode) {\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n      }\n      delete this.wrapperEl;\n      fabric.StaticCanvas.prototype.dispose.call(this);\n      return this;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      // this.discardActiveGroup();\n      this.discardActiveObject();\n      this.clearContext(this.contextTop);\n      return this.callSuper('clear');\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function(ctx) {\n      var activeObject = this._activeObject;\n\n      if (activeObject) {\n        activeObject._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\n      //Undo the damage we did by changing all of its properties\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function(instance) {\n      if (instance.group && instance.group.type === 'activeSelection' && this._activeObject === instance.group) {\n        var layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top'];\n        //Copy all the positionally relevant properties across now\n        var originalValues = {};\n        layoutProps.forEach(function(prop) {\n          originalValues[prop] = instance[prop];\n        });\n        this._activeObject.realizeTransform(instance);\n        return originalValues;\n      }\n      else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function(instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      //If the object is in a selection group, simulate what would happen to that\n      //object when the group is deselected\n      var originalProperties = this._realizeGroupTransformOnObject(instance);\n      this.callSuper('_setSVGObject', markup, instance, reviver);\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n    },\n\n    setViewportTransform: function (vpt) {\n      if (this.renderOnAddRemove && this._activeObject && this._activeObject.isEditing) {\n        this._activeObject.clearContextTop();\n      }\n      fabric.StaticCanvas.prototype.setViewportTransform.call(this, vpt);\n    }\n  });\n\n  // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n})();\n\n\n(function() {\n\n  var cursorOffset = {\n        mt: 0, // n\n        tr: 1, // ne\n        mr: 2, // e\n        br: 3, // se\n        mb: 4, // s\n        bl: 5, // sw\n        ml: 6, // w\n        tl: 7 // nw\n      },\n      addListener = fabric.util.addListener,\n      removeListener = fabric.util.removeListener,\n      RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1,\n      addEventOptions = { passive: false };\n\n  function checkClick(e, value) {\n    return e.button && (e.button === value - 1);\n  }\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Map of cursor style values for each of the object controls\n     * @private\n     */\n    cursorMap: [\n      'n-resize',\n      'ne-resize',\n      'e-resize',\n      'se-resize',\n      's-resize',\n      'sw-resize',\n      'w-resize',\n      'nw-resize'\n    ],\n\n    /**\n     * Contains the id of the touch event that owns the fabric transform\n     * @type Number\n     * @private\n     */\n    mainTouchId: null,\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function () {\n      // in case we initialized the class twice. This should not happen normally\n      // but in some kind of applications where the canvas element may be changed\n      // this is a workaround to having double listeners.\n      this.removeListeners();\n      this._bindEvents();\n      this.addOrRemove(addListener, 'add');\n    },\n\n    /**\n     * return an event prefix pointer or mouse.\n     * @private\n     */\n    _getEventPrefix: function () {\n      return this.enablePointerEvents ? 'pointer' : 'mouse';\n    },\n\n    addOrRemove: function(functor, eventjsFunctor) {\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n      functor(fabric.window, 'resize', this._onResize);\n      functor(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\n      functor(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      functor(canvasElement, eventTypePrefix + 'out', this._onMouseOut);\n      functor(canvasElement, eventTypePrefix + 'enter', this._onMouseEnter);\n      functor(canvasElement, 'wheel', this._onMouseWheel);\n      functor(canvasElement, 'contextmenu', this._onContextMenu);\n      functor(canvasElement, 'dblclick', this._onDoubleClick);\n      functor(canvasElement, 'dragover', this._onDragOver);\n      functor(canvasElement, 'dragenter', this._onDragEnter);\n      functor(canvasElement, 'dragleave', this._onDragLeave);\n      functor(canvasElement, 'drop', this._onDrop);\n      if (!this.enablePointerEvents) {\n        functor(canvasElement, 'touchstart', this._onTouchStart, addEventOptions);\n      }\n      if (typeof eventjs !== 'undefined' && eventjsFunctor in eventjs) {\n        eventjs[eventjsFunctor](canvasElement, 'gesture', this._onGesture);\n        eventjs[eventjsFunctor](canvasElement, 'drag', this._onDrag);\n        eventjs[eventjsFunctor](canvasElement, 'orientation', this._onOrientationChange);\n        eventjs[eventjsFunctor](canvasElement, 'shake', this._onShake);\n        eventjs[eventjsFunctor](canvasElement, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function() {\n      this.addOrRemove(removeListener, 'remove');\n      // if you dispose on a mouseDown, before mouse up, you need to clean document to...\n      var eventTypePrefix = this._getEventPrefix();\n      removeListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\n      removeListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function() {\n      if (this.eventsBound) {\n        // for any reason we pass here twice we do not want to bind events twice.\n        return;\n      }\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onTouchStart = this._onTouchStart.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onTouchEnd = this._onTouchEnd.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n      this._onMouseOut = this._onMouseOut.bind(this);\n      this._onMouseEnter = this._onMouseEnter.bind(this);\n      this._onContextMenu = this._onContextMenu.bind(this);\n      this._onDoubleClick = this._onDoubleClick.bind(this);\n      this._onDragOver = this._onDragOver.bind(this);\n      this._onDragEnter = this._simpleEventHandler.bind(this, 'dragenter');\n      this._onDragLeave = this._simpleEventHandler.bind(this, 'dragleave');\n      this._onDrop = this._simpleEventHandler.bind(this, 'drop');\n      this.eventsBound = true;\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function(e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function(e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on wheel event\n     */\n    _onMouseWheel: function(e) {\n      this.__onMouseWheel(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseOut: function(e) {\n      var target = this._hoveredTarget;\n      this.fire('mouse:out', { target: target, e: e });\n      this._hoveredTarget = null;\n      target && target.fire('mouseout', { e: e });\n\n      var _this = this;\n      this._hoveredTargets.forEach(function(_target){\n        _this.fire('mouse:out', { target: target, e: e });\n        _target && target.fire('mouseout', { e: e });\n      });\n      this._hoveredTargets = [];\n\n      if (this._iTextInstances) {\n        this._iTextInstances.forEach(function(obj) {\n          if (obj.isEditing) {\n            obj.hiddenTextarea.focus();\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseenter\n     */\n    _onMouseEnter: function(e) {\n      // This find target and consequent 'mouse:over' is used to\n      // clear old instances on hovered target.\n      // calling findTarget has the side effect of killing target.__corner.\n      // as a short term fix we are not firing this if we are currently transforming.\n      // as a long term fix we need to separate the action of finding a target with the\n      // side effects we added to it.\n      if (!this.currentTransform && !this.findTarget(e)) {\n        this.fire('mouse:over', { target: null, e: e });\n        this._hoveredTarget = null;\n        this._hoveredTargets = [];\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function(e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function(e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function(e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * prevent default to allow drop event to be fired\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     */\n    _onDragOver: function(e) {\n      e.preventDefault();\n      var target = this._simpleEventHandler('dragover', e);\n      this._fireEnterLeaveEvents(target, e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onContextMenu: function (e) {\n      if (this.stopContextMenu) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onDoubleClick: function (e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'dblclick');\n      this._resetTransformEventData(e);\n    },\n\n    /**\n     * Return a the id of an event.\n     * returns either the pointerId or the identifier or 0 for the mouse event\n     * @private\n     * @param {Event} evt Event object\n     */\n    getPointerId: function(evt) {\n      var changedTouches = evt.changedTouches;\n\n      if (changedTouches) {\n        return changedTouches[0] && changedTouches[0].identifier;\n      }\n\n      if (this.enablePointerEvents) {\n        return evt.pointerId;\n      }\n\n      return -1;\n    },\n\n    /**\n     * Determines if an event has the id of the event that is considered main\n     * @private\n     * @param {evt} event Event object\n     */\n    _isMainEvent: function(evt) {\n      if (evt.isPrimary === true) {\n        return true;\n      }\n      if (evt.isPrimary === false) {\n        return false;\n      }\n      if (evt.type === 'touchend' && evt.touches.length === 0) {\n        return true;\n      }\n      if (evt.changedTouches) {\n        return evt.changedTouches[0].identifier === this.mainTouchId;\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onTouchStart: function(e) {\n      e.preventDefault();\n      if (this.mainTouchId === null) {\n        this.mainTouchId = this.getPointerId(e);\n      }\n      this.__onMouseDown(e);\n      this._resetTransformEventData();\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n      addListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\n      addListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n      // Unbind mousedown to prevent double triggers from touch devices\n      removeListener(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function (e) {\n      this.__onMouseDown(e);\n      this._resetTransformEventData();\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n      removeListener(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      addListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n      addListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onTouchEnd: function(e) {\n      if (e.touches.length > 0) {\n        // if there are still touches stop here\n        return;\n      }\n      this.__onMouseUp(e);\n      this._resetTransformEventData();\n      this.mainTouchId = null;\n      var eventTypePrefix = this._getEventPrefix();\n      removeListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n      var _this = this;\n      if (this._willAddMouseDown) {\n        clearTimeout(this._willAddMouseDown);\n      }\n      this._willAddMouseDown = setTimeout(function() {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        addListener(_this.upperCanvasEl, eventTypePrefix + 'down', _this._onMouseDown);\n        _this._willAddMouseDown = 0;\n      }, 400);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function (e) {\n      this.__onMouseUp(e);\n      this._resetTransformEventData();\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n      if (this._isMainEvent(e)) {\n        removeListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n        removeListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n        addListener(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function (e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function () {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     */\n    _shouldRender: function(target) {\n      var activeObject = this._activeObject;\n\n      if (\n        !!activeObject !== !!target ||\n        (activeObject && target && (activeObject !== target))\n      ) {\n        // this covers: switch of target, from target to no target, selection of target\n        // multiSelection with key and mouse\n        return true;\n      }\n      else if (activeObject && activeObject.isEditing) {\n        // if we mouse up/down over a editing textbox a cursor change,\n        // there is no need to re render\n        return false;\n      }\n      return false;\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function (e) {\n      var target, transform = this._currentTransform,\n          groupSelector = this._groupSelector, shouldRender = false,\n          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n      this._cacheTransformEventData(e);\n      target = this._target;\n      this._handleEvent(e, 'up:before');\n      // if right/middle click just fire events and return\n      // target undefined will make the _handleEvent search the target\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'up', RIGHT_CLICK, isClick);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'up', MIDDLE_CLICK, isClick);\n        }\n        this._resetTransformEventData();\n        return;\n      }\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n        return;\n      }\n\n      if (!this._isMainEvent(e)) {\n        return;\n      }\n      if (transform) {\n        this._finalizeCurrentTransform(e);\n        shouldRender = transform.actionPerformed;\n      }\n\n      if (!isClick) {\n        this._maybeGroupObjects(e);\n        shouldRender || (shouldRender = this._shouldRender(target));\n      }\n      if (target) {\n        target.isMoving = false;\n      }\n      this._setCursorFromEvent(e, target);\n      this._handleEvent(e, 'up', LEFT_CLICK, isClick);\n      this._groupSelector = null;\n      this._currentTransform = null;\n      // reset the target information about which corner is selected\n      target && (target.__corner = 0);\n      if (shouldRender) {\n        this.requestRenderAll();\n      }\n      else if (!isClick) {\n        this.renderTop();\n      }\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @return {Fabric.Object} target return the the target found, for internal reasons.\n     */\n    _simpleEventHandler: function(eventType, e) {\n      var target = this.findTarget(e),\n          targets = this.targets,\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n          };\n      this.fire(eventType, options);\n      target && target.fire(eventType, options);\n      if (!targets) {\n        return target;\n      }\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire(eventType, options);\n      }\n      return target;\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @param {fabric.Object} targetObj receiving event\n     * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\n     * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\n     */\n    _handleEvent: function(e, eventType, button, isClick) {\n      var target = this._target,\n          targets = this.targets || [],\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n            button: button || LEFT_CLICK,\n            isClick: isClick || false,\n            pointer: this._pointer,\n            absolutePointer: this._absolutePointer,\n            transform: this._currentTransform\n          };\n      this.fire('mouse:' + eventType, options);\n      target && target.fire('mouse' + eventType, options);\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire('mouse' + eventType, options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n     */\n    _finalizeCurrentTransform: function(e) {\n\n      var transform = this._currentTransform,\n          target = transform.target,\n          eventName,\n          options = {\n            e: e,\n            target: target,\n            transform: transform,\n          };\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n\n      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n        if (transform.actionPerformed) {\n          eventName = this._addEventOptions(options, transform);\n          this._fire(eventName, options);\n        }\n        this._fire('modified', options);\n      }\n    },\n\n    /**\n     * Mutate option object in order to add by property and give back the event name.\n     * @private\n     * @param {Object} options to mutate\n     * @param {Object} transform to inspect action from\n     */\n    _addEventOptions: function(options, transform) {\n      // we can probably add more details at low cost\n      // scale change, rotation changes, translation changes\n      var eventName, by;\n      switch (transform.action) {\n        case 'scaleX':\n          eventName = 'scaled';\n          by = 'x';\n          break;\n        case 'scaleY':\n          eventName = 'scaled';\n          by = 'y';\n          break;\n        case 'skewX':\n          eventName = 'skewed';\n          by = 'x';\n          break;\n        case 'skewY':\n          eventName = 'skewed';\n          by = 'y';\n          break;\n        case 'scale':\n          eventName = 'scaled';\n          by = 'equally';\n          break;\n        case 'rotate':\n          eventName = 'rotated';\n          break;\n        case 'drag':\n          eventName = 'moved';\n          break;\n      }\n      options.by = by;\n      return eventName;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = true;\n      if (this.getActiveObject()) {\n        this.discardActiveObject(e).requestRenderAll();\n      }\n      if (this.clipTo) {\n        fabric.util.clipContext(this, this.contextTop);\n      }\n      var pointer = this.getPointer(e);\n      this.freeDrawingBrush.onMouseDown(pointer, { e: e, pointer: pointer });\n      this._handleEvent(e, 'down');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function(e) {\n      if (this._isCurrentlyDrawing) {\n        var pointer = this.getPointer(e);\n        this.freeDrawingBrush.onMouseMove(pointer, { e: e, pointer: pointer });\n      }\n      this.setCursor(this.freeDrawingCursor);\n      this._handleEvent(e, 'move');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function(e) {\n      if (this.clipTo) {\n        this.contextTop.restore();\n      }\n      var pointer = this.getPointer(e);\n      this._isCurrentlyDrawing = this.freeDrawingBrush.onMouseUp({ e: e, pointer: pointer });\n      this._handleEvent(e, 'up');\n    },\n\n    /**\n     * Method that defines the actions when mouse is clicked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function (e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'down:before');\n      var target = this._target;\n      // if right click just fire events\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'down', RIGHT_CLICK);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'down', MIDDLE_CLICK);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n        return;\n      }\n\n      if (!this._isMainEvent(e)) {\n        return;\n      }\n\n      // ignore if some object is being transformed at this moment\n      if (this._currentTransform) {\n        return;\n      }\n\n      var pointer = this._pointer;\n      // save pointer for check in __onMouseUp event\n      this._previousPointer = pointer;\n      var shouldRender = this._shouldRender(target),\n          shouldGroup = this._shouldGroup(e, target);\n      if (this._shouldClearSelection(e, target)) {\n        this.discardActiveObject(e);\n      }\n      else if (shouldGroup) {\n        this._handleGrouping(e, target);\n        target = this._activeObject;\n      }\n\n      if (this.selection && (!target ||\n        (!target.selectable && !target.isEditing && target !== this._activeObject))) {\n        this._groupSelector = {\n          ex: pointer.x,\n          ey: pointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n\n      if (target) {\n        var alreadySelected = target === this._activeObject;\n        if (target.selectable) {\n          this.setActiveObject(target, e);\n        }\n        if (target === this._activeObject && (target.__corner || !shouldGroup)) {\n          this._setupCurrentTransform(e, target, alreadySelected);\n        }\n      }\n      this._handleEvent(e, 'down');\n      // we must renderAll so that we update the visuals\n      (shouldRender || shouldGroup) && this.requestRenderAll();\n    },\n\n    /**\n     * reset cache form common information needed during event processing\n     * @private\n     */\n    _resetTransformEventData: function() {\n      this._target = null;\n      this._pointer = null;\n      this._absolutePointer = null;\n    },\n\n    /**\n     * Cache common information needed during event processing\n     * @private\n     * @param {Event} e Event object fired on event\n     */\n    _cacheTransformEventData: function(e) {\n      // reset in order to avoid stale caching\n      this._resetTransformEventData();\n      this._pointer = this.getPointer(e, true);\n      this._absolutePointer = this.restorePointerVpt(this._pointer);\n      this._target = this._currentTransform ? this._currentTransform.target : this.findTarget(e) || null;\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function(e) {\n      var t = this._currentTransform;\n      this.stateful && t.target.saveState();\n      this.fire('before:transform', {\n        e: e,\n        transform: t,\n      });\n      // determine if it's a drag or rotate case\n      if (t.corner) {\n        this.onBeforeScaleRotate(t.target);\n      }\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will define whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function (e) {\n      this._handleEvent(e, 'move:before');\n      this._cacheTransformEventData(e);\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n        return;\n      }\n\n      if (!this._isMainEvent(e)) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector;\n\n      // We initially clicked in an empty area, so we draw a box for multiple selection\n      if (groupSelector) {\n        pointer = this._pointer;\n\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n\n        this.renderTop();\n      }\n      else if (!this._currentTransform) {\n        target = this.findTarget(e) || null;\n        this._setCursorFromEvent(e, target);\n        this._fireOverOutEvents(target, e);\n      }\n      else {\n        this._transformObject(e);\n      }\n      this._handleEvent(e, 'move');\n      this._resetTransformEventData();\n    },\n\n    /**\n     * Manage the mouseout, mouseover events for the fabric object on the canvas\n     * @param {Fabric.Object} target the target where the target from the mousemove event\n     * @param {Event} e Event object fired on mousemove\n     * @private\n     */\n    _fireOverOutEvents: function(target, e) {\n      var _hoveredTarget = this._hoveredTarget,\n          _hoveredTargets = this._hoveredTargets, targets = this.targets,\n          length = Math.max(_hoveredTargets.length, targets.length);\n\n      this.fireSyntheticInOutEvents(target, e, {\n        oldTarget: _hoveredTarget,\n        evtOut: 'mouseout',\n        canvasEvtOut: 'mouse:out',\n        evtIn: 'mouseover',\n        canvasEvtIn: 'mouse:over',\n      });\n      for (var i = 0; i < length; i++){\n        this.fireSyntheticInOutEvents(targets[i], e, {\n          oldTarget: _hoveredTargets[i],\n          evtOut: 'mouseout',\n          evtIn: 'mouseover',\n        });\n      }\n      this._hoveredTarget = target;\n      this._hoveredTargets = this.targets.concat();\n    },\n\n    /**\n     * Manage the dragEnter, dragLeave events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the onDrag event\n     * @param {Event} e Event object fired on ondrag\n     * @private\n     */\n    _fireEnterLeaveEvents: function(target, e) {\n      var _draggedoverTarget = this._draggedoverTarget,\n          _hoveredTargets = this._hoveredTargets, targets = this.targets,\n          length = Math.max(_hoveredTargets.length, targets.length);\n\n      this.fireSyntheticInOutEvents(target, e, {\n        oldTarget: _draggedoverTarget,\n        evtOut: 'dragleave',\n        evtIn: 'dragenter',\n      });\n      for (var i = 0; i < length; i++) {\n        this.fireSyntheticInOutEvents(targets[i], e, {\n          oldTarget: _hoveredTargets[i],\n          evtOut: 'dragleave',\n          evtIn: 'dragenter',\n        });\n      }\n      this._draggedoverTarget = target;\n    },\n\n    /**\n     * Manage the synthetic in/out events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the supported events\n     * @param {Event} e Event object fired\n     * @param {Object} config configuration for the function to work\n     * @param {String} config.targetName property on the canvas where the old target is stored\n     * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out\n     * @param {String} config.evtOut name of the event to fire for out\n     * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in\n     * @param {String} config.evtIn name of the event to fire for in\n     * @private\n     */\n    fireSyntheticInOutEvents: function(target, e, config) {\n      var inOpt, outOpt, oldTarget = config.oldTarget, outFires, inFires,\n          targetChanged = oldTarget !== target, canvasEvtIn = config.canvasEvtIn, canvasEvtOut = config.canvasEvtOut;\n      if (targetChanged) {\n        inOpt = { e: e, target: target, previousTarget: oldTarget };\n        outOpt = { e: e, target: oldTarget, nextTarget: target };\n      }\n      inFires = target && targetChanged;\n      outFires = oldTarget && targetChanged;\n      if (outFires) {\n        canvasEvtOut && this.fire(canvasEvtOut, outOpt);\n        oldTarget.fire(config.evtOut, outOpt);\n      }\n      if (inFires) {\n        canvasEvtIn && this.fire(canvasEvtIn, inOpt);\n        target.fire(config.evtIn, inOpt);\n      }\n    },\n\n    /**\n     * Method that defines actions when an Event Mouse Wheel\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseWheel: function(e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'wheel');\n      this._resetTransformEventData();\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function(e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n\n      transform.reset = false;\n      transform.target.isMoving = true;\n      transform.shiftKey = e.shiftKey;\n      transform.altKey = e[this.centeredKey];\n\n      this._beforeScaleTransform(e, transform);\n      this._performTransformAction(e, transform, pointer);\n\n      transform.actionPerformed && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function(e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          action = transform.action,\n          actionPerformed = false,\n          options = {\n            target: transform.target,\n            e: e,\n            transform: transform,\n            pointer: pointer\n          };\n\n      if (action === 'rotate') {\n        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', options);\n      }\n      else if (action === 'scale') {\n        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', options);\n      }\n      else if (action === 'scaleX') {\n        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', options);\n      }\n      else if (action === 'scaleY') {\n        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', options);\n      }\n      else if (action === 'skewX') {\n        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', options);\n      }\n      else if (action === 'skewY') {\n        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', options);\n      }\n      else {\n        actionPerformed = this._translateObject(x, y);\n        if (actionPerformed) {\n          this._fire('moving', options);\n          this.setCursor(options.target.moveCursor || this.moveCursor);\n        }\n      }\n      transform.actionPerformed = transform.actionPerformed || actionPerformed;\n    },\n\n    /**\n     * @private\n     */\n    _fire: function(eventName, options) {\n      this.fire('object:' + eventName, options);\n      options.target.fire(eventName, options);\n    },\n\n    /**\n     * @private\n     */\n    _beforeScaleTransform: function(e, transform) {\n      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n        var centerTransform = this._shouldCenterTransform(transform.target);\n\n        // Switch from a normal resize to center-based\n        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n           // Switch from center-based resize to normal one\n           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n        ) {\n          this._resetCurrentTransform();\n          transform.reset = true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {Object} transform current transform\n     * @param {Number} x mouse position x from origin\n     * @param {Number} y mouse position y from origin\n     * @return {Boolean} true if the scaling occurred\n     */\n    _onScale: function(e, transform, x, y) {\n      if (this._isUniscalePossible(e, transform.target)) {\n        transform.currentAction = 'scale';\n        return this._scaleObject(x, y);\n      }\n      else {\n        // Switch from a normal resize to proportional\n        if (!transform.reset && transform.currentAction === 'scale') {\n          this._resetCurrentTransform();\n        }\n\n        transform.currentAction = 'scaleEqually';\n        return this._scaleObject(x, y, 'equally');\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target current target\n     * @return {Boolean} true if unproportional scaling is possible\n     */\n    _isUniscalePossible: function(e, target) {\n      return (e[this.uniScaleKey] || this.uniScaleTransform) && !target.get('lockUniScaling');\n    },\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function (e, target) {\n      if (!target) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n      var hoverCursor = target.hoverCursor || this.hoverCursor,\n          activeSelection = this._activeObject && this._activeObject.type === 'activeSelection' ?\n            this._activeObject : null,\n          // only show proper corner when group selection is not active\n          corner = (!activeSelection || !activeSelection.contains(target))\n                    && target._findTargetCorner(this.getPointer(e, true));\n\n      if (!corner) {\n        if (target.subTargetCheck){\n          // hoverCursor should come from top-most subTarget,\n          // so we walk the array backwards\n          this.targets.concat().reverse().map(function(_target){\n            hoverCursor = _target.hoverCursor || hoverCursor;\n          });\n        }\n        this.setCursor(hoverCursor);\n      }\n      else {\n        this.setCursor(this.getCornerCursor(corner, target, e));\n      }\n    },\n\n    /**\n     * @private\n     */\n    getCornerCursor: function(corner, target, e) {\n      if (this.actionIsDisabled(corner, target, e)) {\n        return this.notAllowedCursor;\n      }\n      else if (corner in cursorOffset) {\n        return this._getRotatedCornerCursor(corner, target, e);\n      }\n      else if (corner === 'mtr' && target.hasRotatingPoint) {\n        return this.rotationCursor;\n      }\n      else {\n        return this.defaultCursor;\n      }\n    },\n\n    actionIsDisabled: function(corner, target, e) {\n      if (corner === 'mt' || corner === 'mb') {\n        return e[this.altActionKey] ? target.lockSkewingX : target.lockScalingY;\n      }\n      else if (corner === 'ml' || corner === 'mr') {\n        return e[this.altActionKey] ? target.lockSkewingY : target.lockScalingX;\n      }\n      else if (corner === 'mtr') {\n        return target.lockRotation;\n      }\n      else {\n        return this._isUniscalePossible(e, target) ?\n          target.lockScalingX && target.lockScalingY : target.lockScalingX || target.lockScalingY;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getRotatedCornerCursor: function(corner, target, e) {\n      var n = Math.round((target.angle % 360) / 45);\n\n      if (n < 0) {\n        n += 8; // full circle ahead\n      }\n      n += cursorOffset[corner];\n      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n        //if we are holding shift and we are on a mx corner...\n        n += 2;\n      }\n      // normalize n to be from 0 to 7\n      n %= 8;\n\n      return this.cursorMap[n];\n    }\n  });\n})();\n\n\n(function() {\n\n  var min = Math.min,\n      max = Math.max;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function(e, target) {\n      var activeObject = this._activeObject;\n      return activeObject && this._isSelectionKeyPressed(e) && target && target.selectable && this.selection &&\n            (activeObject !== target || activeObject.type === 'activeSelection') && !target.onSelect({ e: e });\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function (e, target) {\n      var activeObject = this._activeObject;\n      // avoid multi select when shift click on a corner\n      if (activeObject.__corner) {\n        return;\n      }\n      if (target === activeObject) {\n        // if it's a group, find target again, using activeGroup objects\n        target = this.findTarget(e, true);\n        // if even object is not found or we are on activeObjectCorner, bail out\n        if (!target || !target.selectable) {\n          return;\n        }\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        this._updateActiveSelection(target, e);\n      }\n      else {\n        this._createActiveSelection(target, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveSelection: function(target, e) {\n      var activeSelection = this._activeObject,\n          currentActiveObjects = activeSelection._objects.slice(0);\n      if (activeSelection.contains(target)) {\n        activeSelection.removeWithUpdate(target);\n        this._hoveredTarget = target;\n        this._hoveredTargets = this.targets.concat();\n        if (activeSelection.size() === 1) {\n          // activate last remaining object\n          this._setActiveObject(activeSelection.item(0), e);\n        }\n      }\n      else {\n        activeSelection.addWithUpdate(target);\n        this._hoveredTarget = activeSelection;\n        this._hoveredTargets = this.targets.concat();\n      }\n      this._fireSelectionEvents(currentActiveObjects, e);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveSelection: function(target, e) {\n      var currentActives = this.getActiveObjects(), group = this._createGroup(target);\n      this._hoveredTarget = group;\n      // ISSUE 4115: should we consider subTargets here?\n      // this._hoveredTargets = [];\n      // this._hoveredTargets = this.targets.concat();\n      this._setActiveObject(group, e);\n      this._fireSelectionEvents(currentActives, e);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function(target) {\n      var objects = this._objects,\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower\n            ? [this._activeObject, target]\n            : [target, this._activeObject];\n      this._activeObject.isEditing && this._activeObject.exitEditing();\n      return new fabric.ActiveSelection(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function (e) {\n\n      var group = this._collectObjects(e),\n          aGroup;\n\n      // do not create group for 1 element only\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      }\n      else if (group.length > 1) {\n        aGroup = new fabric.ActiveSelection(group.reverse(), {\n          canvas: this\n        });\n        this.setActiveObject(aGroup, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function(e) {\n      var group = [],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          allowIntersect = !this.selectionFullyContained,\n          isClick = x1 === x2 && y1 === y2;\n      // we iterate reverse order to collect top first in case of click.\n      for (var i = this._objects.length; i--; ) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n          continue;\n        }\n\n        if ((allowIntersect && currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2)) ||\n            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n            (allowIntersect && currentObject.containsPoint(selectionX1Y1)) ||\n            (allowIntersect && currentObject.containsPoint(selectionX2Y2))\n        ) {\n          group.push(currentObject);\n          // only add one object if it's a click\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      if (group.length > 1) {\n        group = group.filter(function(object) {\n          return !object.onSelect({ e: e });\n        });\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function(e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n      this.setCursor(this.defaultCursor);\n      // clear selection and current transformation\n      this._groupSelector = null;\n    }\n  });\n\n})();\n\n\n(function () {\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n     * @param {Object} [options] Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'jpeg',\n     *   quality: 0.8\n     * });\n     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   left: 100,\n     *   top: 100,\n     *   width: 200,\n     *   height: 200\n     * });\n     * @example <caption>Generate double scaled png dataURL</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   multiplier: 2\n     * });\n     */\n    toDataURL: function (options) {\n      options || (options = { });\n\n      var format = options.format || 'png',\n          quality = options.quality || 1,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? this.getRetinaScaling() : 1),\n          canvasEl = this.toCanvasElement(multiplier, options);\n      return fabric.util.toDataURL(canvasEl, format, quality);\n    },\n\n    /**\n     * Create a new HTMLCanvas element painted with the current canvas content.\n     * No need to resize the actual one or repaint it.\n     * Will transfer object ownership to a new canvas, paint it, and set everything back.\n     * This is an intermediary step used to get to a dataUrl but also it is useful to\n     * create quick image copies of a canvas without passing for the dataUrl string\n     * @param {Number} [multiplier] a zoom factor.\n     * @param {Object} [cropping] Cropping informations\n     * @param {Number} [cropping.left] Cropping left offset.\n     * @param {Number} [cropping.top] Cropping top offset.\n     * @param {Number} [cropping.width] Cropping width.\n     * @param {Number} [cropping.height] Cropping height.\n     */\n    toCanvasElement: function(multiplier, cropping) {\n      multiplier = multiplier || 1;\n      cropping = cropping || { };\n      var scaledWidth = (cropping.width || this.width) * multiplier,\n          scaledHeight = (cropping.height || this.height) * multiplier,\n          zoom = this.getZoom(),\n          originalWidth = this.width,\n          originalHeight = this.height,\n          newZoom = zoom * multiplier,\n          vp = this.viewportTransform,\n          translateX = (vp[4] - (cropping.left || 0)) * multiplier,\n          translateY = (vp[5] - (cropping.top || 0)) * multiplier,\n          originalInteractive = this.interactive,\n          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n          originalRetina = this.enableRetinaScaling,\n          canvasEl = fabric.util.createCanvasElement(),\n          originalContextTop = this.contextTop;\n      canvasEl.width = scaledWidth;\n      canvasEl.height = scaledHeight;\n      this.contextTop = null;\n      this.enableRetinaScaling = false;\n      this.interactive = false;\n      this.viewportTransform = newVp;\n      this.width = scaledWidth;\n      this.height = scaledHeight;\n      this.calcViewportBoundaries();\n      this.renderCanvas(canvasEl.getContext('2d'), this._objects);\n      this.viewportTransform = vp;\n      this.width = originalWidth;\n      this.height = originalHeight;\n      this.calcViewportBoundaries();\n      this.interactive = originalInteractive;\n      this.enableRetinaScaling = originalRetina;\n      this.contextTop = originalContextTop;\n      return canvasEl;\n    },\n  });\n\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Populates canvas with data from the specified dataless JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n   * @deprecated since 1.2.2\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   */\n  loadFromDatalessJSON: function (json, callback, reviver) {\n    return this.loadFromJSON(json, callback, reviver);\n  },\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function (json, callback, reviver) {\n    if (!json) {\n      return;\n    }\n\n    // serialize if it wasn't already\n    var serialized = (typeof json === 'string')\n      ? JSON.parse(json)\n      : fabric.util.object.clone(json);\n\n    var _this = this,\n        clipPath = serialized.clipPath,\n        renderOnAddRemove = this.renderOnAddRemove;\n\n    this.renderOnAddRemove = false;\n\n    delete serialized.clipPath;\n\n    this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\n      _this.clear();\n      _this._setBgOverlay(serialized, function () {\n        if (clipPath) {\n          _this._enlivenObjects([clipPath], function (enlivenedCanvasClip) {\n            _this.clipPath = enlivenedCanvasClip[0];\n            _this.__setupCanvas.call(_this, serialized, enlivenedObjects, renderOnAddRemove, callback);\n          });\n        }\n        else {\n          _this.__setupCanvas.call(_this, serialized, enlivenedObjects, renderOnAddRemove, callback);\n        }\n      });\n    }, reviver);\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Array} restored canvas objects\n   * @param {Function} cached renderOnAddRemove callback\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  __setupCanvas: function(serialized, enlivenedObjects, renderOnAddRemove, callback) {\n    var _this = this;\n    enlivenedObjects.forEach(function(obj, index) {\n      // we splice the array just in case some custom classes restored from JSON\n      // will add more object to canvas at canvas init.\n      _this.insertAt(obj, index);\n    });\n    this.renderOnAddRemove = renderOnAddRemove;\n    // remove parts i cannot set as options\n    delete serialized.objects;\n    delete serialized.backgroundImage;\n    delete serialized.overlayImage;\n    delete serialized.background;\n    delete serialized.overlay;\n    // this._initOptions does too many things to just\n    // call it. Normally loading an Object from JSON\n    // create the Object instance. Here the Canvas is\n    // already an instance and we are just loading things over it\n    this._setOptions(serialized);\n    this.renderAll();\n    callback && callback();\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function(serialized, callback) {\n    var loaded = {\n      backgroundColor: false,\n      overlayColor: false,\n      backgroundImage: false,\n      overlayImage: false\n    };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function () {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function(property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      callback && callback();\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.util.enlivenObjects([value], function(enlivedObject){\n        _this[property] = enlivedObject[0];\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n    else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function (objects, callback, reviver) {\n    if (!objects || objects.length === 0) {\n      callback && callback([]);\n      return;\n    }\n\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n      callback && callback(enlivenedObjects);\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function (format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function (callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function(clone) {\n      clone.loadFromJSON(data, function() {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function(callback) {\n    var el = fabric.util.createCanvasElement();\n\n    el.width = this.width;\n    el.height = this.height;\n\n    var clone = new fabric.Canvas(el);\n    clone.clipTo = this.clipTo;\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function() {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    }\n    else {\n      callback && callback(clone);\n    }\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      objectCaching = !fabric.isLikelyNode,\n      ALIASING_LIMIT = 2;\n\n  if (fabric.Object) {\n    return;\n  }\n\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires deselected\n   * @fires modified\n   * @fires modified\n   * @fires moved\n   * @fires scaled\n   * @fires rotated\n   * @fires skewed\n   *\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   * @fires skewing\n   *\n   * @fires mousedown\n   * @fires mouseup\n   * @fires mouseover\n   * @fires mouseout\n   * @fires mousewheel\n   * @fires mousedblclick\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   */\n  fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type:                     'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX:                  'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY:                  'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top:                      0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left:                     0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width:                    0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height:                   0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX:                   1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY:                   1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX:                    false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY:                    false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity:                  1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle:                    0,\n\n    /**\n     * Angle of skew on x axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewX:                    0,\n\n    /**\n     * Angle of skew on y axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewY:                    0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize:               13,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners:       true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:              null,\n\n    /**\n     * Default cursor value used when moving this object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:               null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding:                  0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor:              'rgba(102,153,255,0.75)',\n\n    /**\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    borderDashArray:          null,\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor:              'rgba(102,153,255,0.5)',\n\n    /**\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    cornerStrokeColor:        null,\n\n    /**\n     * Specify style of control, 'rect' or 'circle'\n     * @since 1.6.2\n     * @type String\n     */\n    cornerStyle:          'rect',\n\n    /**\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    cornerDashArray:          null,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:          false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:         true,\n\n    /**\n     * Color of object's fill\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    fill:                     'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule:                 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object.\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    backgroundColor:          '',\n\n    /**\n     * Selection Background color of an object. colored layer behind the object when it is active.\n     * does not mix good with globalCompositeOperation methods.\n     * @type String\n     * @default\n     */\n    selectionBackgroundColor:          '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    stroke:                   null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth:              1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray:          null,\n\n    /**\n     * Line offset of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeDashOffset: 0,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap:            'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin:           'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit:         4,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:                   null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving:  0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * @type Number\n     * @default\n     */\n    borderScaleFactor:        1,\n\n    /**\n     * Transform matrix (similar to SVG's transform matrix)\n     * This property has been depreacted. Since caching and and qrDecompose this\n     * property can be handled with the standard top,left,scaleX,scaleY,angle and skewX.\n     * A documentation example on how to parse and merge a transformMatrix will be provided before\n     * completely removing it in fabric 4.0\n     * If you are starting a project now, DO NOT use it.\n     * @deprecated since 3.2.0\n     * @type Array\n     */\n    transformMatrix:          null,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit:            0,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable:               true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented:                  true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible:                  true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls:              true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders:               true,\n\n    /**\n     * When set to `false`, object's controlling rotating point will not be visible or selectable\n     * @type Boolean\n     * @default\n     */\n    hasRotatingPoint:         true,\n\n    /**\n     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n     * @type Number\n     * @default\n     */\n    rotatingPointOffset:      40,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:       false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues:     true,\n\n    /**\n     * Function that determines clipping of an object (context is passed as a first argument).\n     * If you are using code minification, ctx argument can be minified/manglied you should use\n     * as a workaround `var ctx = arguments[0];` in the function;\n     * Note that context origin is at the object's center point (not left/top corner)\n     * @deprecated since 2.0.0\n     * @type Function\n     */\n    clipTo:                   null,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX:            false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY:            false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation:             false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX:             false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY:             false,\n\n    /**\n     * When `true`, object non-uniform scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockUniScaling:           false,\n\n    /**\n     * When `true`, object horizontal skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingX:             false,\n\n    /**\n     * When `true`, object vertical skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingY:             false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n    lockScalingFlip:          false,\n\n    /**\n     * When `true`, object is not exported in OBJECT/JSON\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    excludeFromExport:        false,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * When `false`, object is not cached unless necessary ( clipPath )\n     * default to true\n     * @since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    objectCaching:            objectCaching,\n\n    /**\n     * When `true`, object properties are checked for cache invalidation. In some particular\n     * situation you may want this to be disabled ( spray brush, very big, groups)\n     * or if your application does not allow you to modify properties for groups child you want\n     * to disable it for groups.\n     * default to false\n     * since 1.7.0\n     * @type Boolean\n     * @default false\n     */\n    statefullCache:            false,\n\n    /**\n     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n     * too much and will be redrawn with correct details at the end of scaling.\n     * this setting is performance and application dependant.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    noScaleCache:              true,\n\n    /**\n     * When `false`, the stoke width will scale with the object.\n     * When `true`, the stroke will always match the exact pixel size entered for stroke width.\n     * default to false\n     * @since 2.6.0\n     * @type Boolean\n     * @default false\n     * @type Boolean\n     * @default false\n     */\n    strokeUniform:              false,\n\n    /**\n     * When set to `true`, object's cache will be rerendered next render call.\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    dirty:                true,\n\n    /**\n     * keeps the value of the last hovered corner during mouse move.\n     * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\n     * It should be private, but there is no harm in using it as\n     * a read-only property.\n     * @type number|string|any\n     * @default 0\n     */\n    __corner: 0,\n\n    /**\n     * Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")\n     * @type String\n     * @default\n     */\n    paintFirst:           'fill',\n\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: (\n      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n      'stroke strokeWidth strokeDashArray strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit ' +\n      'angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor ' +\n      'skewX skewY fillRule paintFirst clipPath strokeUniform'\n    ).split(' '),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single\n     * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\n     * and refreshed at the next render\n     * @type Array\n     */\n    cacheProperties: (\n      'fill stroke strokeWidth strokeDashArray width height paintFirst strokeUniform' +\n      ' strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit backgroundColor clipPath'\n    ).split(' '),\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the object has rendered, and the context is placed in the center\n     * of the object cacheCanvas.\n     * If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will make the object clip to the outside of the clipPath\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    inverted: false,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will have its top and left relative to canvas, and will\n     * not be influenced by the object transform. This will make the clipPath relative\n     * to the canvas, but clipping just a particular object.\n     * WARNING this is beta, this feature may change or be renamed.\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    absolutePositioned: false,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      if (options) {\n        this.setOptions(options);\n      }\n    },\n\n    /**\n     * Create a the canvas used to keep the cached copy of the object\n     * @private\n     */\n    _createCacheCanvas: function() {\n      this._cacheProperties = {};\n      this._cacheCanvas = fabric.util.createCanvasElement();\n      this._cacheContext = this._cacheCanvas.getContext('2d');\n      this._updateCacheCanvas();\n      // if canvas gets created, is empty, so dirty.\n      this.dirty = true;\n    },\n\n    /**\n     * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\n     * and each side do not cross fabric.cacheSideLimit\n     * those numbers are configurable so that you can get as much detail as you want\n     * making bargain with performances.\n     * @param {Object} dims\n     * @param {Object} dims.width width of canvas\n     * @param {Object} dims.height height of canvas\n     * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _limitCacheSize: function(dims) {\n      var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\n          width = dims.width, height = dims.height,\n          max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit;\n      if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {\n        if (width < min) {\n          dims.width = min;\n        }\n        if (height < min) {\n          dims.height = min;\n        }\n        return dims;\n      }\n      var ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal),\n          capValue = fabric.util.capValue,\n          x = capValue(min, limitedDims.x, max),\n          y = capValue(min, limitedDims.y, max);\n      if (width > x) {\n        dims.zoomX /= width / x;\n        dims.width = x;\n        dims.capped = true;\n      }\n      if (height > y) {\n        dims.zoomY /= height / y;\n        dims.height = y;\n        dims.capped = true;\n      }\n      return dims;\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @return {Object}.x width of object to be cached\n     * @return {Object}.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var objectScale = this.getTotalObjectScaling(),\n          // caculate dimensions without skewing\n          dim = this._getTransformedDimensions(0, 0),\n          neededX = dim.x * objectScale.scaleX / this.scaleX,\n          neededY = dim.y * objectScale.scaleY / this.scaleY;\n      return {\n        // for sure this ALIASING_LIMIT is slightly creating problem\n        // in situation in which the cache canvas gets an upper limit\n        // also objectScale contains already scaleX and scaleY\n        width: neededX + ALIASING_LIMIT,\n        height: neededY + ALIASING_LIMIT,\n        zoomX: objectScale.scaleX,\n        zoomY: objectScale.scaleY,\n        x: neededX,\n        y: neededY\n      };\n    },\n\n    /**\n     * Update width and height of the canvas for cache\n     * returns true or false if canvas needed resize.\n     * @private\n     * @return {Boolean} true if the canvas has been resized\n     */\n    _updateCacheCanvas: function() {\n      var targetCanvas = this.canvas;\n      if (this.noScaleCache && targetCanvas && targetCanvas._currentTransform) {\n        var target = targetCanvas._currentTransform.target,\n            action = targetCanvas._currentTransform.action;\n        if (this === target && action.slice && action.slice(0, 5) === 'scale') {\n          return false;\n        }\n      }\n      var canvas = this._cacheCanvas,\n          dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          minCacheSize = fabric.minCacheSideLimit,\n          width = dims.width, height = dims.height, drawingWidth, drawingHeight,\n          zoomX = dims.zoomX, zoomY = dims.zoomY,\n          dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\n          zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\n          shouldRedraw = dimensionsChanged || zoomChanged,\n          additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;\n      if (dimensionsChanged) {\n        var canvasWidth = this._cacheCanvas.width,\n            canvasHeight = this._cacheCanvas.height,\n            sizeGrowing = width > canvasWidth || height > canvasHeight,\n            sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\n              canvasWidth > minCacheSize && canvasHeight > minCacheSize;\n        shouldResizeCanvas = sizeGrowing || sizeShrinking;\n        if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {\n          additionalWidth = width * 0.1;\n          additionalHeight = height * 0.1;\n        }\n      }\n      if (shouldRedraw) {\n        if (shouldResizeCanvas) {\n          canvas.width = Math.ceil(width + additionalWidth);\n          canvas.height = Math.ceil(height + additionalHeight);\n        }\n        else {\n          this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\n          this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\n        }\n        drawingWidth = dims.x / 2;\n        drawingHeight = dims.y / 2;\n        this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n        this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n        this.cacheWidth = width;\n        this.cacheHeight = height;\n        this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\n        this._cacheContext.scale(zoomX, zoomY);\n        this.zoomX = zoomX;\n        this.zoomY = zoomY;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function(options) {\n      this._setOptions(options);\n      this._initGradient(options.fill, 'fill');\n      this._initGradient(options.stroke, 'stroke');\n      this._initClipping(options);\n      this._initPattern(options.fill, 'fill');\n      this._initPattern(options.stroke, 'stroke');\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     */\n    transform: function(ctx) {\n      var m;\n      if (this.group && !this.group._transformDone) {\n        m = this.calcTransformMatrix();\n      }\n      else {\n        m = this.calcOwnMatrix();\n      }\n      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          object = {\n            type:                     this.type,\n            version:                  fabric.version,\n            originX:                  this.originX,\n            originY:                  this.originY,\n            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n            strokeLineCap:            this.strokeLineCap,\n            strokeDashOffset:         this.strokeDashOffset,\n            strokeLineJoin:           this.strokeLineJoin,\n            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n            angle:                    toFixed(this.angle, NUM_FRACTION_DIGITS),\n            flipX:                    this.flipX,\n            flipY:                    this.flipY,\n            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n            visible:                  this.visible,\n            clipTo:                   this.clipTo && String(this.clipTo),\n            backgroundColor:          this.backgroundColor,\n            fillRule:                 this.fillRule,\n            paintFirst:               this.paintFirst,\n            globalCompositeOperation: this.globalCompositeOperation,\n            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : null,\n            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS),\n          };\n\n      if (this.clipPath) {\n        object.clipPath = this.clipPath.toObject(propertiesToInclude);\n        object.clipPath.inverted = this.clipPath.inverted;\n        object.clipPath.absolutePositioned = this.clipPath.absolutePositioned;\n      }\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function(object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n      stateProperties.forEach(function(prop) {\n        if (prop === 'left' || prop === 'top') {\n          return;\n        }\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\n        // basically a check for [] === []\n        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getObjectScaling: function() {\n      var scaleX = this.scaleX, scaleY = this.scaleY;\n      if (this.group) {\n        var scaling = this.group.getObjectScaling();\n        scaleX *= scaling.scaleX;\n        scaleY *= scaling.scaleY;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling, zoom and retina\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getTotalObjectScaling: function() {\n      var scale = this.getObjectScaling(), scaleX = scale.scaleX, scaleY = scale.scaleY;\n      if (this.canvas) {\n        var zoom = this.canvas.getZoom();\n        var retina = this.canvas.getRetinaScaling();\n        scaleX *= zoom * retina;\n        scaleY *= zoom * retina;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * Return the object opacity counting also the group property\n     * @return {Number}\n     */\n    getObjectOpacity: function() {\n      var opacity = this.opacity;\n      if (this.group) {\n        opacity *= this.group.getObjectOpacity();\n      }\n      return opacity;\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function(key, value) {\n      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY'),\n          isChanged = this[key] !== value, groupNeedsUpdate = false;\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      }\n      else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      }\n      else if (key === 'dirty' && this.group) {\n        this.group.set('dirty', value);\n      }\n\n      this[key] = value;\n\n      if (isChanged) {\n        groupNeedsUpdate = this.group && this.group.isOnACache();\n        if (this.cacheProperties.indexOf(key) > -1) {\n          this.dirty = true;\n          groupNeedsUpdate && this.group.set('dirty', true);\n        }\n        else if (groupNeedsUpdate && this.stateProperties.indexOf(key) > -1) {\n          this.group.set('dirty', true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Array}\n     */\n    getViewportTransform: function() {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /*\n     * @private\n     * return if the object would be visible in rendering\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    isNotVisible: function() {\n      return this.opacity === 0 ||\n        (this.width === 0 && this.height === 0 && this.strokeWidth === 0) ||\n        !this.visible;\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if width/height are zeros or object is not visible\n      if (this.isNotVisible()) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      ctx.save();\n      this._setupCompositeOperation(ctx);\n      this.drawSelectionBackground(ctx);\n      this.transform(ctx);\n      this._setOpacity(ctx);\n      this._setShadow(ctx, this);\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      if (this.shouldCache()) {\n        this.renderCache();\n        this.drawCacheOnCanvas(ctx);\n      }\n      else {\n        this._removeCacheCanvas();\n        this.dirty = false;\n        this.drawObject(ctx);\n        if (this.objectCaching && this.statefullCache) {\n          this.saveState({ propertySet: 'cacheProperties' });\n        }\n      }\n      this.clipTo && ctx.restore();\n      ctx.restore();\n    },\n\n    renderCache: function(options) {\n      options = options || {};\n      if (!this._cacheCanvas) {\n        this._createCacheCanvas();\n      }\n      if (this.isCacheDirty()) {\n        this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\n        this.drawObject(this._cacheContext, options.forClipping);\n        this.dirty = false;\n      }\n    },\n\n    /**\n     * Remove cacheCanvas and its dimensions from the objects\n     */\n    _removeCacheCanvas: function() {\n      this._cacheCanvas = null;\n      this.cacheWidth = 0;\n      this.cacheHeight = 0;\n    },\n\n    /**\n     * return true if the object will draw a stroke\n     * Does not consider text styles. This is just a shortcut used at rendering time\n     * We want it to be an aproximation and be fast.\n     * wrote to avoid extra caching, it has to return true when stroke happens,\n     * can guess when it will not happen at 100% chance, does not matter if it misses\n     * some use case where the stroke is invisible.\n     * @since 3.0.0\n     * @returns Boolean\n     */\n    hasStroke: function() {\n      return this.stroke && this.stroke !== 'transparent' && this.strokeWidth !== 0;\n    },\n\n    /**\n     * return true if the object will draw a fill\n     * Does not consider text styles. This is just a shortcut used at rendering time\n     * We want it to be an aproximation and be fast.\n     * wrote to avoid extra caching, it has to return true when fill happens,\n     * can guess when it will not happen at 100% chance, does not matter if it misses\n     * some use case where the fill is invisible.\n     * @since 3.0.0\n     * @returns Boolean\n     */\n    hasFill: function() {\n      return this.fill && this.fill !== 'transparent';\n    },\n\n    /**\n     * When set to `true`, force the object to have its own cache, even if it is inside a group\n     * it may be needed when your object behave in a particular way on the cache and always needs\n     * its own isolated canvas to render correctly.\n     * Created to be overridden\n     * since 1.7.12\n     * @returns Boolean\n     */\n    needsItsOwnCache: function() {\n      if (this.paintFirst === 'stroke' &&\n        this.hasFill() && this.hasStroke() && typeof this.shadow === 'object') {\n        return true;\n      }\n      if (this.clipPath) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * Read as: cache if is needed, or if the feature is enabled but we are not already caching.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      this.ownCaching = this.needsItsOwnCache() || (\n        this.objectCaching &&\n        (!this.group || !this.group.isOnACache())\n      );\n      return this.ownCaching;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * used by Group.shouldCache to know if child has a shadow recursively\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\n    },\n\n    /**\n     * Execute the drawing operation for an object clipPath\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawClipPathOnCache: function(ctx) {\n      var path = this.clipPath;\n      ctx.save();\n      // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4\n      if (path.inverted) {\n        ctx.globalCompositeOperation = 'destination-out';\n      }\n      else {\n        ctx.globalCompositeOperation = 'destination-in';\n      }\n      //ctx.scale(1 / 2, 1 / 2);\n      if (path.absolutePositioned) {\n        var m = fabric.util.invertTransform(this.calcTransformMatrix());\n        ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      }\n      path.transform(ctx);\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx, forClipping) {\n      var originalFill = this.fill, originalStroke = this.stroke;\n      if (forClipping) {\n        this.fill = 'black';\n        this.stroke = '';\n        this._setClippingProperties(ctx);\n      }\n      else {\n        this._renderBackground(ctx);\n        this._setStrokeStyles(ctx, this);\n        this._setFillStyles(ctx, this);\n      }\n      this._render(ctx);\n      this._drawClipPath(ctx);\n      this.fill = originalFill;\n      this.stroke = originalStroke;\n    },\n\n    _drawClipPath: function(ctx) {\n      var path = this.clipPath;\n      if (!path) { return; }\n      // needed to setup a couple of variables\n      // path canvas gets overridden with this one.\n      // TODO find a better solution?\n      path.canvas = this.canvas;\n      path.shouldCache();\n      path._transformDone = true;\n      path.renderCache({ forClipping: true });\n      this.drawClipPathOnCache(ctx);\n    },\n\n    /**\n     * Paint the cached copy of the object on the target context.\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawCacheOnCanvas: function(ctx) {\n      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n      ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\n    },\n\n    /**\n     * Check if cache is dirty\n     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n     * on parent canvas.\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.isNotVisible()) {\n        return false;\n      }\n      if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\n        // in this case the context is already cleared.\n        return true;\n      }\n      else {\n        if (this.dirty ||\n          (this.clipPath && this.clipPath.absolutePositioned) ||\n          (this.statefullCache && this.hasStateChanged('cacheProperties'))\n        ) {\n          if (this._cacheCanvas && !skipCanvas) {\n            var width = this.cacheWidth / this.zoomX;\n            var height = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Draws a background for the object big as its untransformed dimensions\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n      var dim = this._getNonTransformedDimensions();\n      ctx.fillStyle = this.backgroundColor;\n\n      ctx.fillRect(\n        -dim.x / 2,\n        -dim.y / 2,\n        dim.x,\n        dim.y\n      );\n      // if there is background color no other shadows\n      // should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function(ctx) {\n      if (this.group && !this.group._transformDone) {\n        ctx.globalAlpha = this.getObjectOpacity();\n      }\n      else {\n        ctx.globalAlpha *= this.opacity;\n      }\n    },\n\n    _setStrokeStyles: function(ctx, decl) {\n      if (decl.stroke) {\n        ctx.lineWidth = decl.strokeWidth;\n        ctx.lineCap = decl.strokeLineCap;\n        ctx.lineDashOffset = decl.strokeDashOffset;\n        ctx.lineJoin = decl.strokeLineJoin;\n        ctx.miterLimit = decl.strokeMiterLimit;\n        ctx.strokeStyle = decl.stroke.toLive\n          ? decl.stroke.toLive(ctx, this)\n          : decl.stroke;\n      }\n    },\n\n    _setFillStyles: function(ctx, decl) {\n      if (decl.fill) {\n        ctx.fillStyle = decl.fill.toLive\n          ? decl.fill.toLive(ctx, this)\n          : decl.fill;\n      }\n    },\n\n    _setClippingProperties: function(ctx) {\n      ctx.globalAlpha = 1;\n      ctx.strokeStyle = 'transparent';\n      ctx.fillStyle = '#000000';\n    },\n\n    /**\n     * @private\n     * Sets line dash\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n     * @param {Array} dashArray array representing dashes\n     * @param {Function} alternative function to call if browser does not support lineDash\n     */\n    _setLineDash: function(ctx, dashArray, alternative) {\n      if (!dashArray || dashArray.length === 0) {\n        return;\n      }\n      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n      if (1 & dashArray.length) {\n        dashArray.push.apply(dashArray, dashArray);\n      }\n      if (supportsLineDash) {\n        ctx.setLineDash(dashArray);\n      }\n      else {\n        alternative && alternative(ctx);\n      }\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     */\n    _renderControls: function(ctx, styleOverride) {\n      var vpt = this.getViewportTransform(),\n          matrix = this.calcTransformMatrix(),\n          options, drawBorders, drawControls;\n      styleOverride = styleOverride || { };\n      drawBorders = typeof styleOverride.hasBorders !== 'undefined' ? styleOverride.hasBorders : this.hasBorders;\n      drawControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls;\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n      options = fabric.util.qrDecompose(matrix);\n      ctx.save();\n      ctx.translate(options.translateX, options.translateY);\n      ctx.lineWidth = 1 * this.borderScaleFactor;\n      if (!this.group) {\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      }\n      if (styleOverride.forActiveSelection) {\n        ctx.rotate(degreesToRadians(options.angle));\n        drawBorders && this.drawBordersInGroup(ctx, options, styleOverride);\n      }\n      else {\n        ctx.rotate(degreesToRadians(this.angle));\n        drawBorders && this.drawBorders(ctx, styleOverride);\n      }\n      drawControls && this.drawControls(ctx, styleOverride);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var shadow = this.shadow, canvas = this.canvas, scaling,\n          multX = (canvas && canvas.viewportTransform[0]) || 1,\n          multY = (canvas && canvas.viewportTransform[3]) || 1;\n      if (shadow.nonScaling) {\n        scaling = { scaleX: 1, scaleY: 1 };\n      }\n      else {\n        scaling = this.getObjectScaling();\n      }\n      if (canvas && canvas._isRetinaScaling()) {\n        multX *= fabric.devicePixelRatio;\n        multY *= fabric.devicePixelRatio;\n      }\n      ctx.shadowColor = shadow.color;\n      ctx.shadowBlur = shadow.blur * fabric.browserShadowBlurConstant *\n        (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n      ctx.shadowOffsetX = shadow.offsetX * multX * scaling.scaleX;\n      ctx.shadowOffsetY = shadow.offsetY * multY * scaling.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} filler fabric.Pattern or fabric.Gradient\n     * @return {Object} offset.offsetX offset for text rendering\n     * @return {Object} offset.offsetY offset for text rendering\n     */\n    _applyPatternGradientTransform: function(ctx, filler) {\n      if (!filler || !filler.toLive) {\n        return { offsetX: 0, offsetY: 0 };\n      }\n      var t = filler.gradientTransform || filler.patternTransform;\n      var offsetX = -this.width / 2 + filler.offsetX || 0,\n          offsetY = -this.height / 2 + filler.offsetY || 0;\n\n      if (filler.gradientUnits === 'percentage') {\n        ctx.transform(this.width, 0, 0, this.height, offsetX, offsetY);\n      }\n      else {\n        ctx.transform(1, 0, 0, 1, offsetX, offsetY);\n      }\n      if (t) {\n        ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\n      }\n      return { offsetX: offsetX, offsetY: offsetY };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderPaintInOrder: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderStroke(ctx);\n        this._renderFill(ctx);\n      }\n      else {\n        this._renderFill(ctx);\n        this._renderStroke(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * function that actually render something on the context.\n     * empty here to allow Obects to work on tests to benchmark fabric functionalites\n     * not related to rendering\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(/* ctx */) {\n\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function(ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n      this._applyPatternGradientTransform(ctx, this.fill);\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      }\n      else {\n        ctx.fill();\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderStroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      if (this.strokeUniform) {\n        ctx.scale(1 / this.scaleX, 1 / this.scaleY);\n      }\n      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n      if (this.stroke.toLive && this.stroke.gradientUnits === 'percentage') {\n        // need to transform gradient in a pattern.\n        // this is a slow process. If you are hitting this codepath, and the object\n        // is not using caching, you should consider switching it on.\n        // we need a canvas as big as the current object caching canvas.\n        this._applyPatternForTransformedGradient(ctx, this.stroke);\n      }\n      else {\n        this._applyPatternGradientTransform(ctx, this.stroke);\n      }\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * This function try to patch the missing gradientTransform on canvas gradients.\n     * transforming a context to transform the gradient, is going to transform the stroke too.\n     * we want to transform the gradient but not the stroke operation, so we create\n     * a transformed gradient on a pattern and then we use the pattern instead of the gradient.\n     * this method has drwabacks: is slow, is in low resolution, needs a patch for when the size\n     * is limited.\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {fabric.Gradient} filler a fabric gradient instance\n     */\n    _applyPatternForTransformedGradient: function(ctx, filler) {\n      var dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          pCanvas = fabric.util.createCanvasElement(), pCtx, retinaScaling = this.canvas.getRetinaScaling(),\n          width = dims.x / this.scaleX / retinaScaling, height = dims.y / this.scaleY / retinaScaling;\n      pCanvas.width = width;\n      pCanvas.height = height;\n      pCtx = pCanvas.getContext('2d');\n      pCtx.beginPath(); pCtx.moveTo(0, 0); pCtx.lineTo(width, 0); pCtx.lineTo(width, height);\n      pCtx.lineTo(0, height); pCtx.closePath();\n      pCtx.translate(width / 2, height / 2);\n      pCtx.scale(\n        dims.zoomX / this.scaleX / retinaScaling,\n        dims.zoomY / this.scaleY / retinaScaling\n      );\n      this._applyPatternGradientTransform(pCtx, filler);\n      pCtx.fillStyle = filler.toLive(ctx);\n      pCtx.fill();\n      ctx.translate(-this.width / 2 - this.strokeWidth / 2, -this.height / 2 - this.strokeWidth / 2);\n      ctx.scale(\n        retinaScaling * this.scaleX / dims.zoomX,\n        retinaScaling * this.scaleY / dims.zoomY\n      );\n      ctx.strokeStyle = pCtx.createPattern(pCanvas, 'no-repeat');\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return { x: this.left + this.width / 2, y: this.top + this.height / 2 };\n    },\n\n    /**\n     * This function is an helper for svg import. it decompose the transformMatrix\n     * and assign properties to object.\n     * untransformed coordinates\n     * @private\n     * @chainable\n     */\n    _assignTransformMatrixProps: function() {\n      if (this.transformMatrix) {\n        var options = fabric.util.qrDecompose(this.transformMatrix);\n        this.flipX = false;\n        this.flipY = false;\n        this.set('scaleX', options.scaleX);\n        this.set('scaleY', options.scaleY);\n        this.angle = options.angle;\n        this.skewX = options.skewX;\n        this.skewY = 0;\n      }\n    },\n\n    /**\n     * This function is an helper for svg import. it removes the transform matrix\n     * and set to object properties that fabricjs can handle\n     * @private\n     * @param {Object} preserveAspectRatioOptions\n     * @return {thisArg}\n     */\n    _removeTransformMatrix: function(preserveAspectRatioOptions) {\n      var center = this._findCenterFromElement();\n      if (this.transformMatrix) {\n        this._assignTransformMatrixProps();\n        center = fabric.util.transformPoint(center, this.transformMatrix);\n      }\n      this.transformMatrix = null;\n      if (preserveAspectRatioOptions) {\n        this.scaleX *= preserveAspectRatioOptions.scaleX;\n        this.scaleY *= preserveAspectRatioOptions.scaleY;\n        this.cropX = preserveAspectRatioOptions.cropX;\n        this.cropY = preserveAspectRatioOptions.cropY;\n        center.x += preserveAspectRatioOptions.offsetLeft;\n        center.y += preserveAspectRatioOptions.offsetTop;\n        this.width = preserveAspectRatioOptions.width;\n        this.height = preserveAspectRatioOptions.height;\n      }\n      this.setPositionByOrigin(center, 'center', 'center');\n    },\n\n    /**\n     * Clones an instance, using a callback method will work for every object.\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     */\n    clone: function(callback, propertiesToInclude) {\n      var objectForm = this.toObject(propertiesToInclude);\n      if (this.constructor.fromObject) {\n        this.constructor.fromObject(objectForm, callback);\n      }\n      else {\n        fabric.Object._fromObject('Object', objectForm, callback);\n      }\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * could make use of both toDataUrl or toCanvasElement.\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @param {Object} [options] for clone as image, passed to toDataURL\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function(callback, options) {\n      var canvasEl = this.toCanvasElement(options);\n      if (callback) {\n        callback(new fabric.Image(canvasEl));\n      }\n      return this;\n    },\n\n    /**\n     * Converts an object into a HTMLCanvas element\n     * @param {Object} options Options object\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toCanvasElement: function(options) {\n      options || (options = { });\n\n      var utils = fabric.util, origParams = utils.saveObjectTransform(this),\n          originalGroup = this.group,\n          originalShadow = this.shadow, abs = Math.abs,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? fabric.devicePixelRatio : 1);\n      delete this.group;\n      if (options.withoutTransform) {\n        utils.resetObjectTransform(this);\n      }\n      if (options.withoutShadow) {\n        this.shadow = null;\n      }\n\n      var el = fabric.util.createCanvasElement(),\n          // skip canvas zoom and calculate with setCoords now.\n          boundingRect = this.getBoundingRect(true, true),\n          shadow = this.shadow, scaling,\n          shadowOffset = { x: 0, y: 0 }, shadowBlur;\n\n      if (shadow) {\n        shadowBlur = shadow.blur;\n        if (shadow.nonScaling) {\n          scaling = { scaleX: 1, scaleY: 1 };\n        }\n        else {\n          scaling = this.getObjectScaling();\n        }\n        // consider non scaling shadow.\n        shadowOffset.x = 2 * Math.round(abs(shadow.offsetX) + shadowBlur) * (abs(scaling.scaleX));\n        shadowOffset.y = 2 * Math.round(abs(shadow.offsetY) + shadowBlur) * (abs(scaling.scaleY));\n      }\n      el.width = boundingRect.width + shadowOffset.x;\n      el.height = boundingRect.height + shadowOffset.y;\n      el.width += el.width % 2 ? 2 - el.width % 2 : 0;\n      el.height += el.height % 2 ? 2 - el.height % 2 : 0;\n      var canvas = new fabric.StaticCanvas(el, {\n        enableRetinaScaling: false,\n        renderOnAddRemove: false,\n        skipOffscreen: false,\n      });\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n      this.setPositionByOrigin(new fabric.Point(canvas.width / 2, canvas.height / 2), 'center', 'center');\n\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var canvasEl = canvas.toCanvasElement(multiplier || 1, options);\n      this.shadow = originalShadow;\n      this.canvas = originalCanvas;\n      if (originalGroup) {\n        this.group = originalGroup;\n      }\n      this.set(origParams).setCoords();\n      // canvas.dispose will call image.dispose that will nullify the elements\n      // since this canvas is a simple element for the process, we remove references\n      // to objects in this way in order to avoid object trashing.\n      canvas._objects = [];\n      canvas.dispose();\n      canvas = null;\n\n      return canvasEl;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function(options) {\n      options || (options = { });\n      return fabric.util.toDataURL(this.toCanvasElement(options), options.format || 'png', options.quality || 1);\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function(type) {\n      return this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance (is 1 unless subclassed)\n     */\n    complexity: function() {\n      return 1;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function(propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets gradient (fill or stroke) of an object\n     * percentages for x1,x2,y1,y2,r1,r2 together with gradientUnits 'pixels', are not supported.\n     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n     * @param {String} property Property name 'stroke' or 'fill'\n     * @param {Object} [options] Options object\n     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n     * @param {Number} [options.x1=0] x-coordinate of start point\n     * @param {Number} [options.y1=0] y-coordinate of start point\n     * @param {Number} [options.x2=0] x-coordinate of end point\n     * @param {Number} [options.y2=0] y-coordinate of end point\n     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n     * @param {Object} [options.gradientTransform] transformMatrix for gradient\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @deprecated since 3.4.0\n     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n     * @example <caption>Set linear gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'linear',\n     *   x1: -object.width / 2,\n     *   y1: 0,\n     *   x2: object.width / 2,\n     *   y2: 0,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     * @example <caption>Set radial gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'radial',\n     *   x1: 0,\n     *   y1: 0,\n     *   x2: 0,\n     *   y2: 0,\n     *   r1: object.width / 2,\n     *   r2: 10,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     */\n    setGradient: function(property, options) {\n      options || (options = { });\n\n      var gradient = { colorStops: [] };\n\n      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n      gradient.coords = {\n        x1: options.x1,\n        y1: options.y1,\n        x2: options.x2,\n        y2: options.y2\n      };\n      gradient.gradientUnits = options.gradientUnits || 'pixels';\n      if (options.r1 || options.r2) {\n        gradient.coords.r1 = options.r1;\n        gradient.coords.r2 = options.r2;\n      }\n\n      gradient.gradientTransform = options.gradientTransform;\n      fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\n\n      return this.set(property, fabric.Gradient.forObject(this, gradient));\n    },\n\n    /**\n     * Sets pattern fill of an object\n     * @param {Object} options Options object\n     * @param {(String|HTMLImageElement)} options.source Pattern source\n     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n     * @param {Function} [callback] Callback to invoke when image set as a pattern\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @deprecated since 3.5.0\n     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n     * @example <caption>Set pattern</caption>\n     * object.setPatternFill({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat'\n     * },canvas.renderAll.bind(canvas));\n     */\n    setPatternFill: function(options, callback) {\n      return this.set('fill', new fabric.Pattern(options, callback));\n    },\n\n    /**\n     * Sets {@link fabric.Object#shadow|shadow} of an object\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n     * @param {Number} [options.blur=0] Shadow blur\n     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n     * @param {Number} [options.offsetY=0] Shadow vertical offset\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @deprecated since 3.5.0\n     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n     * @example <caption>Set shadow with string notation</caption>\n     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n     * canvas.renderAll();\n     * @example <caption>Set shadow with object notation</caption>\n     * object.setShadow({\n     *   color: 'red',\n     *   blur: 10,\n     *   offsetX: 20,\n     *   offsetY: 20\n     * });\n     * canvas.renderAll();\n     */\n    setShadow: function(options) {\n      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n    },\n\n    /**\n     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n     * @param {String} color Color value\n     * @return {fabric.Object} thisArg\n     * @deprecated since 3.5.0\n     * @chainable\n     */\n    setColor: function(color) {\n      this.set('fill', color);\n      return this;\n    },\n\n    /**\n     * Sets \"angle\" of an instance with centered rotation\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    rotate: function(angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function () {\n      this.canvas && this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterH: function () {\n      this.canvas && this.canvas.viewportCenterObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function () {\n      this.canvas && this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterV: function () {\n      this.canvas && this.canvas.viewportCenterObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function () {\n      this.canvas && this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Centers object on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenter: function () {\n      this.canvas && this.canvas.viewportCenterObject(this);\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function(e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(\n          pClicked, objectLeftTop, degreesToRadians(-this.angle));\n      }\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specified using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function (ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    }\n  });\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Object);\n\n  extend(fabric.Object.prototype, fabric.Observable);\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  fabric.Object._fromObject = function(className, object, callback, extraParam) {\n    var klass = fabric[className];\n    object = clone(object, true);\n    fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {\n      if (typeof patterns[0] !== 'undefined') {\n        object.fill = patterns[0];\n      }\n      if (typeof patterns[1] !== 'undefined') {\n        object.stroke = patterns[1];\n      }\n      fabric.util.enlivenObjects([object.clipPath], function(enlivedProps) {\n        object.clipPath = enlivedProps[0];\n        var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n        callback && callback(instance);\n      });\n    });\n  };\n\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n  fabric.Object.__uid = 0;\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n        left: -0.5,\n        center: 0,\n        right: 0.5\n      },\n      originYOffset = {\n        top: -0.5,\n        center: 0,\n        bottom: 0.5\n      };\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Translates the coordinates from a set of origin to another (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX, offsetY, dim;\n\n      if (typeof fromOriginX === 'string') {\n        fromOriginX = originXOffset[fromOriginX];\n      }\n      else {\n        fromOriginX -= 0.5;\n      }\n\n      if (typeof toOriginX === 'string') {\n        toOriginX = originXOffset[toOriginX];\n      }\n      else {\n        toOriginX -= 0.5;\n      }\n\n      offsetX = toOriginX - fromOriginX;\n\n      if (typeof fromOriginY === 'string') {\n        fromOriginY = originYOffset[fromOriginY];\n      }\n      else {\n        fromOriginY -= 0.5;\n      }\n\n      if (typeof toOriginY === 'string') {\n        toOriginY = originYOffset[toOriginY];\n      }\n      else {\n        toOriginY -= 0.5;\n      }\n\n      offsetY = toOriginY - fromOriginY;\n\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function(point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function(center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function() {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function(originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function(point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p, p2;\n\n      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      }\n      else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function(pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function(to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getScaledWidth(),\n          xFull = fabric.util.cos(angle) * hypotFull,\n          yFull = fabric.util.sin(angle) * hypotFull,\n          offsetFrom, offsetTo;\n\n      //TODO: this function does not consider mixed situation like top, center.\n      if (typeof this.originX === 'string') {\n        offsetFrom = originXOffset[this.originX];\n      }\n      else {\n        offsetFrom = this.originX - 0.5;\n      }\n      if (typeof to === 'string') {\n        offsetTo = originXOffset[to];\n      }\n      else {\n        offsetTo = to - 0.5;\n      }\n      this.left += xFull * (offsetTo - offsetFrom);\n      this.top += yFull * (offsetTo - offsetFrom);\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function() {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n\n      var center = this.getCenterPoint();\n\n      this.originX = 'center';\n      this.originY = 'center';\n\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function() {\n      var originPoint = this.translateToOriginPoint(\n        this.getCenterPoint(),\n        this._originalOriginX,\n        this._originalOriginY);\n\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function() {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    },\n  });\n\n})();\n\n\n(function() {\n\n  function getCoords(coords) {\n    return [\n      new fabric.Point(coords.tl.x, coords.tl.y),\n      new fabric.Point(coords.tr.x, coords.tr.y),\n      new fabric.Point(coords.br.x, coords.br.y),\n      new fabric.Point(coords.bl.x, coords.bl.y)\n    ];\n  }\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      multiplyMatrices = fabric.util.multiplyTransformMatrices,\n      transformPoint = fabric.util.transformPoint;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Describe object's corner position in canvas element coordinates.\n     * properties are tl,mt,tr,ml,mr,bl,mb,br,mtr for the main controls.\n     * each property is an object with x, y and corner.\n     * The `corner` property contains in a similar manner the 4 points of the\n     * interactive area of the corner.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, viewportTransform, top, left, padding.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords;\n     * @memberOf fabric.Object.prototype\n     */\n    oCoords: null,\n\n    /**\n     * Describe object's corner position in canvas object absolute coordinates\n     * properties are tl,tr,bl,br and describe the four main corner.\n     * each property is an object with x, y, instance of Fabric.Point.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, top, left.\n     * Those coordinates are useful to understand where an object is. They get updated\n     * with oCoords but they do not need to be updated when zoom or panning change.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords(true);\n     * @memberOf fabric.Object.prototype\n     */\n    aCoords: null,\n\n    /**\n     * storage for object transform matrix\n     */\n    ownMatrixCache: null,\n\n    /**\n     * storage for object full transform matrix\n     */\n    matrixCache: null,\n\n    /**\n     * return correct set of coordinates for intersection\n     */\n    getCoords: function(absolute, calculate) {\n      if (!this.oCoords) {\n        this.setCoords();\n      }\n      var coords = absolute ? this.aCoords : this.oCoords;\n      return getCoords(calculate ? this.calcCoords(absolute) : coords);\n    },\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate),\n          intersection = fabric.Intersection.intersectPolygonRectangle(\n            coords,\n            pointTL,\n            pointBR\n          );\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function(other, absolute, calculate) {\n      var intersection = fabric.Intersection.intersectPolygonPolygon(\n        this.getCoords(absolute, calculate),\n        other.getCoords(absolute, calculate)\n      );\n\n      return intersection.status === 'Intersection'\n        || other.isContainedWithinObject(this, absolute, calculate)\n        || this.isContainedWithinObject(other, absolute, calculate);\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function(other, absolute, calculate) {\n      var points = this.getCoords(absolute, calculate),\n          i = 0, lines = other._getImageLines(\n            calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords\n          );\n      for (; i < 4; i++) {\n        if (!other.containsPoint(points[i], lines)) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {\n      var boundingRect = this.getBoundingRect(absolute, calculate);\n\n      return (\n        boundingRect.left >= pointTL.x &&\n        boundingRect.left + boundingRect.width <= pointBR.x &&\n        boundingRect.top >= pointTL.y &&\n        boundingRect.top + boundingRect.height <= pointBR.y\n      );\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @param {Object} [lines] object returned from @method _getImageLines\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function(point, lines, absolute, calculate) {\n      var lines = lines || this._getImageLines(\n            calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords\n          ),\n          xPoints = this._findCrossPoints(point, lines);\n\n      // if xPoints is odd then point is inside the object\n      return (xPoints !== 0 && xPoints % 2 === 1);\n    },\n\n    /**\n     * Checks if object is contained within the canvas with current viewportTransform\n     * the check is done stopping at first point that appears on screen\n     * @param {Boolean} [calculate] use coordinates of current position instead of .aCoords\n     * @return {Boolean} true if object is fully or partially contained within canvas\n     */\n    isOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      var points = this.getCoords(true, calculate), point;\n      for (var i = 0; i < 4; i++) {\n        point = points[i];\n        if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\n          return true;\n        }\n      }\n      // no points on screen, check intersection with absolute coordinates\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Checks if the object contains the midpoint between canvas extremities\n     * Does not make sense outside the context of isOnScreen and isPartiallyOnScreen\n     * @private\n     * @param {Fabric.Point} pointTL Top Left point\n     * @param {Fabric.Point} pointBR Top Right point\n     * @param {Boolean} calculate use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if the object contains the point\n     */\n    _containsCenterOfCanvas: function(pointTL, pointBR, calculate) {\n      // worst case scenario the object is so big that contains the screen\n      var centerPoint = { x: (pointTL.x + pointBR.x) / 2, y: (pointTL.y + pointBR.y) / 2 };\n      if (this.containsPoint(centerPoint, null, true, calculate)) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Checks if object is partially contained within the canvas with current viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is partially contained within canvas\n     */\n    isPartiallyOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function(oCoords) {\n      return {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} lines Coordinates of the object being evaluated\n     */\n    // remove yi, not used but left code here just in case.\n    _findCrossPoints: function(point, lines) {\n      var b1, b2, a1, a2, xi, // yi,\n          xcount = 0,\n          iLine;\n\n      for (var lineKey in lines) {\n        iLine = lines[lineKey];\n        // optimisation 1: line below point. no cross\n        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n          continue;\n        }\n        // optimisation 2: line above point. no cross\n        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n          continue;\n        }\n        // optimisation 3: vertical line case\n        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n          xi = iLine.o.x;\n          // yi = point.y;\n        }\n        // calculate the intersection point\n        else {\n          b1 = 0;\n          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n          a1 = point.y - b1 * point.x;\n          a2 = iLine.o.y - b2 * iLine.o.x;\n\n          xi = -(a1 - a2) / (b1 - b2);\n          // yi = a1 + b1 * xi;\n        }\n        // dont count xi < point.x cases\n        if (xi >= point.x) {\n          xcount += 1;\n        }\n        // optimisation 4: specific for square images\n        if (xcount === 2) {\n          break;\n        }\n      }\n      return xcount;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * the box is intended as aligned to axis of canvas.\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords / .aCoords\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function(absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate);\n      return fabric.util.makeBoundingBoxFromPoints(coords);\n    },\n\n    /**\n     * Returns width of an object's bounding box counting transformations\n     * before 2.0 it was named getWidth();\n     * @return {Number} width value\n     */\n    getScaledWidth: function() {\n      return this._getTransformedDimensions().x;\n    },\n\n    /**\n     * Returns height of an object bounding box counting transformations\n     * before 2.0 it was named getHeight();\n     * @return {Number} height value\n     */\n    getScaledHeight: function() {\n      return this._getTransformedDimensions().y;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function(value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        }\n        else {\n          return this.minScaleLimit;\n        }\n      }\n      else if (value === 0) {\n        return 0.0001;\n      }\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function(value) {\n      this._set('scaleX', value);\n      this._set('scaleY', value);\n      return this.setCoords();\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).width / this.getScaledWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).height / this.getScaledHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    /**\n     * Calculates and returns the .coords of an object.\n     * @return {Object} Object with tl, tr, br, bl ....\n     * @chainable\n     */\n    calcCoords: function(absolute) {\n      var rotateMatrix = this._calcRotateMatrix(),\n          translateMatrix = this._calcTranslateMatrix(),\n          startMatrix = multiplyMatrices(translateMatrix, rotateMatrix),\n          vpt = this.getViewportTransform(),\n          finalMatrix = absolute ? startMatrix : multiplyMatrices(vpt, startMatrix),\n          dim = this._getTransformedDimensions(),\n          w = dim.x / 2, h = dim.y / 2,\n          tl = transformPoint({ x: -w, y: -h }, finalMatrix),\n          tr = transformPoint({ x: w, y: -h }, finalMatrix),\n          bl = transformPoint({ x: -w, y: h }, finalMatrix),\n          br = transformPoint({ x: w, y: h }, finalMatrix);\n      if (!absolute) {\n        var padding = this.padding, angle = degreesToRadians(this.angle),\n            cos = fabric.util.cos(angle), sin = fabric.util.sin(angle),\n            cosP = cos * padding, sinP = sin * padding, cosPSinP = cosP + sinP,\n            cosPMinusSinP = cosP - sinP;\n        if (padding) {\n          tl.x -= cosPMinusSinP;\n          tl.y -= cosPSinP;\n          tr.x += cosPSinP;\n          tr.y -= cosPMinusSinP;\n          bl.x -= cosPSinP;\n          bl.y += cosPMinusSinP;\n          br.x += cosPMinusSinP;\n          br.y += cosPSinP;\n        }\n        var ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n            mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n            mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n            mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n            mtr = new fabric.Point(mt.x + sin * this.rotatingPointOffset, mt.y - cos * this.rotatingPointOffset);\n      }\n\n      // if (!absolute) {\n      //   var canvas = this.canvas;\n      //   setTimeout(function() {\n      //     canvas.contextTop.clearRect(0, 0, 700, 700);\n      //     canvas.contextTop.fillStyle = 'green';\n      //     canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n      //     canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n      //     canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n      //     canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n      //     canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n      //     canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n      //     canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n      //     canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n      //     canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n      //   }, 50);\n      // }\n\n      var coords = {\n        // corners\n        tl: tl, tr: tr, br: br, bl: bl,\n      };\n      if (!absolute) {\n        // middle\n        coords.ml = ml;\n        coords.mt = mt;\n        coords.mr = mr;\n        coords.mb = mb;\n        // rotating point\n        coords.mtr = mtr;\n      }\n      return coords;\n    },\n\n    /**\n     * Sets corner position coordinates based on current angle, width and height.\n     * See {@link https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords|When-to-call-setCoords}\n     * @param {Boolean} [ignoreZoom] set oCoords with or without the viewport transform.\n     * @param {Boolean} [skipAbsolute] skip calculation of aCoords, useful in setViewportTransform\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function(ignoreZoom, skipAbsolute) {\n      this.oCoords = this.calcCoords(ignoreZoom);\n      if (!skipAbsolute) {\n        this.aCoords = this.calcCoords(true);\n      }\n\n      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n      ignoreZoom || (this._setCornerCoords && this._setCornerCoords());\n\n      return this;\n    },\n\n    /**\n     * calculate rotation matrix of an object\n     * @return {Array} rotation matrix for the object\n     */\n    _calcRotateMatrix: function() {\n      return fabric.util.calcRotateMatrix(this);\n    },\n\n    /**\n     * calculate the translation matrix for an object transform\n     * @return {Array} rotation matrix for the object\n     */\n    _calcTranslateMatrix: function() {\n      var center = this.getCenterPoint();\n      return [1, 0, 0, 1, center.x, center.y];\n    },\n\n    transformMatrixKey: function(skipGroup) {\n      var sep = '_', prefix = '';\n      if (!skipGroup && this.group) {\n        prefix = this.group.transformMatrixKey(skipGroup) + sep;\n      };\n      return prefix + this.top + sep + this.left + sep + this.scaleX + sep + this.scaleY +\n        sep + this.skewX + sep + this.skewY + sep + this.angle + sep + this.originX + sep + this.originY +\n        sep + this.width + sep + this.height + sep + this.strokeWidth + this.flipX + this.flipY;\n    },\n\n    /**\n     * calculate transform matrix that represents the current transformations from the\n     * object's properties.\n     * @param {Boolean} [skipGroup] return transform matrix for object not counting parent transformations\n     * @return {Array} transform matrix for the object\n     */\n    calcTransformMatrix: function(skipGroup) {\n      if (skipGroup) {\n        return this.calcOwnMatrix();\n      }\n      var key = this.transformMatrixKey(), cache = this.matrixCache || (this.matrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var matrix = this.calcOwnMatrix();\n      if (this.group) {\n        matrix = multiplyMatrices(this.group.calcTransformMatrix(), matrix);\n      }\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    /**\n     * calculate transform matrix that represents the current transformations from the\n     * object's properties, this matrix does not include the group transformation\n     * @return {Array} transform matrix for the object\n     */\n    calcOwnMatrix: function() {\n      var key = this.transformMatrixKey(true), cache = this.ownMatrixCache || (this.ownMatrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var tMatrix = this._calcTranslateMatrix();\n      this.translateX = tMatrix[4];\n      this.translateY = tMatrix[5];\n      cache.key = key;\n      cache.value = fabric.util.composeMatrix(this);\n      return cache.value;\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @deprecated since 3.4.0, please use fabric.util._calcDimensionsTransformMatrix\n     * not including or including flipX, flipY to emulate the flipping boolean\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n      return fabric.util.calcDimensionsMatrix({\n        skewX: skewX,\n        skewY: skewY,\n        scaleX: this.scaleX * (flipping && this.flipX ? -1 : 1),\n        scaleY: this.scaleY * (flipping && this.flipY ? -1 : 1)\n      });\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getNonTransformedDimensions: function() {\n      var strokeWidth = this.strokeWidth,\n          w = this.width + strokeWidth,\n          h = this.height + strokeWidth;\n      return { x: w, y: h };\n    },\n\n    /*\n     * Calculate object bounding box dimensions from its properties scale, skew.\n     * @param {Number} skewX, a value to override current skewX\n     * @param {Number} skewY, a value to override current skewY\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getTransformedDimensions: function(skewX, skewY) {\n      if (typeof skewX === 'undefined') {\n        skewX = this.skewX;\n      }\n      if (typeof skewY === 'undefined') {\n        skewY = this.skewY;\n      }\n      var dimensions = this._getNonTransformedDimensions(), dimX, dimY,\n          noSkew = skewX === 0 && skewY === 0;\n\n      if (this.strokeUniform) {\n        dimX = this.width;\n        dimY = this.height;\n      }\n      else {\n        dimX = dimensions.x;\n        dimY = dimensions.y;\n      }\n      if (noSkew) {\n        return this._finalizeDimensions(dimX * this.scaleX, dimY * this.scaleY);\n      }\n      else {\n        dimX /= 2;\n        dimY /= 2;\n      }\n      var points = [\n            {\n              x: -dimX,\n              y: -dimY\n            },\n            {\n              x: dimX,\n              y: -dimY\n            },\n            {\n              x: -dimX,\n              y: dimY\n            },\n            {\n              x: dimX,\n              y: dimY\n            }],\n          transformMatrix = fabric.util.calcDimensionsMatrix({\n            scaleX: this.scaleX,\n            scaleY: this.scaleY,\n            skewX: this.skewX,\n            skewY: this.skewY,\n          }),\n          bbox = fabric.util.makeBoundingBoxFromPoints(points, transformMatrix);\n      return this._finalizeDimensions(bbox.width, bbox.height);\n    },\n\n    /*\n     * Calculate object bounding box dimensions from its properties scale, skew.\n     * @param Number width width of the bbox\n     * @param Number height height of the bbox\n     * @private\n     * @return {Object} .x finalized width dimension\n     * @return {Object} .y finalized height dimension\n     */\n    _finalizeDimensions: function(width, height) {\n      return this.strokeUniform ?\n        { x: width + this.strokeWidth, y: height + this.strokeWidth }\n        :\n        { x: width, y: height };\n    },\n    /*\n     * Calculate object dimensions for controls, including padding and canvas zoom.\n     * private\n     */\n    _calculateCurrentDimensions: function()  {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          p = fabric.util.transformPoint(dim, vpt, true);\n\n      return p.scalarAdd(2 * this.padding);\n    },\n  });\n})();\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    }\n    else {\n      this.canvas.sendToBack(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    }\n    else {\n      this.canvas.bringToFront(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.bringForward(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function(index) {\n    if (this.group && this.group.type !== 'activeSelection') {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    }\n    else {\n      this.canvas.moveTo(this, index);\n    }\n    return this;\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  function getSvgColorString(prop, value) {\n    if (!value) {\n      return prop + ': none; ';\n    }\n    else if (value.toLive) {\n      return prop + ': url(#SVGID_' + value.id + '); ';\n    }\n    else {\n      var color = new fabric.Color(value),\n          str = prop + ': ' + color.toRgb() + '; ',\n          opacity = color.getAlpha();\n      if (opacity !== 1) {\n        //change the color in rgb + opacity\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\n      }\n      return str;\n    }\n  }\n\n  var toFixed = fabric.util.toFixed;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n\n      var fillRule = this.fillRule ? this.fillRule : 'nonzero',\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n          strokeDashOffset = this.strokeDashOffset ? this.strokeDashOffset : '0',\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n          visibility = this.visible ? '' : ' visibility: hidden;',\n          filter = skipShadow ? '' : this.getSvgFilter(),\n          fill = getSvgColorString('fill', this.fill),\n          stroke = getSvgColorString('stroke', this.stroke);\n\n      return [\n        stroke,\n        'stroke-width: ', strokeWidth, '; ',\n        'stroke-dasharray: ', strokeDashArray, '; ',\n        'stroke-linecap: ', strokeLineCap, '; ',\n        'stroke-dashoffset: ', strokeDashOffset, '; ',\n        'stroke-linejoin: ', strokeLineJoin, '; ',\n        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n        fill,\n        'fill-rule: ', fillRule, '; ',\n        'opacity: ', opacity, ';',\n        filter,\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\n     * @return {String}\n     */\n    getSvgSpanStyles: function(style, useWhiteSpace) {\n      var term = '; ';\n      var fontFamily = style.fontFamily ?\n        'font-family: ' + (((style.fontFamily.indexOf('\\'') === -1 && style.fontFamily.indexOf('\"') === -1) ?\n          '\\'' + style.fontFamily  + '\\'' : style.fontFamily)) + term : '';\n      var strokeWidth = style.strokeWidth ? 'stroke-width: ' + style.strokeWidth + term : '',\n          fontFamily = fontFamily,\n          fontSize = style.fontSize ? 'font-size: ' + style.fontSize + 'px' + term : '',\n          fontStyle = style.fontStyle ? 'font-style: ' + style.fontStyle + term : '',\n          fontWeight = style.fontWeight ? 'font-weight: ' + style.fontWeight + term : '',\n          fill = style.fill ? getSvgColorString('fill', style.fill) : '',\n          stroke = style.stroke ? getSvgColorString('stroke', style.stroke) : '',\n          textDecoration = this.getSvgTextDecoration(style),\n          deltaY = style.deltaY ? 'baseline-shift: ' + (-style.deltaY) + '; ' : '';\n      if (textDecoration) {\n        textDecoration = 'text-decoration: ' + textDecoration + term;\n      }\n\n      return [\n        stroke,\n        strokeWidth,\n        fontFamily,\n        fontSize,\n        fontStyle,\n        fontWeight,\n        textDecoration,\n        fill,\n        deltaY,\n        useWhiteSpace ? 'white-space: pre; ' : ''\n      ].join('');\n    },\n\n    /**\n     * Returns text-decoration property for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @return {String}\n     */\n    getSvgTextDecoration: function(style) {\n      if ('overline' in style || 'underline' in style || 'linethrough' in style) {\n        return (style.overline ? 'overline ' : '') +\n          (style.underline ? 'underline ' : '') + (style.linethrough ? 'line-through ' : '');\n      }\n      return '';\n    },\n\n    /**\n     * Returns filter for svg shadow\n     * @return {String}\n     */\n    getSvgFilter: function() {\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n    },\n\n    /**\n     * Returns id attribute for svg output\n     * @return {String}\n     */\n    getSvgCommons: function() {\n      return [\n        this.id ? 'id=\"' + this.id + '\" ' : '',\n        this.clipPath ? 'clip-path=\"url(#' + this.clipPath.clipPathId + ')\" ' : '',\n      ].join('');\n    },\n\n    /**\n     * Returns transform-string for svg-export\n     * @param {Boolean} use the full transform or the single object one.\n     * @return {String}\n     */\n    getSvgTransform: function(full, additionalTransform) {\n      var transform = full ? this.calcTransformMatrix() : this.calcOwnMatrix(),\n          svgTransform = 'transform=\"' + fabric.util.matrixToSVG(transform);\n      return svgTransform +\n        (additionalTransform || '') + this.getSvgTransformMatrix() + '\" ';\n    },\n\n    /**\n     * Returns transform-string for svg-export from the transform matrix of single elements\n     * @return {String}\n     */\n    getSvgTransformMatrix: function() {\n      return this.transformMatrix ? ' ' + fabric.util.matrixToSVG(this.transformMatrix) : '';\n    },\n\n    _setSVGBg: function(textBgRects) {\n      if (this.backgroundColor) {\n        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n        textBgRects.push(\n          '\\t\\t<rect ',\n          this._getFillAttributes(this.backgroundColor),\n          ' x=\"',\n          toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n          '\" y=\"',\n          toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n          '\" width=\"',\n          toFixed(this.width, NUM_FRACTION_DIGITS),\n          '\" height=\"',\n          toFixed(this.height, NUM_FRACTION_DIGITS),\n          '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      return this._createBaseSVGMarkup(this._toSVG(reviver), { reviver: reviver });\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      return '\\t' + this._createBaseClipPathSVGMarkup(this._toSVG(reviver), { reviver: reviver });\n    },\n\n    /**\n     * @private\n     */\n    _createBaseClipPathSVGMarkup: function(objectMarkup, options) {\n      options = options || {};\n      var reviver = options.reviver,\n          additionalTransform = options.additionalTransform || '',\n          commonPieces = [\n            this.getSvgTransform(true, additionalTransform),\n            this.getSvgCommons(),\n          ].join(''),\n          // insert commons in the markup, style and svgCommons\n          index = objectMarkup.indexOf('COMMON_PARTS');\n      objectMarkup[index] = commonPieces;\n      return reviver ? reviver(objectMarkup.join('')) : objectMarkup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _createBaseSVGMarkup: function(objectMarkup, options) {\n      options = options || {};\n      var noStyle = options.noStyle,\n          reviver = options.reviver,\n          styleInfo = noStyle ? '' : 'style=\"' + this.getSvgStyles() + '\" ',\n          shadowInfo = options.withShadow ? 'style=\"' + this.getSvgFilter() + '\" ' : '',\n          clipPath = this.clipPath,\n          vectorEffect = this.strokeUniform ? 'vector-effect=\"non-scaling-stroke\" ' : '',\n          absoluteClipPath = clipPath && clipPath.absolutePositioned,\n          stroke = this.stroke, fill = this.fill, shadow = this.shadow,\n          commonPieces, markup = [], clipPathMarkup,\n          // insert commons in the markup, style and svgCommons\n          index = objectMarkup.indexOf('COMMON_PARTS'),\n          additionalTransform = options.additionalTransform;\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        clipPathMarkup = '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' +\n          clipPath.toClipPathSVG(reviver) +\n          '</clipPath>\\n';\n      }\n      if (absoluteClipPath) {\n        markup.push(\n          '<g ', shadowInfo, this.getSvgCommons(), ' >\\n'\n        );\n      }\n      markup.push(\n        '<g ',\n        this.getSvgTransform(false),\n        !absoluteClipPath ? shadowInfo + this.getSvgCommons() : '',\n        ' >\\n'\n      );\n      commonPieces = [\n        styleInfo,\n        vectorEffect,\n        noStyle ? '' : this.addPaintOrder(), ' ',\n        additionalTransform ? 'transform=\"' + additionalTransform + '\" ' : '',\n      ].join('');\n      objectMarkup[index] = commonPieces;\n      if (fill && fill.toLive) {\n        markup.push(fill.toSVG(this));\n      }\n      if (stroke && stroke.toLive) {\n        markup.push(stroke.toSVG(this));\n      }\n      if (shadow) {\n        markup.push(shadow.toSVG(this));\n      }\n      if (clipPath) {\n        markup.push(clipPathMarkup);\n      }\n      markup.push(objectMarkup.join(''));\n      markup.push('</g>\\n');\n      absoluteClipPath && markup.push('</g>\\n');\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n\n    addPaintOrder: function() {\n      return this.paintFirst !== 'fill' ? ' paint-order=\"' + this.paintFirst + '\" ' : '';\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function() {\n\n  var extend = fabric.util.object.extend,\n      originalSet = 'stateProperties';\n\n  /*\n    Depends on `stateProperties`\n  */\n  function saveProps(origin, destination, props) {\n    var tmpObj = { }, deep = true;\n    props.forEach(function(prop) {\n      tmpObj[prop] = origin[prop];\n    });\n    extend(origin[destination], tmpObj, deep);\n  }\n\n  function _isEqual(origValue, currentValue, firstPass) {\n    if (origValue === currentValue) {\n      // if the objects are identical, return\n      return true;\n    }\n    else if (Array.isArray(origValue)) {\n      if (!Array.isArray(currentValue) || origValue.length !== currentValue.length) {\n        return false;\n      }\n      for (var i = 0, len = origValue.length; i < len; i++) {\n        if (!_isEqual(origValue[i], currentValue[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else if (origValue && typeof origValue === 'object') {\n      var keys = Object.keys(origValue), key;\n      if (!currentValue ||\n          typeof currentValue !== 'object' ||\n          (!firstPass && keys.length !== Object.keys(currentValue).length)\n      ) {\n        return false;\n      }\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        // since clipPath is in the statefull cache list and the clipPath objects\n        // would be iterated as an object, this would lead to possible infinite recursion\n        if (key === 'canvas') {\n          continue;\n        }\n        if (!_isEqual(origValue[key], currentValue[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Returns true if object state (one of its state properties) was changed\n     * @param {String} [propertySet] optional name for the set of property we want to save\n     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n     */\n    hasStateChanged: function(propertySet) {\n      propertySet = propertySet || originalSet;\n      var dashedPropertySet = '_' + propertySet;\n      if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\n        return true;\n      }\n      return !_isEqual(this[dashedPropertySet], this, true);\n    },\n\n    /**\n     * Saves state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    saveState: function(options) {\n      var propertySet = options && options.propertySet || originalSet,\n          destination = '_' + propertySet;\n      if (!this[destination]) {\n        return this.setupState(options);\n      }\n      saveProps(this, destination, this[propertySet]);\n      if (options && options.stateProperties) {\n        saveProps(this, destination, options.stateProperties);\n      }\n      return this;\n    },\n\n    /**\n     * Setups state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    setupState: function(options) {\n      options = options || { };\n      var propertySet = options.propertySet || originalSet;\n      options.propertySet = propertySet;\n      this['_' + propertySet] = { };\n      this.saveState(options);\n      return this;\n    }\n  });\n})();\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * The object interactivity controls.\n     * @private\n     */\n    _controlsVisibility: null,\n\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function(pointer) {\n      // objects in group, anykind, are not self modificable,\n      // must not return an hovered corner.\n      if (!this.hasControls || this.group || (!this.canvas || this.canvas._activeObject !== this)) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines;\n      this.__corner = 0;\n      for (var i in this.oCoords) {\n\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        if (i === 'mtr' && !this.hasRotatingPoint) {\n          continue;\n        }\n\n        if (this.get('lockUniScaling') &&\n           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n          continue;\n        }\n\n        lines = this._getImageLines(this.oCoords[i].corner);\n\n        // debugging\n\n        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * @private\n     */\n    _setCornerCoords: function() {\n      var coords = this.oCoords,\n          newTheta = degreesToRadians(45 - this.angle),\n          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n          /* 0.707106 stands for sqrt(2)/2 */\n          cornerHypotenuse = this.cornerSize * 0.707106,\n          cosHalfOffset = cornerHypotenuse * fabric.util.cos(newTheta),\n          sinHalfOffset = cornerHypotenuse * fabric.util.sin(newTheta),\n          x, y;\n\n      for (var point in coords) {\n        x = coords[point].x;\n        y = coords[point].y;\n        coords[point].corner = {\n          tl: {\n            x: x - sinHalfOffset,\n            y: y - cosHalfOffset\n          },\n          tr: {\n            x: x + cosHalfOffset,\n            y: y - sinHalfOffset\n          },\n          bl: {\n            x: x - cosHalfOffset,\n            y: y + sinHalfOffset\n          },\n          br: {\n            x: x + sinHalfOffset,\n            y: y + cosHalfOffset\n          }\n        };\n      }\n    },\n\n    /**\n     * Draws a colored layer behind the object, inside its selection borders.\n     * Requires public options: padding, selectionBackgroundColor\n     * this function is called when the context is transformed\n     * has checks to be skipped when the object is on a staticCanvas\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawSelectionBackground: function(ctx) {\n      if (!this.selectionBackgroundColor ||\n        (this.canvas && !this.canvas.interactive) ||\n        (this.canvas && this.canvas._activeObject !== this)\n      ) {\n        return this;\n      }\n      ctx.save();\n      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n          vpt = this.canvas.viewportTransform;\n      ctx.translate(center.x, center.y);\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.fillStyle = this.selectionBackgroundColor;\n      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth,\n          drawRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\n            styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          hasControls = typeof styleOverride.hasControls !== 'undefined' ?\n            styleOverride.hasControls : this.hasControls,\n          rotatingPointOffset = typeof styleOverride.rotatingPointOffset !== 'undefined' ?\n            styleOverride.rotatingPointOffset : this.rotatingPointOffset;\n\n      ctx.save();\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      if (drawRotatingPoint && this.isControlVisible('mtr') && hasControls) {\n\n        var rotateHeight = -height / 2;\n\n        ctx.beginPath();\n        ctx.moveTo(0, rotateHeight);\n        ctx.lineTo(0, rotateHeight - rotatingPointOffset);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box when it is inside a group.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {object} options object representing current object parameters\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBordersInGroup: function(ctx, options, styleOverride) {\n      styleOverride = styleOverride || {};\n      var p = this._getNonTransformedDimensions(),\n          matrix = fabric.util.composeMatrix({\n            scaleX: options.scaleX,\n            scaleY: options.scaleY,\n            skewX: options.skewX\n          }),\n          wh = fabric.util.transformPoint(p, matrix),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          width = wh.x,\n          height = wh.y,\n          scaleOffset = styleOverride.cornerSize || this.cornerSize,\n          left = -(width + scaleOffset) / 2,\n          top = -(height + scaleOffset) / 2,\n          transparentCorners = typeof styleOverride.transparentCorners !== 'undefined' ?\n            styleOverride.transparentCorners : this.transparentCorners,\n          hasRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\n            styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          methodName = transparentCorners ? 'stroke' : 'fill';\n\n      ctx.save();\n      ctx.strokeStyle = ctx.fillStyle = styleOverride.cornerColor || this.cornerColor;\n      if (!this.transparentCorners) {\n        ctx.strokeStyle = styleOverride.cornerStrokeColor || this.cornerStrokeColor;\n      }\n      this._setLineDash(ctx, styleOverride.cornerDashArray || this.cornerDashArray, null);\n\n      // top-left\n      this._drawControl('tl', ctx, methodName,\n        left,\n        top, styleOverride);\n\n      // top-right\n      this._drawControl('tr', ctx, methodName,\n        left + width,\n        top, styleOverride);\n\n      // bottom-left\n      this._drawControl('bl', ctx, methodName,\n        left,\n        top + height, styleOverride);\n\n      // bottom-right\n      this._drawControl('br', ctx, methodName,\n        left + width,\n        top + height, styleOverride);\n\n      if (!this.get('lockUniScaling')) {\n\n        // middle-top\n        this._drawControl('mt', ctx, methodName,\n          left + width / 2,\n          top, styleOverride);\n\n        // middle-bottom\n        this._drawControl('mb', ctx, methodName,\n          left + width / 2,\n          top + height, styleOverride);\n\n        // middle-right\n        this._drawControl('mr', ctx, methodName,\n          left + width,\n          top + height / 2, styleOverride);\n\n        // middle-left\n        this._drawControl('ml', ctx, methodName,\n          left,\n          top + height / 2, styleOverride);\n      }\n\n      // middle-top-rotate\n      if (hasRotatingPoint) {\n        this._drawControl('mtr', ctx, methodName,\n          left + width / 2,\n          top - this.rotatingPointOffset, styleOverride);\n      }\n\n      ctx.restore();\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _drawControl: function(control, ctx, methodName, left, top, styleOverride) {\n      styleOverride = styleOverride || {};\n      if (!this.isControlVisible(control)) {\n        return;\n      }\n      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n      switch (styleOverride.cornerStyle || this.cornerStyle) {\n        case 'circle':\n          ctx.beginPath();\n          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n          ctx[methodName]();\n          if (stroke) {\n            ctx.stroke();\n          }\n          break;\n        default:\n          this.transparentCorners || ctx.clearRect(left, top, size, size);\n          ctx[methodName + 'Rect'](left, top, size, size);\n          if (stroke) {\n            ctx.strokeRect(left, top, size, size);\n          }\n      }\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function(controlName) {\n      return this._getControlsVisibility()[controlName];\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function(controlName, visible) {\n      this._getControlsVisibility()[controlName] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function(options) {\n      options || (options = { });\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the instance of the control visibility set for this object.\n     * @private\n     * @returns {Object}\n     */\n    _getControlsVisibility: function() {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {\n          tl: true,\n          tr: true,\n          br: true,\n          bl: true,\n          ml: true,\n          mt: true,\n          mr: true,\n          mb: true,\n          mtr: true\n        };\n      }\n      return this._controlsVisibility;\n    },\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to deselect this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onDeselect: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to select this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onSelect: function() {\n      // implemented by sub-classes, as needed.\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectH: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.left,\n      endValue: this.getCenter().left,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('left', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectV: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.top,\n      endValue: this.getCenter().top,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('top', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxRemove: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.opacity,\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('opacity', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function () {\n        _this.remove(object);\n        onComplete();\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @chainable\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string — one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function() {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [], prop, skipCallbacks;\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n      }\n    }\n    else {\n      this._animate.apply(this, arguments);\n    }\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function(property, to, options, skipCallbacks) {\n    var _this = this, propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = { };\n    }\n    else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var currentValue = propPair\n      ? this.get(propPair[0])[propPair[1]]\n      : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (~to.indexOf('=')) {\n      to = currentValue + parseFloat(to.replace('=', ''));\n    }\n    else {\n      to = parseFloat(to);\n    }\n\n    fabric.util.animate({\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function() {\n        return options.abort.call(_this);\n      },\n      onChange: function(value, valueProgress, timeProgress) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        }\n        else {\n          _this.set(property, value);\n        }\n        if (skipCallbacks) {\n          return;\n        }\n        options.onChange && options.onChange(value, valueProgress, timeProgress);\n      },\n      onComplete: function(value, valueProgress, timeProgress) {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n        options.onComplete && options.onComplete(value, valueProgress, timeProgress);\n      }\n    });\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('x1', 'x2', 'y1', 'y2'),\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function(points, options) {\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n\n      this.left = 'left' in options\n        ? options.left\n        : this._getLeftToOriginX();\n\n      this.top = 'top' in options\n        ? options.top\n        : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originX',\n        axis1: 'x1',\n        axis2: 'x2',\n        dimension: 'width'\n      },\n      { // possible values of origin\n        nearest: 'left',\n        center: 'center',\n        farthest: 'right'\n      }\n    ),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originY',\n        axis1: 'y1',\n        axis2: 'y2',\n        dimension: 'height'\n      },\n      { // possible values of origin\n        nearest: 'top',\n        center: 'center',\n        farthest: 'bottom'\n      }\n    ),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n\n      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n        // move from center (of virtual box) to its left/top corner\n        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n        var p = this.calcLinePoints();\n        ctx.moveTo(p.x1, p.y1);\n        ctx.lineTo(p.x2, p.y2);\n      }\n\n      ctx.lineWidth = this.strokeWidth;\n\n      // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p = this.calcLinePoints();\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return {\n        x: (this.x1 + this.x2) / 2,\n        y: (this.y1 + this.y2) / 2,\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @methd toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      var dim = this.callSuper('_getNonTransformedDimensions');\n      if (this.strokeLineCap === 'butt') {\n        if (this.width === 0) {\n          dim.y -= this.strokeWidth;\n        }\n        if (this.height === 0) {\n          dim.x -= this.strokeWidth;\n        }\n      }\n      return dim;\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function() {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = (xMult * this.width * 0.5),\n          y1 = (yMult * this.height * 0.5),\n          x2 = (xMult * this.width * -0.5),\n          y2 = (yMult * this.height * -0.5);\n\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var p = this.calcLinePoints();\n      return [\n        '<line ', 'COMMON_PARTS',\n        'x1=\"', p.x1,\n        '\" y1=\"', p.y1,\n        '\" x2=\"', p.x2,\n        '\" y2=\"', p.y2,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] callback function invoked after parsing\n   */\n  fabric.Line.fromElement = function(element, callback, options) {\n    options = options || { };\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [\n          parsedAttributes.x1 || 0,\n          parsedAttributes.y1 || 0,\n          parsedAttributes.x2 || 0,\n          parsedAttributes.y2 || 0\n        ];\n    callback(new fabric.Line(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Line.fromObject = function(object, callback) {\n    function _callback(instance) {\n      delete instance.points;\n      callback && callback(instance);\n    };\n    var options = clone(object, true);\n    options.points = [object.x1, object.y1, object.x2, object.y2];\n    fabric.Object._fromObject('Line', options, _callback, 'points');\n  };\n\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n\n    return function() {\n      switch (this.get(origin)) {\n        case nearest:\n          return Math.min(this.get(axis1), this.get(axis2));\n        case center:\n          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n        case farthest:\n          return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n\n  }\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      pi = Math.PI;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * Start angle of the circle, moving clockwise\n     * deprectated type, this should be in degree, this was an oversight.\n     * probably will change to degrees in next major version\n     * @type Number\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * deprectated type, this should be in degree, this was an oversight.\n     * probably will change to degrees in next major version\n     * @type Number\n     * @default 2Pi\n     */\n    endAngle: pi * 2,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('radius', 'startAngle', 'endAngle'),\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var svgString, x = 0, y = 0,\n          angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\n      if (angle === 0) {\n        svgString = [\n          '<circle ', 'COMMON_PARTS',\n          'cx=\"' + x + '\" cy=\"' + y + '\" ',\n          'r=\"', this.radius,\n          '\" />\\n'\n        ];\n      }\n      else {\n        var startX = fabric.util.cos(this.startAngle) * this.radius,\n            startY = fabric.util.sin(this.startAngle) * this.radius,\n            endX = fabric.util.cos(this.endAngle) * this.radius,\n            endY = fabric.util.sin(this.endAngle) * this.radius,\n            largeFlag = angle > pi ? '1' : '0';\n        svgString = [\n          '<path d=\"M ' + startX + ' ' + startY,\n          ' A ' + this.radius + ' ' + this.radius,\n          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\n          '\" ', 'COMMON_PARTS', ' />\\n'\n        ];\n      }\n      return svgString;\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.arc(\n        0,\n        0,\n        this.radius,\n        this.startAngle,\n        this.endAngle, false);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function() {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function() {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function(value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @param {Object} [options] Options object\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   */\n  fabric.Circle.fromElement = function(element, callback) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.radius;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.radius;\n    callback(new fabric.Circle(parsedAttributes));\n  };\n\n  /**\n   * @private\n   */\n  function isValidRadius(attributes) {\n    return (('radius' in attributes) && (attributes.radius >= 0));\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {Object} Instance of fabric.Circle\n   */\n  fabric.Circle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Circle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Width is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    width: 100,\n\n    /**\n     * Height is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    height: 100,\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [\n            -widthBy2 + ' ' + heightBy2,\n            '0 ' + -heightBy2,\n            widthBy2 + ' ' + heightBy2\n          ].join(',');\n      return [\n        '<polygon ', 'COMMON_PARTS',\n        'points=\"', points,\n        '\" />'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Triangle} instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Triangle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Triangle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      piBy2   = Math.PI * 2;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('rx', options && options.rx || 0);\n      this.set('ry', options && options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      switch (key) {\n\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n\n      }\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function() {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function() {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      return [\n        '<ellipse ', 'COMMON_PARTS',\n        'cx=\"0\" cy=\"0\" ',\n        'rx=\"', this.rx,\n        '\" ry=\"', this.ry,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n      ctx.arc(\n        0,\n        0,\n        this.rx,\n        0,\n        piBy2,\n        false);\n      ctx.restore();\n      this._renderPaintInOrder(ctx);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromElement = function(element, callback) {\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\n    callback(new fabric.Ellipse(parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Ellipse', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('rx', 'ry'),\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this._initRxRy();\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function() {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      }\n      else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n\n      // 1x1 case (used in spray brush) optimization was removed because\n      // with caching and higher zoom level this makes more damage than help\n\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = -this.width / 2,\n          y = -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n          k = 1 - 0.5522847498;\n      ctx.beginPath();\n\n      ctx.moveTo(x + rx, y);\n\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var x = -this.width / 2, y = -this.height / 2;\n      return [\n        '<rect ', 'COMMON_PARTS',\n        'x=\"', x, '\" y=\"', y,\n        '\" rx=\"', this.rx, '\" ry=\"', this.ry,\n        '\" width=\"', this.width, '\" height=\"', this.height,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Rect.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n    options = options || { };\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top  = parsedAttributes.top  || 0;\n    parsedAttributes.height  = parsedAttributes.height || 0;\n    parsedAttributes.width  = parsedAttributes.width || 0;\n    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n    callback(rect);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n   */\n  fabric.Rect.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Rect', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('points'),\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function(points, options) {\n      options = options || {};\n      this.points = points || [];\n      this.callSuper('initialize', options);\n      this._setPositionDimensions(options);\n    },\n\n    _setPositionDimensions: function(options) {\n      var calcDim = this._calcDimensions(options), correctLeftTop;\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n      if (!options.fromSVG) {\n        correctLeftTop = this.translateToGivenOrigin(\n          { x: calcDim.left - this.strokeWidth / 2, y: calcDim.top - this.strokeWidth / 2 },\n          'left',\n          'top',\n          this.originX,\n          this.originY\n        );\n      }\n      if (typeof options.left === 'undefined') {\n        this.left = options.fromSVG ? calcDim.left : correctLeftTop.x;\n      }\n      if (typeof options.top === 'undefined') {\n        this.top = options.fromSVG ? calcDim.top : correctLeftTop.y;\n      }\n      this.pathOffset = {\n        x: calcDim.left + this.width / 2,\n        y: calcDim.top + this.height / 2\n      };\n    },\n\n    /**\n     * Calculate the polygon min and max point from points array,\n     * returning an object with left, top, widht, height to measure the\n     * polygon size\n     * @return {Object} object.left X coordinate of the polygon leftmost point\n     * @return {Object} object.top Y coordinate of the polygon topmost point\n     * @return {Object} object.width distance between X coordinates of the polygon leftmost and rightmost point\n     * @return {Object} object.height distance between Y coordinates of the polygon topmost and bottommost point\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var points = this.points,\n          minX = min(points, 'x') || 0,\n          minY = min(points, 'y') || 0,\n          maxX = max(points, 'x') || 0,\n          maxY = max(points, 'y') || 0,\n          width = (maxX - minX),\n          height = (maxY - minY);\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var points = [], diffX = this.pathOffset.x, diffY = this.pathOffset.y,\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(\n          toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',',\n          toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' '\n        );\n      }\n      return [\n        '<' + this.type + ' ', 'COMMON_PARTS',\n        'points=\"', points.join(''),\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    commonRender: function(ctx) {\n      var point, len = this.points.length,\n          x = this.pathOffset.x,\n          y = this.pathOffset.y;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n      ctx.beginPath();\n      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x - x, point.y - y);\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p1, p2;\n\n      ctx.beginPath();\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        p1 = this.points[i];\n        p2 = this.points[i + 1] || p1;\n        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.get('points').length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parser\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polyline.fromElementGenerator = function(_class) {\n    return function(element, callback, options) {\n      if (!element) {\n        return callback(null);\n      }\n      options || (options = { });\n\n      var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n          parsedAttributes = fabric.parseAttributes(element, fabric[_class].ATTRIBUTE_NAMES);\n      parsedAttributes.fromSVG = true;\n      callback(new fabric[_class](points, extend(parsedAttributes, options)));\n    };\n  };\n\n  fabric.Polyline.fromElement = fabric.Polyline.fromElementGenerator('Polyline');\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polyline.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polyline', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Polyline\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n  fabric.Polygon = fabric.util.createClass(fabric.Polyline, /** @lends fabric.Polygon.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      ctx.closePath();\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      this.callSuper('_renderDashedStroke', ctx);\n      ctx.closePath();\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polygon.fromElement = fabric.Polyline.fromElementGenerator('Polygon');\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polygon.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polygon', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      _toString = Object.prototype.toString,\n      drawArc = fabric.util.drawArc,\n      toFixed = fabric.util.toFixed,\n      commandLengths = {\n        m: 2,\n        l: 2,\n        h: 1,\n        v: 1,\n        c: 6,\n        s: 4,\n        q: 4,\n        t: 2,\n        a: 7\n      },\n      repeatedCommands = {\n        m: 'l',\n        M: 'L'\n      };\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('path', 'fillRule'),\n\n    stateProperties: fabric.Object.prototype.stateProperties.concat('path'),\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function(path, options) {\n      options = options || { };\n      this.callSuper('initialize', options);\n\n      if (!path) {\n        path = [];\n      }\n\n      var fromArray = _toString.call(path) === '[object Array]';\n\n      this.path = fromArray\n        ? path\n        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n      if (!this.path) {\n        return;\n      }\n\n      if (!fromArray) {\n        this.path = this._parsePath();\n      }\n\n      fabric.Polyline.prototype._setPositionDimensions.call(this, options);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _renderPathCommands: function(ctx) {\n      var current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            ctx.bezierCurveTo(\n              x + current[1] + l, // x1\n              y + current[2] + t, // y1\n              controlX + l, // x2\n              controlY + t, // y2\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(\n              current[1] + l,\n              current[2] + t,\n              controlX + l,\n              controlY + t,\n              x + l,\n              y + t\n            );\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              x + current[1] + l,\n              y + current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            ctx.quadraticCurveTo(\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x + l,\n              current[7] + y + t\n            ]);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + l,\n              current[7] + t\n            ]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n        previous = current;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function(ctx) {\n      this._renderPathCommands(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Path (' + this.complexity() +\n        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        path: this.path.map(function(item) { return item.slice(); }),\n      });\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(['sourcePath'].concat(propertiesToInclude));\n      if (o.sourcePath) {\n        delete o.path;\n      }\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var path = this.path.map(function(path) {\n        return path.join(' ');\n      }).join(' ');\n      return [\n        '<path ', 'COMMON_PARTS',\n        'd=\"', path,\n        '\" stroke-linecap=\"round\" ',\n        '/>\\n'\n      ];\n    },\n\n    _getOffsetTransform: function() {\n      var digits = fabric.Object.NUM_FRACTION_DIGITS;\n      return ' translate(' + toFixed(-this.pathOffset.x, digits) + ', ' +\n          toFixed(-this.pathOffset.y, digits) + ')';\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      var additionalTransform = this._getOffsetTransform();\n      return '\\t' + this._createBaseClipPathSVGMarkup(\n        this._toSVG(), { reviver: reviver, additionalTransform: additionalTransform }\n      );\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var additionalTransform = this._getOffsetTransform();\n      return this._createBaseSVGMarkup(this._toSVG(), { reviver: reviver, additionalTransform: additionalTransform  });\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _parsePath: function() {\n      var result = [],\n          coords = [],\n          currentPath,\n          parsed,\n          re = fabric.rePathCommand,\n          match,\n          coordsStr;\n\n      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n        currentPath = this.path[i];\n\n        coordsStr = currentPath.slice(1).trim();\n        coords.length = 0;\n\n        while ((match = re.exec(coordsStr))) {\n          coords.push(match[0]);\n        }\n\n        coordsParsed = [currentPath.charAt(0)];\n\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          parsed = parseFloat(coords[j]);\n          if (!isNaN(parsed)) {\n            coordsParsed.push(parsed);\n          }\n        }\n\n        var command = coordsParsed[0],\n            commandLength = commandLengths[command.toLowerCase()],\n            repeatedCommand = repeatedCommands[command] || command;\n\n        if (coordsParsed.length - 1 > commandLength) {\n          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n            command = repeatedCommand;\n          }\n        }\n        else {\n          result.push(coordsParsed);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var aX = [],\n          aY = [],\n          current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            bounds = [];\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [];\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            bounds = [];\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            bounds = [];\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            bounds = [];\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            bounds = [];\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              x + current[1], // x1\n              y + current[2], // y1\n              controlX, // x2\n              controlY, // y2\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            controlX = current[3];\n            controlY = current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              current[1],\n              current[2],\n              controlX,\n              controlY,\n              current[5],\n              current[6]\n            );\n            x = current[5];\n            y = current[6];\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              x + current[1],\n              y + current[2],\n              tempX,\n              tempY\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              current[1],\n              current[2],\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            controlX = current[1];\n            controlY = current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              current[3],\n              current[4]\n            );\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x,\n              current[7] + y\n            );\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6],\n              current[7]\n            );\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n        previous = current;\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY;\n\n      return {\n        left: minX,\n        top: minY,\n        width: deltaX,\n        height: deltaY\n      };\n    }\n  });\n\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Path.fromObject = function(object, callback) {\n    if (typeof object.sourcePath === 'string') {\n      var pathUrl = object.sourcePath;\n      fabric.loadSVGFromURL(pathUrl, function (elements) {\n        var path = elements[0];\n        path.setOptions(object);\n        callback && callback(path);\n      });\n    }\n    else {\n      fabric.Object._fromObject('Path', object, callback, 'path');\n    }\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   */\n  fabric.Path.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    parsedAttributes.fromSVG = true;\n    callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max;\n\n  if (fabric.Group) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Indicates if click, mouseover, mouseout events & hoverCursor should also check for subtargets\n     * @type Boolean\n     * @default\n     */\n    subTargetCheck: false,\n\n    /**\n     * Groups are container, do not render anything on theyr own, ence no cache properties\n     * @type Array\n     * @default\n     */\n    cacheProperties: [],\n\n    /**\n     * setOnGroup is a method used for TextBox that is no more used since 2.0.0 The behavior is still\n     * available setting this boolean to true.\n     * @type Boolean\n     * @since 2.0.0\n     * @default\n     */\n    useSetOnGroup: false,\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options, isAlreadyGrouped) {\n      options = options || {};\n      this._objects = [];\n      // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n      isAlreadyGrouped && this.callSuper('initialize', options);\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (!isAlreadyGrouped) {\n        var center = options && options.centerPoint;\n        // we want to set origins before calculating the bounding box.\n        // so that the topleft can be set with that in mind.\n        // if specific top and left are passed, are overwritten later\n        // with the callSuper('initialize', options)\n        if (options.originX !== undefined) {\n          this.originX = options.originX;\n        }\n        if (options.originY !== undefined) {\n          this.originY = options.originY;\n        }\n        // if coming from svg i do not want to calc bounds.\n        // i assume width and height are passed along options\n        center || this._calcBounds();\n        this._updateObjectsCoords(center);\n        delete options.centerPoint;\n        this.callSuper('initialize', options);\n      }\n      else {\n        this._updateObjectsACoords();\n      }\n\n      this.setCoords();\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsACoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      for (var i = this._objects.length; i--; ){\n        this._objects[i].setCoords(ignoreZoom, skipAbsolute);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function(center) {\n      var center = center || this.getCenterPoint();\n      for (var i = this._objects.length; i--; ){\n        this._updateObjectCoords(this._objects[i], center);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {fabric.Point} center, current center of group.\n     */\n    _updateObjectCoords: function(object, center) {\n      var objectLeft = object.left,\n          objectTop = object.top,\n          ignoreZoom = true, skipAbsolute = true;\n\n      object.set({\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.group = this;\n      object.setCoords(ignoreZoom, skipAbsolute);\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      if (object) {\n        this._objects.push(object);\n        object.group = this;\n        object._set('canvas', this.canvas);\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n\n      this.remove(object);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function(object) {\n      this.dirty = true;\n      object.group = this;\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function(object) {\n      this.dirty = true;\n      delete object.group;\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n      if (this.useSetOnGroup) {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n      if (key === 'canvas') {\n        while (i--) {\n          this._objects[i]._set(key, value);\n        }\n      }\n      fabric.Object.prototype._set.call(this, key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var _includeDefaultValues = this.includeDefaultValues;\n      var objsToObject = this._objects.map(function(obj) {\n        var originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = _includeDefaultValues;\n        var _obj = obj.toObject(propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        return _obj;\n      });\n      var obj = fabric.Object.prototype.toObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Returns object representation of an instance, in dataless mode.\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var objsToObject, sourcePath = this.sourcePath;\n      if (sourcePath) {\n        objsToObject = sourcePath;\n      }\n      else {\n        var _includeDefaultValues = this.includeDefaultValues;\n        objsToObject = this._objects.map(function(obj) {\n          var originalDefaults = obj.includeDefaultValues;\n          obj.includeDefaultValues = _includeDefaultValues;\n          var _obj = obj.toDatalessObject(propertiesToInclude);\n          obj.includeDefaultValues = originalDefaults;\n          return _obj;\n        });\n      }\n      var obj = fabric.Object.prototype.toDatalessObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function(ctx) {\n      this._transformDone = true;\n      this.callSuper('render', ctx);\n      this._transformDone = false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group is already cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      var ownCache = fabric.Object.prototype.shouldCache.call(this);\n      if (ownCache) {\n        for (var i = 0, len = this._objects.length; i < len; i++) {\n          if (this._objects[i].willDrawShadow()) {\n            this.ownCaching = false;\n            return false;\n          }\n        }\n      }\n      return ownCache;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (this.shadow) {\n        return fabric.Object.prototype.willDrawShadow.call(this);\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return this.ownCaching || (this.group && this.group.isOnACache());\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i].render(ctx);\n      }\n      this._drawClipPath(ctx);\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.callSuper('isCacheDirty', skipCanvas)) {\n        return true;\n      }\n      if (!this.statefullCache) {\n        return false;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].isCacheDirty(true)) {\n          if (this._cacheCanvas) {\n            // if this group has not a cache canvas there is nothing to clean\n            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Retores original state of each of group objects (original state is that which was before group was created).\n     * @private\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function() {\n      this._objects.forEach(this._restoreObjectState, this);\n      return this;\n    },\n\n    /**\n     * Realises the transform from this group onto the supplied object\n     * i.e. it tells you what would happen if the supplied object was in\n     * the group, and then the group was destroyed. It mutates the supplied\n     * object.\n     * @param {fabric.Object} object\n     * @return {fabric.Object} transformedObject\n     */\n    realizeTransform: function(object) {\n      var matrix = object.calcTransformMatrix(),\n          options = fabric.util.qrDecompose(matrix),\n          center = new fabric.Point(options.translateX, options.translateY);\n      object.flipX = false;\n      object.flipY = false;\n      object.set('scaleX', options.scaleX);\n      object.set('scaleY', options.scaleY);\n      object.skewX = options.skewX;\n      object.skewY = options.skewY;\n      object.angle = options.angle;\n      object.setPositionByOrigin(center, 'center', 'center');\n      return object;\n    },\n\n    /**\n     * Restores original state of a specified object in group\n     * @private\n     * @param {fabric.Object} object\n     * @return {fabric.Group} thisArg\n     */\n    _restoreObjectState: function(object) {\n      this.realizeTransform(object);\n      object.setCoords();\n      delete object.group;\n      return this;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function() {\n      // when group is destroyed objects needs to get a repaint to be eventually\n      // displayed on canvas.\n      this._objects.forEach(function(object) {\n        object.set('dirty', true);\n      });\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * make a group an active selection, remove the group from canvas\n     * the group has to be on canvas for this to work.\n     * @return {fabric.ActiveSelection} thisArg\n     * @chainable\n     */\n    toActiveSelection: function() {\n      if (!this.canvas) {\n        return;\n      }\n      var objects = this._objects, canvas = this.canvas;\n      this._objects = [];\n      var options = this.toObject();\n      delete options.objects;\n      var activeSelection = new fabric.ActiveSelection([]);\n      activeSelection.set(options);\n      activeSelection.type = 'activeSelection';\n      canvas.remove(this);\n      objects.forEach(function(object) {\n        object.group = activeSelection;\n        object.dirty = true;\n        canvas.add(object);\n      });\n      activeSelection.canvas = canvas;\n      activeSelection._objects = objects;\n      canvas._activeObject = activeSelection;\n      activeSelection.setCoords();\n      return activeSelection;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    ungroupOnCanvas: function() {\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Sets coordinates of all objects inside group\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      this.forEachObject(function(object) {\n        object.setCoords(ignoreZoom, skipAbsolute);\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function(onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o, prop,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0, iLen = this._objects.length,\n          j, jLen = props.length,\n          ignoreZoom = true;\n\n      for ( ; i < iLen; ++i) {\n        o = this._objects[i];\n        o.setCoords(ignoreZoom);\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(o.oCoords[prop].x);\n          aY.push(o.oCoords[prop].y);\n        }\n      }\n\n      this._getBounds(aX, aY, onlyWidthHeight);\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function(aX, aY, onlyWidthHeight) {\n      var minXY = new fabric.Point(min(aX), min(aY)),\n          maxXY = new fabric.Point(max(aX), max(aY)),\n          top = minXY.y || 0, left = minXY.x || 0,\n          width = (maxXY.x - minXY.x) || 0,\n          height = (maxXY.y - minXY.y) || 0;\n      this.width = width;\n      this.height = height;\n      if (!onlyWidthHeight) {\n        // the bounding box always finds the topleft most corner.\n        // whatever is the group origin, we set up here the left/top position.\n        this.setPositionByOrigin({ x: left, y: top }, 'left', 'top');\n      }\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    _toSVG: function(reviver) {\n      var svgString = ['<g ', 'COMMON_PARTS', ' >\\n'];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t\\t', this._objects[i].toSVG(reviver));\n      }\n      svgString.push('</g>\\n');\n      return svgString;\n    },\n\n    /**\n     * Returns styles-string for svg-export, specific version for group\n     * @return {String}\n     */\n    getSvgStyles: function() {\n      var opacity = typeof this.opacity !== 'undefined' && this.opacity !== 1 ?\n            'opacity: ' + this.opacity + ';' : '',\n          visibility = this.visible ? '' : ' visibility: hidden;';\n      return [\n        opacity,\n        this.getSvgFilter(),\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      var svgString = [];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t', this._objects[i].toClipPathSVG(reviver));\n      }\n\n      return this._createBaseClipPathSVGMarkup(svgString, { reviver: reviver });\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   */\n  fabric.Group.fromObject = function(object, callback) {\n    var objects = object.objects,\n        options = fabric.util.object.clone(object, true);\n    delete options.objects;\n    if (typeof objects === 'string') {\n      // it has to be an url or something went wrong.\n      fabric.loadSVGFromURL(objects, function (elements) {\n        var group = fabric.util.groupSVGElements(elements, object, objects);\n        group.set(options);\n        callback && callback(group);\n      });\n      return;\n    }\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n      fabric.util.enlivenObjects([object.clipPath], function(enlivedClipPath) {\n        var options = fabric.util.object.clone(object, true);\n        options.clipPath = enlivedClipPath[0];\n        delete options.objects;\n        callback && callback(new fabric.Group(enlivenedObjects, options, true));\n      });\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.ActiveSelection) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.ActiveSelection\n   * @extends fabric.Group\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.ActiveSelection#initialize} for constructor definition\n   */\n  fabric.ActiveSelection = fabric.util.createClass(fabric.Group, /** @lends fabric.ActiveSelection.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'activeSelection',\n\n    /**\n     * Constructor\n     * @param {Object} objects ActiveSelection objects\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options) {\n      options = options || {};\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      fabric.Object.prototype.initialize.call(this, options);\n      this.setCoords();\n    },\n\n    /**\n     * Change te activeSelection to a normal group,\n     * High level function that automatically adds it to canvas as\n     * active object. no events fired.\n     * @since 2.0.0\n     * @return {fabric.Group}\n     */\n    toGroup: function() {\n      var objects = this._objects.concat();\n      this._objects = [];\n      var options = fabric.Object.prototype.toObject.call(this);\n      var newGroup = new fabric.Group([]);\n      delete options.type;\n      newGroup.set(options);\n      objects.forEach(function(object) {\n        object.canvas.remove(object);\n        object.group = newGroup;\n      });\n      newGroup._objects = objects;\n      if (!this.canvas) {\n        return newGroup;\n      }\n      var canvas = this.canvas;\n      canvas.add(newGroup);\n      canvas._activeObject = newGroup;\n      newGroup.setCoords();\n      return newGroup;\n    },\n\n    /**\n     * If returns true, deselection is cancelled.\n     * @since 2.0.0\n     * @return {Boolean} [cancel]\n     */\n    onDeselect: function() {\n      this.destroy();\n      return false;\n    },\n\n    /**\n     * Returns string representation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.ActiveSelection: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return false;\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     * @param {Object} [childrenOverride] properties to override the children overrides\n     */\n    _renderControls: function(ctx, styleOverride, childrenOverride) {\n      ctx.save();\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      this.callSuper('_renderControls', ctx, styleOverride);\n      childrenOverride = childrenOverride || { };\n      if (typeof childrenOverride.hasControls === 'undefined') {\n        childrenOverride.hasControls = false;\n      }\n      if (typeof childrenOverride.hasRotatingPoint === 'undefined') {\n        childrenOverride.hasRotatingPoint = false;\n      }\n      childrenOverride.forActiveSelection = true;\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx, childrenOverride);\n      }\n      ctx.restore();\n    },\n  });\n\n  /**\n   * Returns {@link fabric.ActiveSelection} instance from an object representation\n   * @static\n   * @memberOf fabric.ActiveSelection\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an ActiveSelection instance is created\n   */\n  fabric.ActiveSelection.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      delete object.objects;\n      callback && callback(new fabric.ActiveSelection(enlivenedObjects, object, true));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = { };\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * Width of a stroke.\n     * For image quality a stroke multiple of 2 gives better results.\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * When calling {@link fabric.Image.getSrc}, return value from element src with `element.getAttribute('src')`.\n     * This allows for relative urls as image src.\n     * @since 2.7.0\n     * @type Boolean\n     * @default\n     */\n    srcFromAttribute: false,\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingX: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingY: 1,\n\n    /**\n     * minimum scale factor under which any resizeFilter is triggered to resize the image\n     * 0 will disable the automatic resize. 1 will trigger automatically always.\n     * number bigger than 1 are not implemented yet.\n     * @type Number\n     */\n    minimumScaleTrigger: 0.5,\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('cropX', 'cropY'),\n\n    /**\n     * key used to retrieve the texture representing this image\n     * @since 2.0.0\n     * @type String\n     * @default\n     */\n    cacheKey: '',\n\n    /**\n     * Image crop in pixels from original image size.\n     * @since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropX: 0,\n\n    /**\n     * Image crop in pixels from original image size.\n     * @since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropY: 0,\n\n    /**\n     * Constructor\n     * @param {HTMLImageElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @param {function} [callback] callback function to call after eventual filters applied.\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function(element, options) {\n      options || (options = { });\n      this.filters = [];\n      this.cacheKey = 'texture' + fabric.Object.__uid++;\n      this.callSuper('initialize', options);\n      this._initElement(element, options);\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function() {\n      return this._element || {};\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function(element, options) {\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._element = element;\n      this._originalElement = element;\n      this._initConfig(options);\n      if (this.filters.length !== 0) {\n        this.applyFilters();\n      }\n      // resizeFilters work on the already filtered copy.\n      // we need to apply resizeFilters AFTER normal filters.\n      // applyResizeFilters is run more often than normal fiters\n      // and is triggered by user interactions rather than dev code\n      if (this.resizeFilter) {\n        this.applyResizeFilters();\n      }\n      return this;\n    },\n\n    /**\n     * Delete a single texture if in webgl mode\n     */\n    removeTexture: function(key) {\n      var backend = fabric.filterBackend;\n      if (backend && backend.evictCachesForKey) {\n        backend.evictCachesForKey(key);\n      }\n    },\n\n    /**\n     * Delete textures, reference to elements and eventually JSDOM cleanup\n     */\n    dispose: function() {\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._cacheContext = undefined;\n      ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'].forEach((function(element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }).bind(this));\n    },\n\n    /**\n     * Sets crossOrigin value (on an instance and corresponding image element)\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setCrossOrigin: function(value) {\n      this.crossOrigin = value;\n      this._element.crossOrigin = value;\n\n      return this;\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function() {\n      var element = this.getElement();\n      return {\n        width: element.naturalWidth || element.width,\n        height: element.naturalHeight || element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n      var w = this.width / 2, h = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-w, -h);\n      ctx.lineTo(w, -h);\n      ctx.lineTo(w, h);\n      ctx.lineTo(-w, h);\n      ctx.lineTo(-w, -h);\n      ctx.closePath();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.save();\n      this._setStrokeStyles(ctx, this);\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var filters = [];\n\n      this.filters.forEach(function(filterObj) {\n        if (filterObj) {\n          filters.push(filterObj.toObject());\n        }\n      });\n      var object = extend(\n        this.callSuper(\n          'toObject',\n          ['crossOrigin', 'cropX', 'cropY'].concat(propertiesToInclude)\n        ), {\n          src: this.getSrc(),\n          filters: filters,\n        });\n      if (this.resizeFilter) {\n        object.resizeFilter = this.resizeFilter.toObject();\n      }\n      return object;\n    },\n\n    /**\n     * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,hight.\n     * @return {Boolean}\n     */\n    hasCrop: function() {\n      return this.cropX || this.cropY || this.width < this._element.width || this.height < this._element.height;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var svgString = [], imageMarkup = [], strokeSvg,\n          x = -this.width / 2, y = -this.height / 2, clipPath = '';\n      if (this.hasCrop()) {\n        var clipPathId = fabric.Object.__uid++;\n        svgString.push(\n          '<clipPath id=\"imageCrop_' + clipPathId + '\">\\n',\n          '\\t<rect x=\"' + x + '\" y=\"' + y + '\" width=\"' + this.width + '\" height=\"' + this.height + '\" />\\n',\n          '</clipPath>\\n'\n        );\n        clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\n      }\n      imageMarkup.push('\\t<image ', 'COMMON_PARTS', 'xlink:href=\"', this.getSvgSrc(true),\n        '\" x=\"', x - this.cropX, '\" y=\"', y - this.cropY,\n        // we're essentially moving origin of transformation from top/left corner to the center of the shape\n        // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n        // so that object's center aligns with container's left/top\n        '\" width=\"', this._element.width || this._element.naturalWidth,\n        '\" height=\"', this._element.height || this._element.height,\n        '\"', clipPath,\n        '></image>\\n');\n\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        strokeSvg = [\n          '\\t<rect ',\n          'x=\"', x, '\" y=\"', y,\n          '\" width=\"', this.width, '\" height=\"', this.height,\n          '\" style=\"', this.getSvgStyles(),\n          '\"/>\\n'\n        ];\n        this.fill = origFill;\n      }\n      if (this.paintFirst !== 'fill') {\n        svgString = svgString.concat(strokeSvg, imageMarkup);\n      }\n      else {\n        svgString = svgString.concat(imageMarkup, strokeSvg);\n      }\n      return svgString;\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @param {Boolean} filtered indicates if the src is needed for svg\n     * @return {String} Source of an image\n     */\n    getSrc: function(filtered) {\n      var element = filtered ? this._element : this._originalElement;\n      if (element) {\n        if (element.toDataURL) {\n          return element.toDataURL();\n        }\n\n        if (this.srcFromAttribute) {\n          return element.getAttribute('src');\n        }\n        else {\n          return element.src;\n        }\n      }\n      else {\n        return this.src || '';\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function(src, callback, options) {\n      fabric.util.loadImage(src, function(img) {\n        this.setElement(img, options);\n        this._setWidthHeight();\n        callback && callback(this);\n      }, this, options && options.crossOrigin);\n      return this;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n\n    applyResizeFilters: function() {\n      var filter = this.resizeFilter,\n          minimumScale = this.minimumScaleTrigger,\n          objectScale = this.getTotalObjectScaling(),\n          scaleX = objectScale.scaleX,\n          scaleY = objectScale.scaleY,\n          elementToFilter = this._filteredEl || this._originalElement;\n      if (this.group) {\n        this.set('dirty', true);\n      }\n      if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {\n        this._element = elementToFilter;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        this._lastScaleX = scaleX;\n        this._lastScaleY = scaleY;\n        return;\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      var canvasEl = fabric.util.createCanvasElement(),\n          cacheKey = this._filteredEl ? (this.cacheKey + '_filtered') : this.cacheKey,\n          sourceWidth = elementToFilter.width, sourceHeight = elementToFilter.height;\n      canvasEl.width = sourceWidth;\n      canvasEl.height = sourceHeight;\n      this._element = canvasEl;\n      this._lastScaleX = filter.scaleX = scaleX;\n      this._lastScaleY = filter.scaleY = scaleY;\n      fabric.filterBackend.applyFilters(\n        [filter], elementToFilter, sourceWidth, sourceHeight, this._element, cacheKey);\n      this._filterScalingX = canvasEl.width / this._originalElement.width;\n      this._filterScalingY = canvasEl.height / this._originalElement.height;\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array) or from filter param\n     * @method applyFilters\n     * @param {Array} filters to be applied\n     * @param {Boolean} forResizing specify if the filter operation is a resize operation\n     * @return {thisArg} return the fabric.Image object\n     * @chainable\n     */\n    applyFilters: function(filters) {\n\n      filters = filters || this.filters || [];\n      filters = filters.filter(function(filter) { return filter && !filter.isNeutralState(); });\n      this.set('dirty', true);\n\n      // needs to clear out or WEBGL will not resize correctly\n      this.removeTexture(this.cacheKey + '_filtered');\n\n      if (filters.length === 0) {\n        this._element = this._originalElement;\n        this._filteredEl = null;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        return this;\n      }\n\n      var imgElement = this._originalElement,\n          sourceWidth = imgElement.naturalWidth || imgElement.width,\n          sourceHeight = imgElement.naturalHeight || imgElement.height;\n\n      if (this._element === this._originalElement) {\n        // if the element is the same we need to create a new element\n        var canvasEl = fabric.util.createCanvasElement();\n        canvasEl.width = sourceWidth;\n        canvasEl.height = sourceHeight;\n        this._element = canvasEl;\n        this._filteredEl = canvasEl;\n      }\n      else {\n        // clear the existing element to get new filter data\n        // also dereference the eventual resized _element\n        this._element = this._filteredEl;\n        this._filteredEl.getContext('2d').clearRect(0, 0, sourceWidth, sourceHeight);\n        // we also need to resize again at next renderAll, so remove saved _lastScaleX/Y\n        this._lastScaleX = 1;\n        this._lastScaleY = 1;\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      fabric.filterBackend.applyFilters(\n        filters, this._originalElement, sourceWidth, sourceHeight, this._element, this.cacheKey);\n      if (this._originalElement.width !== this._element.width ||\n        this._originalElement.height !== this._element.height) {\n        this._filterScalingX = this._element.width / this._originalElement.width;\n        this._filterScalingY = this._element.height / this._originalElement.height;\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (this.isMoving !== true && this.resizeFilter && this._needsResize()) {\n        this.applyResizeFilters();\n      }\n      this._stroke(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * This is the special image version where we would like to avoid caching where possible.\n     * Essentially images do not benefit from caching. They may require caching, and in that\n     * case we do it. Also caching an image usually ends in a loss of details.\n     * A full performance audit should be done.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      return this.needsItsOwnCache();\n    },\n\n    _renderFill: function(ctx) {\n      var elementToDraw = this._element,\n          w = this.width, h = this.height,\n          sW = Math.min(elementToDraw.naturalWidth || elementToDraw.width, w * this._filterScalingX),\n          sH = Math.min(elementToDraw.naturalHeight || elementToDraw.height, h * this._filterScalingY),\n          x = -w / 2, y = -h / 2,\n          sX = Math.max(0, this.cropX * this._filterScalingX),\n          sY = Math.max(0, this.cropY * this._filterScalingY);\n\n      elementToDraw && ctx.drawImage(elementToDraw, sX, sY, sW, sH, x, y, w, h);\n    },\n\n    /**\n     * needed to check if image needs resize\n     * @private\n     */\n    _needsResize: function() {\n      var scale = this.getTotalObjectScaling();\n      return (scale.scaleX !== this._lastScaleX || scale.scaleY !== this._lastScaleY);\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function() {\n      this.set(this.getOriginalSize());\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function(element, options) {\n      this.setElement(fabric.util.getById(element), options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function(options) {\n      options || (options = { });\n      this.setOptions(options);\n      this._setWidthHeight(options);\n      if (this._element && this.crossOrigin) {\n        this._element.crossOrigin = this.crossOrigin;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function(filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      }\n      else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * Set the width and the height of the image object, using the element or the\n     * options.\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n      var el = this.getElement();\n      this.width = options.width || el.naturalWidth || el.width || 0;\n      this.height = options.height || el.naturalHeight || el.height || 0;\n    },\n\n    /**\n     * Calculate offset for center and scale factor for the image in order to respect\n     * the preserveAspectRatio attribute\n     * @private\n     * @return {Object}\n     */\n    parsePreserveAspectRatioAttribute: function() {\n      var pAR = fabric.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || ''),\n          rWidth = this._element.width, rHeight = this._element.height,\n          scaleX = 1, scaleY = 1, offsetLeft = 0, offsetTop = 0, cropX = 0, cropY = 0,\n          offset, pWidth = this.width, pHeight = this.height, parsedAttributes = { width: pWidth, height: pHeight };\n      if (pAR && (pAR.alignX !== 'none' || pAR.alignY !== 'none')) {\n        if (pAR.meetOrSlice === 'meet') {\n          scaleX = scaleY = fabric.util.findScaleToFit(this._element, parsedAttributes);\n          offset = (pWidth - rWidth * scaleX) / 2;\n          if (pAR.alignX === 'Min') {\n            offsetLeft = -offset;\n          }\n          if (pAR.alignX === 'Max') {\n            offsetLeft = offset;\n          }\n          offset = (pHeight - rHeight * scaleY) / 2;\n          if (pAR.alignY === 'Min') {\n            offsetTop = -offset;\n          }\n          if (pAR.alignY === 'Max') {\n            offsetTop = offset;\n          }\n        }\n        if (pAR.meetOrSlice === 'slice') {\n          scaleX = scaleY = fabric.util.findScaleToCover(this._element, parsedAttributes);\n          offset = rWidth - pWidth / scaleX;\n          if (pAR.alignX === 'Mid') {\n            cropX = offset / 2;\n          }\n          if (pAR.alignX === 'Max') {\n            cropX = offset;\n          }\n          offset = rHeight - pHeight / scaleY;\n          if (pAR.alignY === 'Mid') {\n            cropY = offset / 2;\n          }\n          if (pAR.alignY === 'Max') {\n            cropY = offset;\n          }\n          rWidth = pWidth / scaleX;\n          rHeight = pHeight / scaleY;\n        }\n      }\n      else {\n        scaleX = pWidth / rWidth;\n        scaleY = pHeight / rHeight;\n      }\n      return {\n        width: rWidth,\n        height: rHeight,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        offsetLeft: offsetLeft,\n        offsetTop: offsetTop,\n        cropX: cropX,\n        cropY: cropY\n      };\n    }\n  });\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n\n  /**\n   * Alias for getSrc\n   * @static\n   */\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an image instance is created\n   */\n  fabric.Image.fromObject = function(_object, callback) {\n    var object = fabric.util.object.clone(_object);\n    fabric.util.loadImage(object.src, function(img, error) {\n      if (error) {\n        callback && callback(null, error);\n        return;\n      }\n      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n        object.filters = filters || [];\n        fabric.Image.prototype._initFilters.call(object, [object.resizeFilter], function(resizeFilters) {\n          object.resizeFilter = resizeFilters[0];\n          fabric.util.enlivenObjects([object.clipPath], function(enlivedProps) {\n            object.clipPath = enlivedProps[0];\n            var image = new fabric.Image(img, object);\n            callback(image);\n          });\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n   * @param {Object} [imgOptions] Options object\n   */\n  fabric.Image.fromURL = function(url, callback, imgOptions) {\n    fabric.util.loadImage(url, function(img) {\n      callback && callback(new fabric.Image(img, imgOptions));\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  fabric.Image.ATTRIBUTE_NAMES =\n    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href crossOrigin'.split(' '));\n\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n  fabric.Image.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES);\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function() {\n    var angle = this.angle % 360;\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function() {\n    this.rotate(this._getAngleValueForStraighten());\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  fxStraighten: function(callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        _this.rotate(value);\n        onChange();\n      },\n      onComplete: function() {\n        _this.setCoords();\n        onComplete();\n      },\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function (object) {\n    object.straighten();\n    this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxStraightenObject: function (object) {\n    object.fxStraighten({\n      onChange: this.requestRenderAllBound\n    });\n    return this;\n  }\n});\n\n\n(function() {\n\n  'use strict';\n\n  /**\n   * Tests if webgl supports certain precision\n   * @param {WebGL} Canvas WebGL context to test on\n   * @param {String} Precision to test can be any of following: 'lowp', 'mediump', 'highp'\n   * @returns {Boolean} Whether the user's browser WebGL supports given precision.\n   */\n  function testPrecision(gl, precision){\n    var fragmentSource = 'precision ' + precision + ' float;\\nvoid main(){}';\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Indicate whether this filtering backend is supported by the user's browser.\n   * @param {Number} tileSize check if the tileSize is supported\n   * @returns {Boolean} Whether the user's browser supports WebGL.\n   */\n  fabric.isWebglSupported = function(tileSize) {\n    if (fabric.isLikelyNode) {\n      return false;\n    }\n    tileSize = tileSize || fabric.WebglFilterBackend.prototype.tileSize;\n    var canvas = document.createElement('canvas');\n    var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n    var isSupported = false;\n    // eslint-disable-next-line\n    if (gl) {\n      fabric.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      isSupported = fabric.maxTextureSize >= tileSize;\n      var precisions = ['highp', 'mediump', 'lowp'];\n      for (var i = 0; i < 3; i++){\n        if (testPrecision(gl, precisions[i])){\n          fabric.webGlPrecision = precisions[i];\n          break;\n        };\n      }\n    }\n    this.isSupported = isSupported;\n    return isSupported;\n  };\n\n  fabric.WebglFilterBackend = WebglFilterBackend;\n\n  /**\n   * WebGL filter backend.\n   */\n  function WebglFilterBackend(options) {\n    if (options && options.tileSize) {\n      this.tileSize = options.tileSize;\n    }\n    this.setupGLContext(this.tileSize, this.tileSize);\n    this.captureGPUInfo();\n  };\n\n  WebglFilterBackend.prototype = /** @lends fabric.WebglFilterBackend.prototype */ {\n\n    tileSize: 2048,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you problably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\n     */\n    setupGLContext: function(width, height) {\n      this.dispose();\n      this.createWebGLCanvas(width, height);\n      // eslint-disable-next-line\n      this.aPosition = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\n      this.chooseFastestCopyGLTo2DMethod(width, height);\n    },\n\n    /**\n     * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\n     * putImageData is faster than drawImage for that specific operation.\n     */\n    chooseFastestCopyGLTo2DMethod: function(width, height) {\n      var canMeasurePerf = typeof window.performance !== 'undefined', canUseImageData;\n      try {\n        new ImageData(1, 1);\n        canUseImageData = true;\n      }\n      catch (e) {\n        canUseImageData = false;\n      }\n      // eslint-disable-next-line no-undef\n      var canUseArrayBuffer = typeof ArrayBuffer !== 'undefined';\n      // eslint-disable-next-line no-undef\n      var canUseUint8Clamped = typeof Uint8ClampedArray !== 'undefined';\n\n      if (!(canMeasurePerf && canUseImageData && canUseArrayBuffer && canUseUint8Clamped)) {\n        return;\n      }\n\n      var targetCanvas = fabric.util.createCanvasElement();\n      // eslint-disable-next-line no-undef\n      var imageBuffer = new ArrayBuffer(width * height * 4);\n      if (fabric.forceGLPutImageData) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n        return;\n      }\n      var testContext = {\n        imageBuffer: imageBuffer,\n        destinationWidth: width,\n        destinationHeight: height,\n        targetCanvas: targetCanvas\n      };\n      var startTime, drawImageTime, putImageDataTime;\n      targetCanvas.width = width;\n      targetCanvas.height = height;\n\n      startTime = window.performance.now();\n      copyGLTo2DDrawImage.call(testContext, this.gl, testContext);\n      drawImageTime = window.performance.now() - startTime;\n\n      startTime = window.performance.now();\n      copyGLTo2DPutImageData.call(testContext, this.gl, testContext);\n      putImageDataTime = window.performance.now() - startTime;\n\n      if (drawImageTime > putImageDataTime) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n      }\n      else {\n        this.copyGLTo2D = copyGLTo2DDrawImage;\n      }\n    },\n\n    /**\n     * Create a canvas element and associated WebGL context and attaches them as\n     * class properties to the GLFilterBackend class.\n     */\n    createWebGLCanvas: function(width, height) {\n      var canvas = fabric.util.createCanvasElement();\n      canvas.width = width;\n      canvas.height = height;\n      var glOptions = {\n            alpha: true,\n            premultipliedAlpha: false,\n            depth: false,\n            stencil: false,\n            antialias: false\n          },\n          gl = canvas.getContext('webgl', glOptions);\n      if (!gl) {\n        gl = canvas.getContext('experimental-webgl', glOptions);\n      }\n      if (!gl) {\n        return;\n      }\n      gl.clearColor(0, 0, 0, 0);\n      // this canvas can fire webglcontextlost and webglcontextrestored\n      this.canvas = canvas;\n      this.gl = gl;\n    },\n\n    /**\n     * Attempts to apply the requested filters to the source provided, drawing the filtered output\n     * to the provided target canvas.\n     *\n     * @param {Array} filters The filters to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} source The source to be filtered.\n     * @param {Number} width The width of the source input.\n     * @param {Number} height The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\n     * omitted, caching will be skipped.\n     */\n    applyFilters: function(filters, source, width, height, targetCanvas, cacheKey) {\n      var gl = this.gl;\n      var cachedTexture;\n      if (cacheKey) {\n        cachedTexture = this.getCachedTexture(cacheKey, source);\n      }\n      var pipelineState = {\n        originalWidth: source.width || source.originalWidth,\n        originalHeight: source.height || source.originalHeight,\n        sourceWidth: width,\n        sourceHeight: height,\n        destinationWidth: width,\n        destinationHeight: height,\n        context: gl,\n        sourceTexture: this.createTexture(gl, width, height, !cachedTexture && source),\n        targetTexture: this.createTexture(gl, width, height),\n        originalTexture: cachedTexture ||\n          this.createTexture(gl, width, height, !cachedTexture && source),\n        passes: filters.length,\n        webgl: true,\n        aPosition: this.aPosition,\n        programCache: this.programCache,\n        pass: 0,\n        filterBackend: this,\n        targetCanvas: targetCanvas\n      };\n      var tempFbo = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\n      filters.forEach(function(filter) { filter && filter.applyTo(pipelineState); });\n      resizeCanvasIfNeeded(pipelineState);\n      this.copyGLTo2D(gl, pipelineState);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n      gl.deleteTexture(pipelineState.sourceTexture);\n      gl.deleteTexture(pipelineState.targetTexture);\n      gl.deleteFramebuffer(tempFbo);\n      targetCanvas.getContext('2d').setTransform(1, 0, 0, 1, 0, 0);\n      return pipelineState;\n    },\n\n    /**\n     * Detach event listeners, remove references, and clean up caches.\n     */\n    dispose: function() {\n      if (this.canvas) {\n        this.canvas = null;\n        this.gl = null;\n      }\n      this.clearWebGLCaches();\n    },\n\n    /**\n     * Wipe out WebGL-related caches.\n     */\n    clearWebGLCaches: function() {\n      this.programCache = {};\n      this.textureCache = {};\n    },\n\n    /**\n     * Create a WebGL texture object.\n     *\n     * Accepts specific dimensions to initialize the textuer to or a source image.\n     *\n     * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\n     * @param {Number} width The width to initialize the texture at.\n     * @param {Number} height The height to initialize the texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source for the texture data.\n     * @returns {WebGLTexture}\n     */\n    createTexture: function(gl, width, height, textureImageSource) {\n      var texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      if (textureImageSource) {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, textureImageSource);\n      }\n      else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      return texture;\n    },\n\n    /**\n     * Can be optionally used to get a texture from the cache array\n     *\n     * If an existing texture is not found, a new texture is created and cached.\n     *\n     * @param {String} uniqueId A cache key to use to find an existing texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\n     * texture cache entry if one does not already exist.\n     */\n    getCachedTexture: function(uniqueId, textureImageSource) {\n      if (this.textureCache[uniqueId]) {\n        return this.textureCache[uniqueId];\n      }\n      else {\n        var texture = this.createTexture(\n          this.gl, textureImageSource.width, textureImageSource.height, textureImageSource);\n        this.textureCache[uniqueId] = texture;\n        return texture;\n      }\n    },\n\n    /**\n     * Clear out cached resources related to a source image that has been\n     * filtered previously.\n     *\n     * @param {String} cacheKey The cache key provided when the source image was filtered.\n     */\n    evictCachesForKey: function(cacheKey) {\n      if (this.textureCache[cacheKey]) {\n        this.gl.deleteTexture(this.textureCache[cacheKey]);\n        delete this.textureCache[cacheKey];\n      }\n    },\n\n    copyGLTo2D: copyGLTo2DDrawImage,\n\n    /**\n     * Attempt to extract GPU information strings from a WebGL context.\n     *\n     * Useful information when debugging or blacklisting specific GPUs.\n     *\n     * @returns {Object} A GPU info object with renderer and vendor strings.\n     */\n    captureGPUInfo: function() {\n      if (this.gpuInfo) {\n        return this.gpuInfo;\n      }\n      var gl = this.gl, gpuInfo = { renderer: '', vendor: '' };\n      if (!gl) {\n        return gpuInfo;\n      }\n      var ext = gl.getExtension('WEBGL_debug_renderer_info');\n      if (ext) {\n        var renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\n        var vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\n        if (renderer) {\n          gpuInfo.renderer = renderer.toLowerCase();\n        }\n        if (vendor) {\n          gpuInfo.vendor = vendor.toLowerCase();\n        }\n      }\n      this.gpuInfo = gpuInfo;\n      return gpuInfo;\n    },\n  };\n})();\n\nfunction resizeCanvasIfNeeded(pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas,\n      width = targetCanvas.width, height = targetCanvas.height,\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight;\n\n  if (width !== dWidth || height !== dHeight) {\n    targetCanvas.width = dWidth;\n    targetCanvas.height = dHeight;\n  }\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas.\n *\n * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\n * desired output image appearing in the bottom-left corner of the WebGL canvas.\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DDrawImage(gl, pipelineState) {\n  var glCanvas = gl.canvas, targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d');\n  ctx.translate(0, targetCanvas.height); // move it down again\n  ctx.scale(1, -1); // vertical flip\n  // where is my image on the big glcanvas?\n  var sourceY = glCanvas.height - targetCanvas.height;\n  ctx.drawImage(glCanvas, 0, sourceY, targetCanvas.width, targetCanvas.height, 0, 0,\n    targetCanvas.width, targetCanvas.height);\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\n * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DPutImageData(gl, pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas, ctx = targetCanvas.getContext('2d'),\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight,\n      numBytes = dWidth * dHeight * 4;\n\n  // eslint-disable-next-line no-undef\n  var u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\n  // eslint-disable-next-line no-undef\n  var u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\n\n  gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\n  var imgData = new ImageData(u8Clamped, dWidth, dHeight);\n  ctx.putImageData(imgData, 0, 0);\n}\n\n\n(function() {\n\n  'use strict';\n\n  var noop = function() {};\n\n  fabric.Canvas2dFilterBackend = Canvas2dFilterBackend;\n\n  /**\n   * Canvas 2D filter backend.\n   */\n  function Canvas2dFilterBackend() {};\n\n  Canvas2dFilterBackend.prototype = /** @lends fabric.Canvas2dFilterBackend.prototype */ {\n    evictCachesForKey: noop,\n    dispose: noop,\n    clearWebGLCaches: noop,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you probably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Apply a set of filters against a source image and draw the filtered output\n     * to the provided destination canvas.\n     *\n     * @param {EnhancedFilter} filters The filter to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\n     * @param {Number} sourceWidth The width of the source input.\n     * @param {Number} sourceHeight The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     */\n    applyFilters: function(filters, sourceElement, sourceWidth, sourceHeight, targetCanvas) {\n      var ctx = targetCanvas.getContext('2d');\n      ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\n      var imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var pipelineState = {\n        sourceWidth: sourceWidth,\n        sourceHeight: sourceHeight,\n        imageData: imageData,\n        originalEl: sourceElement,\n        originalImageData: originalImageData,\n        canvasEl: targetCanvas,\n        ctx: ctx,\n        filterBackend: this,\n      };\n      filters.forEach(function(filter) { filter.applyTo(pipelineState); });\n      if (pipelineState.imageData.width !== sourceWidth || pipelineState.imageData.height !== sourceHeight) {\n        targetCanvas.width = pipelineState.imageData.width;\n        targetCanvas.height = pipelineState.imageData.height;\n      }\n      ctx.putImageData(pipelineState.imageData, 0, 0);\n      return pipelineState;\n    },\n\n  };\n})();\n\n\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n */\nfabric.Image = fabric.Image || { };\nfabric.Image.filters = fabric.Image.filters || { };\n\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\nfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Array of attributes to send with buffers. do not modify\n   * @private\n   */\n\n  vertexSource: 'attribute vec2 aPosition;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'void main() {\\n' +\n      'vTexCoord = aPosition;\\n' +\n      'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n    '}',\n\n  fragmentSource: 'precision highp float;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'uniform sampler2D uTexture;\\n' +\n    'void main() {\\n' +\n      'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n    '}',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function(options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function(options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Compile this filter's shader program.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\n   * @param {String} fragmentSource fragmentShader source for compilation\n   * @param {String} vertexSource vertexShader source for compilation\n   */\n  createProgram: function(gl, fragmentSource, vertexSource) {\n    fragmentSource = fragmentSource || this.fragmentSource;\n    vertexSource = vertexSource || this.vertexSource;\n    if (fabric.webGlPrecision !== 'highp'){\n      fragmentSource = fragmentSource.replace(\n        /precision highp float/g,\n        'precision ' + fabric.webGlPrecision + ' float'\n      );\n    }\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, vertexSource);\n    gl.compileShader(vertexShader);\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Vertex shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(vertexShader)\n      );\n    }\n\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Fragment shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(fragmentShader)\n      );\n    }\n\n    var program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Shader link error for \"${this.type}\" ' +\n        gl.getProgramInfoLog(program)\n      );\n    }\n\n    var attributeLocations = this.getAttributeLocations(gl, program);\n    var uniformLocations = this.getUniformLocations(gl, program) || { };\n    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\n    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\n    return {\n      program: program,\n      attributeLocations: attributeLocations,\n      uniformLocations: uniformLocations\n    };\n  },\n\n  /**\n   * Return a map of attribute names to WebGLAttributeLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\n   * @returns {Object} A map of attribute names to attribute locations.\n   */\n  getAttributeLocations: function(gl, program) {\n    return {\n      aPosition: gl.getAttribLocation(program, 'aPosition'),\n    };\n  },\n\n  /**\n   * Return a map of uniform names to WebGLUniformLocation objects.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\n   * @returns {Object} A map of uniform names to uniform locations.\n   */\n  getUniformLocations: function (/* gl, program */) {\n    // in case i do not need any special uniform i need to return an empty object\n    return { };\n  },\n\n  /**\n   * Send attribute data from this filter to its shader program on the GPU.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} attributeLocations A map of shader attribute names to their locations.\n   */\n  sendAttributeData: function(gl, attributeLocations, aPositionData) {\n    var attributeLocation = attributeLocations.aPosition;\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.enableVertexAttribArray(attributeLocation);\n    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\n  },\n\n  _setupFrameBuffer: function(options) {\n    var gl = options.context, width, height;\n    if (options.passes > 1) {\n      width = options.destinationWidth;\n      height = options.destinationHeight;\n      if (options.sourceWidth !== width || options.sourceHeight !== height) {\n        gl.deleteTexture(options.targetTexture);\n        options.targetTexture = options.filterBackend.createTexture(gl, width, height);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D,\n        options.targetTexture, 0);\n    }\n    else {\n      // draw last filter on canvas and not to framebuffer.\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.finish();\n    }\n  },\n\n  _swapTextures: function(options) {\n    options.passes--;\n    options.pass++;\n    var temp = options.targetTexture;\n    options.targetTexture = options.sourceTexture;\n    options.sourceTexture = temp;\n  },\n\n  /**\n   * Generic isNeutral implementation for one parameter based filters.\n   * Used only in image applyFilters to discard filters that will not have an effect\n   * on the image\n   * Other filters may need their own verison ( ColorMatrix, HueRotation, gamma, ComposedFilter )\n   * @param {Object} options\n   **/\n  isNeutralState: function(/* options */) {\n    var main = this.mainParameter,\n        _class = fabric.Image.filters[this.type].prototype;\n    if (main) {\n      if (Array.isArray(_class[main])) {\n        for (var i = _class[main].length; i--;) {\n          if (this[main][i] !== _class[main][i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n      else {\n        return _class[main] === this[main];\n      }\n    }\n    else {\n      return false;\n    }\n  },\n\n  /**\n   * Apply this filter to the input image data provided.\n   *\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo: function(options) {\n    if (options.webgl) {\n      this._setupFrameBuffer(options);\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n    }\n    else {\n      this.applyTo2d(options);\n    }\n  },\n\n  /**\n   * Retrieves the cached shader.\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  retrieveShader: function(options) {\n    if (!options.programCache.hasOwnProperty(this.type)) {\n      options.programCache[this.type] = this.createProgram(options.context);\n    }\n    return options.programCache[this.type];\n  },\n\n  /**\n   * Apply this filter using webgl.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.originalTexture The texture of the original input image.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyToWebGL: function(options) {\n    var gl = options.context;\n    var shader = this.retrieveShader(options);\n    if (options.pass === 0 && options.originalTexture) {\n      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\n    }\n    else {\n      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\n    }\n    gl.useProgram(shader.program);\n    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\n\n    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\n    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\n\n    this.sendUniformData(gl, shader.uniformLocations);\n    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  },\n\n  bindAdditionalTexture: function(gl, texture, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // reset active texture to 0 as usual\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  unbindAdditionalTexture: function(gl, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  getMainParameter: function() {\n    return this[this.mainParameter];\n  },\n\n  setMainParameter: function(value) {\n    this[this.mainParameter] = value;\n  },\n\n  /**\n   * Send uniform data from this filter to its shader program on the GPU.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} uniformLocations A map of shader uniform names to their locations.\n   */\n  sendUniformData: function(/* gl, uniformLocations */) {\n    // Intentionally left blank.  Override me in subclasses.\n  },\n\n  /**\n   * If needed by a 2d filter, this functions can create an helper canvas to be used\n   * remember that options.targetCanvas is available for use till end of chain.\n   */\n  createHelpLayer: function(options) {\n    if (!options.helpLayer) {\n      var helpLayer = document.createElement('canvas');\n      helpLayer.width = options.sourceWidth;\n      helpLayer.height = options.sourceHeight;\n      options.helpLayer = helpLayer;\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function() {\n    var object = { type: this.type }, mainP = this.mainParameter;\n    if (mainP) {\n      object[mainP] = this[mainP];\n    }\n    return object;\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function() {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\nfabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\n  var filter = new fabric.Image.filters[object.type](object);\n  callback && callback(filter);\n  return filter;\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Matrix filter class\n   * @class fabric.Image.filters.ColorMatrix\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n   * @example <caption>Kodachrome filter</caption>\n   * var filter = new fabric.Image.filters.ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'ColorMatrix',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'uniform mat4 uColorMatrix;\\n' +\n      'uniform vec4 uConstants;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color *= uColorMatrix;\\n' +\n        'color += uConstants;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Colormatrix for pixels.\n     * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n     * outside the -1, 1 range.\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Array} matrix array of 20 numbers.\n     * @default\n     */\n    matrix: [\n      1, 0, 0, 0, 0,\n      0, 1, 0, 0, 0,\n      0, 0, 1, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n\n    mainParameter: 'matrix',\n\n    /**\n     * Lock the colormatrix on the color part, skipping alpha, manly for non webgl scenario\n     * to save some calculation\n     */\n    colorsOnly: true,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.matrix = this.matrix.slice(0);\n    },\n\n    /**\n     * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = data.length,\n          m = this.matrix,\n          r, g, b, a, i, colorsOnly = this.colorsOnly;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        if (colorsOnly) {\n          data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n        }\n        else {\n          a = data[i + 3];\n          data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\n          data[i + 3] = r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColorMatrix: gl.getUniformLocation(program, 'uColorMatrix'),\n        uConstants: gl.getUniformLocation(program, 'uConstants'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var m = this.matrix,\n          matrix = [\n            m[0], m[1], m[2], m[3],\n            m[5], m[6], m[7], m[8],\n            m[10], m[11], m[12], m[13],\n            m[15], m[16], m[17], m[18]\n          ],\n          constants = [m[4], m[9], m[14], m[19]];\n      gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n      gl.uniform4fv(uniformLocations.uConstants, constants);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] function to invoke after filter creation\n   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n   */\n  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 0.05\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBrightness;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += uBrightness;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Brightness value, from -1 to 1.\n     * translated to -255 to 255 for 2d\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Number} brightness\n     * @default\n     */\n    brightness: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'brightness',\n\n    /**\n    * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n    *\n    * @param {Object} options\n    * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n    */\n    applyTo2d: function(options) {\n      if (this.brightness === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          brightness = Math.round(this.brightness * 255);\n      for (i = 0; i < len; i += 4) {\n        data[i] = data[i] + brightness;\n        data[i + 1] = data[i + 1] + brightness;\n        data[i + 2] = data[i + 2] + brightness;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBrightness: gl.getUniformLocation(program, 'uBrightness'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBrightness, this.brightness);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /*\n     * Opaque value (true/false)\n     */\n    opaque: false,\n\n    /*\n     * matrix for the filter, max 9x9\n     */\n    matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: {\n      Convolute_3_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_3_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_5_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_5_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_7_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_7_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_9_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_9_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n    },\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n\n\n    /**\n    * Retrieves the cached shader.\n    * @param {Object} options\n    * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n    * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n    */\n    retrieveShader: function(options) {\n      var size = Math.sqrt(this.matrix.length);\n      var cacheKey = this.type + '_' + size + '_' + (this.opaque ? 1 : 0);\n      var shaderSource = this.fragmentSource[cacheKey];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          weights = this.matrix,\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side / 2),\n          sw = imageData.width,\n          sh = imageData.height,\n          output = options.ctx.createImageData(sw, sh),\n          dst = output.data,\n          // go through the destination image pixels\n          alphaFac = this.opaque ? 1 : 0,\n          r, g, b, a, dstOff,\n          scx, scy, srcOff, wt,\n          x, y, cx, cy;\n\n      for (y = 0; y < sh; y++) {\n        for (x = 0; x < sw; x++) {\n          dstOff = (y * sw + x) * 4;\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          r = 0; g = 0; b = 0; a = 0;\n\n          for (cy = 0; cy < side; cy++) {\n            for (cx = 0; cx < side; cx++) {\n              scy = y + cy - halfSide;\n              scx = x + cx - halfSide;\n\n              // eslint-disable-next-line max-depth\n              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n                continue;\n              }\n\n              srcOff = (scy * sw + scx) * 4;\n              wt = weights[cy * side + cx];\n\n              r += data[srcOff] * wt;\n              g += data[srcOff + 1] * wt;\n              b += data[srcOff + 2] * wt;\n              // eslint-disable-next-line max-depth\n              if (!alphaFac) {\n                a += data[srcOff + 3] * wt;\n              }\n            }\n          }\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n          if (!alphaFac) {\n            dst[dstOff + 3] = a;\n          }\n          else {\n            dst[dstOff + 3] = data[dstOff + 3];\n          }\n        }\n      }\n      options.imageData = output;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMatrix: gl.getUniformLocation(program, 'uMatrix'),\n        uOpaque: gl.getUniformLocation(program, 'uOpaque'),\n        uHalfSize: gl.getUniformLocation(program, 'uHalfSize'),\n        uSize: gl.getUniformLocation(program, 'uSize'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n\n    fragmentSource: {\n      average: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (color.r + color.b + color.g) / 3.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, color.a);\\n' +\n        '}',\n      lightness: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n      luminosity: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n    },\n\n\n    /**\n     * Grayscale mode, between 'average', 'lightness', 'luminosity'\n     * @param {String} type\n     * @default\n     */\n    mode: 'average',\n\n    mainParameter: 'mode',\n\n    /**\n     * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length, value,\n          mode = this.mode;\n      for (i = 0; i < len; i += 4) {\n        if (mode === 'average') {\n          value = (data[i] + data[i + 1] + data[i + 2]) / 3;\n        }\n        else if (mode === 'lightness') {\n          value = (Math.min(data[i], data[i + 1], data[i + 2]) +\n            Math.max(data[i], data[i + 1], data[i + 2])) / 2;\n        }\n        else if (mode === 'luminosity') {\n          value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];\n        }\n        data[i] = value;\n        data[i + 1] = value;\n        data[i + 2] = value;\n      }\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var shaderSource = this.fragmentSource[this.mode];\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMode: gl.getUniformLocation(program, 'uMode'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      // default average mode.\n      var mode = 1;\n      gl.uniform1i(uniformLocations.uMode, mode);\n    },\n\n    /**\n     * Grayscale filter isNeutralState implementation\n     * The filter is never neutral\n     * on the image\n     **/\n    isNeutralState: function() {\n      return false;\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n  fabric.Image.filters.Grayscale.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform int uInvert;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'if (uInvert == 1) {\\n' +\n          'gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\\n' +\n        '} else {\\n' +\n          'gl_FragColor = color;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * Filter invert. if false, does nothing\n     * @param {Boolean} invert\n     * @default\n     */\n    invert: true,\n\n    mainParameter: 'invert',\n\n    /**\n     * Apply the Invert operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length;\n      for (i = 0; i < len; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n    },\n\n    /**\n     * Invert filter isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function() {\n      return !this.invert;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uInvert: gl.getUniformLocation(program, 'uInvert'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1i(uniformLocations.uInvert, this.invert);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n  fabric.Image.filters.Invert.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Fragment source for the noise program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uStepH;\\n' +\n      'uniform float uNoise;\\n' +\n      'uniform float uSeed;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'float rand(vec2 co, float seed, float vScale) {\\n' +\n        'return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'noise',\n\n    /**\n     * Noise value, from\n     * @param {Number} noise\n     * @default\n     */\n    noise: 0,\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.noise === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          noise = this.noise, rand;\n\n      for (i = 0, len = data.length; i < len; i += 4) {\n\n        rand = (0.5 - Math.random()) * noise;\n\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uNoise: gl.getUniformLocation(program, 'uNoise'),\n        uSeed: gl.getUniformLocation(program, 'uSeed'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n      gl.uniform1f(uniformLocations.uSeed, Math.random());\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n\n    blocksize: 4,\n\n    mainParameter: 'blocksize',\n\n    /**\n     * Fragment source for the Pixelate program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBlocksize;\\n' +\n      'uniform float uStepW;\\n' +\n      'uniform float uStepH;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'float blockW = uBlocksize * uStepW;\\n' +\n        'float blockH = uBlocksize * uStepW;\\n' +\n        'int posX = int(vTexCoord.x / blockW);\\n' +\n        'int posY = int(vTexCoord.y / blockH);\\n' +\n        'float fposX = float(posX);\\n' +\n        'float fposY = float(posY);\\n' +\n        'vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\\n' +\n        'vec4 color = texture2D(uTexture, squareCoords);\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index, i, j, r, g, b, a,\n          _i, _j, _iLen, _jLen;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n\n          index = (i * 4) * jLen + (j * 4);\n\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n\n          _iLen = Math.min(i + this.blocksize, iLen);\n          _jLen = Math.min(j + this.blocksize, jLen);\n          for (_i = i; _i < _iLen; _i++) {\n            for (_j = j; _j < _jLen; _j++) {\n              index = (_i * 4) * jLen + (_j * 4);\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Indicate when the filter is not gonna apply changes to the image\n     **/\n    isNeutralState: function() {\n      return this.blocksize === 1;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBlocksize: gl.getUniformLocation(program, 'uBlocksize'),\n        uStepW: gl.getUniformLocation(program, 'uStepW'),\n        uStepH: gl.getUniformLocation(program, 'uStepH'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveColor#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveColor({\n   *   threshold: 0.2,\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.RemoveColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveColor.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveColor',\n\n    /**\n     * Color to remove, in any format understood by fabric.Color.\n     * @param {String} type\n     * @default\n     */\n    color: '#FFFFFF',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec4 uLow;\\n' +\n      'uniform vec4 uHigh;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n        'if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\\n' +\n          'gl_FragColor.a = 0.0;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * distance to actual color, as value up or down from each r,g,b\n     * between 0 and 1\n     **/\n    distance: 0.02,\n\n    /**\n     * For color to remove inside distance, use alpha channel for a smoother deletion\n     * NOT IMPLEMENTED YET\n     **/\n    useAlpha: false,\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.color=#RRGGBB] Threshold value\n     * @param {Number} [options.distance=10] Distance value\n     */\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          distance = this.distance * 255,\n          r, g, b,\n          source = new fabric.Color(this.color).getSource(),\n          lowC = [\n            source[0] - distance,\n            source[1] - distance,\n            source[2] - distance,\n          ],\n          highC = [\n            source[0] + distance,\n            source[1] + distance,\n            source[2] + distance,\n          ];\n\n\n      for (i = 0; i < data.length; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > lowC[0] &&\n            g > lowC[1] &&\n            b > lowC[2] &&\n            r < highC[0] &&\n            g < highC[1] &&\n            b < highC[2]) {\n          data[i + 3] = 0;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uLow: gl.getUniformLocation(program, 'uLow'),\n        uHigh: gl.getUniformLocation(program, 'uHigh'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource(),\n          distance = parseFloat(this.distance),\n          lowC = [\n            0 + source[0] / 255 - distance,\n            0 + source[1] / 255 - distance,\n            0 + source[2] / 255 - distance,\n            1\n          ],\n          highC = [\n            source[0] / 255 + distance,\n            source[1] / 255 + distance,\n            source[2] / 255 + distance,\n            1\n          ];\n      gl.uniform4fv(uniformLocations.uLow, lowC);\n      gl.uniform4fv(uniformLocations.uHigh, highC);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        distance: this.distance\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.RemoveColor} Instance of fabric.Image.filters.RemoveWhite\n   */\n  fabric.Image.filters.RemoveColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  var matrices = {\n    Brownie: [\n      0.59970,0.34553,-0.27082,0,0.186,\n      -0.03770,0.86095,0.15059,0,-0.1449,\n      0.24113,-0.07441,0.44972,0,-0.02965,\n      0,0,0,1,0\n    ],\n    Vintage: [\n      0.62793,0.32021,-0.03965,0,0.03784,\n      0.02578,0.64411,0.03259,0,0.02926,\n      0.04660,-0.08512,0.52416,0,0.02023,\n      0,0,0,1,0\n    ],\n    Kodachrome: [\n      1.12855,-0.39673,-0.03992,0,0.24991,\n      -0.16404,1.08352,-0.05498,0,0.09698,\n      -0.16786,-0.56034,1.60148,0,0.13972,\n      0,0,0,1,0\n    ],\n    Technicolor: [\n      1.91252,-0.85453,-0.09155,0,0.04624,\n      -0.30878,1.76589,-0.10601,0,-0.27589,\n      -0.23110,-0.75018,1.84759,0,0.12137,\n      0,0,0,1,0\n    ],\n    Polaroid: [\n      1.438,-0.062,-0.062,0,0,\n      -0.122,1.378,-0.122,0,0,\n      -0.016,-0.016,1.483,0,0,\n      0,0,0,1,0\n    ],\n    Sepia: [\n      0.393, 0.769, 0.189, 0, 0,\n      0.349, 0.686, 0.168, 0, 0,\n      0.272, 0.534, 0.131, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n    BlackWhite: [\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      0, 0, 0, 1, 0,\n    ]\n  };\n\n  for (var key in matrices) {\n    filters[key] = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\n      /**\n       * Filter type\n       * @param {String} type\n       * @default\n       */\n      type: key,\n\n      /**\n       * Colormatrix for the effect\n       * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n       * outside the -1, 1 range.\n       * @param {Array} matrix array of 20 numbers.\n       * @default\n       */\n      matrix: matrices[key],\n\n      /**\n       * Lock the matrix export for this kind of static, parameter less filters.\n       */\n      mainParameter: false,\n      /**\n       * Lock the colormatrix on the color part, skipping alpha\n       */\n      colorsOnly: true,\n\n    });\n    fabric.Image.filters[key].fromObject = fabric.Image.filters.BaseFilter.fromObject;\n  }\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.BlendColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\n    type: 'BlendColor',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    color: '#F95C63',\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend color operation.\n     **/\n    alpha: 1,\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'gl_FragColor.rgb *= uColor.rgb;\\n',\n      screen: 'gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\\n',\n      add: 'gl_FragColor.rgb += uColor.rgb;\\n',\n      diff: 'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n',\n      subtract: 'gl_FragColor.rgb -= uColor.rgb;\\n',\n      lighten: 'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n',\n      darken: 'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n',\n      exclusion: 'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n',\n      overlay: 'if (uColor.r < 0.5) {\\n' +\n          'gl_FragColor.r *= 2.0 * uColor.r;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\\n' +\n        '}\\n' +\n        'if (uColor.g < 0.5) {\\n' +\n          'gl_FragColor.g *= 2.0 * uColor.g;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\\n' +\n        '}\\n' +\n        'if (uColor.b < 0.5) {\\n' +\n          'gl_FragColor.b *= 2.0 * uColor.b;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\\n' +\n        '}\\n',\n      tint: 'gl_FragColor.rgb *= (1.0 - uColor.a);\\n' +\n        'gl_FragColor.rgb += uColor.rgb;\\n',\n    },\n\n    /**\n     * build the fragment source for the filters, joining the common part with\n     * the specific one.\n     * @param {String} mode the mode of the filter, a key of this.fragmentSource\n     * @return {String} the source to be compiled\n     * @private\n     */\n    buildSource: function(mode) {\n      return 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor = color;\\n' +\n          'if (color.a > 0.0) {\\n' +\n            this.fragmentSource[mode] +\n          '}\\n' +\n        '}';\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode, shaderSource;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        shaderSource = this.buildSource(this.mode);\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, iLen = data.length,\n          tr, tg, tb,\n          r, g, b,\n          source, alpha1 = 1 - this.alpha;\n\n      source = new fabric.Color(this.color).getSource();\n      tr = source[0] * this.alpha;\n      tg = source[1] * this.alpha;\n      tb = source[2] * this.alpha;\n\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n          case 'screen':\n            data[i] = 255 - (255 - r) * (255 - tr) / 255;\n            data[i + 1] = 255 - (255 - g) * (255 - tg) / 255;\n            data[i + 2] = 255 - (255 - b) * (255 - tb) / 255;\n            break;\n          case 'add':\n            data[i] = r + tr;\n            data[i + 1] = g + tg;\n            data[i + 2] = b + tb;\n            break;\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n          case 'subtract':\n            data[i] = r - tr;\n            data[i + 1] = g - tg;\n            data[i + 2] = b - tb;\n            break;\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n          case 'overlay':\n            data[i] = tr < 128 ? (2 * r * tr / 255) : (255 - 2 * (255 - r) * (255 - tr) / 255);\n            data[i + 1] = tg < 128 ? (2 * g * tg / 255) : (255 - 2 * (255 - g) * (255 - tg) / 255);\n            data[i + 2] = tb < 128 ? (2 * b * tb / 255) : (255 - 2 * (255 - b) * (255 - tb) / 255);\n            break;\n          case 'exclusion':\n            data[i] = tr + r - ((2 * tr * r) / 255);\n            data[i + 1] = tg + g - ((2 * tg * g) / 255);\n            data[i + 2] = tb + b - ((2 * tb * b) / 255);\n            break;\n          case 'tint':\n            data[i] = tr + r * alpha1;\n            data[i + 1] = tg + g * alpha1;\n            data[i + 2] = tb + b * alpha1;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColor: gl.getUniformLocation(program, 'uColor'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource();\n      source[0] = this.alpha * source[0] / 255;\n      source[1] = this.alpha * source[1] / 255;\n      source[2] = this.alpha * source[2] / 255;\n      source[3] = this.alpha;\n      gl.uniform4fv(uniformLocations.uColor, source);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        color: this.color,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendColor} Instance of fabric.Image.filters.BlendColor\n   */\n  fabric.Image.filters.BlendColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Image Blend filter class\n   * @class fabric.Image.filter.BlendImage\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendImage = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.BlendImage.prototype */ {\n    type: 'BlendImage',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    image: null,\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend image operation.\n     * not implemented.\n     **/\n    alpha: 1,\n\n    vertexSource: 'attribute vec2 aPosition;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'varying vec2 vTexCoord2;\\n' +\n      'uniform mat3 uTransformMatrix;\\n' +\n      'void main() {\\n' +\n        'vTexCoord = aPosition;\\n' +\n        'vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\\n' +\n        'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n      '}',\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.rgba *= color2.rgba;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      mask: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.a = color2.a;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      var shaderSource = this.fragmentSource[this.mode];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    applyToWebGL: function(options) {\n      // load texture to blend.\n      var gl = options.context,\n          texture = this.createTexture(options.filterBackend, this.image);\n      this.bindAdditionalTexture(gl, texture, gl.TEXTURE1);\n      this.callSuper('applyToWebGL', options);\n      this.unbindAdditionalTexture(gl, gl.TEXTURE1);\n    },\n\n    createTexture: function(backend, image) {\n      return backend.getCachedTexture(image.cacheKey, image._element);\n    },\n\n    /**\n     * Calculate a transformMatrix to adapt the image to blend over\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    calculateMatrix: function() {\n      var image = this.image,\n          width = image._element.width,\n          height = image._element.height;\n      return [\n        1 / image.scaleX, 0, 0,\n        0, 1 / image.scaleY, 0,\n        -image.left / width, -image.top / height, 1\n      ];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          resources = options.filterBackend.resources,\n          data = imageData.data, iLen = data.length,\n          width = imageData.width,\n          height = imageData.height,\n          tr, tg, tb, ta,\n          r, g, b, a,\n          canvas1, context, image = this.image, blendData;\n\n      if (!resources.blendImage) {\n        resources.blendImage = fabric.util.createCanvasElement();\n      }\n      canvas1 = resources.blendImage;\n      context = canvas1.getContext('2d');\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas1.width = width;\n        canvas1.height = height;\n      }\n      else {\n        context.clearRect(0, 0, width, height);\n      }\n      context.setTransform(image.scaleX, 0, 0, image.scaleY, image.left, image.top);\n      context.drawImage(image._element, 0, 0, width, height);\n      blendData = context.getImageData(0, 0, width, height).data;\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n\n        tr = blendData[i];\n        tg = blendData[i + 1];\n        tb = blendData[i + 2];\n        ta = blendData[i + 3];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            data[i + 3] = a * ta / 255;\n            break;\n          case 'mask':\n            data[i + 3] = ta;\n            break;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uTransformMatrix: gl.getUniformLocation(program, 'uTransformMatrix'),\n        uImage: gl.getUniformLocation(program, 'uImage'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var matrix = this.calculateMatrix();\n      gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\n      gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        image: this.image && this.image.toObject(),\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} callback to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendImage} Instance of fabric.Image.filters.BlendImage\n   */\n  fabric.Image.filters.BlendImage.fromObject = function(object, callback) {\n    fabric.Image.fromObject(object.image, function(image) {\n      var options = fabric.util.object.clone(object);\n      options.image = image;\n      callback(new fabric.Image.filters.BlendImage(options));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n      sqrt = Math.sqrt, abs = Math.abs, round = Math.round, sin = Math.sin,\n      ceil = Math.ceil,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * for webgl resizeType is just lanczos, for canvas2d can be:\n     * bilinear, hermite, sliceHack, lanczos.\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 1,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 1,\n\n    /**\n     * LanczosLobes parameter for lanczos filter, valid for resizeType lanczos\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uDelta: gl.getUniformLocation(program, 'uDelta'),\n        uTaps: gl.getUniformLocation(program, 'uTaps'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform2fv(uniformLocations.uDelta, this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]);\n      gl.uniform1fv(uniformLocations.uTaps, this.taps);\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var filterWindow = this.getFilterWindow(), cacheKey = this.type + '_' + filterWindow;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var fragmentShader = this.generateShader(filterWindow);\n        options.programCache[cacheKey] = this.createProgram(options.context, fragmentShader);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    getFilterWindow: function() {\n      var scale = this.tempScale;\n      return Math.ceil(this.lanczosLobes / scale);\n    },\n\n    getTaps: function() {\n      var lobeFunction = this.lanczosCreate(this.lanczosLobes), scale = this.tempScale,\n          filterWindow = this.getFilterWindow(), taps = new Array(filterWindow);\n      for (var i = 1; i <= filterWindow; i++) {\n        taps[i - 1] = lobeFunction(i * scale);\n      }\n      return taps;\n    },\n\n    /**\n     * Generate vertex and shader sources from the necessary steps numbers\n     * @param {Number} filterWindow\n     */\n    generateShader: function(filterWindow) {\n      var offsets = new Array(filterWindow),\n          fragmentShader = this.fragmentSourceTOP, filterWindow;\n\n      for (var i = 1; i <= filterWindow; i++) {\n        offsets[i - 1] = i + '.0 * uDelta';\n      }\n\n      fragmentShader += 'uniform float uTaps[' + filterWindow + '];\\n';\n      fragmentShader += 'void main() {\\n';\n      fragmentShader += '  vec4 color = texture2D(uTexture, vTexCoord);\\n';\n      fragmentShader += '  float sum = 1.0;\\n';\n\n      offsets.forEach(function(offset, i) {\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord + ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord - ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  sum += 2.0 * uTaps[' + i + '];\\n';\n      });\n      fragmentShader += '  gl_FragColor = color / sum;\\n';\n      fragmentShader += '}';\n      return fragmentShader;\n    },\n\n    fragmentSourceTOP: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n',\n\n    /**\n     * Apply the resize filter to the image\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      if (options.webgl) {\n        options.passes++;\n        this.width = options.sourceWidth;\n        this.horizontal = true;\n        this.dW = Math.round(this.width * this.scaleX);\n        this.dH = options.sourceHeight;\n        this.tempScale = this.dW / this.width;\n        this.taps = this.getTaps();\n        options.destinationWidth = this.dW;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceWidth = options.destinationWidth;\n\n        this.height = options.sourceHeight;\n        this.horizontal = false;\n        this.dH = Math.round(this.height * this.scaleY);\n        this.tempScale = this.dH / this.height;\n        this.taps = this.getTaps();\n        options.destinationHeight = this.dH;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceHeight = options.destinationHeight;\n      }\n      else {\n        this.applyTo2d(options);\n      }\n    },\n\n    isNeutralState: function() {\n      return this.scaleX === 1 && this.scaleY === 1;\n    },\n\n    lanczosCreate: function(lobes) {\n      return function(x) {\n        if (x >= lobes || x <= -lobes) {\n          return 0.0;\n        }\n        if (x < 1.19209290E-07 && x > -1.19209290E-07) {\n          return 1.0;\n        }\n        x *= Math.PI;\n        var xx = x / lobes;\n        return (sin(x) / x) * sin(xx) / xx;\n      };\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} scaleX\n     * @param {Number} scaleY\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          scaleX = this.scaleX,\n          scaleY = this.scaleY;\n\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n\n      var oW = imageData.width, oH = imageData.height,\n          dW = round(oW * scaleX), dH = round(oH * scaleY),\n          newData;\n\n      if (this.resizeType === 'sliceHack') {\n        newData = this.sliceByTwo(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'hermite') {\n        newData = this.hermiteFastResize(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'bilinear') {\n        newData = this.bilinearFiltering(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'lanczos') {\n        newData = this.lanczosResize(options, oW, oH, dW, dH);\n      }\n      options.imageData = newData;\n    },\n\n    /**\n     * Filter sliceByTwo\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    sliceByTwo: function(options, oW, oH, dW, dH) {\n      var imageData = options.imageData,\n          mult = 0.5, doneW = false, doneH = false, stepW = oW * mult,\n          stepH = oH * mult, resources = fabric.filterBackend.resources,\n          tmpCanvas, ctx, sX = 0, sY = 0, dX = oW, dY = 0;\n      if (!resources.sliceByTwo) {\n        resources.sliceByTwo = document.createElement('canvas');\n      }\n      tmpCanvas = resources.sliceByTwo;\n      if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\n        tmpCanvas.width = oW * 1.5;\n        tmpCanvas.height = oH;\n      }\n      ctx = tmpCanvas.getContext('2d');\n      ctx.clearRect(0, 0, oW * 1.5, oH);\n      ctx.putImageData(imageData, 0, 0);\n\n      dW = floor(dW);\n      dH = floor(dH);\n\n      while (!doneW || !doneH) {\n        oW = stepW;\n        oH = stepH;\n        if (dW < floor(stepW * mult)) {\n          stepW = floor(stepW * mult);\n        }\n        else {\n          stepW = dW;\n          doneW = true;\n        }\n        if (dH < floor(stepH * mult)) {\n          stepH = floor(stepH * mult);\n        }\n        else {\n          stepH = dH;\n          doneH = true;\n        }\n        ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\n        sX = dX;\n        sY = dY;\n        dY += stepH;\n      }\n      return ctx.getImageData(sX, sY, dW, dH);\n    },\n\n    /**\n     * Filter lanczosResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    lanczosResize: function(options, oW, oH, dW, dH) {\n\n      function process(u) {\n        var v, i, weight, idx, a, red, green,\n            blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n            fX = floor(1000 * abs(i - center.x));\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = { };\n            }\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n              fY = floor(1000 * abs(j - center.y));\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n              weight = cacheLanc[fX][fY];\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        }\n        else {\n          return destImg;\n        }\n      }\n\n      var srcData = options.imageData.data,\n          destImg = options.ctx.createImageData(dW, dH),\n          destData = destImg.data,\n          lanczos = this.lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = { }, center = { }, icenter = { };\n\n      return process(0);\n    },\n\n    /**\n     * bilinearFiltering\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    bilinearFiltering: function(options, oW, oH, dW, dH) {\n      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY,\n          w4 = 4 * (oW - 1), img = options.imageData,\n          pixels = img.data, destImage = options.ctx.createImageData(dW, dH),\n          destPixels = destImage.data;\n      for (i = 0; i < dH; i++) {\n        for (j = 0; j < dW; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * oW + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n      return destImage;\n    },\n\n    /**\n     * hermiteFastResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    hermiteFastResize: function(options, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          img = options.imageData, data = img.data,\n          img2 = options.ctx.createImageData(dW, dH), data2 = img2.data;\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /* eslint-disable max-depth */\n              if (w > 1 && w < -1) {\n                continue;\n              }\n              //hermite filter\n              weight = 2 * w * w * w - 3 * w * w + 1;\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW);\n                //alpha\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight;\n                //colors\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /* eslint-enable max-depth */\n            }\n          }\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Contrast filter class\n   * @class fabric.Image.filters.Contrast\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Contrast({\n   *   contrast: 40\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Contrast',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uContrast;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\\n' +\n        'color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    contrast: 0,\n\n    mainParameter: 'contrast',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Contrast.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.contrast=0] Value to contrast the image up (-1...1)\n     */\n\n    /**\n      * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\n      *\n      * @param {Object} options\n      * @param {ImageData} options.imageData The Uint8Array to be filtered.\n      */\n    applyTo2d: function(options) {\n      if (this.contrast === 0) {\n        return;\n      }\n      var imageData = options.imageData, i, len,\n          data = imageData.data, len = data.length,\n          contrast = Math.floor(this.contrast * 255),\n          contrastF = 259 * (contrast + 255) / (255 * (259 - contrast));\n\n      for (i = 0; i < len; i += 4) {\n        data[i] = contrastF * (data[i] - 128) + 128;\n        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uContrast: gl.getUniformLocation(program, 'uContrast'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uContrast, this.contrast);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n   */\n  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Saturate filter class\n   * @class fabric.Image.filters.Saturation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Saturation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Saturation({\n   *   saturation: 100\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Saturation = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Saturation',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uSaturation;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float rgMax = max(color.r, color.g);\\n' +\n        'float rgbMax = max(rgMax, color.b);\\n' +\n        'color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\\n' +\n        'color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\\n' +\n        'color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    saturation: 0,\n\n    mainParameter: 'saturation',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Saturate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.saturate=0] Value to saturate the image (-1...1)\n     */\n\n    /**\n     * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.saturation === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, len = data.length,\n          adjust = -this.saturation, i, max;\n\n      for (i = 0; i < len; i += 4) {\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\n        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uSaturation: gl.getUniformLocation(program, 'uSaturation'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Saturation} Instance of fabric.Image.filters.Saturate\n   */\n  fabric.Image.filters.Saturation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Blur filter class\n   * @class fabric.Image.filters.Blur\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Blur#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Blur({\n   *   blur: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Blur = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blur.prototype */ {\n\n    type: 'Blur',\n\n    /*\n'gl_FragColor = vec4(0.0);',\n'gl_FragColor += texture2D(texture, vTexCoord + -7 * uDelta)*0.0044299121055113265;',\n'gl_FragColor += texture2D(texture, vTexCoord + -6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + -5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + -4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + -3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + -2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + -1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord              )*0.159576912161;',\n'gl_FragColor += texture2D(texture, vTexCoord + 1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord + 2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + 3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + 4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + 5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + 6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + 7 * uDelta)*0.0044299121055113265;',\n*/\n\n    /* eslint-disable max-len */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'const float nSamples = 15.0;\\n' +\n      'vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\\n' +\n      'float random(vec3 scale) {\\n' +\n        /* use the fragment position for a different seed per-pixel */\n        'return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = vec4(0.0);\\n' +\n        'float total = 0.0;\\n' +\n        'float offset = random(v3offset);\\n' +\n        'for (float t = -nSamples; t <= nSamples; t++) {\\n' +\n          'float percent = (t + offset - 0.5) / nSamples;\\n' +\n          'float weight = 1.0 - abs(percent);\\n' +\n          'color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\\n' +\n          'total += weight;\\n' +\n        '}\\n' +\n        'gl_FragColor = color / total;\\n' +\n      '}',\n    /* eslint-enable max-len */\n\n    /**\n     * blur value, in percentage of image dimensions.\n     * specific to keep the image blur constant at different resolutions\n     * range bewteen 0 and 1.\n     */\n    blur: 0,\n\n    mainParameter: 'blur',\n\n    applyTo: function(options) {\n      if (options.webgl) {\n        // this aspectRatio is used to give the same blur to vertical and horizontal\n        this.aspectRatio = options.sourceWidth / options.sourceHeight;\n        options.passes++;\n        this._setupFrameBuffer(options);\n        this.horizontal = true;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        this._setupFrameBuffer(options);\n        this.horizontal = false;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n      }\n      else {\n        this.applyTo2d(options);\n      }\n    },\n\n    applyTo2d: function(options) {\n      // paint canvasEl with current image data.\n      //options.ctx.putImageData(options.imageData, 0, 0);\n      options.imageData = this.simpleBlur(options);\n    },\n\n    simpleBlur: function(options) {\n      var resources = options.filterBackend.resources, canvas1, canvas2,\n          width = options.imageData.width,\n          height = options.imageData.height;\n\n      if (!resources.blurLayer1) {\n        resources.blurLayer1 = fabric.util.createCanvasElement();\n        resources.blurLayer2 = fabric.util.createCanvasElement();\n      }\n      canvas1 = resources.blurLayer1;\n      canvas2 = resources.blurLayer2;\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas2.width = canvas1.width = width;\n        canvas2.height = canvas1.height = height;\n      }\n      var ctx1 = canvas1.getContext('2d'),\n          ctx2 = canvas2.getContext('2d'),\n          nSamples = 15,\n          random, percent, j, i,\n          blur = this.blur * 0.06 * 0.5;\n\n      // load first canvas\n      ctx1.putImageData(options.imageData, 0, 0);\n      ctx2.clearRect(0, 0, width, height);\n\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * width + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, j, random);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * height + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, random, j);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      options.ctx.drawImage(canvas1, 0, 0);\n      var newImageData = options.ctx.getImageData(0, 0, canvas1.width, canvas1.height);\n      ctx1.globalAlpha = 1;\n      ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n      return newImageData;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        delta: gl.getUniformLocation(program, 'uDelta'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var delta = this.chooseRightDelta();\n      gl.uniform2fv(uniformLocations.delta, delta);\n    },\n\n    /**\n     * choose right value of image percentage to blur with\n     * @returns {Array} a numeric array with delta values\n     */\n    chooseRightDelta: function() {\n      var blurScale = 1, delta = [0, 0], blur;\n      if (this.horizontal) {\n        if (this.aspectRatio > 1) {\n          // image is wide, i want to shrink radius horizontal\n          blurScale = 1 / this.aspectRatio;\n        }\n      }\n      else {\n        if (this.aspectRatio < 1) {\n          // image is tall, i want to shrink radius vertical\n          blurScale = this.aspectRatio;\n        }\n      }\n      blur = blurScale * this.blur * 0.12;\n      if (this.horizontal) {\n        delta[0] = blur;\n      }\n      else {\n        delta[1] = blur;\n      }\n      return delta;\n    },\n  });\n\n  /**\n   * Deserialize a JSON definition of a BlurFilter into a concrete instance.\n   */\n  filters.Blur.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Gamma filter class\n   * @class fabric.Image.filters.Gamma\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Gamma#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Gamma({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Gamma = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Gamma.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Gamma',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec3 uGamma;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'vec3 correction = (1.0 / uGamma);\\n' +\n        'color.r = pow(color.r, correction.r);\\n' +\n        'color.g = pow(color.g, correction.g);\\n' +\n        'color.b = pow(color.b, correction.b);\\n' +\n        'gl_FragColor = color;\\n' +\n        'gl_FragColor.rgb *= color.a;\\n' +\n      '}',\n\n    /**\n     * Gamma array value, from 0.01 to 2.2.\n     * @param {Array} gamma\n     * @default\n     */\n    gamma: [1, 1, 1],\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'gamma',\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.gamma = [1, 1, 1];\n      filters.BaseFilter.prototype.initialize.call(this, options);\n    },\n\n    /**\n     * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData, data = imageData.data,\n          gamma = this.gamma, len = data.length,\n          rInv = 1 / gamma[0], gInv = 1 / gamma[1],\n          bInv = 1 / gamma[2], i;\n\n      if (!this.rVals) {\n        // eslint-disable-next-line\n        this.rVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.gVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.bVals = new Uint8Array(256);\n      }\n\n      // This is an optimization - pre-compute a look-up table for each color channel\n      // instead of performing these pow calls for each pixel in the image.\n      for (i = 0, len = 256; i < len; i++) {\n        this.rVals[i] = Math.pow(i / 255, rInv) * 255;\n        this.gVals[i] = Math.pow(i / 255, gInv) * 255;\n        this.bVals[i] = Math.pow(i / 255, bInv) * 255;\n      }\n      for (i = 0, len = data.length; i < len; i += 4) {\n        data[i] = this.rVals[data[i]];\n        data[i + 1] = this.gVals[data[i + 1]];\n        data[i + 2] = this.bVals[data[i + 2]];\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uGamma: gl.getUniformLocation(program, 'uGamma'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform3fv(uniformLocations.uGamma, this.gamma);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Gamma} Instance of fabric.Image.filters.Gamma\n   */\n  fabric.Image.filters.Gamma.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * A container class that knows how to apply a sequence of filters to an input image.\n   */\n  filters.Composed = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Composed.prototype */ {\n\n    type: 'Composed',\n\n    /**\n     * A non sparse array of filters to apply\n     */\n    subFilters: [],\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.subFilters = this.subFilters.slice(0);\n    },\n\n    /**\n     * Apply this container's filters to the input image provided.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be applied.\n     */\n    applyTo: function(options) {\n      options.passes += this.subFilters.length - 1;\n      this.subFilters.forEach(function(filter) {\n        filter.applyTo(options);\n      });\n    },\n\n    /**\n     * Serialize this filter into JSON.\n     *\n     * @returns {Object} A JSON representation of this filter.\n     */\n    toObject: function() {\n      return fabric.util.object.extend(this.callSuper('toObject'), {\n        subFilters: this.subFilters.map(function(filter) { return filter.toObject(); }),\n      });\n    },\n\n    isNeutralState: function() {\n      return !this.subFilters.some(function(filter) { return !filter.isNeutralState(); });\n    }\n  });\n\n  /**\n   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\n   */\n  fabric.Image.filters.Composed.fromObject = function(object, callback) {\n    var filters = object.subFilters || [],\n        subFilters = filters.map(function(filter) {\n          return new fabric.Image.filters[filter.type](filter);\n        }),\n        instance = new fabric.Image.filters.Composed({ subFilters: subFilters });\n    callback && callback(instance);\n    return instance;\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * HueRotation filter class\n   * @class fabric.Image.filters.HueRotation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.HueRotation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.HueRotation({\n   *   rotation: -0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.HueRotation = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.HueRotation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'HueRotation',\n\n    /**\n     * HueRotation value, from -1 to 1.\n     * the unit is radians\n     * @param {Number} myParameter\n     * @default\n     */\n    rotation: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'rotation',\n\n    calculateMatrix: function() {\n      var rad = this.rotation * Math.PI, cos = fabric.util.cos(rad), sin = fabric.util.sin(rad),\n          aThird = 1 / 3, aThirdSqtSin = Math.sqrt(aThird) * sin, OneMinusCos = 1 - cos;\n      this.matrix = [\n        1, 0, 0, 0, 0,\n        0, 1, 0, 0, 0,\n        0, 0, 1, 0, 0,\n        0, 0, 0, 1, 0\n      ];\n      this.matrix[0] = cos + OneMinusCos / 3;\n      this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[6] = cos + aThird * OneMinusCos;\n      this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[12] = cos + aThird * OneMinusCos;\n    },\n\n    /**\n     * HueRotation isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function(options) {\n      this.calculateMatrix();\n      return filters.BaseFilter.prototype.isNeutralState.call(this, options);\n    },\n\n    /**\n     * Apply this filter to the input image data provided.\n     *\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      this.calculateMatrix();\n      filters.BaseFilter.prototype.applyTo.call(this, options);\n    },\n\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.HueRotation} Instance of fabric.Image.filters.HueRotation\n   */\n  fabric.Image.filters.HueRotation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      clone = fabric.util.object.clone;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Array\n     * @private\n     */\n    _dimensionAffectingProps: [\n      'fontSize',\n      'fontWeight',\n      'fontFamily',\n      'fontStyle',\n      'lineHeight',\n      'text',\n      'charSpacing',\n      'textAlign',\n      'styles',\n    ],\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespaces that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]/g,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpaceAndTab: /[ \\t\\r]/,\n\n    /**\n     * Use this regular expression to filter consecutive groups of non spaces.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reWords: /\\S+/g,\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type:                 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize:             40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight:           'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily:           'Times New Roman',\n\n    /**\n     * Text decoration underline.\n     * @type Boolean\n     * @default\n     */\n    underline:       false,\n\n    /**\n     * Text decoration overline.\n     * @type Boolean\n     * @default\n     */\n    overline:       false,\n\n    /**\n     * Text decoration linethrough.\n     * @type Boolean\n     * @default\n     */\n    linethrough:       false,\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\n     * \"justify-left\", \"justify-center\" or \"justify-right\".\n     * @type String\n     * @default\n     */\n    textAlign:            'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle:            'normal',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight:           1.16,\n\n    /**\n     * Superscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    superscript: {\n      size:      0.60, // fontSize factor\n      baseline: -0.35  // baseline-shift factor (upwards)\n    },\n\n    /**\n     * Subscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    subscript: {\n      size:      0.60, // fontSize factor\n      baseline:  0.11  // baseline-shift factor (downwards)\n    },\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor:  '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'underline',\n      'overline',\n      'linethrough',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'underline',\n      'overline',\n      'linethrough',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke:               null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:               null,\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.222,\n\n    /**\n     * @private\n     */\n    offsets: {\n      underline: 0.10,\n      linethrough: -0.315,\n      overline: -0.88\n    },\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult:             1.13,\n\n    /**\n     * additional space between characters\n     * expressed in thousands of em unit\n     * @type Number\n     * @default\n     */\n    charSpacing:             0,\n\n    /**\n     * Object containing character styles - top-level properties -> line numbers,\n     * 2nd-level properties - charater numbers\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Reference to a context to measure text char or couple of chars\n     * the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas\n     * once created it will be referenced on fabric._measuringContext to avoide creating a canvas for every\n     * text object created.\n     * @type {CanvasRenderingContext2D}\n     * @default\n     */\n    _measuringContext: null,\n\n    /**\n     * Baseline shift, stlyes only, keep at 0 for the main text object\n     * @type {Number}\n     * @default\n     */\n    deltaY: 0,\n\n    /**\n     * Array of properties that define a style unit (of 'styles').\n     * @type {Array}\n     * @default\n     */\n    _styleProperties: [\n      'stroke',\n      'strokeWidth',\n      'fill',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontStyle',\n      'underline',\n      'overline',\n      'linethrough',\n      'deltaY',\n      'textBackgroundColor',\n    ],\n\n    /**\n     * contains characters bounding boxes\n     */\n    __charBounds: [],\n\n    /**\n     * use this size when measuring text. To avoid IE11 rounding errors\n     * @type {Number}\n     * @default\n     * @readonly\n     * @private\n     */\n    CACHE_FONT_SIZE: 400,\n\n    /**\n     * contains the min text width to avoid getting 0\n     * @type {Number}\n     * @default\n     */\n    MIN_TEXT_WIDTH: 2,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function(text, options) {\n      this.styles = options ? (options.styles || { }) : { };\n      this.text = text;\n      this.__skipDimension = true;\n      this.callSuper('initialize', options);\n      this.__skipDimension = false;\n      this.initDimensions();\n      this.setCoords();\n      this.setupState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Return a contex for measurement of text string.\n     * if created it gets stored for reuse\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    getMeasuringContext: function() {\n      // if we did not return we have to measure something.\n      if (!fabric._measuringContext) {\n        fabric._measuringContext = this.canvas && this.canvas.contextCache ||\n          fabric.util.createCanvasElement().getContext('2d');\n      }\n      return fabric._measuringContext;\n    },\n\n    /**\n     * @private\n     * Divides text into lines of text and lines of graphemes.\n     */\n    _splitText: function() {\n      var newLines = this._splitTextIntoLines(this.text);\n      this.textLines = newLines.lines;\n      this._textLines = newLines.graphemeLines;\n      this._unwrappedTextLines = newLines._unwrappedLines;\n      this._text = newLines.graphemeText;\n      return newLines;\n    },\n\n    /**\n     * Initialize or update text dimensions.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this._splitText();\n      this._clearCache();\n      this.width = this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Enlarge space boxes and shift the others\n     */\n    enlargeSpaces: function() {\n      var diffSpace, currentLineWidth, numberOfSpaces, accumulatedSpace, line, charBound, spaces;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textAlign !== 'justify' && (i === len - 1 || this.isEndOfWrapping(i))) {\n          continue;\n        }\n        accumulatedSpace = 0;\n        line = this._textLines[i];\n        currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth < this.width && (spaces = this.textLines[i].match(this._reSpacesAndTabs))) {\n          numberOfSpaces = spaces.length;\n          diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\n          for (var j = 0, jlen = line.length; j <= jlen; j++) {\n            charBound = this.__charBounds[i][j];\n            if (this._reSpaceAndTab.test(line[j])) {\n              charBound.width += diffSpace;\n              charBound.kernedWidth += diffSpace;\n              charBound.left += accumulatedSpace;\n              accumulatedSpace += diffSpace;\n            }\n            else {\n              charBound.left += accumulatedSpace;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      return lineIndex === this._textLines.length - 1;\n    },\n\n    /**\n     * Detect if a line has a linebreak and so we need to account for it when moving\n     * and counting style.\n     * It return always for text and Itext.\n     * @return Number\n     */\n    missingNewlineOffset: function() {\n      return 1;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function() {\n      return '#<fabric.Text (' + this.complexity() +\n        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var dims = this.callSuper('_getCacheCanvasDimensions');\n      var fontSize = this.fontSize;\n      dims.width += fontSize * dims.zoomX;\n      dims.height += fontSize * dims.zoomY;\n      return dims;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this._setTextStyles(ctx);\n      this._renderTextLinesBackground(ctx);\n      this._renderTextDecoration(ctx, 'underline');\n      this._renderText(ctx);\n      this._renderTextDecoration(ctx, 'overline');\n      this._renderTextDecoration(ctx, 'linethrough');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderTextStroke(ctx);\n        this._renderTextFill(ctx);\n      }\n      else {\n        this._renderTextFill(ctx);\n        this._renderTextStroke(ctx);\n      }\n    },\n\n    /**\n     * Set the font parameter of the context with the object properties or with charStyle\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [charStyle] object with font style properties\n     * @param {String} [charStyle.fontFamily] Font Family\n     * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\n     * @param {String} [charStyle.fontWeight] Font weight\n     * @param {String} [charStyle.fontStyle] Font style (italic|normal)\n     */\n    _setTextStyles: function(ctx, charStyle, forMeasuring) {\n      ctx.textBaseline = 'alphabetic';\n      ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\n    },\n\n    /**\n     * calculate and return the text Width measuring each line.\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    calcTextWidth: function() {\n      var maxWidth = this.getLineWidth(0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n      return maxWidth;\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      this._renderChars(method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * Renders the text background for lines, taking care of style\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\n        return;\n      }\n      var lineTopOffset = 0, heightOfLine,\n          lineLeftOffset, originalFill = ctx.fillStyle,\n          line, lastColor,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          boxStart = 0, boxWidth = 0, charBox, currentColor;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor', i)) {\n          lineTopOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxWidth = 0;\n        boxStart = 0;\n        lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n          if (currentColor !== lastColor) {\n            ctx.fillStyle = lastColor;\n            lastColor && ctx.fillRect(\n              leftOffset + lineLeftOffset + boxStart,\n              topOffset + lineTopOffset,\n              boxWidth,\n              heightOfLine / this.lineHeight\n            );\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastColor = currentColor;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        if (currentColor) {\n          ctx.fillStyle = currentColor;\n          ctx.fillRect(\n            leftOffset + lineLeftOffset + boxStart,\n            topOffset + lineTopOffset,\n            boxWidth,\n            heightOfLine / this.lineHeight\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n      ctx.fillStyle = originalFill;\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {Object} decl style declaration for cache\n     * @param {String} decl.fontFamily fontFamily\n     * @param {String} decl.fontStyle fontStyle\n     * @param {String} decl.fontWeight fontWeight\n     * @return {Object} reference to cache\n     */\n    getFontCache: function(decl) {\n      var fontFamily = decl.fontFamily.toLowerCase();\n      if (!fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = { };\n      }\n      var cache = fabric.charWidthsCache[fontFamily],\n          cacheProp = decl.fontStyle.toLowerCase() + '_' + (decl.fontWeight + '').toLowerCase();\n      if (!cache[cacheProp]) {\n        cache[cacheProp] = { };\n      }\n      return cache[cacheProp];\n    },\n\n    /**\n     * apply all the character style to canvas for rendering\n     * @private\n     * @param {String} _char\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} [decl]\n     */\n    _applyCharStyles: function(method, ctx, lineIndex, charIndex, styleDeclaration) {\n\n      this._setFillStyles(ctx, styleDeclaration);\n      this._setStrokeStyles(ctx, styleDeclaration);\n\n      ctx.font = this._getFontDeclaration(styleDeclaration);\n    },\n\n    /**\n     * measure and return the width of a single character.\n     * possibly overridden to accommodate different measure logic or\n     * to hook some external lib for character measurement\n     * @private\n     * @param {String} _char, char to be measured\n     * @param {Object} charStyle style of char to be measured\n     * @param {String} [previousChar] previous char\n     * @param {Object} [prevCharStyle] style of previous char\n     */\n    _measureChar: function(_char, charStyle, previousChar, prevCharStyle) {\n      // first i try to return from cache\n      var fontCache = this.getFontCache(charStyle), fontDeclaration = this._getFontDeclaration(charStyle),\n          previousFontDeclaration = this._getFontDeclaration(prevCharStyle), couple = previousChar + _char,\n          stylesAreEqual = fontDeclaration === previousFontDeclaration, width, coupleWidth, previousWidth,\n          fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE, kernedWidth;\n\n      if (previousChar && fontCache[previousChar] !== undefined) {\n        previousWidth = fontCache[previousChar];\n      }\n      if (fontCache[_char] !== undefined) {\n        kernedWidth = width = fontCache[_char];\n      }\n      if (stylesAreEqual && fontCache[couple] !== undefined) {\n        coupleWidth = fontCache[couple];\n        kernedWidth = coupleWidth - previousWidth;\n      }\n      if (width === undefined || previousWidth === undefined || coupleWidth === undefined) {\n        var ctx = this.getMeasuringContext();\n        // send a TRUE to specify measuring font size CACHE_FONT_SIZE\n        this._setTextStyles(ctx, charStyle, true);\n      }\n      if (width === undefined) {\n        kernedWidth = width = ctx.measureText(_char).width;\n        fontCache[_char] = width;\n      }\n      if (previousWidth === undefined && stylesAreEqual && previousChar) {\n        previousWidth = ctx.measureText(previousChar).width;\n        fontCache[previousChar] = previousWidth;\n      }\n      if (stylesAreEqual && coupleWidth === undefined) {\n        // we can measure the kerning couple and subtract the width of the previous character\n        coupleWidth = ctx.measureText(couple).width;\n        fontCache[couple] = coupleWidth;\n        kernedWidth = coupleWidth - previousWidth;\n      }\n      return { width: width * fontMultiplier, kernedWidth: kernedWidth * fontMultiplier };\n    },\n\n    /**\n     * Computes height of character at given position\n     * @param {Number} line the line index number\n     * @param {Number} _char the character index number\n     * @return {Number} fontSize of the character\n     */\n    getHeightOfChar: function(line, _char) {\n      return this.getValueOfPropertyAt(line, _char, 'fontSize');\n    },\n\n    /**\n     * measure a text line measuring all characters.\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    measureLine: function(lineIndex) {\n      var lineInfo = this._measureLine(lineIndex);\n      if (this.charSpacing !== 0) {\n        lineInfo.width -= this._getWidthOfCharSpacing();\n      }\n      if (lineInfo.width < 0) {\n        lineInfo.width = 0;\n      }\n      return lineInfo;\n    },\n\n    /**\n     * measure every grapheme of a line, populating __charBounds\n     * @param {Number} lineIndex\n     * @return {Object} object.width total width of characters\n     * @return {Object} object.widthOfSpaces length of chars that match this._reSpacesAndTabs\n     */\n    _measureLine: function(lineIndex) {\n      var width = 0, i, grapheme, line = this._textLines[lineIndex], prevGrapheme,\n          graphemeInfo, numOfSpaces = 0, lineBounds = new Array(line.length);\n\n      this.__charBounds[lineIndex] = lineBounds;\n      for (i = 0; i < line.length; i++) {\n        grapheme = line[i];\n        graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\n        lineBounds[i] = graphemeInfo;\n        width += graphemeInfo.kernedWidth;\n        prevGrapheme = grapheme;\n      }\n      // this latest bound box represent the last character of the line\n      // to simplify cursor handling in interactive mode.\n      lineBounds[i] = {\n        left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\n        width: 0,\n        kernedWidth: 0,\n        height: this.fontSize\n      };\n      return { width: width, numOfSpaces: numOfSpaces };\n    },\n\n    /**\n     * Measure and return the info of a single grapheme.\n     * needs the the info of previous graphemes already filled\n     * @private\n     * @param {String} grapheme to be measured\n     * @param {Number} lineIndex index of the line where the char is\n     * @param {Number} charIndex position in the line\n     * @param {String} [prevGrapheme] character preceding the one to be measured\n     */\n    _getGraphemeBox: function(grapheme, lineIndex, charIndex, prevGrapheme, skipLeft) {\n      var style = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          prevStyle = prevGrapheme ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1) : { },\n          info = this._measureChar(grapheme, style, prevGrapheme, prevStyle),\n          kernedWidth = info.kernedWidth,\n          width = info.width, charSpacing;\n\n      if (this.charSpacing !== 0) {\n        charSpacing = this._getWidthOfCharSpacing();\n        width += charSpacing;\n        kernedWidth += charSpacing;\n      }\n\n      var box = {\n        width: width,\n        left: 0,\n        height: style.fontSize,\n        kernedWidth: kernedWidth,\n        deltaY: style.deltaY,\n      };\n      if (charIndex > 0 && !skipLeft) {\n        var previousBox = this.__charBounds[lineIndex][charIndex - 1];\n        box.left = previousBox.left + previousBox.width + info.kernedWidth - info.width;\n      }\n      return box;\n    },\n\n    /**\n     * Calculate height of line at 'lineIndex'\n     * @param {Number} lineIndex index of line to calculate\n     * @return {Number}\n     */\n    getHeightOfLine: function(lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          // char 0 is measured before the line cycle because it nneds to char\n          // emptylines\n          maxHeight = this.getHeightOfChar(lineIndex, 0);\n      for (var i = 1, len = line.length; i < len; i++) {\n        maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);\n      }\n\n      return this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n    },\n\n    /**\n     * Calculate text box height\n     */\n    calcTextHeight: function() {\n      var lineHeight, height = 0;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineHeight = this.getHeightOfLine(i);\n        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\n      }\n      return height;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function() {\n      return -this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function() {\n      return -this.height / 2;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     */\n    _renderTextCommon: function(ctx, method) {\n      ctx.save();\n      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset(),\n          offsets = this._applyPatternGradientTransform(ctx, method === 'fillText' ? this.fill : this.stroke);\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this.getHeightOfLine(i),\n            maxHeight = heightOfLine / this.lineHeight,\n            leftOffset = this._getLineLeftOffset(i);\n        this._renderTextLine(\n          method,\n          ctx,\n          this._textLines[i],\n          left + leftOffset - offsets.offsetX,\n          top + lineHeights + maxHeight - offsets.offsetY,\n          i\n        );\n        lineHeights += heightOfLine;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function(ctx) {\n      if (!this.fill && !this.styleHas('fill')) {\n        return;\n      }\n\n      this._renderTextCommon(ctx, 'fillText');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function(ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray);\n      ctx.beginPath();\n      this._renderTextCommon(ctx, 'strokeText');\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _renderChars: function(method, ctx, line, left, top, lineIndex) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox,\n          boxWidth = 0,\n          timeToRender,\n          shortCut = !isJustify && this.charSpacing === 0 && this.isEmptyStyles(lineIndex);\n\n      ctx.save();\n      top -= lineHeight * this._fontSizeFraction / this.lineHeight;\n      if (shortCut) {\n        // render all the line in one pass without checking\n        this._renderChar(method, ctx, lineIndex, 0, this.textLines[lineIndex], left, top, lineHeight);\n        ctx.restore();\n        return;\n      }\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          left += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChanged(actualStyle, nextStyle);\n        }\n        if (timeToRender) {\n          this._renderChar(method, ctx, lineIndex, i, charsToRender, left, top, lineHeight);\n          charsToRender = '';\n          actualStyle = nextStyle;\n          left += boxWidth;\n          boxWidth = 0;\n        }\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function(method, ctx, lineIndex, charIndex, _char, left, top) {\n      var decl = this._getStyleDeclaration(lineIndex, charIndex),\n          fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          shouldFill = method === 'fillText' && fullDecl.fill,\n          shouldStroke = method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;\n\n      if (!shouldStroke && !shouldFill) {\n        return;\n      }\n      decl && ctx.save();\n\n      this._applyCharStyles(method, ctx, lineIndex, charIndex, fullDecl);\n\n      if (decl && decl.textBackgroundColor) {\n        this._removeShadow(ctx);\n      }\n      if (decl && decl.deltaY) {\n        top += decl.deltaY;\n      }\n\n      shouldFill && ctx.fillText(_char, left, top);\n      shouldStroke && ctx.strokeText(_char, left, top);\n      decl && ctx.restore();\n    },\n\n    /**\n     * Turns the character into a 'superior figure' (i.e. 'superscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSuperscript: function(start, end) {\n      return this._setScript(start, end, this.superscript);\n    },\n\n    /**\n     * Turns the character into an 'inferior figure' (i.e. 'subscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSubscript: function(start, end) {\n      return this._setScript(start, end, this.subscript);\n    },\n\n    /**\n     * Applies 'schema' at given position\n     * @private\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @param {Number} schema\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    _setScript: function(start, end, schema) {\n      var loc = this.get2DCursorLocation(start, true),\n          fontSize = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'fontSize'),\n          dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'deltaY'),\n          style = { fontSize: fontSize * schema.size, deltaY: dy + fontSize * schema.baseline };\n      this.setSelectionStyles(style, start, end);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChanged: function(prevStyle, thisStyle) {\n      return prevStyle.fill !== thisStyle.fill ||\n              prevStyle.stroke !== thisStyle.stroke ||\n              prevStyle.strokeWidth !== thisStyle.strokeWidth ||\n              prevStyle.fontSize !== thisStyle.fontSize ||\n              prevStyle.fontFamily !== thisStyle.fontFamily ||\n              prevStyle.fontWeight !== thisStyle.fontWeight ||\n              prevStyle.fontStyle !== thisStyle.fontStyle ||\n              prevStyle.deltaY !== thisStyle.deltaY;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChangedForSvg: function(prevStyle, thisStyle) {\n      return this._hasStyleChanged(prevStyle, thisStyle) ||\n        prevStyle.overline !== thisStyle.overline ||\n        prevStyle.underline !== thisStyle.underline ||\n        prevStyle.linethrough !== thisStyle.linethrough;\n    },\n\n    /**\n     * @private\n     * @param {Number} lineIndex index text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function(lineIndex) {\n      var lineWidth = this.getLineWidth(lineIndex);\n      if (this.textAlign === 'center') {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'right') {\n        return this.width - lineWidth;\n      }\n      if (this.textAlign === 'justify-center' && this.isEndOfWrapping(lineIndex)) {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'justify-right' && this.isEndOfWrapping(lineIndex)) {\n        return this.width - lineWidth;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.__lineWidths = [];\n      this.__lineHeights = [];\n      this.__charBounds = [];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearDimensionCache: function() {\n      var shouldClear = this._forceClearCache;\n      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\n      if (shouldClear) {\n        this.dirty = true;\n        this._forceClearCache = false;\n      }\n      return shouldClear;\n    },\n\n    /**\n     * Measure a single line given its index. Used to calculate the initial\n     * text bounding box. The values are calculated and stored in __lineWidths cache.\n     * @private\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    getLineWidth: function(lineIndex) {\n      if (this.__lineWidths[lineIndex]) {\n        return this.__lineWidths[lineIndex];\n      }\n\n      var width, line = this._textLines[lineIndex], lineInfo;\n\n      if (line === '') {\n        width = 0;\n      }\n      else {\n        lineInfo = this.measureLine(lineIndex);\n        width = lineInfo.width;\n      }\n      this.__lineWidths[lineIndex] = width;\n      return width;\n    },\n\n    _getWidthOfCharSpacing: function() {\n      if (this.charSpacing !== 0) {\n        return this.fontSize * this.charSpacing / 1000;\n      }\n      return 0;\n    },\n\n    /**\n     * Retrieves the value of property at given character position\n     * @param {Number} lineIndex the line number\n     * @param {Number} charIndex the charater number\n     * @param {String} property the property name\n     * @returns the value of 'property'\n     */\n    getValueOfPropertyAt: function(lineIndex, charIndex, property) {\n      var charStyle = this._getStyleDeclaration(lineIndex, charIndex);\n      if (charStyle && typeof charStyle[property] !== 'undefined') {\n        return charStyle[property];\n      }\n      return this[property];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx, type) {\n      if (!this[type] && !this.styleHas(type)) {\n        return;\n      }\n      var heightOfLine, size, _size,\n          lineLeftOffset, dy, _dy,\n          line, lastDecoration,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(), top,\n          boxStart, boxWidth, charBox, currentDecoration,\n          maxHeight, currentFill, lastFill,\n          charSpacing = this._getWidthOfCharSpacing();\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this[type] && !this.styleHas(type, i)) {\n          topOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        maxHeight = heightOfLine / this.lineHeight;\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxStart = 0;\n        boxWidth = 0;\n        lastDecoration = this.getValueOfPropertyAt(i, 0, type);\n        lastFill = this.getValueOfPropertyAt(i, 0, 'fill');\n        top = topOffset + maxHeight * (1 - this._fontSizeFraction);\n        size = this.getHeightOfChar(i, 0);\n        dy = this.getValueOfPropertyAt(i, 0, 'deltaY');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentDecoration = this.getValueOfPropertyAt(i, j, type);\n          currentFill = this.getValueOfPropertyAt(i, j, 'fill');\n          _size = this.getHeightOfChar(i, j);\n          _dy = this.getValueOfPropertyAt(i, j, 'deltaY');\n          if ((currentDecoration !== lastDecoration || currentFill !== lastFill || _size !== size || _dy !== dy) &&\n              boxWidth > 0) {\n            ctx.fillStyle = lastFill;\n            lastDecoration && lastFill && ctx.fillRect(\n              leftOffset + lineLeftOffset + boxStart,\n              top + this.offsets[type] * size + dy,\n              boxWidth,\n              this.fontSize / 15\n            );\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastDecoration = currentDecoration;\n            lastFill = currentFill;\n            size = _size;\n            dy = _dy;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        ctx.fillStyle = currentFill;\n        currentDecoration && currentFill && ctx.fillRect(\n          leftOffset + lineLeftOffset + boxStart,\n          top + this.offsets[type] * size + dy,\n          boxWidth - charSpacing,\n          this.fontSize / 15\n        );\n        topOffset += heightOfLine;\n      }\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * return font declaration string for canvas context\n     * @param {Object} [styleObject] object\n     * @returns {String} font declaration formatted for canvas context.\n     */\n    _getFontDeclaration: function(styleObject, forMeasuring) {\n      var style = styleObject || this, family = this.fontFamily,\n          fontIsGeneric = fabric.Text.genericFonts.indexOf(family.toLowerCase()) > -1;\n      var fontFamily = family === undefined ||\n      family.indexOf('\\'') > -1 || family.indexOf(',') > -1 ||\n      family.indexOf('\"') > -1 || fontIsGeneric\n        ? style.fontFamily : '\"' + style.fontFamily + '\"';\n      return [\n        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n        // verify if this can be fixed in JSDOM\n        (fabric.isLikelyNode ? style.fontWeight : style.fontStyle),\n        (fabric.isLikelyNode ? style.fontStyle : style.fontWeight),\n        forMeasuring ? this.CACHE_FONT_SIZE + 'px' : style.fontSize + 'px',\n        fontFamily\n      ].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n      }\n      this.callSuper('render', ctx);\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @param {String} text text to split\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function(text) {\n      var lines = text.split(this._reNewline),\n          newLines = new Array(lines.length),\n          newLine = ['\\n'],\n          newText = [];\n      for (var i = 0; i < lines.length; i++) {\n        newLines[i] = fabric.util.string.graphemeSplit(lines[i]);\n        newText = newText.concat(newLines[i], newLine);\n      }\n      newText.pop();\n      return { _unwrappedLines: newLines, lines: lines, graphemeText: newText, graphemeLines: newLines };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var additionalProperties = [\n        'text',\n        'fontSize',\n        'fontWeight',\n        'fontFamily',\n        'fontStyle',\n        'lineHeight',\n        'underline',\n        'overline',\n        'linethrough',\n        'textAlign',\n        'textBackgroundColor',\n        'charSpacing',\n      ].concat(propertiesToInclude);\n      var obj = this.callSuper('toObject', additionalProperties);\n      obj.styles = clone(this.styles, true);\n      return obj;\n    },\n\n    /**\n     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    set: function(key, value) {\n      this.callSuper('set', key, value);\n      var needsDims = false;\n      if (typeof key === 'object') {\n        for (var _key in key) {\n          needsDims = needsDims || this._dimensionAffectingProps.indexOf(_key) !== -1;\n        }\n      }\n      else {\n        needsDims = this._dimensionAffectingProps.indexOf(key) !== -1;\n      }\n      if (needsDims) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      return this;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n    'x y dx dy font-family font-style font-weight font-size letter-spacing text-decoration text-anchor'.split(' '));\n\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Text.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES),\n        parsedAnchor = parsedAttributes.textAnchor || 'left';\n    options = fabric.util.object.extend((options ? clone(options) : { }), parsedAttributes);\n\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n    if (parsedAttributes.textDecoration) {\n      var textDecoration = parsedAttributes.textDecoration;\n      if (textDecoration.indexOf('underline') !== -1) {\n        options.underline = true;\n      }\n      if (textDecoration.indexOf('overline') !== -1) {\n        options.overline = true;\n      }\n      if (textDecoration.indexOf('line-through') !== -1) {\n        options.linethrough = true;\n      }\n      delete options.textDecoration;\n    }\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    var textContent = '';\n\n    // The XML is not properly parsed in IE9 so a workaround to get\n    // textContent is through firstChild.data. Another workaround would be\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n    if (!('textContent' in element)) {\n      if ('firstChild' in element && element.firstChild !== null) {\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\n          textContent = element.firstChild.data;\n        }\n      }\n    }\n    else {\n      textContent = element.textContent;\n    }\n\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n    var originalStrokeWidth = options.strokeWidth;\n    options.strokeWidth = 0;\n\n    var text = new fabric.Text(textContent, options),\n        textHeightScaleFactor = text.getScaledHeight() / text.height,\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n        textHeight = text.getScaledHeight() + scaledDiff,\n        offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        fabric output by default at top, left.\n    */\n    if (parsedAnchor === 'center') {\n      offX = text.getScaledWidth() / 2;\n    }\n    if (parsedAnchor === 'right') {\n      offX = text.getScaledWidth();\n    }\n    text.set({\n      left: text.left - offX,\n      top: text.top - (textHeight - text.fontSize * (0.07 + text._fontSizeFraction)) / text.lineHeight,\n      strokeWidth: typeof originalStrokeWidth !== 'undefined' ? originalStrokeWidth : 1,\n    });\n    callback(text);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n   */\n  fabric.Text.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Text', object, callback, 'text');\n  };\n\n  fabric.Text.genericFonts = ['sans-serif', 'serif', 'cursive', 'fantasy', 'monospace'];\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Text);\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function(lineIndex) {\n      if (!this.styles) {\n        return true;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return true;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          // eslint-disable-next-line no-unused-vars\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * This function is used to detect if a text will use a particular property or not.\n     * @param {String} property to check for\n     * @param {Number} lineIndex to check the style on\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return false;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { 0: this.styles[lineIndex] };\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          if (typeof obj[p1][p2][property] !== 'undefined') {\n            return true;\n          }\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if characters in a text have a value for a property\n     * whose value matches the textbox's value for that property.  If so,\n     * the character-level property is deleted.  If the character\n     * has no other properties, then it is also deleted.  Finally,\n     * if the line containing that character has no other characters\n     * then it also is deleted.\n     *\n     * @param {string} property The property to compare between characters and text.\n     */\n    cleanStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      var obj = this.styles, stylesCount = 0, letterCount, stylePropertyValue,\n          allStyleObjectPropertiesMatch = true, graphemeCount = 0, styleObject;\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        letterCount = 0;\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          var styleObject = obj[p1][p2],\n              stylePropertyHasBeenSet = styleObject.hasOwnProperty(property);\n\n          stylesCount++;\n\n          if (stylePropertyHasBeenSet) {\n            if (!stylePropertyValue) {\n              stylePropertyValue = styleObject[property];\n            }\n            else if (styleObject[property] !== stylePropertyValue) {\n              allStyleObjectPropertiesMatch = false;\n            }\n\n            if (styleObject[property] === this[property]) {\n              delete styleObject[property];\n            }\n          }\n          else {\n            allStyleObjectPropertiesMatch = false;\n          }\n\n          if (Object.keys(styleObject).length !== 0) {\n            letterCount++;\n          }\n          else {\n            delete obj[p1][p2];\n          }\n        }\n\n        if (letterCount === 0) {\n          delete obj[p1];\n        }\n      }\n      // if every grapheme has the same style set then\n      // delete those styles and set it on the parent\n      for (var i = 0; i < this._textLines.length; i++) {\n        graphemeCount += this._textLines[i].length;\n      }\n      if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\n        this[property] = stylePropertyValue;\n        this.removeStyle(property);\n      }\n    },\n\n    /**\n     * Remove a style property or properties from all individual character styles\n     * in a text object.  Deletes the character style object if it contains no other style\n     * props.  Deletes a line style object if it contains no other character styles.\n     *\n     * @param {String} props The property to remove from character styles.\n     */\n    removeStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return;\n      }\n      var obj = this.styles, line, lineNum, charNum;\n      for (lineNum in obj) {\n        line = obj[lineNum];\n        for (charNum in line) {\n          delete line[charNum][property];\n          if (Object.keys(line[charNum]).length === 0) {\n            delete line[charNum];\n          }\n        }\n        if (Object.keys(line).length === 0) {\n          delete obj[lineNum];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function(index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex);\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. usefull to manage styles.\n     */\n    get2DCursorLocation: function(selectionStart, skipWrapping) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n      var lines = skipWrapping ? this._unwrappedTextLines : this._textLines,\n          len = lines.length;\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= lines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n        selectionStart -= lines[i].length + this.missingNewlineOffset(i);\n      }\n      return {\n        lineIndex: i - 1,\n        charIndex: lines[i - 1].length < selectionStart ? lines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * if startIndex or endIndex are not provided, slectionStart or selectionEnd will be used.\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @param {Boolean} [complete] get full style or not\n     * @return {Array} styles an array with one, zero or more Style objects\n     */\n    getSelectionStyles: function(startIndex, endIndex, complete) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      var styles = [];\n      for (var i = startIndex; i < endIndex; i++) {\n        styles.push(this.getStyleAtPosition(i, complete));\n      }\n      return styles;\n    },\n\n    /**\n     * Gets style of a current selection/cursor position\n     * @param {Number} position  to get styles at\n     * @param {Boolean} [complete] full style if true\n     * @return {Object} style Style object at a specified index\n     * @private\n     */\n    getStyleAtPosition: function(position, complete) {\n      var loc = this.get2DCursorLocation(position),\n          style = complete ? this.getCompleteStyleDeclaration(loc.lineIndex, loc.charIndex) :\n            this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection, if no selection exist, do not set anything.\n     * @param {Object} [styles] Styles object\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function(styles, startIndex, endIndex) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      for (var i = startIndex; i < endIndex; i++) {\n        this._extendStyles(i, styles);\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * get the reference, not a clone, of the style object for a given character\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @return {Object} style object\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      var lineStyle = this.styles && this.styles[lineIndex];\n      if (!lineStyle) {\n        return null;\n      }\n      return lineStyle[charIndex];\n    },\n\n    /**\n     * return a new object that contains all the style property for a character\n     * the object returned is newly created\n     * @param {Number} lineIndex of the line where the character is\n     * @param {Number} charIndex position of the character on the line\n     * @return {Object} style object\n     */\n    getCompleteStyleDeclaration: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex) || { },\n          styleObject = { }, prop;\n      for (var i = 0; i < this._styleProperties.length; i++) {\n        prop = this._styleProperties[i];\n        styleObject[prop] = typeof style[prop] === 'undefined' ? this[prop] : style[prop];\n      }\n      return styleObject;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @return {Boolean} if the line exists or not\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      return !!this.styles[lineIndex];\n    },\n\n    /**\n     * Set the line style to an empty object so that is initialized\n     * @param {Number} lineIndex\n     * @private\n     */\n    _setLineStyle: function(lineIndex) {\n      this.styles[lineIndex] = {};\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      delete this.styles[lineIndex];\n    }\n  });\n})();\n\n\n(function() {\n\n  function parseDecoration(object) {\n    if (object.textDecoration) {\n      object.textDecoration.indexOf('underline') > -1 && (object.underline = true);\n      object.textDecoration.indexOf('line-through') > -1 && (object.linethrough = true);\n      object.textDecoration.indexOf('overline') > -1 && (object.overline = true);\n      delete object.textDecoration;\n    }\n  }\n\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of default cursor (when not overwritten by character style)\n     * @type String\n     * @default\n     */\n    cursorColor: '#333',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    __widthOfSpace: [],\n\n    /**\n     * Helps determining when the text is in composition, so that the cursor\n     * rendering is altered.\n     */\n    inCompositionMode: false,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function(text, options) {\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function(index) {\n      index = Math.max(index, 0);\n      this._updateAndFire('selectionStart', index);\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function(index) {\n      index = Math.min(index, this.text.length);\n      this._updateAndFire('selectionEnd', index);\n    },\n\n    /**\n     * @private\n     * @param {String} property 'selectionStart' or 'selectionEnd'\n     * @param {Number} index new position of property\n     */\n    _updateAndFire: function(property, index) {\n      if (this[property] !== index) {\n        this._fireSelectionChanged();\n        this[property] = index;\n      }\n      this._updateTextarea();\n    },\n\n    /**\n     * Fires the even of selection changed\n     * @private\n     */\n    _fireSelectionChanged: function() {\n      this.fire('selection:changed');\n      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @private\n     */\n    initDimensions: function() {\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this.callSuper('initDimensions');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      this.clearContextTop();\n      this.callSuper('render', ctx);\n      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n      // the correct position but not at every cursor animation.\n      this.cursorOffsetCache = { };\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this.callSuper('_render', ctx);\n    },\n\n    /**\n     * Prepare and clean the contextTop\n     */\n    clearContextTop: function(skipRestore) {\n      if (!this.isEditing || !this.canvas || !this.canvas.contextTop) {\n        return;\n      }\n      var ctx = this.canvas.contextTop, v = this.canvas.viewportTransform;\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      this.transform(ctx);\n      this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n      this._clearTextArea(ctx);\n      skipRestore || ctx.restore();\n    },\n\n    /**\n     * Renders cursor or selection (depending on what exists)\n     * it does on the contextTop. If contextTop is not available, do nothing.\n     */\n    renderCursorOrSelection: function() {\n      if (!this.isEditing || !this.canvas || !this.canvas.contextTop) {\n        return;\n      }\n      var boundaries = this._getCursorBoundaries(),\n          ctx = this.canvas.contextTop;\n      this.clearContextTop(true);\n      if (this.selectionStart === this.selectionEnd) {\n        this.renderCursor(boundaries, ctx);\n      }\n      else {\n        this.renderSelection(boundaries, ctx);\n      }\n      ctx.restore();\n    },\n\n    _clearTextArea: function(ctx) {\n      // we add 4 pixel, to be sure to do not leave any pixel out\n      var width = this.width + 4, height = this.height + 4;\n      ctx.clearRect(-width / 2, -height / 2, width, height);\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function(position) {\n\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n\n      if (typeof position === 'undefined') {\n        position = this.selectionStart;\n      }\n\n      var left = this._getLeftOffset(),\n          top = this._getTopOffset(),\n          offsets = this._getCursorBoundariesOffsets(position);\n\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function(position) {\n      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n        return this.cursorOffsetCache;\n      }\n      var lineLeftOffset,\n          lineIndex,\n          charIndex,\n          topOffset = 0,\n          leftOffset = 0,\n          boundaries,\n          cursorPosition = this.get2DCursorLocation(position);\n      charIndex = cursorPosition.charIndex;\n      lineIndex = cursorPosition.lineIndex;\n      for (var i = 0; i < lineIndex; i++) {\n        topOffset += this.getHeightOfLine(i);\n      }\n      lineLeftOffset = this._getLineLeftOffset(lineIndex);\n      var bound = this.__charBounds[lineIndex][charIndex];\n      bound && (leftOffset = bound.left);\n      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n        leftOffset -= this._getWidthOfCharSpacing();\n      }\n      boundaries = {\n        top: topOffset,\n        left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0),\n      };\n      this.cursorOffsetCache = boundaries;\n      return this.cursorOffsetCache;\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function(boundaries, ctx) {\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\n          multiplier = this.scaleX * this.canvas.getZoom(),\n          cursorWidth = this.cursorWidth / multiplier,\n          topOffset = boundaries.topOffset,\n          dy = this.getValueOfPropertyAt(lineIndex, charIndex, 'deltaY');\n\n      topOffset += (1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex) / this.lineHeight\n        - charHeight * (1 - this._fontSizeFraction);\n\n      if (this.inCompositionMode) {\n        this.renderSelection(boundaries, ctx);\n      }\n\n      ctx.fillStyle = this.getValueOfPropertyAt(lineIndex, charIndex, 'fill');\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n      ctx.fillRect(\n        boundaries.left + boundaries.leftOffset - cursorWidth / 2,\n        topOffset + boundaries.top + dy,\n        cursorWidth,\n        charHeight);\n    },\n\n    /**\n     * Renders text selection\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function(boundaries, ctx) {\n\n      var selectionStart = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart,\n          selectionEnd = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd,\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          start = this.get2DCursorLocation(selectionStart),\n          end = this.get2DCursorLocation(selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex,\n          startChar = start.charIndex < 0 ? 0 : start.charIndex,\n          endChar = end.charIndex < 0 ? 0 : end.charIndex;\n\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getLineLeftOffset(i) || 0,\n            lineHeight = this.getHeightOfLine(i),\n            realLineHeight = 0, boxStart = 0, boxEnd = 0;\n\n        if (i === startLine) {\n          boxStart = this.__charBounds[startLine][startChar].left;\n        }\n        if (i >= startLine && i < endLine) {\n          boxEnd = isJustify && !this.isEndOfWrapping(i) ? this.width : this.getLineWidth(i) || 5; // WTF is this 5?\n        }\n        else if (i === endLine) {\n          if (endChar === 0) {\n            boxEnd = this.__charBounds[endLine][endChar].left;\n          }\n          else {\n            var charSpacing = this._getWidthOfCharSpacing();\n            boxEnd = this.__charBounds[endLine][endChar - 1].left\n              + this.__charBounds[endLine][endChar - 1].width - charSpacing;\n          }\n        }\n        realLineHeight = lineHeight;\n        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n          lineHeight /= this.lineHeight;\n        }\n        if (this.inCompositionMode) {\n          ctx.fillStyle = this.compositionColor || 'black';\n          ctx.fillRect(\n            boundaries.left + lineOffset + boxStart,\n            boundaries.top + boundaries.topOffset + lineHeight,\n            boxEnd - boxStart,\n            1);\n        }\n        else {\n          ctx.fillStyle = this.selectionColor;\n          ctx.fillRect(\n            boundaries.left + lineOffset + boxStart,\n            boundaries.top + boundaries.topOffset,\n            boxEnd - boxStart,\n            lineHeight);\n        }\n\n\n        boundaries.topOffset += realLineHeight;\n      }\n    },\n\n    /**\n     * High level function to know the height of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns fontSize of char at the current cursor\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\n    },\n\n    /**\n     * High level function to know the color of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns color (fill) of char at the current cursor\n     * @return {String} Character color (fill)\n     */\n    getCurrentCharColor: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fill');\n    },\n\n    /**\n     * Returns the cursor position for the getCurrent.. functions\n     * @private\n     */\n    _getCurrentCharIndex: function() {\n      var cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\n          charIndex = cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\n      return { l: cursorPosition.lineIndex, c: charIndex };\n    }\n  });\n\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as argument\n   */\n  fabric.IText.fromObject = function(object, callback) {\n    parseDecoration(object);\n    if (object.styles) {\n      for (var i in object.styles) {\n        for (var j in object.styles[i]) {\n          parseDecoration(object.styles[i][j]);\n        }\n      }\n    }\n    fabric.Object._fromObject('IText', object, callback, 'text');\n  };\n})();\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function() {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    },\n\n    onDeselect: function() {\n      this.isEditing && this.exitEditing();\n      this.selected = false;\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function() {\n      var _this = this;\n      this.on('added', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          if (!canvas._hasITextHandlers) {\n            canvas._hasITextHandlers = true;\n            _this._initCanvasHandlers(canvas);\n          }\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n\n    initRemovedHandler: function() {\n      var _this = this;\n      this.on('removed', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n          if (canvas._iTextInstances.length === 0) {\n            canvas._hasITextHandlers = false;\n            _this._removeCanvasHandlers(canvas);\n          }\n        }\n      });\n    },\n\n    /**\n     * register canvas event to manage exiting on other instances\n     * @private\n     */\n    _initCanvasHandlers: function(canvas) {\n      canvas._mouseUpITextHandler = function() {\n        if (canvas._iTextInstances) {\n          canvas._iTextInstances.forEach(function(obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      };\n      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * remove canvas event to manage exiting on other instances\n     * @private\n     */\n    _removeCanvasHandlers: function(canvas) {\n      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * @private\n     */\n    _tick: function() {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\n      var tickState;\n\n      tickState = {\n        isAborted: false,\n        abort: function() {\n          this.isAborted = true;\n        },\n      };\n\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function() {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function() {\n          // we do not want to animate a selection, only cursor\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function() {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function() {\n\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n      this._cursorTimeout1 = setTimeout(function() {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function(restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this._cursorTimeout2 = setTimeout(function() {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function() {\n      var shouldClear = this._currentTickState || this._currentTickCompleteState,\n          canvas = this.canvas;\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n\n      this._currentCursorOpacity = 0;\n      // to clear just itext area we need to transform the context\n      // it may not be worth it\n      if (shouldClear && canvas) {\n        canvas.clearContext(canvas.contextTop || canvas.contextContainer);\n      }\n\n    },\n\n    /**\n     * Selects entire text\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectAll: function() {\n      this.selectionStart = 0;\n      this.selectionEnd = this._text.length;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function() {\n      return this._text.slice(this.selectionStart, this.selectionEnd).join('');\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      // remove space before cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index--;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      // remove space after cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index++;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index < this._text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      while (!/\\n/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      while (!/\\n/.test(this._text[index]) && index < this._text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function(selectionStart, direction) {\n      var text = this._text,\n          index     = this._reSpace.test(text[selectionStart]) ? selectionStart - 1 : selectionStart,\n          _char     = text[index],\n          // wrong\n          reNonWord = fabric.reNonWord;\n\n      while (!reNonWord.test(_char) && index > 0 && index < text.length) {\n        index += direction;\n        _char = text[index];\n      }\n      if (reNonWord.test(_char)) {\n        index += direction === 1 ? 0 : 1;\n      }\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectLine: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function(e) {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.canvas.calcOffset();\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n\n      this.initHiddenTextarea(e);\n      this.hiddenTextarea.focus();\n      this.hiddenTextarea.value = this.text;\n      this._updateTextarea();\n      this._saveEditingProps();\n      this._setEditingProps();\n      this._textBeforeEdit = this.text;\n\n      this._tick();\n      this.fire('editing:entered');\n      this._fireSelectionChanged();\n      if (!this.canvas) {\n        return this;\n      }\n      this.canvas.fire('text:editing:entered', { target: this });\n      this.initMouseMoveHandler();\n      this.canvas.requestRenderAll();\n      return this;\n    },\n\n    exitEditingOnOthers: function(canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function(obj) {\n          obj.selected = false;\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function() {\n      this.canvas.on('mouse:move', this.mouseMoveHandler);\n    },\n\n    /**\n     * @private\n     */\n    mouseMoveHandler: function(options) {\n      if (!this.__isMousedown || !this.isEditing) {\n        return;\n      }\n\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n          currentStart = this.selectionStart,\n          currentEnd = this.selectionEnd;\n      if (\n        (newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd)\n        &&\n        (currentStart === newSelectionStart || currentEnd === newSelectionStart)\n      ) {\n        return;\n      }\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n        this.selectionStart = this.__selectionStartOnMouseDown;\n        this.selectionEnd = newSelectionStart;\n      }\n      else {\n        this.selectionStart = newSelectionStart;\n        this.selectionEnd = this.__selectionStartOnMouseDown;\n      }\n      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n        this.restartCursorIfNeeded();\n        this._fireSelectionChanged();\n        this._updateTextarea();\n        this.renderCursorOrSelection();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function() {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * convert from textarea to grapheme indexes\n     */\n    fromStringToGraphemeSelection: function(start, end, text) {\n      var smallerTextStart = text.slice(0, start),\n          graphemeStart = fabric.util.string.graphemeSplit(smallerTextStart).length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = text.slice(start, end),\n          graphemeEnd = fabric.util.string.graphemeSplit(smallerTextEnd).length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * convert from fabric to textarea values\n     */\n    fromGraphemeToStringSelection: function(start, end, _text) {\n      var smallerTextStart = _text.slice(0, start),\n          graphemeStart = smallerTextStart.join('').length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = _text.slice(start, end),\n          graphemeEnd = smallerTextEnd.join('').length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function() {\n      this.cursorOffsetCache = { };\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      if (!this.inCompositionMode) {\n        var newSelection = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);\n        this.hiddenTextarea.selectionStart = newSelection.selectionStart;\n        this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateFromTextArea: function() {\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      this.cursorOffsetCache = { };\n      this.text = this.hiddenTextarea.value;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      var newSelection = this.fromStringToGraphemeSelection(\n        this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\n      this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\n      if (!this.inCompositionMode) {\n        this.selectionStart = newSelection.selectionStart;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateTextareaPosition: function() {\n      if (this.selectionStart === this.selectionEnd) {\n        var style = this._calcTextareaPosition();\n        this.hiddenTextarea.style.left = style.left;\n        this.hiddenTextarea.style.top = style.top;\n      }\n    },\n\n    /**\n     * @private\n     * @return {Object} style contains style for hiddenTextarea\n     */\n    _calcTextareaPosition: function() {\n      if (!this.canvas) {\n        return { x: 1, y: 1 };\n      }\n      var desiredPosition = this.inCompositionMode ? this.compositionStart : this.selectionStart,\n          boundaries = this._getCursorBoundaries(desiredPosition),\n          cursorLocation = this.get2DCursorLocation(desiredPosition),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') * this.lineHeight,\n          leftOffset = boundaries.leftOffset,\n          m = this.calcTransformMatrix(),\n          p = {\n            x: boundaries.left + leftOffset,\n            y: boundaries.top + boundaries.topOffset + charHeight\n          },\n          retinaScaling = this.canvas.getRetinaScaling(),\n          upperCanvas = this.canvas.upperCanvasEl,\n          upperCanvasWidth = upperCanvas.width / retinaScaling,\n          upperCanvasHeight = upperCanvas.height / retinaScaling,\n          maxWidth = upperCanvasWidth - charHeight,\n          maxHeight = upperCanvasHeight - charHeight,\n          scaleX = upperCanvas.clientWidth / upperCanvasWidth,\n          scaleY = upperCanvas.clientHeight / upperCanvasHeight;\n\n      p = fabric.util.transformPoint(p, m);\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n      p.x *= scaleX;\n      p.y *= scaleY;\n      if (p.x < 0) {\n        p.x = 0;\n      }\n      if (p.x > maxWidth) {\n        p.x = maxWidth;\n      }\n      if (p.y < 0) {\n        p.y = 0;\n      }\n      if (p.y > maxHeight) {\n        p.y = maxHeight;\n      }\n\n      // add canvas offset on document\n      p.x += this.canvas._offset.left;\n      p.y += this.canvas._offset.top;\n\n      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight + 'px', charHeight: charHeight };\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function() {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        selectable: this.selectable,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function() {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.hoverCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.selectable = this._savedProps.selectable;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function() {\n      var isTextChanged = (this._textBeforeEdit !== this.text);\n      this.selected = false;\n      this.isEditing = false;\n\n      this.selectionEnd = this.selectionStart;\n\n      if (this.hiddenTextarea) {\n        this.hiddenTextarea.blur && this.hiddenTextarea.blur();\n        this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n        this.hiddenTextarea = null;\n      }\n\n      this.abortCursorAnimation();\n      this._restoreEditingProps();\n      this._currentCursorOpacity = 0;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      this.fire('editing:exited');\n      isTextChanged && this.fire('modified');\n      if (this.canvas) {\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\n        this.canvas.fire('text:editing:exited', { target: this });\n        isTextChanged && this.canvas.fire('object:modified', { target: this });\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * remove and reflow a style block from start to end.\n     * @param {Number} start linear start position for removal (included in removal)\n     * @param {Number} end linear end position for removal ( excluded from removal )\n     */\n    removeStyleFromTo: function(start, end) {\n      var cursorStart = this.get2DCursorLocation(start, true),\n          cursorEnd = this.get2DCursorLocation(end, true),\n          lineStart = cursorStart.lineIndex,\n          charStart = cursorStart.charIndex,\n          lineEnd = cursorEnd.lineIndex,\n          charEnd = cursorEnd.charIndex,\n          i, styleObj;\n      if (lineStart !== lineEnd) {\n        // step1 remove the trailing of lineStart\n        if (this.styles[lineStart]) {\n          for (i = charStart; i < this._unwrappedTextLines[lineStart].length; i++) {\n            delete this.styles[lineStart][i];\n          }\n        }\n        // step2 move the trailing of lineEnd to lineStart if needed\n        if (this.styles[lineEnd]) {\n          for (i = charEnd; i < this._unwrappedTextLines[lineEnd].length; i++) {\n            styleObj = this.styles[lineEnd][i];\n            if (styleObj) {\n              this.styles[lineStart] || (this.styles[lineStart] = { });\n              this.styles[lineStart][charStart + i - charEnd] = styleObj;\n            }\n          }\n        }\n        // step3 detects lines will be completely removed.\n        for (i = lineStart + 1; i <= lineEnd; i++) {\n          delete this.styles[i];\n        }\n        // step4 shift remaining lines.\n        this.shiftLineStyles(lineEnd, lineStart - lineEnd);\n      }\n      else {\n        // remove and shift left on the same line\n        if (this.styles[lineStart]) {\n          styleObj = this.styles[lineStart];\n          var diff = charEnd - charStart, numericChar, _char;\n          for (i = charStart; i < charEnd; i++) {\n            delete styleObj[i];\n          }\n          for (_char in this.styles[lineStart]) {\n            numericChar = parseInt(_char, 10);\n            if (numericChar >= charEnd) {\n              styleObj[numericChar - diff] = styleObj[_char];\n              delete styleObj[_char];\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can any number?\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by offset upward or downward\n      // do not clone deep. we need new array, not new style objects\n      var clonedStyles = clone(this.styles);\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n    },\n\n    restartCursorIfNeeded: function() {\n      if (!this._currentTickState || this._currentTickState.isAborted\n        || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted\n      ) {\n        this.initDelayedCursor();\n      }\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} qty number of lines to add\n     * @param {Array} copiedStyle Array of objects styles\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, qty, copiedStyle) {\n      var currentCharStyle,\n          newLineStyles = {},\n          somethingAdded = false;\n\n      qty || (qty = 1);\n      this.shiftLineStyles(lineIndex, qty);\n      if (this.styles[lineIndex]) {\n        currentCharStyle = this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1];\n      }\n\n      // we clone styles of all chars\n      // after cursor onto the current line\n      for (var index in this.styles[lineIndex]) {\n        var numIndex = parseInt(index, 10);\n        if (numIndex >= charIndex) {\n          somethingAdded = true;\n          newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n          // remove lines from the previous line since they're on a new line now\n          delete this.styles[lineIndex][index];\n        }\n      }\n      if (somethingAdded) {\n        this.styles[lineIndex + qty] = newLineStyles;\n      }\n      else {\n        delete this.styles[lineIndex + qty];\n      }\n      // for the other lines\n      // we clone current char style onto the next (otherwise empty) line\n      while (qty > 1) {\n        qty--;\n        if (copiedStyle && copiedStyle[qty]) {\n          this.styles[lineIndex + qty] = { 0: clone(copiedStyle[qty]) };\n        }\n        else if (currentCharStyle) {\n          this.styles[lineIndex + qty] = { 0: clone(currentCharStyle) };\n        }\n        else {\n          delete this.styles[lineIndex + qty];\n        }\n      }\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} quantity number Style object to insert, if given\n     * @param {Array} copiedStyle array of style objects\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, quantity, copiedStyle) {\n      if (!this.styles) {\n        this.styles = {};\n      }\n      var currentLineStyles       = this.styles[lineIndex],\n          currentLineStylesCloned = currentLineStyles ? clone(currentLineStyles) : {};\n\n      quantity || (quantity = 1);\n      // shift all char styles by quantity forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + quantity] = currentLineStylesCloned[numericIndex];\n          // only delete the style if there was nothing moved there\n          if (!currentLineStylesCloned[numericIndex - quantity]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n      this._forceClearCache = true;\n      if (copiedStyle) {\n        while (quantity--) {\n          if (!Object.keys(copiedStyle[quantity]).length) {\n            continue;\n          }\n          if (!this.styles[lineIndex]) {\n            this.styles[lineIndex] = {};\n          }\n          this.styles[lineIndex][charIndex + quantity] = clone(copiedStyle[quantity]);\n        }\n        return;\n      }\n      if (!currentLineStyles) {\n        return;\n      }\n      var newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\n      while (newStyle && quantity--) {\n        this.styles[lineIndex][charIndex + quantity] = clone(newStyle);\n      }\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {Array} insertedText Characters at the location where style is inserted\n     * @param {Number} start cursor index for inserting style\n     * @param {Array} [copiedStyle] array of style objects to insert.\n     */\n    insertNewStyleBlock: function(insertedText, start, copiedStyle) {\n      var cursorLoc = this.get2DCursorLocation(start, true),\n          addedLines = [0], linesLength = 0;\n      for (var i = 0; i < insertedText.length; i++) {\n        if (insertedText[i] === '\\n') {\n          linesLength++;\n          addedLines[linesLength] = 0;\n        }\n        else {\n          addedLines[linesLength]++;\n        }\n      }\n      if (addedLines[0] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex, addedLines[0], copiedStyle);\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\n      }\n      linesLength && this.insertNewlineStyleObject(\n        cursorLoc.lineIndex, cursorLoc.charIndex + addedLines[0], linesLength);\n      for (var i = 1; i < linesLength; i++) {\n        if (addedLines[i] > 0) {\n          this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n        }\n        else if (copiedStyle) {\n          this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\n        }\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\n      }\n      // we use i outside the loop to get it like linesLength\n      if (addedLines[i] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n      }\n    },\n\n    /**\n     * Set the selectionStart and selectionEnd according to the new position of cursor\n     * mimic the key - mouse navigation when shift is pressed.\n     */\n    setSelectionStartEndWithShift: function(start, end, newSelection) {\n      if (newSelection <= start) {\n        if (end === start) {\n          this._selectionDirection = 'left';\n        }\n        else if (this._selectionDirection === 'right') {\n          this._selectionDirection = 'left';\n          this.selectionEnd = start;\n        }\n        this.selectionStart = newSelection;\n      }\n      else if (newSelection > start && newSelection < end) {\n        if (this._selectionDirection === 'right') {\n          this.selectionEnd = newSelection;\n        }\n        else {\n          this.selectionStart = newSelection;\n        }\n      }\n      else {\n        // newSelection is > selection start and end\n        if (end === start) {\n          this._selectionDirection = 'right';\n        }\n        else if (this._selectionDirection === 'left') {\n          this._selectionDirection = 'right';\n          this.selectionStart = end;\n        }\n        this.selectionEnd = newSelection;\n      }\n    },\n\n    setSelectionInBoundaries: function() {\n      var length = this.text.length;\n      if (this.selectionStart > length) {\n        this.selectionStart = length;\n      }\n      else if (this.selectionStart < 0) {\n        this.selectionStart = 0;\n      }\n      if (this.selectionEnd > length) {\n        this.selectionEnd = length;\n      }\n      else if (this.selectionEnd < 0) {\n        this.selectionEnd = 0;\n      }\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function() {\n\n    // for double click\n    this.__lastClickTime = +new Date();\n\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n\n    this.__lastPointer = { };\n\n    this.on('mousedown', this.onMouseDown);\n  },\n\n  /**\n   * Default event handler to simulate triple click\n   * @private\n   */\n  onMouseDown: function(options) {\n    if (!this.canvas) {\n      return;\n    }\n    this.__newClickTime = +new Date();\n    var newPointer = options.pointer;\n    if (this.isTripleClick(newPointer)) {\n      this.fire('tripleclick', options);\n      this._stopEvent(options.e);\n    }\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n\n  isTripleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function(e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function() {\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Default handler for double click, select a word\n   */\n  doubleClickHandler: function(options) {\n    if (!this.isEditing) {\n      return;\n    }\n    this.selectWord(this.getSelectionStartFromPointer(options.e));\n  },\n\n  /**\n   * Default handler for triple click, select a line\n   */\n  tripleClickHandler: function(options) {\n    if (!this.isEditing) {\n      return;\n    }\n    this.selectLine(this.getSelectionStartFromPointer(options.e));\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function() {\n    this.on('mousedblclick', this.doubleClickHandler);\n    this.on('tripleclick', this.tripleClickHandler);\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on _mouseDown\n   * can be overridden to do something different.\n   * Scope of this implementation is: find the click position, set selectionStart\n   * find selectionEnd, initialize the drawing of either cursor or selection area\n   */\n  _mouseDownHandler: function(options) {\n    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n\n    this.__isMousedown = true;\n\n    if (this.selected) {\n      this.setCursorByClick(options.e);\n    }\n\n    if (this.isEditing) {\n      this.__selectionStartOnMouseDown = this.selectionStart;\n      if (this.selectionStart === this.selectionEnd) {\n        this.abortCursorAnimation();\n      }\n      this.renderCursorOrSelection();\n    }\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on mousedown:before\n   * can be overridden to do something different.\n   * Scope of this implementation is: verify the object is already selected when mousing down\n   */\n  _mouseDownHandlerBefore: function(options) {\n    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n    // we want to avoid that an object that was selected and then becomes unselectable,\n    // may trigger editing mode in some way.\n    this.selected = this === this.canvas._activeObject;\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function() {\n    this.on('mousedown', this._mouseDownHandler);\n    this.on('mousedown:before', this._mouseDownHandlerBefore);\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function() {\n    this.on('mouseup', this.mouseUpHandler);\n  },\n\n  /**\n   * standard hander for mouse up, overridable\n   * @private\n   */\n  mouseUpHandler: function(options) {\n    this.__isMousedown = false;\n    if (!this.editable || this.group ||\n      (options.transform && options.transform.actionPerformed) ||\n      (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n\n    if (this.canvas) {\n      var currentActive = this.canvas._activeObject;\n      if (currentActive && currentActive !== this) {\n        // avoid running this logic when there is an active object\n        // this because is possible with shift click and fast clicks,\n        // to rapidly deselect and reselect this object and trigger an enterEdit\n        return;\n      }\n    }\n\n    if (this.__lastSelected && !this.__corner) {\n      this.selected = false;\n      this.__lastSelected = false;\n      this.enterEditing(options.e);\n      if (this.selectionStart === this.selectionEnd) {\n        this.initDelayedCursor(true);\n      }\n      else {\n        this.renderCursorOrSelection();\n      }\n    }\n    else {\n      this.selected = true;\n    }\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function(e) {\n    var newSelection = this.getSelectionStartFromPointer(e),\n        start = this.selectionStart, end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    }\n    else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function(e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        lineIndex = 0,\n        lineLeftOffset,\n        line;\n\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      if (height <= mouseOffset.y) {\n        height += this.getHeightOfLine(i) * this.scaleY;\n        lineIndex = i;\n        if (i > 0) {\n          charIndex += this._textLines[i - 1].length + this.missingNewlineOffset(i - 1);\n        }\n      }\n      else {\n        break;\n      }\n    }\n    lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    width = lineLeftOffset * this.scaleX;\n    line = this._textLines[lineIndex];\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      prevWidth = width;\n      // i removed something about flipX here, check.\n      width += this.__charBounds[lineIndex][j].kernedWidth * this.scaleX;\n      if (width <= mouseOffset.x) {\n        charIndex++;\n      }\n      else {\n        break;\n      }\n    }\n    return this._getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, charIndex, jlen);\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n    // we need Math.abs because when width is after the last char, the offset is given as 1, while is 0\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ||\n          distanceBtwNextCharAndCursor < 0 ? 0 : 1,\n        newSelectionStart = index + offset;\n    // if object is horizontally flipped, mirror cursor location from the end\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this._text.length) {\n      newSelectionStart = this._text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function() {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    this.hiddenTextarea.setAttribute('autocorrect', 'off');\n    this.hiddenTextarea.setAttribute('autocomplete', 'off');\n    this.hiddenTextarea.setAttribute('spellcheck', 'false');\n    this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\n    this.hiddenTextarea.setAttribute('wrap', 'off');\n    var style = this._calcTextareaPosition();\n    // line-height: 1px; was removed from the style to fix this:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=870966\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top +\n    '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' +\n    ' paddingｰtop: ' + style.fontSize + ';';\n    fabric.document.body.appendChild(this.hiddenTextarea);\n\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behaviour for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the fabric.Itext or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = fabric.util.object.clone(this.keysMap);\n   * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\n   */\n  keysMap: {\n    9:  'exitEditing',\n    27: 'exitEditing',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown',\n  },\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  ctrlKeysMapUp: {\n    67: 'copy',\n    88: 'cut'\n  },\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  ctrlKeysMapDown: {\n    65: 'selectAll'\n  },\n\n  onClick: function() {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keyup event\n   * @param {Event} e Event object\n   */\n  onKeyDown: function(e) {\n    if (!this.isEditing || this.inCompositionMode) {\n      return;\n    }\n    if (e.keyCode in this.keysMap) {\n      this[this.keysMap[e.keyCode]](e);\n    }\n    else if ((e.keyCode in this.ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    }\n    else {\n      this.canvas && this.canvas.requestRenderAll();\n    }\n  },\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {Event} e Event object\n   */\n  onKeyUp: function(e) {\n    if (!this.isEditing || this._copyDone || this.inCompositionMode) {\n      this._copyDone = false;\n      return;\n    }\n    if ((e.keyCode in this.ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.requestRenderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function(e) {\n    var fromPaste = this.fromPaste;\n    this.fromPaste = false;\n    e && e.stopPropagation();\n    if (!this.isEditing) {\n      return;\n    }\n    // decisions about style changes.\n    var nextText = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText,\n        charCount = this._text.length,\n        nextCharCount = nextText.length,\n        removedText, insertedText,\n        charDiff = nextCharCount - charCount;\n    if (this.hiddenTextarea.value === '') {\n      this.styles = { };\n      this.updateFromTextArea();\n      this.fire('changed');\n      if (this.canvas) {\n        this.canvas.fire('text:changed', { target: this });\n        this.canvas.requestRenderAll();\n      }\n      return;\n    }\n\n    var textareaSelection = this.fromStringToGraphemeSelection(\n      this.hiddenTextarea.selectionStart,\n      this.hiddenTextarea.selectionEnd,\n      this.hiddenTextarea.value\n    );\n    var backDelete = this.selectionStart > textareaSelection.selectionStart;\n\n    if (this.selectionStart !== this.selectionEnd) {\n      removedText = this._text.slice(this.selectionStart, this.selectionEnd);\n      charDiff += this.selectionEnd - this.selectionStart;\n    }\n    else if (nextCharCount < charCount) {\n      if (backDelete) {\n        removedText = this._text.slice(this.selectionEnd + charDiff, this.selectionEnd);\n      }\n      else {\n        removedText = this._text.slice(this.selectionStart, this.selectionStart - charDiff);\n      }\n    }\n    insertedText = nextText.slice(textareaSelection.selectionEnd - charDiff, textareaSelection.selectionEnd);\n    if (removedText && removedText.length) {\n      if (this.selectionStart !== this.selectionEnd) {\n        this.removeStyleFromTo(this.selectionStart, this.selectionEnd);\n      }\n      else if (backDelete) {\n        // detect differencies between forwardDelete and backDelete\n        this.removeStyleFromTo(this.selectionEnd - removedText.length, this.selectionEnd);\n      }\n      else {\n        this.removeStyleFromTo(this.selectionEnd, this.selectionEnd + removedText.length);\n      }\n    }\n    if (insertedText.length) {\n      if (fromPaste && insertedText.join('') === fabric.copiedText && !fabric.disableStyleCopyPaste) {\n        this.insertNewStyleBlock(insertedText, this.selectionStart, fabric.copiedTextStyle);\n      }\n      else {\n        this.insertNewStyleBlock(insertedText, this.selectionStart);\n      }\n    }\n    this.updateFromTextArea();\n    this.fire('changed');\n    if (this.canvas) {\n      this.canvas.fire('text:changed', { target: this });\n      this.canvas.requestRenderAll();\n    }\n  },\n  /**\n   * Composition start\n   */\n  onCompositionStart: function() {\n    this.inCompositionMode = true;\n  },\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd: function() {\n    this.inCompositionMode = false;\n  },\n\n  // /**\n  //  * Composition update\n  //  */\n  onCompositionUpdate: function(e) {\n    this.compositionStart = e.target.selectionStart;\n    this.compositionEnd = e.target.selectionEnd;\n    this.updateTextareaPosition();\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function() {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n\n    fabric.copiedText = this.getSelectedText();\n    if (!fabric.disableStyleCopyPaste) {\n      fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, true);\n    }\n    else {\n      fabric.copiedTextStyle = null;\n    }\n    this._copyDone = true;\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function() {\n    this.fromPaste = true;\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function(e) {\n    return (e && e.clipboardData) || fabric.window.clipboardData;\n  },\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor: function(lineIndex, charIndex) {\n    var widthBeforeCursor = this._getLineLeftOffset(lineIndex), bound;\n\n    if (charIndex > 0) {\n      bound = this.__charBounds[lineIndex][charIndex - 1];\n      widthBeforeCursor += bound.left + bound.width;\n    }\n    return widthBeforeCursor;\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n      // move to the end of a text\n      return this._text.length - selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n    return textAfterCursor.length + indexOnOtherLine + 1 + this.missingNewlineOffset(lineIndex);\n  },\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset: function(e, isRight) {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    }\n    else {\n      return this.selectionStart;\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\n        missingNewlineOffset = this.missingNewlineOffset(lineIndex - 1);\n    // return a negative offset\n    return -this._textLines[lineIndex - 1].length\n     + indexOnOtherLine - textBeforeCursor.length + (1 - missingNewlineOffset);\n  },\n\n  /**\n   * for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine: function(lineIndex, width) {\n\n    var line = this._textLines[lineIndex],\n        lineLeftOffset = this._getLineLeftOffset(lineIndex),\n        widthOfCharsOnLine = lineLeftOffset,\n        indexOnLine = 0, charWidth, foundMatch;\n\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      charWidth = this.__charBounds[lineIndex][j].width;\n      widthOfCharsOnLine += charWidth;\n      if (widthOfCharsOnLine > width) {\n        foundMatch = true;\n        var leftEdge = widthOfCharsOnLine - charWidth,\n            rightEdge = widthOfCharsOnLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - width),\n            offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = line.length - 1;\n    }\n\n    return indexOnLine;\n  },\n\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  },\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {Event} e Event object\n   */\n  _moveCursorUpOrDown: function(direction, e) {\n    // getUpCursorOffset\n    // getDownCursorOffset\n    var action = 'get' + direction + 'CursorOffset',\n        offset = this[action](e, this._selectionDirection === 'right');\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    }\n    else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      this.setSelectionInBoundaries();\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift: function(offset) {\n    var newSelection = this._selectionDirection === 'left'\n      ? this.selectionStart + offset\n      : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift: function(offset) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  },\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   */\n  _move: function(e, prop, direction) {\n    var newValue;\n    if (e.altKey) {\n      newValue = this['findWordBoundary' + direction](this[prop]);\n    }\n    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n      newValue = this['findLineBoundary' + direction](this[prop]);\n    }\n    else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== undefined && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function(e, prop) {\n    return this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function(e, prop) {\n    return this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function(e) {\n    var change = true;\n    this._selectionDirection = 'left';\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n      change = this._moveLeft(e, 'selectionStart');\n\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function(e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      return this._moveLeft(e, 'selectionEnd');\n    }\n    else if (this.selectionStart !== 0){\n      this._selectionDirection = 'left';\n      return this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  },\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {Event} e Event object\n   */\n  _moveCursorLeftOrRight: function(direction, e) {\n    var actionName = 'moveCursor' + direction + 'With';\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      actionName += 'Shift';\n    }\n    else {\n      actionName += 'outShift';\n    }\n    if (this[actionName](e)) {\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function(e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      return this._moveRight(e, 'selectionStart');\n    }\n    else if (this.selectionEnd !== this._text.length) {\n      this._selectionDirection = 'right';\n      return this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function(e) {\n    var changed = true;\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  },\n\n  /**\n   * Removes characters from start/end\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  removeChars: function(start, end) {\n    if (typeof end === 'undefined') {\n      end = start + 1;\n    }\n    this.removeStyleFromTo(start, end);\n    this._text.splice(start, end - start);\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this._removeExtraneousStyles();\n  },\n\n  /**\n   * insert characters at start position, before start position.\n   * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\n   * if style array is provided, it must be as the same length of text in graphemes\n   * if end is provided and is bigger than start, old text is replaced.\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {String} text text to insert\n   * @param {Array} style array of style objects\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  insertChars: function(text, style, start, end) {\n    if (typeof end === 'undefined') {\n      end = start;\n    }\n    if (end > start) {\n      this.removeStyleFromTo(start, end);\n    }\n    var graphemes = fabric.util.string.graphemeSplit(text);\n    this.insertNewStyleBlock(graphemes, start, style);\n    this._text = [].concat(this._text.slice(0, start), graphemes, this._text.slice(end));\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this._removeExtraneousStyles();\n  },\n\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  var toFixed = fabric.util.toFixed,\n      multipleSpacesRegex = /  +/g;\n\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    _toSVG: function() {\n      var offsets = this._getSVGLeftTopOffsets(),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n      return this._wrapSVGTextAndBg(textAndBg);\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      return this._createBaseSVGMarkup(\n        this._toSVG(),\n        { reviver: reviver, noStyle: true, withShadow: true }\n      );\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function() {\n      return {\n        textLeft: -this.width / 2,\n        textTop: -this.height / 2,\n        lineTop: this.getHeightOfLine(0)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function(textAndBg) {\n      var noShadow = true,\n          textDecoration = this.getSvgTextDecoration(this);\n      return [\n        textAndBg.textBgRects.join(''),\n        '\\t\\t<text xml:space=\"preserve\" ',\n        (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n        (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\n        (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\n        (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\n        (textDecoration ? 'text-decoration=\"' + textDecoration + '\" ' : ''),\n        'style=\"', this.getSvgStyles(noShadow), '\"', this.addPaintOrder(), ' >',\n        textAndBg.textSpans.join(''),\n        '</text>\\n'\n      ];\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n      var textSpans = [],\n          textBgRects = [],\n          height = textTopOffset, lineOffset;\n      // bounding-box background\n      this._setSVGBg(textBgRects);\n\n      // text and text-background\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineOffset = this._getLineLeftOffset(i);\n        if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset + lineOffset, height);\n        }\n        this._setSVGTextLineText(textSpans, i, textLeftOffset + lineOffset, height);\n        height += this.getHeightOfLine(i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function(_char, styleDecl, left, top) {\n      var shouldUseWhitespace = _char !== _char.trim() || _char.match(multipleSpacesRegex),\n          styleProps = this.getSvgSpanStyles(styleDecl, shouldUseWhitespace),\n          fillStyles = styleProps ? 'style=\"' + styleProps + '\"' : '',\n          dy = styleDecl.deltaY, dySpan = '',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      if (dy) {\n        dySpan = ' dy=\"' + toFixed(dy, NUM_FRACTION_DIGITS) + '\" ';\n      }\n      return [\n        '<tspan x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS), '\" ', dySpan,\n        fillStyles, '>',\n        fabric.util.string.escapeXml(_char),\n        '</tspan>'\n      ].join('');\n    },\n\n    _setSVGTextLineText: function(textSpans, lineIndex, textLeftOffset, textTopOffset) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox, style,\n          boxWidth = 0,\n          line = this._textLines[lineIndex],\n          timeToRender;\n\n      textTopOffset += lineHeight * (1 - this._fontSizeFraction) / this.lineHeight;\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          textLeftOffset += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChangedForSvg(actualStyle, nextStyle);\n        }\n        if (timeToRender) {\n          style = this._getStyleDeclaration(lineIndex, i) || { };\n          textSpans.push(this._createTextCharSpan(charsToRender, style, textLeftOffset, textTopOffset));\n          charsToRender = '';\n          actualStyle = nextStyle;\n          textLeftOffset += boxWidth;\n          boxWidth = 0;\n        }\n      }\n    },\n\n    _pushTextBgRect: function(textBgRects, color, left, top, width, height) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      textBgRects.push(\n        '\\t\\t<rect ',\n        this._getFillAttributes(color),\n        ' x=\"',\n        toFixed(left, NUM_FRACTION_DIGITS),\n        '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS),\n        '\" width=\"',\n        toFixed(width, NUM_FRACTION_DIGITS),\n        '\" height=\"',\n        toFixed(height, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n');\n    },\n\n    _setSVGTextLineBg: function(textBgRects, i, leftOffset, textTopOffset) {\n      var line = this._textLines[i],\n          heightOfLine = this.getHeightOfLine(i) / this.lineHeight,\n          boxWidth = 0,\n          boxStart = 0,\n          charBox, currentColor,\n          lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n        charBox = this.__charBounds[i][j];\n        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n        if (currentColor !== lastColor) {\n          lastColor && this._pushTextBgRect(textBgRects, lastColor, leftOffset + boxStart,\n            textTopOffset, boxWidth, heightOfLine);\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastColor = currentColor;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n      currentColor && this._pushTextBgRect(textBgRects, currentColor, leftOffset + boxStart,\n        textTopOffset, boxWidth, heightOfLine);\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {*} value\n     * @return {String}\n     */\n    _getFillAttributes: function(value) {\n      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function(lineIndex) {\n      var lineTopOffset = 0, lastHeight = 0;\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this.getHeightOfLine(j);\n      }\n      lastHeight = this.getHeightOfLine(j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n      var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\n      return svgStyle + ' white-space: pre;';\n    },\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * fixed to 2 so that an empty textbox cannot go to 0\n     * and is still selectable without text.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 2,\n\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingFlip: true,\n\n    /**\n     * Override standard Object class values\n     * Textbox needs this on false\n     */\n    noScaleCache: false,\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat('width'),\n\n    /**\n     * Use this regular expression to split strings in breakable lines\n     * @private\n     */\n    _wordJoiners: /[ \\t\\r]/,\n\n    /**\n     * Use this boolean property in order to split strings that have no white space concept.\n     * this is a cheap way to help with chinese/japaense\n     * @type Boolean\n     * @since 2.6.0\n     */\n    splitByGrapheme: false,\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @private\n     * @override\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this._clearCache();\n      // clear dynamicMinWidth as it will be different after we re-wrap line\n      this.dynamicMinWidth = 0;\n      // wrap lines\n      this._styleMap = this._generateStyleMap(this._splitText());\n      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      // clear cache and re-calculate height\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function(textInfo) {\n      var realLineCount     = 0,\n          realLineCharCount = 0,\n          charCount         = 0,\n          map               = {};\n\n      for (var i = 0; i < textInfo.graphemeLines.length; i++) {\n        if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        }\n        else if (!this.splitByGrapheme && this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) && i > 0) {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = { line: realLineCount, offset: realLineCharCount };\n\n        charCount += textInfo.graphemeLines[i].length;\n        realLineCharCount += textInfo.graphemeLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * Returns true if object has a style property or has it on a specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (map) {\n          lineIndex = map.line;\n        }\n      }\n      return fabric.Text.prototype.styleHas.call(this, property, lineIndex);\n    },\n\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function(lineIndex) {\n      if (!this.styles) {\n        return true;\n      }\n      var offset = 0, nextLineIndex = lineIndex + 1, nextOffset, obj, shouldLimit = false,\n          map = this._styleMap[lineIndex], mapNextLine = this._styleMap[lineIndex + 1];\n      if (map) {\n        lineIndex = map.line;\n        offset = map.offset;\n      }\n      if (mapNextLine) {\n        nextLineIndex = mapNextLine.line;\n        shouldLimit = nextLineIndex === lineIndex;\n        nextOffset = mapNextLine.offset;\n      }\n      obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          if (p2 >= offset && (!shouldLimit || p2 < nextOffset)) {\n            // eslint-disable-next-line no-unused-vars\n            for (var p3 in obj[p1][p2]) {\n              return false;\n            }\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (!map) {\n          return null;\n        }\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * probably broken need a fix\n     * Returns the real style line that correspond to the wrapped lineIndex line\n     * Used just to verify if the line does exist or not.\n     * @param {Number} lineIndex\n     * @returns {Boolean} if the line exists or not\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return !!this.styles[map.line];\n    },\n\n    /**\n     * Set the line style to an empty object so that is initialized\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = {};\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {Array} lines The string array of text that is split into lines\n     * @param {Number} desiredWidth width you want to wrap to\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function(lines, desiredWidth) {\n      var wrapped = [], i;\n      this.isWrapping = true;\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(lines[i], i, desiredWidth));\n      }\n      this.isWrapping = false;\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     * it gets called when charBounds are not available yet.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureWord: function(word, lineIndex, charOffset) {\n      var width = 0, prevGrapheme, skipLeft = true;\n      charOffset = charOffset || 0;\n      for (var i = 0, len = word.length; i < len; i++) {\n        var box = this._getGraphemeBox(word[i], lineIndex, i + charOffset, prevGrapheme, skipLeft);\n        width += box.kernedWidth;\n        prevGrapheme = word[i];\n      }\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {Array} line The grapheme array that represent the line\n     * @param {Number} lineIndex\n     * @param {Number} desiredWidth width you want to wrap the line to\n     * @param {Number} reservedSpace space to remove from wrapping for custom functionalities\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function(_line, lineIndex, desiredWidth, reservedSpace) {\n      var lineWidth = 0,\n          splitByGrapheme = this.splitByGrapheme,\n          graphemeLines = [],\n          line = [],\n          // spaces in different languges?\n          words = splitByGrapheme ? fabric.util.string.graphemeSplit(_line) : _line.split(this._wordJoiners),\n          word = '',\n          offset = 0,\n          infix = splitByGrapheme ? '' : ' ',\n          wordWidth = 0,\n          infixWidth = 0,\n          largestWordWidth = 0,\n          lineJustStarted = true,\n          additionalSpace = splitByGrapheme ? 0 : this._getWidthOfCharSpacing(),\n          reservedSpace = reservedSpace || 0;\n      // fix a difference between split and graphemeSplit\n      if (words.length === 0) {\n        words.push([]);\n      }\n      desiredWidth -= reservedSpace;\n      for (var i = 0; i < words.length; i++) {\n        // if using splitByGrapheme words are already in graphemes.\n        word = splitByGrapheme ? words[i] : fabric.util.string.graphemeSplit(words[i]);\n        wordWidth = this._measureWord(word, lineIndex, offset);\n        offset += word.length;\n\n        lineWidth += infixWidth + wordWidth - additionalSpace;\n\n        if (lineWidth >= desiredWidth && !lineJustStarted) {\n          graphemeLines.push(line);\n          line = [];\n          lineWidth = wordWidth;\n          lineJustStarted = true;\n        }\n        else {\n          lineWidth += additionalSpace;\n        }\n\n        if (!lineJustStarted && !splitByGrapheme) {\n          line.push(infix);\n        }\n        line = line.concat(word);\n\n        infixWidth = this._measureWord([infix], lineIndex, offset);\n        offset++;\n        lineJustStarted = false;\n        // keep track of largest word\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      i && graphemeLines.push(line);\n\n      if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;\n      }\n\n      return graphemeLines;\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @param {Number} lineIndex text to split\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      if (!this._styleMap[lineIndex + 1]) {\n        // is last line, return true;\n        return true;\n      }\n      if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\n        // this is last line before a line break, return true;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Detect if a line has a linebreak and so we need to account for it when moving\n     * and counting style.\n     * @return Number\n     */\n    missingNewlineOffset: function(lineIndex) {\n      if (this.splitByGrapheme) {\n        return this.isEndOfWrapping(lineIndex) ? 1 : 0;\n      }\n      return 1;\n    },\n\n    /**\n    * Gets lines of text to render in the Textbox. This function calculates\n    * text wrapping on the fly every time it is called.\n    * @param {String} text text to split\n    * @returns {Array} Array of lines in the Textbox.\n    * @override\n    */\n    _splitTextIntoLines: function(text) {\n      var newText = fabric.Text.prototype._splitTextIntoLines.call(this, text),\n          graphemeLines = this._wrapText(newText.lines, this.width),\n          lines = new Array(graphemeLines.length);\n      for (var i = 0; i < graphemeLines.length; i++) {\n        lines[i] = graphemeLines[i].join('');\n      }\n      newText.lines = lines;\n      newText.graphemeLines = graphemeLines;\n      return newText;\n    },\n\n    getMinWidth: function() {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n\n    _removeExtraneousStyles: function() {\n      var linesToKeep = {};\n      for (var prop in this._styleMap) {\n        if (this._textLines[prop]) {\n          linesToKeep[this._styleMap[prop].line] = 1;\n        }\n      }\n      for (var prop in this.styles) {\n        if (!linesToKeep[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['minWidth', 'splitByGrapheme'].concat(propertiesToInclude));\n    }\n  });\n\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n   */\n  fabric.Textbox.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Textbox', object, callback, 'text');\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n"]},"metadata":{},"sourceType":"script"}