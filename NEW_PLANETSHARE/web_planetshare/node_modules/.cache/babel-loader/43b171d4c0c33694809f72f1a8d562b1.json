{"ast":null,"code":"var _jsxFileName = \"/var/www/html/REACT_WORK/NEW_PLANETSHARE/web_planetshare/src/Container/Dashboard/SellerDashboard/Asset/video_description.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport { USERID, TOKEN, HEADER, TAG, GETSELLERFORMDATA, SELLERVIDEOUPLOADDESCRIPTION, GETFORMSTATUS, GETIMAGEVIDEODATA } from '../../../../url.js';\nimport { Link, withRouter } from \"react-router-dom\";\nimport Not_Found from '../../../../Component/not_found/not_found';\nimport LoadingGif from '../../../../Component/Loader/loading_gif';\nimport { MultiSelect } from 'primereact/multiselect';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport ReactJWPlayer from 'react-jw-player';\nimport Tooltip from '../../../../Component/tooltip.js';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport TagsInput from 'react-tagsinput';\nimport 'react-tagsinput/react-tagsinput.css';\nimport { ToastContainer, toast, cssTransition } from 'react-toastify';\nconst Zoom = cssTransition({\n  enter: 'zoomIn',\n  exit: 'zoomOut'\n});\nconst SELLER_HEADER = {\n  headers: {\n    'Content-Type': 'application/json;charset=UTF-8',\n    'Authorization': \"Bearer \" + localStorage.getItem('planetshare_web_token')\n  }\n};\nconst license_rights = [{\n  \"value\": \"TV Right(Satellite,Free Tv,Pay Tv)\",\n  \"label\": \"TV Right(Satellite,Free Tv,Pay Tv)\"\n}, {\n  \"value\": \"VOD(AVOD,SVOD,TVOD)\",\n  \"label\": \"VOD(AVOD,SVOD,TVOD)\"\n}, {\n  \"value\": \"Mobile Network\",\n  \"label\": \"Mobile Network\"\n}, {\n  \"value\": \"Social Media(FB,TW)\",\n  \"label\": \"Social Media(FB,TW)\"\n}, {\n  \"value\": \"VideoPlatform(Youtube, DailyMotion)\",\n  \"label\": \"VideoPlatform(Youtube, DailyMotion)\"\n}, {\n  \"value\": \"Airlines\",\n  \"label\": \"Airlines\"\n}, {\n  \"value\": \"DTH\",\n  \"label\": \"DTH\"\n}, {\n  \"value\": \"Cable\",\n  \"label\": \"Cable\"\n}, {\n  \"value\": \"IPTV\",\n  \"label\": \"IPTV\"\n}, {\n  \"value\": \"Ship\",\n  \"label\": \"Ship\"\n}, {\n  \"value\": \"Hotel\",\n  \"label\": \"Hotel\"\n}];\n\nclass VideoDescription extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      vid_data: [],\n      err_result: [],\n      imgs: [],\n      video_id: 0,\n      language: [],\n      loading: false,\n      loading_msg: 'Please Wait',\n      not_found: false,\n      lang_sel: [],\n      director: [],\n      producer: [],\n      genre: [],\n      cast: [],\n      keywords: [],\n      btn_disable: false,\n      category_list: [],\n      license_rights: [],\n      sel_license_rights: [],\n      territory_rights: [],\n      sel_territory_rights: []\n    };\n\n    this.getFormData = () => {\n      axios.post(GETIMAGEVIDEODATA, {\n        'user_id': localStorage.getItem('user_id'),\n        'tag': TAG,\n        'id': this.state.video_id,\n        'content_type': 'video',\n        'seller_id': localStorage.getItem('seller_id')\n      }, SELLER_HEADER).then(res => {\n        if (res.data.success == 1) {\n          var response = res.data.data;\n          this.setState({\n            vid_data: response\n          }, function () {\n            this.getAdditionalInfo();\n          });\n        } else {}\n      }).catch(error => {});\n    };\n\n    this.getAdditionalInfo = () => {\n      axios.get(GETSELLERFORMDATA).then(res => {\n        if (res.data.success == 1) {\n          this.setState({\n            language: res.data.language_list,\n            category_list: res.data.video_cat_list,\n            territory_rights: res.data.country_list\n          });\n          setTimeout(() => this.setState({\n            loading: true\n          }), 1000);\n        } else {}\n      }).catch(error => {});\n    };\n\n    this.checkVideoIdStatus = () => {\n      axios.post(GETFORMSTATUS, {\n        user_id: localStorage.getItem('user_id'),\n        seller_id: localStorage.getItem('seller_id'),\n        tag: TAG,\n        view_type: 'video',\n        view_id: this.state.video_id\n      }, SELLER_HEADER).then(res => {\n        if (res.data.success == 1) {\n          this.setState({\n            not_found: false\n          }, function () {\n            this.getFormData();\n          });\n        } else {\n          this.setState({\n            not_found: true\n          });\n        }\n      }).catch(error => {});\n    };\n\n    this._onChange = event => {\n      if (event.target.files.length > 1) {\n        toast('Maximum one file is allowed', {\n          transition: Zoom\n        });\n        return false;\n      }\n\n      this.setState({\n        imgs: event.target.files\n      });\n    };\n\n    this.videoDescSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        btn_disable: true\n      });\n      const _this$state = this.state,\n            producer = _this$state.producer,\n            director = _this$state.director,\n            keywords = _this$state.keywords,\n            cast = _this$state.cast,\n            genre = _this$state.genre,\n            lang_sel = _this$state.lang_sel,\n            imgs = _this$state.imgs,\n            sel_license_rights = _this$state.sel_license_rights,\n            sel_territory_rights = _this$state.sel_territory_rights;\n      var event = e.target;\n      var title = event.video_title.value.trim();\n      var artist_name = event.artist_name.value.trim();\n      var description = event.video_desc.value.trim();\n      var short_desc = event.video_short_desc.value.trim();\n      var category = event.category.value.trim(); //  var price=event.price.value.trim();\n\n      var mature_content = 0;\n\n      if ($('#mature_content').is(\":checked\")) {\n        mature_content = 1;\n      } // if(imgs.length<=0 || producer.length<=0 || director.length<=0 || keywords.length<=0 || cast.length<=0 || genre.length<=0 || lang_sel.length<=0 || sel_territory_rights.length<=0 || sel_license_rights.length<=0 || title=='' || artist_name=='' || short_desc=='' || description==''  || category=='')\n      // {\n      //     toast('All Fields Must Be Filled',{ transition: Zoom,});\n      //    this.setState({btn_disable:false})\n      //   return false;\n      // }\n      // var price_form=/^[0-9]+$/;\n      // if(!price.match(price_form))\n      // {\n      //   toast('Price Must Be In Numeric',{ transition: Zoom,});\n      //    this.setState({btn_disable:false})\n      // return false;\n      // }\n\n\n      var formData = new FormData();\n      formData.append('user_id', localStorage.getItem('user_id'));\n      formData.append('tag', TAG);\n      formData.append('seller_id', localStorage.getItem('seller_id'));\n      formData.append('video_id', this.state.video_id);\n      formData.append('mature_content', mature_content);\n      formData.append('title', title);\n      formData.append('artist_name', artist_name);\n      formData.append('description', description);\n      formData.append('short_desc', short_desc);\n      formData.append('cast', cast);\n      formData.append('producer', producer);\n      formData.append('genre', genre);\n      formData.append('director', director); // formData.append('price',price);\n\n      formData.append('video_category_id', category);\n      formData.append('file', imgs[0]);\n      formData.append('keywords', keywords);\n      formData.append('territory_rights', sel_territory_rights);\n      formData.append('license_rights', sel_license_rights);\n      formData.append('language_id', lang_sel);\n      axios.post(SELLERVIDEOUPLOADDESCRIPTION, formData, SELLER_HEADER).then(response => {\n        if (response.data.success == 3) {\n          var err_result = response.data.data;\n          this.setState({\n            btn_disable: false,\n            err_result: response.data.error\n          });\n          $(\"html, body\").animate({\n            scrollTop: 0\n          }, \"slow\");\n          return false;\n        }\n\n        if (response.data.success == 1) {\n          this.setState({\n            btn_disable: false\n          });\n          this.setState({\n            loading: false,\n            loading_msg: 'Please Wait While We Are Uploading Your Content'\n          });\n          setTimeout(() => {\n            this.props.history.push({\n              pathname: '/dashboard/seller/asset',\n              state: {\n                tag: 'video'\n              }\n            });\n          }, 2000);\n        } else {\n          this.setState({\n            btn_disable: false\n          });\n          toast('Something Went Wrong', {\n            transition: Zoom\n          });\n        }\n      }).catch(error => {\n        this.setState({\n          btn_disable: false\n        });\n        toast('Something Went Wrong', {\n          transition: Zoom\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      video_id: this.props.match.params.video_id\n    }, function () {\n      this.checkVideoIdStatus();\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.props.match.params.video_id != this.state.video_id) {\n      this.setState({\n        video_id: this.props.match.params.video_id,\n        loading: false\n      }, function () {\n        this.checkVideoIdStatus();\n      });\n      setTimeout(() => this.setState({\n        loading: true\n      }), 1000);\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          vid_data = _this$state2.vid_data,\n          loading = _this$state2.loading,\n          loading_msg = _this$state2.loading_msg,\n          not_found = _this$state2.not_found,\n          language = _this$state2.language,\n          keywords = _this$state2.keywords,\n          cast = _this$state2.cast,\n          producer = _this$state2.producer,\n          director = _this$state2.director,\n          category_list = _this$state2.category_list,\n          err_result = _this$state2.err_result;\n\n    if (not_found) {\n      return React.createElement(Not_Found, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      });\n    } else {\n      if (loading) {\n        return React.createElement(\"section\", {\n          class: \"inner_cont cr_vd_desc\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, React.createElement(\"article\", {\n          class: \"gig_info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"vend_cont\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, err_result.length > 0 && React.createElement(\"div\", {\n          class: \"error_box\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, err_result.map((res, key) => {\n          return React.createElement(\"li\", {\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 223\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 223\n            },\n            __self: this\n          }, res));\n        }))), React.createElement(\"form\", {\n          class: \"form_control\",\n          onSubmit: this.videoDescSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"field_area\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"fields\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, \"Video Title\"))), React.createElement(\"div\", {\n          class: \"inputbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          placeholder: \"Video Title\",\n          name: \"video_title\",\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        })), React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, \"Describe your Gig.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }, \"This is your Gig title. Choose wisely, you can only use 80 characters.\")), React.createElement(\"div\", {\n          class: \"gig_t_img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"images/icon_tooltip_title.png\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          class: \"fields\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        }, \"Artist Name\"))), React.createElement(\"div\", {\n          class: \"inputbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          placeholder: \"Artist name\",\n          name: \"artist_name\",\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        })), React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, \"Describe your Gig.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }, \"This is your Gig title. Choose wisely, you can only use 80 characters.\")), React.createElement(\"div\", {\n          class: \"gig_t_img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"images/icon_tooltip_title.png\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          class: \"fields\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268\n          },\n          __self: this\n        }, \"Producer\"))), React.createElement(\"div\", {\n          class: \"inputbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        }, React.createElement(TagsInput, {\n          value: this.state.producer,\n          onChange: producer => {\n            this.setState({\n              producer\n            });\n          },\n          onlyUnique: true,\n          maxTags: 10,\n          placeholder: \"Add Producers\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272\n          },\n          __self: this\n        })), React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }, \"Describe your Gig.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }, \"This is your Gig title. Choose wisely, you can only use 80 characters.\")), React.createElement(\"div\", {\n          class: \"gig_t_img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"images/icon_tooltip_producer.png\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          class: \"fields\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        }, \"Director\"))), React.createElement(\"div\", {\n          class: \"inputbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        }, React.createElement(TagsInput, {\n          value: this.state.director,\n          onChange: director => {\n            this.setState({\n              director\n            });\n          },\n          onlyUnique: true,\n          maxTags: 10,\n          placeholder: \"Add Directors\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        })), React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294\n          },\n          __self: this\n        }, \"Describe your Gig.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }, \"This is your Gig title. Choose wisely, you can only use 80 characters.\")), React.createElement(\"div\", {\n          class: \"gig_t_img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"images/icon_tooltip_dir.png\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          class: \"fields\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304\n          },\n          __self: this\n        }, \"Genre\"))), React.createElement(\"div\", {\n          class: \"inputbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307\n          },\n          __self: this\n        }, React.createElement(TagsInput, {\n          value: this.state.genre,\n          onChange: genre => {\n            this.setState({\n              genre\n            });\n          },\n          onlyUnique: true,\n          maxTags: 10,\n          placeholder: \"Add Genre\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308\n          },\n          __self: this\n        })), React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          },\n          __self: this\n        }, \"Describe your Gig.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          },\n          __self: this\n        }, \"This is your Gig title. Choose wisely, you can only use 80 characters.\")), React.createElement(\"div\", {\n          class: \"gig_t_img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"images/icon_tooltip_title.png\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          class: \"fields\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          },\n          __self: this\n        }, \"Cast\"))), React.createElement(\"div\", {\n          class: \"inputbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325\n          },\n          __self: this\n        }, React.createElement(TagsInput, {\n          value: this.state.cast,\n          onChange: cast => {\n            this.setState({\n              cast\n            });\n          },\n          onlyUnique: true,\n          maxTags: 10,\n          placeholder: \"Add Cast\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326\n          },\n          __self: this\n        })), React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330\n          },\n          __self: this\n        }, \"Describe your Gig.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331\n          },\n          __self: this\n        }, \"This is your Gig title. Choose wisely, you can only use 80 characters.\")), React.createElement(\"div\", {\n          class: \"gig_t_img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"images/icon_tooltip_cast.png\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          class: \"fields\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340\n          },\n          __self: this\n        }, \"Keywords\"))), React.createElement(\"div\", {\n          class: \"inputbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343\n          },\n          __self: this\n        }, React.createElement(TagsInput, {\n          value: this.state.keywords,\n          onChange: keywords => {\n            this.setState({\n              keywords\n            });\n          },\n          onlyUnique: true,\n          maxTags: 10,\n          placeholder: \"Add Keywords\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          class: \"inf\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          class: \"char-count\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346\n          },\n          __self: this\n        }, \"Up to 5 items\"))), React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351\n          },\n          __self: this\n        }, \"Describe your Gig.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352\n          },\n          __self: this\n        }, \"This is your Gig title. Choose wisely, you can only use 80 characters.\")), React.createElement(\"div\", {\n          class: \"gig_t_img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"images/icon_tooltip_keyword.png\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          class: \"fields\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361\n          },\n          __self: this\n        }, \"Languages\"))), React.createElement(\"div\", {\n          class: \"inputbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364\n          },\n          __self: this\n        }, React.createElement(MultiSelect, {\n          value: this.state.lang_sel,\n          options: language,\n          onChange: e => this.setState({\n            lang_sel: e.value\n          }),\n          style: {\n            minWidth: '12em'\n          },\n          filter: true,\n          placeholder: \"Select Language\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365\n          },\n          __self: this\n        })), React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369\n          },\n          __self: this\n        }, \"Describe your Gig.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370\n          },\n          __self: this\n        }, \"This is your Gig title. Choose wisely, you can only use 80 characters.\")), React.createElement(\"div\", {\n          class: \"gig_t_img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"images/icon_tooltip_lang.png\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          class: \"fields\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378\n          },\n          __self: this\n        }, \"Category\"))), React.createElement(\"div\", {\n          class: \"inputbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381\n          },\n          __self: this\n        }, React.createElement(\"select\", {\n          class: \"f\",\n          name: \"category\",\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          selected: true,\n          disabled: true,\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383\n          },\n          __self: this\n        }, \"Select Category\"), category_list.length > 0 && category_list.map((res, key) => {\n          return React.createElement(\"option\", {\n            value: res.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 385\n            },\n            __self: this\n          }, res.name);\n        }))), React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391\n          },\n          __self: this\n        }, \"Describe your Gig.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392\n          },\n          __self: this\n        }, \"This is your Gig title. Choose wisely, you can only use 80 characters.\")), React.createElement(\"div\", {\n          class: \"gig_t_img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"images/icon_tooltip_category.png\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          class: \"fields\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 397\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 399\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400\n          },\n          __self: this\n        }, \"License Rights\"))), React.createElement(\"div\", {\n          class: \"inputbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403\n          },\n          __self: this\n        }, React.createElement(MultiSelect, {\n          value: this.state.sel_license_rights,\n          options: license_rights,\n          onChange: e => this.setState({\n            sel_license_rights: e.value\n          }),\n          style: {\n            minWidth: '12em'\n          },\n          filter: true,\n          placeholder: \"Select License Rights\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404\n          },\n          __self: this\n        })), React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 406\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 408\n          },\n          __self: this\n        }, \"Describe your Gig.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409\n          },\n          __self: this\n        }, \"This is your Gig title. Choose wisely, you can only use 80 characters.\")), React.createElement(\"div\", {\n          class: \"gig_t_img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"images/icon_tooltip_lr.png\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          class: \"fields\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 417\n          },\n          __self: this\n        }, \"Territory Rights\"))), React.createElement(\"div\", {\n          class: \"inputbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 420\n          },\n          __self: this\n        }, React.createElement(MultiSelect, {\n          value: this.state.sel_territory_rights,\n          options: this.state.territory_rights,\n          onChange: e => this.setState({\n            sel_territory_rights: e.value\n          }),\n          style: {\n            minWidth: '12em'\n          },\n          filter: true,\n          placeholder: \"Select Territory Rights\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 421\n          },\n          __self: this\n        })), React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 423\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 424\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 425\n          },\n          __self: this\n        }, \"Describe your Gig.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 426\n          },\n          __self: this\n        }, \"This is your Gig title. Choose wisely, you can only use 80 characters.\")), React.createElement(\"div\", {\n          class: \"gig_t_img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 428\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"images/icon_tooltip_tr.png\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 428\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          class: \"fields\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 441\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 442\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 443\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 444\n          },\n          __self: this\n        }, \"Mature Content\"))), React.createElement(\"div\", {\n          class: \"inputbox check\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 447\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 448\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          alt: \"\",\n          name: \"mature_content\",\n          id: \"mature_content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 449\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          class: \"check\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 450\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          class: \"fa fa-check-square\",\n          \"aria-hidden\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 450\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 451\n          },\n          __self: this\n        }, \"Above 18 \\xA0(Select only if you are above 18)\"))), React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 454\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 455\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 456\n          },\n          __self: this\n        }, \"Describe your Gig.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 457\n          },\n          __self: this\n        }, \"This is your Gig title. Choose wisely, you can only use 80 characters.\")), React.createElement(\"div\", {\n          class: \"gig_t_img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 459\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"images/icon_tooltip_above18.png\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 459\n          },\n          __self: this\n        }))))), React.createElement(\"div\", {\n          class: \"build_gal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 464\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"upload_area\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 465\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 466\n          },\n          __self: this\n        }, \"Video thumbnail \", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 466\n          },\n          __self: this\n        }, \"Upload thumbnail that describe or are related to your video.\")), React.createElement(\"ul\", {\n          class: \"browse_list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 467\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 468\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"upl_box\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 469\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"drag_area\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 470\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 471\n          },\n          __self: this\n        }, \"Drag a Photo or\"), React.createElement(\"label\", {\n          for: \"gig_upload\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 472\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          ref: \"file\",\n          type: \"file\",\n          name: \"user[image]\",\n          accept: \"image/*\",\n          id: \"gig_upload\",\n          onChange: this._onChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 473\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"file\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 481\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 482\n          },\n          __self: this\n        }, \"Browse\"), this.state.imgs && [...this.state.imgs].map(file => React.createElement(\"img\", {\n          src: \"\",\n          id: \"upload_img\",\n          src: URL.createObjectURL(file),\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 484\n          },\n          __self: this\n        }))))))), React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 491\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 492\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 493\n          },\n          __self: this\n        }, \"Photos\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 494\n          },\n          __self: this\n        }, \"Upload photos in JPEG, JPG, PNG and ensure they\\u2019re at least 550 pixels width x 370 pixels height.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 495\n          },\n          __self: this\n        }, \"We suggest uploading them in landscape format to make better use of the space.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 496\n          },\n          __self: this\n        }, \"Lastly, put your best foot forward! Stand out on Planetshare with your favorite photos.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 497\n          },\n          __self: this\n        }, \"Need help? Check out Planetshare expert photoshop talent here.\"))))), React.createElement(\"div\", {\n          class: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 503\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          class: \"head\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 504\n          },\n          __self: this\n        }, \"Short Description\"), React.createElement(\"div\", {\n          class: \"disc_box\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 505\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 506\n          },\n          __self: this\n        }, \"Short Description Of Your Video\"), React.createElement(\"div\", {\n          class: \"inputbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 507\n          },\n          __self: this\n        }, React.createElement(\"textarea\", {\n          minlength: \"30\",\n          maxlength: \"80\",\n          name: \"video_short_desc\",\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 508\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          class: \"inf\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 509\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 510\n          },\n          __self: this\n        }, \"max. 80\"))), React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 513\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 514\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 515\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          class: \"fa fa-plane\",\n          \"aria-hidden\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 515\n          },\n          __self: this\n        })), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 516\n          },\n          __self: this\n        }, \"This is your chance to be creative. Explain your Gig.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 517\n          },\n          __self: this\n        }, \"Describe what you are offering. Be as detailed as possible so buyers will be able to understand if this meets their needs. Should be at least 120 characters.\")), React.createElement(\"div\", {\n          class: \"gig_t_img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 519\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"images/icon_tooltip_sortdesc.png\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 519\n          },\n          __self: this\n        }))))), React.createElement(\"div\", {\n          class: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 523\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          class: \"head\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 524\n          },\n          __self: this\n        }, \"Description\"), React.createElement(\"div\", {\n          class: \"disc_box\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 525\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 526\n          },\n          __self: this\n        }, \"Briefly Describe Your Video\"), React.createElement(\"div\", {\n          class: \"inputbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 527\n          },\n          __self: this\n        }, React.createElement(\"textarea\", {\n          minlength: \"80\",\n          maxlength: \"1200\",\n          name: \"video_desc\",\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 528\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          class: \"inf\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 529\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 530\n          },\n          __self: this\n        }, \"min. 120\"))), React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 533\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 534\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 535\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          class: \"fa fa-plane\",\n          \"aria-hidden\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 535\n          },\n          __self: this\n        })), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 536\n          },\n          __self: this\n        }, \"This is your chance to be creative. Explain your Gig.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 537\n          },\n          __self: this\n        }, \"Describe what you are offering. Be as detailed as possible so buyers will be able to understand if this meets their needs. Should be at least 120 characters.\")), React.createElement(\"div\", {\n          class: \"gig_t_img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 539\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"images/icon_tooltip_desc.png\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 539\n          },\n          __self: this\n        }))))), React.createElement(\"div\", {\n          class: \"buttons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 544\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"submit\",\n          class: \"btndefault\",\n          disabled: this.state.btn_disable,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 545\n          },\n          __self: this\n        }, \"Save & Continue\")), React.createElement(\"div\", {\n          class: \"asset_video_uploaded\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 601\n          },\n          __self: this\n        }, React.createElement(ReactJWPlayer, {\n          style: {\n            backgroundColor: 'grey'\n          },\n          ref: ref => {\n            this.player = ref;\n          },\n          playerId: \"jw-player\",\n          image: vid_data.large_thumb,\n          playerScript: \"https://content.jwplatform.com/libraries/jvJ1Gu3c.js\",\n          file: vid_data.demo_url,\n          aspectRatio: \"16:9\",\n          isAutoPlay: true,\n          controls: true,\n          repeat: \"true\",\n          customProps: {\n            controls: true,\n            repeat: true,\n            stretching: 'fill',\n            preload: 'auto',\n            volume: 100,\n            width: '100%',\n            height: '100%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 602\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          class: \"clearfix\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 625\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          class: \"clearfix\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 628\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          class: \"clearfix\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 630\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(LoadingGif, {\n          message: loading_msg,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 636\n          },\n          __self: this\n        });\n      }\n    }\n  }\n\n}\n\nexport default VideoDescription;","map":{"version":3,"sources":["/var/www/html/REACT_WORK/NEW_PLANETSHARE/web_planetshare/src/Container/Dashboard/SellerDashboard/Asset/video_description.js"],"names":["React","Component","axios","$","USERID","TOKEN","HEADER","TAG","GETSELLERFORMDATA","SELLERVIDEOUPLOADDESCRIPTION","GETFORMSTATUS","GETIMAGEVIDEODATA","Link","withRouter","Not_Found","LoadingGif","MultiSelect","ReactJWPlayer","Tooltip","TagsInput","ToastContainer","toast","cssTransition","Zoom","enter","exit","SELLER_HEADER","headers","localStorage","getItem","license_rights","VideoDescription","state","vid_data","err_result","imgs","video_id","language","loading","loading_msg","not_found","lang_sel","director","producer","genre","cast","keywords","btn_disable","category_list","sel_license_rights","territory_rights","sel_territory_rights","getFormData","post","then","res","data","success","response","setState","getAdditionalInfo","catch","error","get","language_list","video_cat_list","country_list","setTimeout","checkVideoIdStatus","user_id","seller_id","tag","view_type","view_id","_onChange","event","target","files","length","transition","videoDescSubmit","e","preventDefault","title","video_title","value","trim","artist_name","description","video_desc","short_desc","video_short_desc","category","mature_content","is","formData","FormData","append","animate","scrollTop","props","history","push","pathname","componentDidMount","match","params","componentDidUpdate","render","map","key","minWidth","id","name","file","URL","createObjectURL","backgroundColor","ref","player","large_thumb","demo_url","controls","repeat","stretching","preload","volume","width","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport {USERID,TOKEN,HEADER,TAG,GETSELLERFORMDATA,SELLERVIDEOUPLOADDESCRIPTION,GETFORMSTATUS,GETIMAGEVIDEODATA} from '../../../../url.js'\nimport {Link,withRouter} from \"react-router-dom\";\nimport Not_Found from '../../../../Component/not_found/not_found';\nimport LoadingGif from '../../../../Component/Loader/loading_gif'\nimport {MultiSelect} from 'primereact/multiselect';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport ReactJWPlayer from 'react-jw-player';\nimport Tooltip from '../../../../Component/tooltip.js'\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport TagsInput from 'react-tagsinput'\nimport 'react-tagsinput/react-tagsinput.css'\nimport { ToastContainer, toast,cssTransition} from 'react-toastify';\nconst Zoom = cssTransition({\nenter: 'zoomIn',\nexit: 'zoomOut',\n});\nconst SELLER_HEADER = {\nheaders: {\n 'Content-Type': 'application/json;charset=UTF-8',\n 'Authorization':\"Bearer \" + localStorage.getItem('planetshare_web_token'),\n}\n};\nconst license_rights=[\n  {\"value\":\"TV Right(Satellite,Free Tv,Pay Tv)\",\"label\":\"TV Right(Satellite,Free Tv,Pay Tv)\"},\n  {\"value\":\"VOD(AVOD,SVOD,TVOD)\",\"label\":\"VOD(AVOD,SVOD,TVOD)\"},\n  {\"value\":\"Mobile Network\",\"label\":\"Mobile Network\"},\n  {\"value\":\"Social Media(FB,TW)\",\"label\":\"Social Media(FB,TW)\"},\n  {\"value\":\"VideoPlatform(Youtube, DailyMotion)\",\"label\":\"VideoPlatform(Youtube, DailyMotion)\"},\n  {\"value\":\"Airlines\",\"label\":\"Airlines\"},\n  {\"value\":\"DTH\",\"label\":\"DTH\"},\n  {\"value\":\"Cable\",\"label\":\"Cable\"},\n  {\"value\":\"IPTV\",\"label\":\"IPTV\"},\n  {\"value\":\"Ship\",\"label\":\"Ship\"},\n  {\"value\":\"Hotel\",\"label\":\"Hotel\"},\n]\nclass VideoDescription extends Component {\nstate={vid_data:[],err_result:[],imgs:[],video_id:0,language:[],loading:false,loading_msg:'Please Wait',not_found:false,lang_sel:[],director:[],producer:[],genre:[],cast:[],keywords:[],btn_disable:false,category_list:[],license_rights:[],sel_license_rights:[],territory_rights:[],sel_territory_rights:[]}\n  componentDidMount()\n  {\nthis.setState({video_id:this.props.match.params.video_id},function()\n  {\n    this.checkVideoIdStatus()\n  });\n  }\n  getFormData=()=>{\n    axios.post(GETIMAGEVIDEODATA,{\n      'user_id':localStorage.getItem('user_id'),\n      'tag':TAG,\n      'id':this.state.video_id,\n      'content_type':'video',\n      'seller_id':localStorage.getItem('seller_id')\n    },SELLER_HEADER).then((res)=>{\n      if(res.data.success==1)\n      {\n        var response=res.data.data;\n        this.setState({vid_data:response},function()\n      {\n        this.getAdditionalInfo();\n      })\n      }\n      else {\n      }\n    }).catch((error)=>{\n    })\n  }\n  getAdditionalInfo=()=>{\n    axios.get(GETSELLERFORMDATA).then((res)=>{\n      if(res.data.success==1)\n      {\nthis.setState({language:res.data.language_list,category_list:res.data.video_cat_list,territory_rights:res.data.country_list});\n        setTimeout(()=>this.setState({loading:true}),1000)\n      }\n      else {\n      }\n    }).catch((error)=>{\n    })\n  }\n  checkVideoIdStatus=()=>{\n    axios.post(GETFORMSTATUS,{\n      user_id:localStorage.getItem('user_id'),\n      seller_id:localStorage.getItem('seller_id'),\n      tag:TAG,\n      view_type:'video',\n      view_id:this.state.video_id\n    },SELLER_HEADER).then((res)=>{\n      if(res.data.success==1)\n      {\n        this.setState({not_found:false},function()\n      {\n        this.getFormData();\n      })\n      }\n      else {\n        this.setState({not_found:true})\n      }\n    }).catch((error)=>{\n    })\n  }\n  _onChange= (event)=>{\n    if(event.target.files.length>1)\n    {\n              toast('Maximum one file is allowed',{ transition: Zoom,});\n      return false;\n    }\n    this.setState({\n        imgs: event.target.files\n    })\n}\n  videoDescSubmit=(e)=>{\n    e.preventDefault();\n    this.setState({btn_disable:true});\n    const {producer,director,keywords,cast,genre,lang_sel,imgs,sel_license_rights,sel_territory_rights}=this.state;\n    var event=e.target;\n    var title=event.video_title.value.trim();\n    var artist_name=event.artist_name.value.trim();\n    var description=event.video_desc.value.trim();\n    var short_desc=event.video_short_desc.value.trim();\n    var category=event.category.value.trim();\n  //  var price=event.price.value.trim();\n    var mature_content=0;\n    if ($('#mature_content').is(\":checked\"))\n    {\n         mature_content=1\n    }\n    // if(imgs.length<=0 || producer.length<=0 || director.length<=0 || keywords.length<=0 || cast.length<=0 || genre.length<=0 || lang_sel.length<=0 || sel_territory_rights.length<=0 || sel_license_rights.length<=0 || title=='' || artist_name=='' || short_desc=='' || description==''  || category=='')\n    // {\n    //     toast('All Fields Must Be Filled',{ transition: Zoom,});\n    //    this.setState({btn_disable:false})\n    //   return false;\n    // }\n      // var price_form=/^[0-9]+$/;\n      // if(!price.match(price_form))\n      // {\n      //   toast('Price Must Be In Numeric',{ transition: Zoom,});\n      //    this.setState({btn_disable:false})\n      // return false;\n      // }\n    var formData=new FormData();\n     formData.append('user_id',localStorage.getItem('user_id'));\n     formData.append('tag',TAG);\nformData.append('seller_id',localStorage.getItem('seller_id'));\n     formData.append('video_id',this.state.video_id);\n    formData.append('mature_content',mature_content);\n     formData.append('title',title);\n     formData.append('artist_name',artist_name);\n     formData.append('description',description);\n     formData.append('short_desc',short_desc);\n     formData.append('cast',cast);\n     formData.append('producer',producer);\n     formData.append('genre',genre);\n     formData.append('director',director);\n     // formData.append('price',price);\n     formData.append('video_category_id',category);\n     formData.append('file',imgs[0]);\n     formData.append('keywords',keywords);\n     formData.append('territory_rights',sel_territory_rights);\n     formData.append('license_rights',sel_license_rights);\n     formData.append('language_id',lang_sel);\naxios.post(SELLERVIDEOUPLOADDESCRIPTION,formData,SELLER_HEADER)\n     .then(response=>{\n       if(response.data.success==3)\n       {\n         var err_result=response.data.data;\nthis.setState({btn_disable:false,err_result:response.data.error});\n             $(\"html, body\").animate({ scrollTop: 0 }, \"slow\");\n         return false;\n       }\n     if(response.data.success==1){\n           this.setState({btn_disable:false})\n           this.setState({loading:false,loading_msg:'Please Wait While We Are Uploading Your Content'});\n           setTimeout(()=>{\n             this.props.history.push({\n                   pathname : '/dashboard/seller/asset',\n                   state :{\n                   tag :'video',\n                   }\n                   }\n                 )},2000);\n       }\n       else {\n           this.setState({btn_disable:false})\n           toast('Something Went Wrong',{ transition: Zoom,});\n       }\n     })\n     .catch((error)=> {\n         this.setState({btn_disable:false})\n     toast('Something Went Wrong',{ transition: Zoom,});\n     });\n  }\n  componentDidUpdate()\n  {\n    if(this.props.match.params.video_id!=this.state.video_id)\n    {\nthis.setState({video_id:this.props.match.params.video_id,loading:false},function()\n      {\n        this.checkVideoIdStatus();\n      });\n        setTimeout(()=>this.setState({loading:true}),1000)\n    }\n  }\n  render() {\n    const {vid_data,loading,loading_msg,not_found,language,keywords,cast,producer,director,category_list,err_result}=this.state;\n    if(not_found)\n    {\n      return(<Not_Found/>)\n    }\n    else\n      {\n        if(loading)\n        {\n          return (\n            <section class=\"inner_cont cr_vd_desc\">\n                    <article class=\"gig_info\">\n                        <div class=\"container\">\n                            <div class=\"vend_cont\">\n                            {err_result.length >0 && <div class=\"error_box\">\n                                    <ul>\n{err_result.map((res,key)=>{\n                                        return(<li key={key}><p>{res}</p></li>)\n                                      })}\n                                    </ul>\n                                  </div>}\n                                <form class=\"form_control\" onSubmit={this.videoDescSubmit}>\n                                    <div class=\"field_area\">\n                                        <div class=\"fields\">\n                                            <div class=\"label\">\n                                                <label>\n                                                  <span>Video Title</span>\n                                                </label>\n                                            </div>\n                                            <div class=\"inputbox\">\n                                                <input type=\"text\"  placeholder=\"Video Title\" name=\"video_title\" required/>\n                                            </div>\n                                            <Tooltip>\n                                            <div class=\"text\">\n                                                <h3>Describe your Gig.</h3>\n                                                <p>This is your Gig title. Choose wisely, you can only use 80 characters.</p>\n                                            </div>\n                                            <div class=\"gig_t_img\"><img src=\"images/icon_tooltip_title.png\" alt=\"\" /></div>\n                                            </Tooltip>\n                                        </div>\n\n                                        <div class=\"fields\">\n                                            <div class=\"label\">\n                                                <label>\n                                                  <span>Artist Name</span>\n                                                </label>\n                                            </div>\n                                            <div class=\"inputbox\">\n                                                <input type=\"text\"  placeholder=\"Artist name\" name=\"artist_name\" required/>\n                                            </div>\n                                            <Tooltip>\n                                            <div class=\"text\">\n                                                <h3>Describe your Gig.</h3>\n                                                <p>This is your Gig title. Choose wisely, you can only use 80 characters.</p>\n                                            </div>\n                                            <div class=\"gig_t_img\"><img src=\"images/icon_tooltip_title.png\" alt=\"\" /></div>\n                                            </Tooltip>\n                                        </div>\n\n                                        <div class=\"fields\">\n                                            <div class=\"label\">\n                                                <label>\n                                                <span>Producer</span>\n                                                </label>\n                                            </div>\n                                            <div class=\"inputbox\">\n                                              <TagsInput value={this.state.producer} onChange={(producer)=>{this.setState({producer})}} onlyUnique={true} maxTags={10}   placeholder={\"Add Producers\"}/>\n                                            </div>\n                                            <Tooltip>\n                                            <div class=\"text\">\n                                                <h3>Describe your Gig.</h3>\n                                                <p>This is your Gig title. Choose wisely, you can only use 80 characters.</p>\n                                            </div>\n                                            <div class=\"gig_t_img\"><img src=\"images/icon_tooltip_producer.png\" alt=\"\" /></div>\n                                            </Tooltip>\n                                        </div>\n\n                                        <div class=\"fields\">\n                                            <div class=\"label\">\n                                                <label>\n                                                <span>Director</span>\n                                                </label>\n                                            </div>\n                                            <div class=\"inputbox\">\n                                               <TagsInput value={this.state.director} onChange={(director)=>{this.setState({director})}} onlyUnique={true} maxTags={10}   placeholder='Add Directors'/>\n                                            </div>\n                                            <Tooltip>\n                                            <div class=\"text\">\n                                                <h3>Describe your Gig.</h3>\n                                                <p>This is your Gig title. Choose wisely, you can only use 80 characters.</p>\n                                            </div>\n                                            <div class=\"gig_t_img\"><img src=\"images/icon_tooltip_dir.png\" alt=\"\" /></div>\n                                            </Tooltip>\n                                        </div>\n\n                                        <div class=\"fields\">\n                                            <div class=\"label\">\n                                                <label>\n                                                <span>Genre</span>\n                                                </label>\n                                            </div>\n                                            <div class=\"inputbox\">\n                                              <TagsInput value={this.state.genre} onChange={(genre)=>{this.setState({genre})}} onlyUnique={true} maxTags={10}   placeholder='Add Genre'/>\n                                            </div>\n                                            <Tooltip>\n                                            <div class=\"text\">\n                                                <h3>Describe your Gig.</h3>\n                                                <p>This is your Gig title. Choose wisely, you can only use 80 characters.</p>\n                                            </div>\n                                            <div class=\"gig_t_img\"><img src=\"images/icon_tooltip_title.png\" alt=\"\" /></div>\n                                            </Tooltip>\n                                        </div>\n\n                                        <div class=\"fields\">\n                                            <div class=\"label\">\n                                                <label>\n                                                <span>Cast</span>\n                                                </label>\n                                            </div>\n                                            <div class=\"inputbox\">\n                                                <TagsInput value={this.state.cast} onChange={(cast)=>{this.setState({cast})}} onlyUnique={true} maxTags={10}   placeholder=\"Add Cast\"/>\n                                            </div>\n                                            <Tooltip>\n                                            <div class=\"text\">\n                                                <h3>Describe your Gig.</h3>\n                                                <p>This is your Gig title. Choose wisely, you can only use 80 characters.</p>\n                                            </div>\n                                            <div class=\"gig_t_img\"><img src=\"images/icon_tooltip_cast.png\" alt=\"\" /></div>\n                                            </Tooltip>\n                                        </div>\n\n                                        <div class=\"fields\">\n                                            <div class=\"label\">\n                                                <label>\n                                                  <span>Keywords</span>\n                                                </label>\n                                            </div>\n                                            <div class=\"inputbox\">\n                                                <TagsInput value={this.state.keywords} onChange={(keywords)=>{this.setState({keywords})}} onlyUnique={true} maxTags={10}   placeholder='Add Keywords'/>\n                                                <div class=\"inf\">\n                                                    <span class=\"char-count\">Up to 5 items</span>\n                                                </div>\n                                            </div>\n                                            <Tooltip>\n                                            <div class=\"text\">\n                                                <h3>Describe your Gig.</h3>\n                                                <p>This is your Gig title. Choose wisely, you can only use 80 characters.</p>\n                                            </div>\n                                            <div class=\"gig_t_img\"><img src=\"images/icon_tooltip_keyword.png\" alt=\"\" /></div>\n                                            </Tooltip>\n                                        </div>\n\n                                          <div class=\"fields\">\n                                              <div class=\"label\">\n                                                  <label>\n                                                      <span>Languages</span>\n                                                  </label>\n                                              </div>\n                                              <div class=\"inputbox\">\n                                                  <MultiSelect value={this.state.lang_sel} options={language} onChange={(e) => this.setState({lang_sel: e.value})}  style={{minWidth:'12em'}} filter={true} placeholder=\"Select Language\"/>\n                                              </div>\n                                              <Tooltip>\n                                              <div class=\"text\">\n                                                  <h3>Describe your Gig.</h3>\n                                                  <p>This is your Gig title. Choose wisely, you can only use 80 characters.</p>\n                                              </div>\n                                              <div class=\"gig_t_img\"><img src=\"images/icon_tooltip_lang.png\" alt=\"\" /></div>\n                                              </Tooltip>\n                                          </div>\n                                          <div class=\"fields\">\n                                              <div class=\"label\">\n                                                  <label>\n                                                    <span>Category</span>\n                                                  </label>\n                                              </div>\n                                              <div class=\"inputbox\">\n                                                  <select class=\"f\" name=\"category\" required>\n                                                      <option selected disabled value=\"\">Select Category</option>\n                                                      {category_list.length>0 && category_list.map((res,key)=>{\n                                                        return(<option value={res.id}>{res.name}</option>)\n                                                      })}\n                                                  </select>\n                                              </div>\n                                              <Tooltip>\n                                              <div class=\"text\">\n                                                  <h3>Describe your Gig.</h3>\n                                                  <p>This is your Gig title. Choose wisely, you can only use 80 characters.</p>\n                                              </div>\n                                              <div class=\"gig_t_img\"><img src=\"images/icon_tooltip_category.png\" alt=\"\" /></div>\n                                              </Tooltip>\n                                          </div>\n                                          <div class=\"fields\">\n                                              <div class=\"label\">\n                                                  <label>\n                                                      <span>License Rights</span>\n                                                  </label>\n                                              </div>\n                                              <div class=\"inputbox\">\n                                              <MultiSelect value={this.state.sel_license_rights} options={license_rights} onChange={(e) => this.setState({sel_license_rights: e.value})} style={{minWidth:'12em'}} filter={true} placeholder=\"Select License Rights\"/>\n                                              </div>\n                                              <Tooltip>\n                                              <div class=\"text\">\n                                                  <h3>Describe your Gig.</h3>\n                                                  <p>This is your Gig title. Choose wisely, you can only use 80 characters.</p>\n                                              </div>\n                                              <div class=\"gig_t_img\"><img src=\"images/icon_tooltip_lr.png\" alt=\"\" /></div>\n                                              </Tooltip>\n                                          </div>\n                                          <div class=\"fields\">\n                                              <div class=\"label\">\n                                                  <label>\n                                                      <span>Territory Rights</span>\n                                                  </label>\n                                              </div>\n                                              <div class=\"inputbox\">\n                                              <MultiSelect value={this.state.sel_territory_rights} options={this.state.territory_rights} onChange={(e) => this.setState({sel_territory_rights: e.value})} style={{minWidth:'12em'}} filter={true} placeholder=\"Select Territory Rights\"/>\n                                              </div>\n                                              <Tooltip>\n                                              <div class=\"text\">\n                                                  <h3>Describe your Gig.</h3>\n                                                  <p>This is your Gig title. Choose wisely, you can only use 80 characters.</p>\n                                              </div>\n                                              <div class=\"gig_t_img\"><img src=\"images/icon_tooltip_tr.png\" alt=\"\" /></div>\n                                              </Tooltip>\n                                          </div>\n                                          {/*<div class=\"fields\">\n                                              <div class=\"label\">\n                                                  <label>\n<span>Price</span>\n                                                  </label>\n                                              </div>\n                                              <div class=\"inputbox\">\n                                                  <input type=\"text\"  placeholder=\"Enter price\" name=\"price\" required/>\n                                              </div>\n                                          </div>*/}\n                                          <div class=\"fields\">\n                                              <div class=\"label\">\n                                                  <label>\n                                                      <span>Mature Content</span>\n                                                  </label>\n                                              </div>\n                                              <div class=\"inputbox check\">\n                                                  <label>\n                                                      <input type=\"checkbox\" alt=\"\" name=\"mature_content\" id=\"mature_content\"/>\n                                                      <span class=\"check\"><i class=\"fa fa-check-square\" aria-hidden=\"true\"></i></span>\n                                                      <span>Above 18 &nbsp;(Select only if you are above 18)</span>\n                                                  </label>\n                                              </div>\n                                              <Tooltip>\n                                              <div class=\"text\">\n                                                  <h3>Describe your Gig.</h3>\n                                                  <p>This is your Gig title. Choose wisely, you can only use 80 characters.</p>\n                                              </div>\n                                              <div class=\"gig_t_img\"><img src=\"images/icon_tooltip_above18.png\" alt=\"\" /></div>\n                                              </Tooltip>\n                                          </div>\n                                    </div>\n\n                                    <div class=\"build_gal\">\n                                        <div class=\"upload_area\">\n                                            <label>Video thumbnail <span>Upload thumbnail that describe or are related to your video.</span></label>\n                                            <ul class=\"browse_list\">\n                                                <li>\n                                                    <div class=\"upl_box\">\n                                                        <div class=\"drag_area\">\n                                                          <span>Drag a Photo or</span>\n                                                          <label for=\"gig_upload\">\n                                                          <input\n                                                          ref=\"file\"\n                                                          type=\"file\"\n                                                          name=\"user[image]\"\n                                                          accept=\"image/*\"\n                                                          id=\"gig_upload\"\n\n                                                          onChange={this._onChange}/>\n                                                          <input type=\"file\"  />\n                                                          <span>Browse</span>\n                                                          {this.state.imgs && [...this.state.imgs].map((file)=>(\n                                                          <img src=\"\" id=\"upload_img\"  src={URL.createObjectURL(file)} alt=\"\" />   ))}\n\n                                                          </label>\n                                                          </div>\n                                                    </div>\n                                                </li>\n                                            </ul>\n                                            <Tooltip>\n                                            <div class=\"text\">\n                                                <h3>Photos</h3>\n                                                <p>Upload photos in JPEG, JPG, PNG and ensure they’re at least 550 pixels width x 370 pixels height.</p>\n                                                <p>We suggest uploading them in landscape format to make better use of the space.</p>\n                                                <p>Lastly, put your best foot forward! Stand out on Planetshare with your favorite photos.</p>\n                                                <p>Need help? Check out Planetshare expert photoshop talent here.</p>\n                                            </div>\n                                            </Tooltip>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"description\">\n                                        <h3 class=\"head\">Short Description</h3>\n                                        <div class=\"disc_box\">\n                                            <label>Short Description Of Your Video</label>\n                                            <div class=\"inputbox\">\n                                                <textarea minlength=\"30\" maxlength=\"80\" name=\"video_short_desc\" required></textarea>\n                                                <div class=\"inf\">\n                                                    <span>max. 80</span>\n                                                </div>\n                                            </div>\n                                            <Tooltip>\n                                            <div class=\"text\">\n                                                <div class=\"icon\"><i class=\"fa fa-plane\" aria-hidden=\"true\"></i></div>\n                                                <h3>This is your chance to be creative. Explain your Gig.</h3>\n                                                <p>Describe what you are offering. Be as detailed as possible so buyers will be able to understand if this meets their needs. Should be at least 120 characters.</p>\n                                            </div>\n                                            <div class=\"gig_t_img\"><img src=\"images/icon_tooltip_sortdesc.png\" alt=\"\" /></div>\n                                            </Tooltip>\n                                        </div>\n                                    </div>\n                                    <div class=\"description\">\n                                        <h3 class=\"head\">Description</h3>\n                                        <div class=\"disc_box\">\n                                            <label>Briefly Describe Your Video</label>\n                                            <div class=\"inputbox\">\n                                                <textarea minlength=\"80\" maxlength=\"1200\" name=\"video_desc\" required></textarea>\n                                                <div class=\"inf\">\n                                                    <span>min. 120</span>\n                                                </div>\n                                            </div>\n                                            <Tooltip>\n                                            <div class=\"text\">\n                                                <div class=\"icon\"><i class=\"fa fa-plane\" aria-hidden=\"true\"></i></div>\n                                                <h3>This is your chance to be creative. Explain your Gig.</h3>\n                                                <p>Describe what you are offering. Be as detailed as possible so buyers will be able to understand if this meets their needs. Should be at least 120 characters.</p>\n                                            </div>\n                                            <div class=\"gig_t_img\"><img src=\"images/icon_tooltip_desc.png\" alt=\"\" /></div>\n                                            </Tooltip>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"buttons\">\n                                        <button type=\"submit\" class=\"btndefault\" disabled={this.state.btn_disable}>Save & Continue</button>\n                                    </div>\n                                    {/*<div class=\"gig_tooltip gig_tooltip_main\">\n                                        <div class=\"box\">\n                                            <div class=\"icon\"><i class=\"fa fa-plane\" aria-hidden=\"true\"></i></div>\n                                            <div class=\"text\">\n                                                <h3>Add your video information</h3>\n                                            </div>\n                                            <div class=\"gig_t_img\"><img src=\"images/tooltip_vd.jpg\" alt=\"\" /></div>\n                                            <ul>\n                                                <li>\n<p>Create a catchy title.</p>\n                                                </li>\n                                                <li>\n<p>Choose a category that fits your Gig.</p>\n                                                </li>\n                                                <li>\n                                                    <p>Add meta data to help buyers find more information regarding your Gig.</p>\n                                                </li>\n                                                <li>\n                                                    <p>Add tags to help buyers find your Gig while searching.</p>\n                                                </li>\n                                            </ul>\n\n                                            <hr></hr>\n\n                                            <ul>\n                                                <li>\n                                                    <p>Set the prices for your 3 packages.</p>\n                                                </li>\n                                                <li>\n<p>Select the elements you want to include in each offer.</p>\n                                                </li>\n                                                <li>\n                                                    <p>Add Extras to increase your order value.</p>\n                                                </li>\n                                            </ul>\n\n                                            <hr></hr>\n\n                                            <ul>\n                                                <li>\n<p>Include the most important information for your Gig.</p>\n                                                </li>\n                                            </ul>\n\n                                            <hr></hr>\n\n                                            <ul>\n                                                <li>\n                                                    <p>Add photos, an introduction video files that best represent your service.</p>\n                                                </li>\n                                            </ul>\n                                        </div>\n                                    </div>\n                                    */}\n                                    <div class=\"asset_video_uploaded\">\n                                    <ReactJWPlayer\n                                    style={{backgroundColor:'grey'}}\n                                    ref={(ref) => { this.player = ref }}\n                                    playerId='jw-player'\n                                    image={vid_data.large_thumb}\n                                    playerScript='https://content.jwplatform.com/libraries/jvJ1Gu3c.js'\n                                    file={vid_data.demo_url}\n                                    aspectRatio=\"16:9\"\n                                    isAutoPlay={true}\n                                    controls={true}\n                                    repeat=\"true\"\n                                      customProps={{\n                                        controls: true,\n                                        repeat: true,\n                                        stretching: 'fill',\n                                        preload: 'auto',\n                                        volume: 100,\n                                        width: '100%',\n                                        height: '100%',\n                                    }}\n                                    />\n                                    </div>\n                                </form>\n                                <div class=\"clearfix\"></div>\n                            </div>\n                        </div>\n                        <div class=\"clearfix\"></div>\n                    </article>\n                    <div class=\"clearfix\"></div>\n                </section>\n\n              )\n        }\n        else {\n          return(<LoadingGif message={loading_msg}/>)\n        }\n      }\n  }\n}\nexport default VideoDescription;\n"]},"metadata":{},"sourceType":"module"}