{"ast":null,"code":"var _jsxFileName = \"/var/www/html/REACT_WORK/NEW_PLANETSHARE/web_planetshare/src/Container/Dashboard/SellerDashboard/Asset/edit_image_description.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport { USERID, TOKEN, HEADER, TAG, GETSELLERFORMDATA, SELLERIMAGEUPLOADDESCRIPTION, GETFORMSTATUS, GETIMAGEVIDEODATA } from '../../../../url.js';\nimport { Link, withRouter } from \"react-router-dom\";\nimport Not_Found from '../../../../Component/not_found/not_found';\nimport Tooltip from '../../../../Component/tooltip.js';\nimport LoadingGif from '../../../../Component/Loader/loading_gif';\nimport { MultiSelect } from 'primereact/multiselect';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport TagsInput from 'react-tagsinput';\nimport 'react-tagsinput/react-tagsinput.css';\nimport { ToastContainer, toast, cssTransition } from 'react-toastify';\nconst Zoom = cssTransition({\n  enter: 'zoomIn',\n  exit: 'zoomOut'\n});\nconst SELLER_HEADER = {\n  headers: {\n    'Content-Type': 'application/json;charset=UTF-8',\n    'Authorization': \"Bearer \" + localStorage.getItem('planetshare_web_token')\n  }\n};\nconst license_rights = [{\n  \"value\": \"TV Right(Satellite,Free Tv,Pay Tv)\",\n  \"label\": \"TV Right(Satellite,Free Tv,Pay Tv)\"\n}, {\n  \"value\": \"VOD(AVOD,SVOD,TVOD)\",\n  \"label\": \"VOD(AVOD,SVOD,TVOD)\"\n}, {\n  \"value\": \"Mobile Network\",\n  \"label\": \"Mobile Network\"\n}, {\n  \"value\": \"Social Media(FB,TW)\",\n  \"label\": \"Social Media(FB,TW)\"\n}, {\n  \"value\": \"VideoPlatform(Youtube, DailyMotion)\",\n  \"label\": \"VideoPlatform(Youtube, DailyMotion)\"\n}, {\n  \"value\": \"Airlines\",\n  \"label\": \"Airlines\"\n}, {\n  \"value\": \"DTH\",\n  \"label\": \"DTH\"\n}, {\n  \"value\": \"Cable\",\n  \"label\": \"Cable\"\n}, {\n  \"value\": \"IPTV\",\n  \"label\": \"IPTV\"\n}, {\n  \"value\": \"Ship\",\n  \"label\": \"Ship\"\n}, {\n  \"value\": \"Hotel\",\n  \"label\": \"Hotel\"\n}];\n\nclass AddVideo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      img_data: [],\n      err_result: [],\n      imgs: [],\n      image_id: 0,\n      loading: false,\n      loading_msg: 'Please Wait',\n      not_found: false,\n      keywords: [],\n      btn_disable: false,\n      category_list: [],\n      license_rights: [],\n      sel_license_rights: [],\n      territory_rights: [],\n      sel_territory_rights: [],\n      mature_content: 0\n    };\n\n    this.getFormData = () => {\n      axios.post(GETIMAGEVIDEODATA, {\n        'user_id': localStorage.getItem('user_id'),\n        'tag': TAG,\n        'id': this.state.image_id,\n        'content_type': 'image',\n        'seller_id': localStorage.getItem('seller_id')\n      }, SELLER_HEADER).then(res => {\n        if (res.data.success == 1) {\n          var response = res.data.data;\n          var strArr = response.territory_rights.split(',');\n          var intArr = [];\n\n          for (var i = 0; i < strArr.length; i++) intArr.push(parseInt(strArr[i]));\n\n          this.setState({\n            img_data: response,\n            keywords: response.keywords.split(','),\n            mature_content: response.mature_content,\n            sel_territory_rights: intArr\n          }, function () {\n            this.getAdditionalInfo();\n          });\n        } else {}\n      }).catch(error => {});\n    };\n\n    this.getAdditionalInfo = () => {\n      axios.get(GETSELLERFORMDATA).then(res => {\n        if (res.data.success == 1) {\n          this.setState({\n            category_list: res.data.image_cat_list,\n            territory_rights: res.data.country_list\n          });\n          setTimeout(() => this.setState({\n            loading: true\n          }), 1000);\n        } else {}\n      }).catch(error => {});\n    };\n\n    this.checkVideoIdStatus = () => {\n      axios.post(GETFORMSTATUS, {\n        user_id: localStorage.getItem('user_id'),\n        seller_id: localStorage.getItem('seller_id'),\n        tag: TAG,\n        view_type: 'image',\n        view_id: this.state.image_id\n      }, SELLER_HEADER).then(res => {\n        if (res.data.success == 1) {\n          this.setState({\n            not_found: false\n          }, function () {\n            this.getFormData();\n          });\n        } else {\n          this.setState({\n            not_found: true\n          });\n        }\n      }).catch(error => {});\n    };\n\n    this._onChange = event => {\n      if (event.target.files.length > 1) {\n        toast('Maximum one file is allowed', {\n          transition: Zoom\n        });\n        return false;\n      }\n\n      this.setState({\n        imgs: event.target.files\n      });\n    };\n\n    this.videoDescSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        btn_disable: true\n      });\n      const _this$state = this.state,\n            keywords = _this$state.keywords,\n            sel_license_rights = _this$state.sel_license_rights,\n            sel_territory_rights = _this$state.sel_territory_rights;\n      var event = e.target;\n      var title = event.image_title.value.trim();\n      var artist_name = event.artist_name.value.trim();\n      var description = event.video_desc.value.trim();\n      var short_desc = event.video_short_desc.value.trim();\n      var category = event.category.value.trim(); // var price=event.price.value.trim();\n\n      var mature_content = 0;\n\n      if ($('#mature_content').is(\":checked\")) {\n        mature_content = 1;\n      }\n\n      var formData = new FormData();\n      formData.append('user_id', localStorage.getItem('user_id'));\n      formData.append('tag', TAG);\n      formData.append('seller_id', localStorage.getItem('seller_id'));\n      formData.append('image_id', this.state.image_id);\n      formData.append('mature_content', mature_content);\n      formData.append('title', title);\n      formData.append('artist_name', artist_name);\n      formData.append('description', description);\n      formData.append('short_desc', short_desc);\n      formData.append('status_tag', this.state.img_data.status); // formData.append('price',price);\n\n      formData.append('image_category_id', category);\n      formData.append('keywords', keywords);\n      formData.append('territory_rights', sel_territory_rights);\n      formData.append('license_rights', sel_license_rights);\n      axios.post(SELLERIMAGEUPLOADDESCRIPTION, formData, SELLER_HEADER).then(response => {\n        if (response.data.success == 3) {\n          var err_result = response.data.data;\n          this.setState({\n            btn_disable: false,\n            err_result: response.data.error\n          });\n          $(\"html, body\").animate({\n            scrollTop: 0\n          }, \"slow\");\n          return false;\n        }\n\n        if (response.data.success == 1) {\n          this.setState({\n            btn_disable: false\n          });\n          this.setState({\n            loading: false,\n            loading_msg: 'Please Wait While We Are Updating Your Content'\n          });\n          setTimeout(() => {\n            this.props.history.push({\n              pathname: '/dashboard/seller/asset',\n              state: {\n                tag: 'image'\n              }\n            });\n          }, 2000);\n        } else {\n          this.setState({\n            btn_disable: false\n          });\n          toast('Something Went Wrong', {\n            transition: Zoom\n          });\n        }\n      }).catch(error => {\n        this.setState({\n          btn_disable: false\n        });\n        toast('Something Went Wrong', {\n          transition: Zoom\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      image_id: this.props.match.params.image_id\n    }, function () {\n      this.checkVideoIdStatus();\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.props.match.params.image_id != this.state.image_id) {\n      this.setState({\n        image_id: this.props.match.params.image_id,\n        loading: false\n      }, function () {\n        this.checkVideoIdStatus();\n      });\n      setTimeout(() => this.setState({\n        loading: true\n      }), 1000);\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          img_data = _this$state2.img_data,\n          loading = _this$state2.loading,\n          loading_msg = _this$state2.loading_msg,\n          not_found = _this$state2.not_found,\n          keywords = _this$state2.keywords,\n          category_list = _this$state2.category_list,\n          err_result = _this$state2.err_result;\n\n    if (not_found) {\n      return React.createElement(Not_Found, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      });\n    } else {\n      if (loading) {\n        return React.createElement(\"section\", {\n          class: \"inner_cont cr_vd_desc\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, React.createElement(\"article\", {\n          class: \"gig_info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"vend_cont\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, err_result.length > 0 && React.createElement(\"div\", {\n          class: \"error_box\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, err_result.map((res, key) => {\n          return React.createElement(\"li\", {\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209\n            },\n            __self: this\n          }, res));\n        }))), React.createElement(\"form\", {\n          class: \"form_control\",\n          onSubmit: this.videoDescSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"field_area\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"fields\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, \"Image Title\"))), React.createElement(\"div\", {\n          class: \"inputbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          placeholder: \"Image Title\",\n          name: \"image_title\",\n          Value: img_data.title,\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        })), React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }, \"Describe your Gig.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }, \"This is your Gig title. Choose wisely, you can only use 80 characters.\")), React.createElement(\"div\", {\n          class: \"gig_t_img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"images/icon_tooltip_title.png\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          class: \"fields\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, \"Artist Name\"))), React.createElement(\"div\", {\n          class: \"inputbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          placeholder: \"Artist name\",\n          name: \"artist_name\",\n          Value: img_data.artist_name,\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        })), React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244\n          },\n          __self: this\n        }, \"Describe your Gig.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }, \"This is your Gig title. Choose wisely, you can only use 80 characters.\")), React.createElement(\"div\", {\n          class: \"gig_t_img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"images/icon_tooltip_title.png\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          class: \"fields\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        }, \"Keywords\"))), React.createElement(\"div\", {\n          class: \"inputbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }, React.createElement(TagsInput, {\n          value: this.state.keywords,\n          onChange: keywords => {\n            this.setState({\n              keywords\n            });\n          },\n          onlyUnique: true,\n          maxTags: 10,\n          placeholder: \"Add Keywords\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          class: \"inf\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          class: \"char-count\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260\n          },\n          __self: this\n        }, \"Up to 5 items\"))), React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        }, \"Describe your Gig.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }, \"This is your Gig title. Choose wisely, you can only use 80 characters.\")), React.createElement(\"div\", {\n          class: \"gig_t_img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"images/icon_tooltip_keyword.png\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          class: \"fields\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }, \"Category\"))), React.createElement(\"div\", {\n          class: \"inputbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278\n          },\n          __self: this\n        }, React.createElement(\"select\", {\n          class: \"f\",\n          name: \"category\",\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          selected: true,\n          disabled: true,\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          },\n          __self: this\n        }, \"Select Category\"), category_list.length > 0 && category_list.map((res, key) => {\n          return React.createElement(\"option\", {\n            value: res.id,\n            selected: img_data.image_category_id == res.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 282\n            },\n            __self: this\n          }, res.name);\n        }))), React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288\n          },\n          __self: this\n        }, \"Describe your Gig.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        }, \"This is your Gig title. Choose wisely, you can only use 80 characters.\")), React.createElement(\"div\", {\n          class: \"gig_t_img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"images/icon_tooltip_category.png\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          class: \"fields\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          },\n          __self: this\n        }, \"License Rights\"))), React.createElement(\"div\", {\n          class: \"inputbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        }, React.createElement(MultiSelect, {\n          value: this.state.sel_license_rights,\n          options: license_rights,\n          onChange: e => this.setState({\n            sel_license_rights: e.value\n          }),\n          style: {\n            minWidth: '12em'\n          },\n          filter: true,\n          placeholder: \"Select License Rights\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301\n          },\n          __self: this\n        })), React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        }, \"Describe your Gig.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306\n          },\n          __self: this\n        }, \"This is your Gig title. Choose wisely, you can only use 80 characters.\")), React.createElement(\"div\", {\n          class: \"gig_t_img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"images/icon_tooltip_lr.png\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          class: \"fields\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314\n          },\n          __self: this\n        }, \"Territory Rights\"))), React.createElement(\"div\", {\n          class: \"inputbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317\n          },\n          __self: this\n        }, React.createElement(MultiSelect, {\n          value: this.state.sel_territory_rights,\n          options: this.state.territory_rights,\n          onChange: e => {\n            this.setState({\n              sel_territory_rights: e.value\n            });\n          },\n          style: {\n            minWidth: '12em'\n          },\n          filter: true,\n          placeholder: \"Select Territory Rights\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318\n          },\n          __self: this\n        })), React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          },\n          __self: this\n        }, \"Describe your Gig.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323\n          },\n          __self: this\n        }, \"This is your Gig title. Choose wisely, you can only use 80 characters.\")), React.createElement(\"div\", {\n          class: \"gig_t_img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"images/icon_tooltip_tr.png\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          class: \"fields\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341\n          },\n          __self: this\n        }, \"Mature Content\"))), React.createElement(\"div\", {\n          class: \"inputbox check\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          alt: \"\",\n          name: \"mature_content\",\n          id: \"mature_content\",\n          checked: this.state.mature_content,\n          onClick: () => {\n            this.setState({\n              mature_content: !this.state.mature_content\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          class: \"check\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          class: \"fa fa-check-square\",\n          \"aria-hidden\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348\n          },\n          __self: this\n        }, \"Above 18 \\xA0(Select only if you are above 18)\"))), React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353\n          },\n          __self: this\n        }, \"Describe your Gig.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354\n          },\n          __self: this\n        }, \"This is your Gig title. Choose wisely, you can only use 80 characters.\")), React.createElement(\"div\", {\n          class: \"gig_t_img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"images/icon_tooltip_above18.png\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356\n          },\n          __self: this\n        }))))), React.createElement(\"div\", {\n          class: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          class: \"head\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363\n          },\n          __self: this\n        }, \"Short Description\"), React.createElement(\"div\", {\n          class: \"disc_box\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365\n          },\n          __self: this\n        }, \"Short Description Of Your Image\"), React.createElement(\"div\", {\n          class: \"inputbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366\n          },\n          __self: this\n        }, React.createElement(\"textarea\", {\n          minlength: \"30\",\n          maxlength: \"80\",\n          name: \"video_short_desc\",\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367\n          },\n          __self: this\n        }, img_data.short_desc), React.createElement(\"div\", {\n          class: \"inf\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369\n          },\n          __self: this\n        }, \"max. 80\"))), React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          class: \"fa fa-plane\",\n          \"aria-hidden\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374\n          },\n          __self: this\n        })), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375\n          },\n          __self: this\n        }, \"This is your chance to be creative. Explain your Gig.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376\n          },\n          __self: this\n        }, \"Describe what you are offering. Be as detailed as possible so buyers will be able to understand if this meets their needs. Should be at least 120 characters.\")), React.createElement(\"div\", {\n          class: \"gig_t_img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"images/icon_tooltip_sortdesc.png\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378\n          },\n          __self: this\n        }))))), React.createElement(\"div\", {\n          class: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          class: \"head\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383\n          },\n          __self: this\n        }, \"Description\"), React.createElement(\"div\", {\n          class: \"disc_box\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385\n          },\n          __self: this\n        }, \"Briefly Describe Your Image\"), React.createElement(\"div\", {\n          class: \"inputbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386\n          },\n          __self: this\n        }, React.createElement(\"textarea\", {\n          minlength: \"80\",\n          maxlength: \"1200\",\n          name: \"video_desc\",\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 387\n          },\n          __self: this\n        }, img_data.description), React.createElement(\"div\", {\n          class: \"inf\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 388\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389\n          },\n          __self: this\n        }, \"min. 80\"))), React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 393\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          class: \"fa fa-plane\",\n          \"aria-hidden\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394\n          },\n          __self: this\n        })), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 395\n          },\n          __self: this\n        }, \"This is your chance to be creative. Explain your Gig.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396\n          },\n          __self: this\n        }, \"Describe what you are offering. Be as detailed as possible so buyers will be able to understand if this meets their needs. Should be at least 120 characters.\")), React.createElement(\"div\", {\n          class: \"gig_t_img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"images/icon_tooltip_desc.png\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398\n          },\n          __self: this\n        }))))), React.createElement(\"div\", {\n          class: \"buttons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"submit\",\n          class: \"btndefault\",\n          disabled: this.state.btn_disable,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404\n          },\n          __self: this\n        }, \"Save & Continue\")), React.createElement(\"div\", {\n          class: \"asset_video_uploaded\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 460\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"gig_t_img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 461\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: img_data.large_thumb,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 461\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          class: \"clearfix\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 464\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          class: \"clearfix\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 467\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          class: \"clearfix\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 469\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(LoadingGif, {\n          message: loading_msg,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 475\n          },\n          __self: this\n        });\n      }\n    }\n  }\n\n}\n\nexport default AddVideo;","map":{"version":3,"sources":["/var/www/html/REACT_WORK/NEW_PLANETSHARE/web_planetshare/src/Container/Dashboard/SellerDashboard/Asset/edit_image_description.js"],"names":["React","Component","axios","$","USERID","TOKEN","HEADER","TAG","GETSELLERFORMDATA","SELLERIMAGEUPLOADDESCRIPTION","GETFORMSTATUS","GETIMAGEVIDEODATA","Link","withRouter","Not_Found","Tooltip","LoadingGif","MultiSelect","TagsInput","ToastContainer","toast","cssTransition","Zoom","enter","exit","SELLER_HEADER","headers","localStorage","getItem","license_rights","AddVideo","state","img_data","err_result","imgs","image_id","loading","loading_msg","not_found","keywords","btn_disable","category_list","sel_license_rights","territory_rights","sel_territory_rights","mature_content","getFormData","post","then","res","data","success","response","strArr","split","intArr","i","length","push","parseInt","setState","getAdditionalInfo","catch","error","get","image_cat_list","country_list","setTimeout","checkVideoIdStatus","user_id","seller_id","tag","view_type","view_id","_onChange","event","target","files","transition","videoDescSubmit","e","preventDefault","title","image_title","value","trim","artist_name","description","video_desc","short_desc","video_short_desc","category","is","formData","FormData","append","status","animate","scrollTop","props","history","pathname","componentDidMount","match","params","componentDidUpdate","render","map","key","id","image_category_id","name","minWidth","large_thumb"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport {USERID,TOKEN,HEADER,TAG,GETSELLERFORMDATA,SELLERIMAGEUPLOADDESCRIPTION,GETFORMSTATUS,GETIMAGEVIDEODATA} from '../../../../url.js'\nimport {Link,withRouter} from \"react-router-dom\";\nimport Not_Found from '../../../../Component/not_found/not_found';\nimport Tooltip from '../../../../Component/tooltip.js'\nimport LoadingGif from '../../../../Component/Loader/loading_gif'\nimport {MultiSelect} from 'primereact/multiselect';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport TagsInput from 'react-tagsinput'\nimport 'react-tagsinput/react-tagsinput.css';\nimport { ToastContainer, toast,cssTransition} from 'react-toastify';\nconst Zoom = cssTransition({\nenter: 'zoomIn',\nexit: 'zoomOut',\n});\nconst SELLER_HEADER = {\nheaders: {\n 'Content-Type': 'application/json;charset=UTF-8',\n 'Authorization':\"Bearer \" + localStorage.getItem('planetshare_web_token'),\n}\n};\nconst license_rights=[\n  {\"value\":\"TV Right(Satellite,Free Tv,Pay Tv)\",\"label\":\"TV Right(Satellite,Free Tv,Pay Tv)\"},\n  {\"value\":\"VOD(AVOD,SVOD,TVOD)\",\"label\":\"VOD(AVOD,SVOD,TVOD)\"},\n  {\"value\":\"Mobile Network\",\"label\":\"Mobile Network\"},\n  {\"value\":\"Social Media(FB,TW)\",\"label\":\"Social Media(FB,TW)\"},\n  {\"value\":\"VideoPlatform(Youtube, DailyMotion)\",\"label\":\"VideoPlatform(Youtube, DailyMotion)\"},\n  {\"value\":\"Airlines\",\"label\":\"Airlines\"},\n  {\"value\":\"DTH\",\"label\":\"DTH\"},\n  {\"value\":\"Cable\",\"label\":\"Cable\"},\n  {\"value\":\"IPTV\",\"label\":\"IPTV\"},\n  {\"value\":\"Ship\",\"label\":\"Ship\"},\n  {\"value\":\"Hotel\",\"label\":\"Hotel\"},\n]\nclass AddVideo extends Component {\nstate={img_data:[],err_result:[],imgs:[],image_id:0,loading:false,loading_msg:'Please Wait',not_found:false,keywords:[],btn_disable:false,category_list:[],license_rights:[],sel_license_rights:[],territory_rights:[],sel_territory_rights:[],mature_content:0}\n  componentDidMount()\n  {\nthis.setState({image_id:this.props.match.params.image_id},function()\n  {\n    this.checkVideoIdStatus()\n  });\n  }\n  getFormData=()=>{\n    axios.post(GETIMAGEVIDEODATA,{\n      'user_id':localStorage.getItem('user_id'),\n      'tag':TAG,\n      'id':this.state.image_id,\n      'content_type':'image',\n      'seller_id':localStorage.getItem('seller_id')\n    },SELLER_HEADER).then((res)=>{\n      if(res.data.success==1)\n      {\n        var response=res.data.data;\n        var strArr=response.territory_rights.split(',');\n        var intArr=[];\n        for(var i=0; i < strArr.length; i++)\n          intArr.push(parseInt(strArr[i]));\n        this.setState({img_data:response,keywords:response.keywords.split(','),mature_content:response.mature_content,\n        sel_territory_rights:intArr},function()\n      {\n        this.getAdditionalInfo();\n      })\n      }\n      else {\n      }\n    }).catch((error)=>{\n    })\n  }\n  getAdditionalInfo=()=>{\n    axios.get(GETSELLERFORMDATA).then((res)=>{\n      if(res.data.success==1)\n      {\n        this.setState({category_list:res.data.image_cat_list,territory_rights:res.data.country_list});\n        setTimeout(()=>this.setState({loading:true}),1000)\n      }\n      else {\n      }\n    }).catch((error)=>{\n    })\n  }\n  checkVideoIdStatus=()=>{\n    axios.post(GETFORMSTATUS,{\n      user_id:localStorage.getItem('user_id'),\n      seller_id:localStorage.getItem('seller_id'),\n      tag:TAG,\n      view_type:'image',\n      view_id:this.state.image_id\n    },SELLER_HEADER).then((res)=>{\n      if(res.data.success==1)\n      {\n        this.setState({not_found:false},function()\n      {\n        this.getFormData();\n      })\n      }\n      else {\n        this.setState({not_found:true})\n      }\n    }).catch((error)=>{\n    })\n  }\n  _onChange= (event)=>{\n    if(event.target.files.length>1)\n    {\n              toast('Maximum one file is allowed',{ transition: Zoom,});\n      return false;\n    }\n    this.setState({\n        imgs: event.target.files\n    })\n}\n  videoDescSubmit=(e)=>{\n    e.preventDefault();\n    this.setState({btn_disable:true});\n    const {keywords,sel_license_rights,sel_territory_rights}=this.state;\n    var event=e.target;\n    var title=event.image_title.value.trim();\n    var artist_name=event.artist_name.value.trim();\n    var description=event.video_desc.value.trim();\n    var short_desc=event.video_short_desc.value.trim();\n    var category=event.category.value.trim();\n    // var price=event.price.value.trim();\n    var mature_content=0;\n    if ($('#mature_content').is(\":checked\"))\n    {\n         mature_content=1\n    }\n    var formData=new FormData();\n     formData.append('user_id',localStorage.getItem('user_id'));\n     formData.append('tag',TAG);\nformData.append('seller_id',localStorage.getItem('seller_id'));\n     formData.append('image_id',this.state.image_id);\n    formData.append('mature_content',mature_content);\n     formData.append('title',title);\n     formData.append('artist_name',artist_name);\n     formData.append('description',description);\n     formData.append('short_desc',short_desc);\n     formData.append('status_tag',this.state.img_data.status);\n     // formData.append('price',price);\n     formData.append('image_category_id',category);\n     formData.append('keywords',keywords);\n     formData.append('territory_rights',sel_territory_rights);\n     formData.append('license_rights',sel_license_rights);\naxios.post(SELLERIMAGEUPLOADDESCRIPTION,formData,SELLER_HEADER)\n     .then(response=>{\n       if(response.data.success==3)\n       {\n         var err_result=response.data.data;\nthis.setState({btn_disable:false,err_result:response.data.error});\n             $(\"html, body\").animate({ scrollTop: 0 }, \"slow\");\n         return false;\n       }\n     if(response.data.success==1){\n           this.setState({btn_disable:false})\n           this.setState({loading:false,loading_msg:'Please Wait While We Are Updating Your Content'});\n           setTimeout(()=>{\n             this.props.history.push({\n                   pathname : '/dashboard/seller/asset',\n                   state :{\n                   tag :'image',\n                   }\n                   }\n                 )},2000);\n       }\n       else {\n           this.setState({btn_disable:false})\n           toast('Something Went Wrong',{ transition: Zoom,});\n       }\n     })\n     .catch((error)=> {\n         this.setState({btn_disable:false})\n     toast('Something Went Wrong',{ transition: Zoom,});\n     });\n  }\n  componentDidUpdate()\n  {\n    if(this.props.match.params.image_id!=this.state.image_id)\n    {\nthis.setState({image_id:this.props.match.params.image_id,loading:false},function()\n      {\n        this.checkVideoIdStatus();\n      });\n        setTimeout(()=>this.setState({loading:true}),1000)\n    }\n  }\n  render() {\n    const {img_data,loading,loading_msg,not_found,keywords,category_list,err_result}=this.state;\n    if(not_found)\n    {\n      return(<Not_Found/>)\n    }\n    else\n      {\n        if(loading)\n        {\n          return (\n            <section class=\"inner_cont cr_vd_desc\">\n                    <article class=\"gig_info\">\n                        <div class=\"container\">\n                            <div class=\"vend_cont\">\n                            {err_result.length >0 && <div class=\"error_box\">\n                                    <ul>\n                                    {err_result.map((res,key)=>{\n                                        return(<li key={key}><p>{res}</p></li>)\n                                      })}\n                                    </ul>\n                                  </div>}\n                                <form class=\"form_control\" onSubmit={this.videoDescSubmit}>\n                                    <div class=\"field_area\">\n                                        <div class=\"fields\">\n                                            <div class=\"label\">\n                                                <label>\n                                                <span>Image Title</span>\n                                                </label>\n                                            </div>\n                                            <div class=\"inputbox\">\n                                                <input type=\"text\"  placeholder=\"Image Title\" name=\"image_title\" Value={img_data.title} required/>\n                                            </div>\n                                            <Tooltip>\n                                            <div class=\"text\">\n                                                <h3>Describe your Gig.</h3>\n                                                <p>This is your Gig title. Choose wisely, you can only use 80 characters.</p>\n                                            </div>\n                                            <div class=\"gig_t_img\"><img src=\"images/icon_tooltip_title.png\" alt=\"\" /></div>\n                                            </Tooltip>\n                                        </div>\n\n                                        <div class=\"fields\">\n                                            <div class=\"label\">\n                                                <label>\n                                                <span>Artist Name</span>\n                                                </label>\n                                            </div>\n                                            <div class=\"inputbox\">\n                                                <input type=\"text\"  placeholder=\"Artist name\" name=\"artist_name\" Value={img_data.artist_name} required/>\n                                            </div>\n                                            <Tooltip>\n                                            <div class=\"text\">\n                                                <h3>Describe your Gig.</h3>\n                                                <p>This is your Gig title. Choose wisely, you can only use 80 characters.</p>\n                                            </div>\n                                            <div class=\"gig_t_img\"><img src=\"images/icon_tooltip_title.png\" alt=\"\" /></div>\n                                            </Tooltip>\n                                        </div>\n\n                                        <div class=\"fields\">\n                                            <div class=\"label\">\n                                                <label>\n                                                <span>Keywords</span>\n                                                </label>\n                                            </div>\n                                            <div class=\"inputbox\">\n                                                <TagsInput value={this.state.keywords} onChange={(keywords)=>{this.setState({keywords})}} onlyUnique={true} maxTags={10}   placeholder='Add Keywords'/>\n                                                <div class=\"inf\">\n                                                    <span class=\"char-count\">Up to 5 items</span>\n                                                </div>\n                                            </div>\n                                            <Tooltip>\n                                            <div class=\"text\">\n                                                <h3>Describe your Gig.</h3>\n                                                <p>This is your Gig title. Choose wisely, you can only use 80 characters.</p>\n                                            </div>\n                                            <div class=\"gig_t_img\"><img src=\"images/icon_tooltip_keyword.png\" alt=\"\" /></div>\n                                            </Tooltip>\n                                        </div>\n\n                                          <div class=\"fields\">\n                                              <div class=\"label\">\n                                                  <label>\n                                                  <span>Category</span>\n                                                  </label>\n                                              </div>\n                                              <div class=\"inputbox\">\n                                                  <select class=\"f\" name=\"category\" required>\n                                                      <option selected disabled value=\"\">Select Category</option>\n                                                          {category_list.length>0 && category_list.map((res,key)=>{\n                                                          return(<option value={res.id} selected={img_data.image_category_id==res.id}>{res.name}</option>)\n                                                      })}\n                                                  </select>\n                                              </div>\n                                              <Tooltip>\n                                              <div class=\"text\">\n                                              <h3>Describe your Gig.</h3>\n                                                  <p>This is your Gig title. Choose wisely, you can only use 80 characters.</p>\n                                              </div>\n                                              <div class=\"gig_t_img\"><img src=\"images/icon_tooltip_category.png\" alt=\"\" /></div>\n                                              </Tooltip>\n                                          </div>\n                                          <div class=\"fields\">\n                                              <div class=\"label\">\n                                                  <label>\n                                                  <span>License Rights</span>\n                                                  </label>\n                                              </div>\n                                              <div class=\"inputbox\">\n                                              <MultiSelect value={this.state.sel_license_rights} options={license_rights} onChange={(e) => this.setState({sel_license_rights: e.value})} style={{minWidth:'12em'}} filter={true} placeholder=\"Select License Rights\"/>\n                                              </div>\n                                              <Tooltip>\n                                              <div class=\"text\">\n                                              <h3>Describe your Gig.</h3>\n                                                  <p>This is your Gig title. Choose wisely, you can only use 80 characters.</p>\n                                              </div>\n                                              <div class=\"gig_t_img\"><img src=\"images/icon_tooltip_lr.png\" alt=\"\" /></div>\n                                              </Tooltip>\n                                          </div>\n                                          <div class=\"fields\">\n                                              <div class=\"label\">\n                                                  <label>\n                                                  <span>Territory Rights</span>\n                                                  </label>\n                                              </div>\n                                              <div class=\"inputbox\">\n                                              <MultiSelect value={this.state.sel_territory_rights} options={this.state.territory_rights} onChange={(e) => {this.setState({sel_territory_rights: e.value})}} style={{minWidth:'12em'}} filter={true} placeholder=\"Select Territory Rights\"/>\n                                              </div>\n                                              <Tooltip>\n                                              <div class=\"text\">\n                                              <h3>Describe your Gig.</h3>\n                                                  <p>This is your Gig title. Choose wisely, you can only use 80 characters.</p>\n                                              </div>\n                                              <div class=\"gig_t_img\"><img src=\"images/icon_tooltip_tr.png\" alt=\"\" /></div>\n                                              </Tooltip>\n                                          </div>\n                                          {/*<div class=\"fields\">\n                                              <div class=\"label\">\n                                                  <label>\n                                                  <span>Price</span>\n                                                  </label>\n                                              </div>\n                                              <div class=\"inputbox\">\n                                                  <input type=\"text\"  placeholder=\"Enter price\" name=\"price\" required/>\n                                              </div>\n                                          </div>*/}\n                                          <div class=\"fields\">\n                                              <div class=\"label\">\n                                                  <label>\n                                                  <span>Mature Content</span>\n                                                  </label>\n                                              </div>\n                                              <div class=\"inputbox check\">\n                                                  <label>\n                                                      <input type=\"checkbox\" alt=\"\" name=\"mature_content\" id=\"mature_content\"  checked={this.state.mature_content} onClick={()=>{this.setState({mature_content:!this.state.mature_content})}}/>\n                                                      <span class=\"check\"><i class=\"fa fa-check-square\" aria-hidden=\"true\"></i></span>\n                                                      <span>Above 18 &nbsp;(Select only if you are above 18)</span>\n                                                  </label>\n                                              </div>\n                                              <Tooltip>\n                                              <div class=\"text\">\n                                              <h3>Describe your Gig.</h3>\n                                                  <p>This is your Gig title. Choose wisely, you can only use 80 characters.</p>\n                                              </div>\n                                              <div class=\"gig_t_img\"><img src=\"images/icon_tooltip_above18.png\" alt=\"\" /></div>\n                                              </Tooltip>\n                                          </div>\n                                    </div>\n\n\n                                    <div class=\"description\">\n                                        <h3 class=\"head\">Short Description</h3>\n                                        <div class=\"disc_box\">\n                                            <label>Short Description Of Your Image</label>\n                                            <div class=\"inputbox\">\n                                                <textarea minlength=\"30\" maxlength=\"80\" name=\"video_short_desc\" required>{img_data.short_desc}</textarea>\n                                                <div class=\"inf\">\n                                                <span>max. 80</span>\n                                                </div>\n                                            </div>\n                                            <Tooltip>\n                                            <div class=\"text\">\n                                                <div class=\"icon\"><i class=\"fa fa-plane\" aria-hidden=\"true\"></i></div>\n                                                <h3>This is your chance to be creative. Explain your Gig.</h3>\n                                                <p>Describe what you are offering. Be as detailed as possible so buyers will be able to understand if this meets their needs. Should be at least 120 characters.</p>\n                                            </div>\n                                            <div class=\"gig_t_img\"><img src=\"images/icon_tooltip_sortdesc.png\" alt=\"\" /></div>\n                                            </Tooltip>\n                                        </div>\n                                    </div>\n                                    <div class=\"description\">\n                                        <h3 class=\"head\">Description</h3>\n                                        <div class=\"disc_box\">\n                                            <label>Briefly Describe Your Image</label>\n                                            <div class=\"inputbox\">\n                                                <textarea minlength=\"80\" maxlength=\"1200\" name=\"video_desc\" required>{img_data.description}</textarea>\n                                                <div class=\"inf\">\n                                                <span>min. 80</span>\n                                                </div>\n                                            </div>\n                                            <Tooltip>\n                                            <div class=\"text\">\n                                                <div class=\"icon\"><i class=\"fa fa-plane\" aria-hidden=\"true\"></i></div>\n                                                <h3>This is your chance to be creative. Explain your Gig.</h3>\n                                                <p>Describe what you are offering. Be as detailed as possible so buyers will be able to understand if this meets their needs. Should be at least 120 characters.</p>\n                                            </div>\n                                            <div class=\"gig_t_img\"><img src=\"images/icon_tooltip_desc.png\" alt=\"\" /></div>\n                                            </Tooltip>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"buttons\">\n                                        <button type=\"submit\" class=\"btndefault\" disabled={this.state.btn_disable}>Save & Continue</button>\n                                    </div>\n\n                                    {/*<div class=\"gig_tooltip gig_tooltip_main\">\n                                        <div class=\"box\">\n                                            <div class=\"icon\"><i class=\"fa fa-plane\" aria-hidden=\"true\"></i></div>\n                                            <div class=\"text\">\n                                                <h3>Add your Image information</h3>\n                                            </div>\n                                            <div class=\"gig_t_img\"><img src=\"images/tooltip_vd.jpg\" alt=\"\" /></div>\n                                            <ul>\n                                                <li>\n                                                <p>Create a catchy title.</p>\n                                                </li>\n                                                <li>\n                                                <p>Choose a category that fits your Gig.</p>\n                                                </li>\n                                                <li>\n                                                    <p>Add meta data to help buyers find more information regarding your Gig.</p>\n                                                </li>\n                                                <li>\n                                                    <p>Add tags to help buyers find your Gig while searching.</p>\n                                                </li>\n                                            </ul>\n\n                                            <hr></hr>\n\n                                            <ul>\n                                                <li>\n                                                    <p>Set the prices for your 3 packages.</p>\n                                                </li>\n                                                <li>\n                                                <p>Select the elements you want to include in each offer.</p>\n                                                </li>\n                                                <li>\n                                                    <p>Add Extras to increase your order value.</p>\n                                                </li>\n                                            </ul>\n\n                                            <hr></hr>\n\n                                            <ul>\n                                                <li>\n                                                <p>Include the most important information for your Gig.</p>\n                                                </li>\n                                            </ul>\n\n                                            <hr></hr>\n\n                                            <ul>\n                                                <li>\n                                                    <p>Add photos, an introduction video files that best represent your service.</p>\n                                                </li>\n                                            </ul>\n                                        </div>\n                                    </div>*/}\n                                    <div class=\"asset_video_uploaded\">\n                                      <div class=\"gig_t_img\"><img src={img_data.large_thumb} alt=\"\" /></div>\n                                    </div>\n                                </form>\n                                <div class=\"clearfix\"></div>\n                            </div>\n                        </div>\n                        <div class=\"clearfix\"></div>\n                    </article>\n                    <div class=\"clearfix\"></div>\n                </section>\n\n              )\n        }\n        else {\n          return(<LoadingGif message={loading_msg}/>)\n        }\n      }\n  }\n}\nexport default AddVideo;\n"]},"metadata":{},"sourceType":"module"}