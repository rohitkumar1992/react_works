{
  "_from": "react-image-lightbox",
  "_id": "react-image-lightbox@5.1.1",
  "_inBundle": false,
  "_integrity": "sha512-GprldD8AqpRb2hsOdns3sI7Xeo9hJlcybDxuli4RB+ml1J/GaFaUuRkT/7IrTLv2+4vkR74ahz2LD0HOUHI7wA==",
  "_location": "/react-image-lightbox",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "react-image-lightbox",
    "fetchSpec": "latest",
    "name": "react-image-lightbox",
    "raw": "react-image-lightbox",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-image-lightbox/-/react-image-lightbox-5.1.1.tgz",
  "_shasum": "872d1a4336b5a6410ea7909b767cf59014081004",
  "_spec": "react-image-lightbox",
  "_where": "/var/www/html/Shantanu_project/OTT_LIVE_WORK/REACT_WORK/NEW_PLANETSHARE/web_planetshare",
  "authors": [
    "Chris Fritz"
  ],
  "browserslist": [
    "> 1%",
    "IE >= 11",
    "last 2 versions"
  ],
  "bugs": {
    "url": "https://github.com/frontend-collective/react-image-lightbox/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "prop-types": "^15.6.2",
    "react-modal": "^3.8.1"
  },
  "deprecated": false,
  "description": "A lightbox component for React.js",
  "devDependencies": {
    "@babel/cli": "^7.2.3",
    "@babel/core": "^7.2.2",
    "@babel/preset-env": "^7.3.1",
    "@babel/preset-react": "^7.0.0",
    "autoprefixer": "^9.4.7",
    "babel-jest": "^24.0.0",
    "coveralls": "^3.0.2",
    "cross-env": "^5.2.0",
    "enzyme": "^3.8.0",
    "enzyme-adapter-react-16": "^1.8.0",
    "enzyme-to-json": "^3.3.4",
    "eslint": "^5.13.0",
    "eslint-config-airbnb": "^17.1.0",
    "eslint-config-prettier": "^4.0.0",
    "eslint-plugin-import": "^2.16.0",
    "eslint-plugin-jsx-a11y": "^6.2.1",
    "eslint-plugin-react": "^7.12.4",
    "gh-pages": "^2.0.1",
    "jest": "^24.0.0",
    "jest-enzyme": "^7.0.1",
    "parcel-bundler": "^1.11.0",
    "prettier": "^1.16.4",
    "react": "^16.7.0",
    "react-dom": "^16.7.0",
    "rimraf": "^2.6.3",
    "rollup": "^1.1.2",
    "rollup-plugin-babel": "^4.3.2",
    "rollup-plugin-commonjs": "^9.2.0",
    "rollup-plugin-node-resolve": "^4.0.0",
    "rollup-plugin-postcss": "^2.0.3",
    "standard-version": "^7.0.0"
  },
  "files": [
    "dist",
    "index.d.ts",
    "style.css",
    "style.css.map"
  ],
  "homepage": "https://frontend-collective.github.io/react-image-lightbox",
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "jsx"
    ],
    "moduleNameMapper": {
      "\\.(css|jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/__mocks__/fileMock.js"
    },
    "setupFiles": [
      "./test-config/shim.js",
      "./test-config/test-setup.js"
    ],
    "setupFilesAfterEnv": [
      "./node_modules/jest-enzyme/lib/index.js"
    ],
    "snapshotSerializers": [
      "enzyme-to-json/serializer"
    ]
  },
  "keywords": [
    "image",
    "lightbox",
    "react",
    "react-component"
  ],
  "license": "MIT",
  "main": "dist/index.cjs.js",
  "module": "dist/index.es.js",
  "name": "react-image-lightbox",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^16.x",
    "react-dom": "^16.x"
  },
  "readme": "# React Image Lightbox\n\n[![NPM](https://nodei.co/npm/react-image-lightbox.png)](https://npmjs.org/package/react-image-lightbox) [![Build Status](https://travis-ci.org/frontend-collective/react-image-lightbox.svg?branch=master)](https://travis-ci.org/frontend-collective/react-image-lightbox) [![Coverage Status](https://coveralls.io/repos/github/frontend-collective/react-image-lightbox/badge.svg?branch=master)](https://coveralls.io/github/frontend-collective/react-image-lightbox?branch=master)\n\n[![RIL Snapshot](https://user-images.githubusercontent.com/4413963/31209033-78f60df0-a9c3-11e7-8f83-69998d46973e.png)](https://frontend-collective.github.io/react-image-lightbox/)\n\nA flexible lightbox component for displaying images in a React project.\n\n[DEMO](https://frontend-collective.github.io/react-image-lightbox/)\n\nFeatures\n\n- Keyboard shortcuts (with rate limiting)\n- Image Zoom\n- Flexible rendering using src values assigned on the fly\n- Image preloading for smoother viewing\n- Mobile friendly, with pinch to zoom and swipe (Thanks, [@webcarrot](https://github.com/webcarrot)!)\n- No external CSS\n\n## Example\n\n```jsx\nimport React, { Component } from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css'; // This only needs to be imported once in your app\n\nconst images = [\n  '//placekitten.com/1500/500',\n  '//placekitten.com/4000/3000',\n  '//placekitten.com/800/1200',\n  '//placekitten.com/1500/1500',\n];\n\nexport default class LightboxExample extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      photoIndex: 0,\n      isOpen: false,\n    };\n  }\n\n  render() {\n    const { photoIndex, isOpen } = this.state;\n\n    return (\n      <div>\n        <button type=\"button\" onClick={() => this.setState({ isOpen: true })}>\n          Open Lightbox\n        </button>\n\n        {isOpen && (\n          <Lightbox\n            mainSrc={images[photoIndex]}\n            nextSrc={images[(photoIndex + 1) % images.length]}\n            prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n            onCloseRequest={() => this.setState({ isOpen: false })}\n            onMovePrevRequest={() =>\n              this.setState({\n                photoIndex: (photoIndex + images.length - 1) % images.length,\n              })\n            }\n            onMoveNextRequest={() =>\n              this.setState({\n                photoIndex: (photoIndex + 1) % images.length,\n              })\n            }\n          />\n        )}\n      </div>\n    );\n  }\n}\n```\n\nPlay with the code on the [example on CodeSandbox](https://codesandbox.io/s/l9n3vnz8yz)\n\n## Options\n\n| Property                        |  Type  | Description                                                                                                                                                   |\n| :------------------------------ | :----: | :------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| mainSrc<br/>_(required)_        | string | Main display image url                                                                                                                                        |\n| prevSrc                         | string | Previous display image url (displayed to the left). If left undefined, `onMovePrevRequest` will not be called, and the button not displayed                   |\n| nextSrc                         | string | Next display image url (displayed to the right). If left undefined, `onMoveNextRequest` will not be called, and the button not displayed                      |\n| mainSrcThumbnail                | string | Thumbnail image url corresponding to `props.mainSrc`. Displayed as a placeholder while the full-sized image loads.                                            |\n| prevSrcThumbnail                | string | Thumbnail image url corresponding to `props.prevSrc`. Displayed as a placeholder while the full-sized image loads.                                            |\n| nextSrcThumbnail                | string | Thumbnail image url corresponding to `props.nextSrc`. Displayed as a placeholder while the full-sized image loads.                                            |\n| onCloseRequest<br/>_(required)_ |  func  | Close window event. Should change the parent state such that the lightbox is not rendered                                                                     |\n| onMovePrevRequest               |  func  | Move to previous image event. Should change the parent state such that `props.prevSrc` becomes `props.mainSrc`, `props.mainSrc` becomes `props.nextSrc`, etc. |\n| onMoveNextRequest               |  func  | Move to next image event. Should change the parent state such that `props.nextSrc` becomes `props.mainSrc`, `props.mainSrc` becomes `props.prevSrc`, etc.     |\n| onImageLoad                     |  func  | Called when an image loads.<div>`(imageSrc: string, srcType: string, image: object): void`</div>                                                              |\n| onImageLoadError                |  func  | Called when an image fails to load.<div>`(imageSrc: string, srcType: string, errorEvent: object): void`</div>                                                 |\n| imageLoadErrorMessage           |  node  | What is rendered in place of an image if it fails to load. Centered in the lightbox viewport. Defaults to the string `\"This image failed to load\"`.           |\n| onAfterOpen                     |  func  | Called after the modal has rendered.                                                                                                                          |\n| discourageDownloads             |  bool  | When `true`, enables download discouragement (preventing [right-click -> Save Image As...]). Defaults to `false`.                                             |\n| animationDisabled               |  bool  | When `true`, image sliding animations are disabled. Defaults to `false`.                                                                                      |\n| animationOnKeyInput             |  bool  | When `true`, sliding animations are enabled on actions performed with keyboard shortcuts. Defaults to `false`.                                                |\n| animationDuration               | number | Animation duration (ms). Defaults to `300`.                                                                                                                   |\n| keyRepeatLimit                  | number | Required interval of time (ms) between key actions (prevents excessively fast navigation of images). Defaults to `180`.                                       |\n| keyRepeatKeyupBonus             | number | Amount of time (ms) restored after each keyup (makes rapid key presses slightly faster than holding down the key to navigate images). Defaults to `40`.       |\n| imageTitle                      |  node  | Image title (Descriptive element above image)                                                                                                                 |\n| imageCaption                    |  node  | Image caption (Descriptive element below image)                                                                                                               |\n| imageCrossOrigin                | string | `crossorigin` attribute to append to `img` elements ([MDN documentation](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-crossorigin))     |\n| toolbarButtons                  | node[] | Array of custom toolbar buttons                                                                                                                               |\n| reactModalStyle                 | Object | Set `z-index` style, etc., for the parent react-modal ([react-modal style format](https://github.com/reactjs/react-modal#styles))                             |\n| reactModalProps                 | Object | Override props set on react-modal (https://github.com/reactjs/react-modal)                                                                                    |\n| imagePadding                    | number | Padding (px) between the edge of the window and the lightbox. Defaults to `10`.                                                                               |\n| clickOutsideToClose             |  bool  | When `true`, clicks outside of the image close the lightbox. Defaults to `true`.                                                                              |\n| enableZoom                      |  bool  | Set to `false` to disable zoom functionality and hide zoom buttons. Defaults to `true`.                                                                       |\n| wrapperClassName                | string | Class name which will be applied to root element after React Modal                                                                                            |\n| nextLabel                       | string | `aria-label` set on the 'Next' button. Defaults to `'Next image'`.                                                                                            |\n| prevLabel                       | string | `aria-label` set on the 'Previous' button. Defaults to `'Previous image'`.                                                                                    |\n| zoomInLabel                     | string | `aria-label` set on the 'Zoom In' button. Defaults to `'Zoom in'`.                                                                                            |\n| zoomOutLabel                    | string | `aria-label` set on the 'Zoom Out' button. Defaults to `'Zoom out'`.                                                                                          |\n| closeLabel                      | string | `aria-label` set on the 'Close Lightbox' button. Defaults to `'Close lightbox'`.                                                                              |\n\n## Browser Compatibility\n\n| Browser | Works? |\n| :------ | :----- |\n| Chrome  | Yes    |\n| Firefox | Yes    |\n| Safari  | Yes    |\n| IE 11   | Yes    |\n\n## Contributing\n\nAfter cloning the repository and running `npm install` inside, you can use the following commands to develop and build the project.\n\n```sh\n# Starts a webpack dev server that hosts a demo page with the lightbox.\n# It uses react-hot-loader so changes are reflected on save.\nnpm start\n\n# Lints the code with eslint and my custom rules.\nnpm run lint\n\n# Lints and builds the code, placing the result in the dist directory.\n# This build is necessary to reflect changes if you're\n#  `npm link`-ed to this repository from another local project.\nnpm run build\n```\n\nPull requests are welcome!\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/frontend-collective/react-image-lightbox.git"
  },
  "scripts": {
    "build": "rollup -c",
    "build:demo": "parcel build examples/cats/index.html --out-dir build --public-url ./",
    "clean": "rimraf dist style.css style.css.map",
    "clean:demo": "rimraf build",
    "deploy": "npm run build:demo && gh-pages -d build",
    "lint": "eslint .",
    "prepublishOnly": "npm run lint && npm run test && npm run build",
    "prettier": "prettier --write \"./**/*.{md,js,css}\" \"!./{build,dist}/**\" \"!./style.css*\"",
    "release": "standard-version",
    "start": "parcel examples/cats/index.html",
    "test": "jest",
    "test:watch": "jest --watchAll"
  },
  "typings": "index.d.ts",
  "version": "5.1.1"
}
