{"version":3,"sources":["webpack://WaveSurfer.[name]/webpack/universalModuleDefinition","webpack://WaveSurfer.[name]/webpack/bootstrap","webpack://WaveSurfer.[name]/./src/plugin/regions.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Region","params","ws","this","wavesurfer","wrapper","drawer","util","style","id","getId","start","Number","end","scrollWidth","getDuration","resize","undefined","Boolean","drag","isResizing","isDragging","loop","color","handleStyle","left","backgroundColor","right","data","attributes","maxLength","minLength","_onRedraw","updateRender","scroll","scrollParent","scrollSpeed","scrollThreshold","channelIdx","parseInt","regionHeight","marginTop","channelCount","backend","ac","destination","Math","floor","getHeight","bindInOut","render","on","fireEvent","element","removeChild","un","play","once","playLoop","regionEl","document","createElement","handleLeft","appendChild","handleRight","attrname","className","title","formatTime","setAttribute","position","zIndex","height","top","css","cursor","width","maxWidth","bindEvents","map","time","slice","join","pixelRatio","dur","getWidth","startLimited","endLimited","max","min","round","regionWidth","firedIn","firedOut","onProcess","addEventListener","e","preventDefault","stopPropagation","bindDragEvents","startTime","touchId","maxScroll","scrollDirection","wrapperRect","container","updated","onDown","duration","touches","length","targetTouches","identifier","regions","getRegionSnapToGridValue","handleEvent","clientWidth","getBoundingClientRect","target","tagName","toLowerCase","classList","contains","onUp","preventClick","onMove","oldTime","delta","onDrag","onResize","regionRect","x","clientX","edgeScroll","scrollLeft","requestAnimationFrame","body","removeEventListener","maxEnd","update","direction","RegionsPlugin","maxRegions","getOwnPropertyNames","Observer","forEach","_onBackendCreated","region","add","list","_onReady","dragSelection","enableDragSelection","keys","deferInit","staticProps","addRegion","options","initialisedPluginList","initPlugin","clearRegions","clear","disableDragSelection","instance","isReady","wouldExceedMaxRegions","remove","slop","pxMove","eventDown","eventUp","eventMove","startUpdate","endUpdate","getCurrentTime","cur","snapToGridInterval","offset","snapToGridOffset"],"mappings":"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","file":"wavesurfer.regions.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"regions\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"regions\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"regions\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"localhost:8080/dist/plugin/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","/**\n * (Single) Region plugin class\n *\n * Must be turned into an observer before instantiating. This is done in\n * `RegionsPlugin` (main plugin class).\n *\n * @extends {Observer}\n */\nclass Region {\n    constructor(params, ws) {\n        this.wavesurfer = ws;\n        this.wrapper = ws.drawer.wrapper;\n        this.util = ws.util;\n        this.style = this.util.style;\n\n        this.id = params.id == null ? ws.util.getId() : params.id;\n        this.start = Number(params.start) || 0;\n        this.end =\n            params.end == null\n                ? // small marker-like region\n                  this.start +\n                  (4 / this.wrapper.scrollWidth) * this.wavesurfer.getDuration()\n                : Number(params.end);\n        this.resize =\n            params.resize === undefined ? true : Boolean(params.resize);\n        this.drag = params.drag === undefined ? true : Boolean(params.drag);\n        // reflect resize and drag state of region for region-updated listener\n        this.isResizing = false;\n        this.isDragging = false;\n        this.loop = Boolean(params.loop);\n        this.color = params.color || 'rgba(0, 0, 0, 0.1)';\n        this.handleStyle = params.handleStyle || {\n            left: {\n                backgroundColor: 'rgba(0, 0, 0, 1)'\n            },\n            right: {\n                backgroundColor: 'rgba(0, 0, 0, 1)'\n            }\n        };\n        this.data = params.data || {};\n        this.attributes = params.attributes || {};\n\n        this.maxLength = params.maxLength;\n        this.minLength = params.minLength;\n        this._onRedraw = () => this.updateRender();\n\n        this.scroll = params.scroll !== false && ws.params.scrollParent;\n        this.scrollSpeed = params.scrollSpeed || 1;\n        this.scrollThreshold = params.scrollThreshold || 10;\n\n        // select channel ID to set region\n        let channelIdx =\n            params.channelIdx == null ? -1 : parseInt(params.channelIdx);\n        this.regionHeight = '100%';\n        this.marginTop = '0px';\n        let channelCount = this.wavesurfer.backend.ac.destination.channelCount;\n        if (channelIdx >= 0 && channelIdx < channelCount) {\n            this.regionHeight = Math.floor((1 / channelCount) * 100) + '%';\n            this.marginTop = this.wavesurfer.getHeight() * channelIdx + 'px';\n        }\n\n        this.bindInOut();\n        this.render();\n        this.wavesurfer.on('zoom', this._onRedraw);\n        this.wavesurfer.on('redraw', this._onRedraw);\n        this.wavesurfer.fireEvent('region-created', this);\n    }\n\n    /* Update region params. */\n    update(params) {\n        if (params.start != null) {\n            this.start = Number(params.start);\n        }\n        if (params.end != null) {\n            this.end = Number(params.end);\n        }\n        if (params.loop != null) {\n            this.loop = Boolean(params.loop);\n        }\n        if (params.color != null) {\n            this.color = params.color;\n        }\n        if (params.handleStyle != null) {\n            this.handleStyle = params.handleStyle;\n        }\n        if (params.data != null) {\n            this.data = params.data;\n        }\n        if (params.resize != null) {\n            this.resize = Boolean(params.resize);\n        }\n        if (params.drag != null) {\n            this.drag = Boolean(params.drag);\n        }\n        if (params.maxLength != null) {\n            this.maxLength = Number(params.maxLength);\n        }\n        if (params.minLength != null) {\n            this.minLength = Number(params.minLength);\n        }\n        if (params.attributes != null) {\n            this.attributes = params.attributes;\n        }\n\n        this.updateRender();\n        this.fireEvent('update');\n        this.wavesurfer.fireEvent('region-updated', this);\n    }\n\n    /* Remove a single region. */\n    remove() {\n        if (this.element) {\n            this.wrapper.removeChild(this.element);\n            this.element = null;\n            this.fireEvent('remove');\n            this.wavesurfer.un('zoom', this._onRedraw);\n            this.wavesurfer.un('redraw', this._onRedraw);\n            this.wavesurfer.fireEvent('region-removed', this);\n        }\n    }\n\n    /**\n     * Play the audio region.\n     * @param {number} start Optional offset to start playing at\n     */\n    play(start) {\n        const s = start || this.start;\n        this.wavesurfer.play(s, this.end);\n        this.fireEvent('play');\n        this.wavesurfer.fireEvent('region-play', this);\n    }\n\n    /**\n     * Play the audio region in a loop.\n     * @param {number} start Optional offset to start playing at\n     * */\n    playLoop(start) {\n        this.play(start);\n        this.once('out', () => this.playLoop());\n    }\n\n    /* Render a region as a DOM element. */\n    render() {\n        const regionEl = document.createElement('region');\n        const handleLeft = regionEl.appendChild(\n            document.createElement('handle')\n        );\n        const handleRight = regionEl.appendChild(\n            document.createElement('handle')\n        );\n\n        regionEl.className = 'wavesurfer-region';\n        regionEl.title = this.formatTime(this.start, this.end);\n        regionEl.setAttribute('data-id', this.id);\n\n        for (const attrname in this.attributes) {\n            regionEl.setAttribute(\n                'data-region-' + attrname,\n                this.attributes[attrname]\n            );\n        }\n\n        this.style(regionEl, {\n            position: 'absolute',\n            zIndex: 2,\n            height: this.regionHeight,\n            top: this.marginTop\n        });\n\n        /* Allows the user to set the handlecolor dynamically, both handle colors must be set */\n        if (!this.handleStyle.left) {\n            handleLeft.style.backgroundColor = 'rgba(0, 0, 0, 1)';\n        } else {\n            handleLeft.style.backgroundColor = this.handleStyle.left.backgroundColor;\n        }\n\n        if (!this.handleStyle.right) {\n            handleRight.style.backgroundColor = 'rgba(0, 0, 0, 1)';\n        } else {\n            handleRight.style.backgroundColor = this.handleStyle.right.backgroundColor;\n        }\n\n        /* Resize handles */\n        if (this.resize) {\n            handleLeft.className = 'wavesurfer-handle wavesurfer-handle-start';\n            handleRight.className = 'wavesurfer-handle wavesurfer-handle-end';\n            const css = {\n                cursor: 'col-resize',\n                position: 'absolute',\n                top: this.marginTop,\n                width: '1%',\n                maxWidth: '4px',\n                height: this.regionHeight\n            };\n            this.style(handleLeft, css);\n            this.style(handleLeft, {\n                left: '0px'\n            });\n            this.style(handleRight, css);\n            this.style(handleRight, {\n                right: '0px'\n            });\n        }\n\n        this.element = this.wrapper.appendChild(regionEl);\n        this.updateRender();\n        this.bindEvents(regionEl);\n    }\n\n    formatTime(start, end) {\n        return (start == end ? [start] : [start, end])\n            .map(time =>\n                [\n                    Math.floor((time % 3600) / 60), // minutes\n                    ('00' + Math.floor(time % 60)).slice(-2) // seconds\n                ].join(':')\n            )\n            .join('-');\n    }\n\n    getWidth() {\n        return this.wavesurfer.drawer.width / this.wavesurfer.params.pixelRatio;\n    }\n\n    /* Update element's position, width, color. */\n    updateRender() {\n        // duration varies during loading process, so don't overwrite important data\n        const dur = this.wavesurfer.getDuration();\n        const width = this.getWidth();\n\n        var startLimited = this.start;\n        var endLimited = this.end;\n        if (startLimited < 0) {\n            startLimited = 0;\n            endLimited = endLimited - startLimited;\n        }\n        if (endLimited > dur) {\n            endLimited = dur;\n            startLimited = dur - (endLimited - startLimited);\n        }\n\n        if (this.minLength != null) {\n            endLimited = Math.max(startLimited + this.minLength, endLimited);\n        }\n\n        if (this.maxLength != null) {\n            endLimited = Math.min(startLimited + this.maxLength, endLimited);\n        }\n\n        if (this.element != null) {\n            // Calculate the left and width values of the region such that\n            // no gaps appear between regions.\n            const left = Math.round((startLimited / dur) * width);\n            const regionWidth = Math.round((endLimited / dur) * width) - left;\n\n            this.style(this.element, {\n                left: left + 'px',\n                width: regionWidth + 'px',\n                backgroundColor: this.color,\n                cursor: this.drag ? 'move' : 'default'\n            });\n\n            for (const attrname in this.attributes) {\n                this.element.setAttribute(\n                    'data-region-' + attrname,\n                    this.attributes[attrname]\n                );\n            }\n\n            this.element.title = this.formatTime(this.start, this.end);\n        }\n    }\n\n    /* Bind audio events. */\n    bindInOut() {\n        this.firedIn = false;\n        this.firedOut = false;\n\n        const onProcess = time => {\n            let start = Math.round(this.start * 10) / 10;\n            let end = Math.round(this.end * 10) / 10;\n            time = Math.round(time * 10) / 10;\n\n            if (\n                !this.firedOut &&\n                this.firedIn &&\n                (start > time || end <= time)\n            ) {\n                this.firedOut = true;\n                this.firedIn = false;\n                this.fireEvent('out');\n                this.wavesurfer.fireEvent('region-out', this);\n            }\n            if (!this.firedIn && start <= time && end > time) {\n                this.firedIn = true;\n                this.firedOut = false;\n                this.fireEvent('in');\n                this.wavesurfer.fireEvent('region-in', this);\n            }\n        };\n\n        this.wavesurfer.backend.on('audioprocess', onProcess);\n\n        this.on('remove', () => {\n            this.wavesurfer.backend.un('audioprocess', onProcess);\n        });\n\n        /* Loop playback. */\n        this.on('out', () => {\n            if (this.loop) {\n                this.wavesurfer.play(this.start);\n            }\n        });\n    }\n\n    /* Bind DOM events. */\n    bindEvents() {\n        this.element.addEventListener('mouseenter', e => {\n            this.fireEvent('mouseenter', e);\n            this.wavesurfer.fireEvent('region-mouseenter', this, e);\n        });\n\n        this.element.addEventListener('mouseleave', e => {\n            this.fireEvent('mouseleave', e);\n            this.wavesurfer.fireEvent('region-mouseleave', this, e);\n        });\n\n        this.element.addEventListener('click', e => {\n            e.preventDefault();\n            this.fireEvent('click', e);\n            this.wavesurfer.fireEvent('region-click', this, e);\n        });\n\n        this.element.addEventListener('dblclick', e => {\n            e.stopPropagation();\n            e.preventDefault();\n            this.fireEvent('dblclick', e);\n            this.wavesurfer.fireEvent('region-dblclick', this, e);\n        });\n\n        /* Drag or resize on mousemove. */\n        if (this.drag || this.resize) {\n            this.bindDragEvents();\n        }\n    }\n\n    bindDragEvents() {\n        const container = this.wavesurfer.drawer.container;\n        const scrollSpeed = this.scrollSpeed;\n        const scrollThreshold = this.scrollThreshold;\n        let startTime;\n        let touchId;\n        let drag;\n        let maxScroll;\n        let resize;\n        let updated = false;\n        let scrollDirection;\n        let wrapperRect;\n\n        // Scroll when the user is dragging within the threshold\n        const edgeScroll = e => {\n            const duration = this.wavesurfer.getDuration();\n            if (!scrollDirection || (!drag && !resize)) {\n                return;\n            }\n\n            // Update scroll position\n            let scrollLeft =\n                this.wrapper.scrollLeft + scrollSpeed * scrollDirection;\n            this.wrapper.scrollLeft = scrollLeft = Math.min(\n                maxScroll,\n                Math.max(0, scrollLeft)\n            );\n\n            // Get the currently selected time according to the mouse position\n            const time = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                this.wavesurfer.drawer.handleEvent(e) * duration\n            );\n            const delta = time - startTime;\n            startTime = time;\n\n            // Continue dragging or resizing\n            drag ? this.onDrag(delta) : this.onResize(delta, resize);\n\n            // Repeat\n            window.requestAnimationFrame(() => {\n                edgeScroll(e);\n            });\n        };\n\n        const onDown = e => {\n            const duration = this.wavesurfer.getDuration();\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n            touchId = e.targetTouches ? e.targetTouches[0].identifier : null;\n\n            // stop the event propagation, if this region is resizable or draggable\n            // and the event is therefore handled here.\n            if (this.drag || this.resize) {\n                e.stopPropagation();\n            }\n\n            // Store the selected startTime we begun dragging or resizing\n            startTime = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                this.wavesurfer.drawer.handleEvent(e, true) * duration\n            );\n\n            // Store for scroll calculations\n            maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n            wrapperRect = this.wrapper.getBoundingClientRect();\n\n            this.isResizing = false;\n            this.isDragging = false;\n            if (e.target.tagName.toLowerCase() === 'handle') {\n                this.isResizing = true;\n                resize = e.target.classList.contains('wavesurfer-handle-start')\n                    ? 'start'\n                    : 'end';\n            } else {\n                this.isDragging = true;\n                drag = true;\n                resize = false;\n            }\n        };\n        const onUp = e => {\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n\n            if (drag || resize) {\n                this.isDragging = false;\n                this.isResizing = false;\n                drag = false;\n                scrollDirection = null;\n                resize = false;\n            }\n\n            if (updated) {\n                updated = false;\n                this.util.preventClick();\n                this.fireEvent('update-end', e);\n                this.wavesurfer.fireEvent('region-update-end', this, e);\n            }\n        };\n        const onMove = e => {\n            const duration = this.wavesurfer.getDuration();\n\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n            if (e.targetTouches && e.targetTouches[0].identifier != touchId) {\n                return;\n            }\n            if (!drag && !resize) {\n                return;\n            }\n\n            const oldTime = startTime;\n            const time = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                this.wavesurfer.drawer.handleEvent(e) * duration\n            );\n\n            const delta = time - startTime;\n            startTime = time;\n\n            // Drag\n            if (this.drag && drag) {\n                updated = updated || !!delta;\n                this.onDrag(delta);\n            }\n\n            // Resize\n            if (this.resize && resize) {\n                updated = updated || !!delta;\n                this.onResize(delta, resize);\n            }\n\n            if (\n                this.scroll &&\n                container.clientWidth < this.wrapper.scrollWidth\n            ) {\n                if (drag) {\n                    // The threshold is not between the mouse and the container edge\n                    // but is between the region and the container edge\n                    const regionRect = this.element.getBoundingClientRect();\n                    let x = regionRect.left - wrapperRect.left;\n\n                    // Check direction\n                    if (time < oldTime && x >= 0) {\n                        scrollDirection = -1;\n                    } else if (\n                        time > oldTime &&\n                        x + regionRect.width <= wrapperRect.right\n                    ) {\n                        scrollDirection = 1;\n                    }\n\n                    // Check that we are still beyond the threshold\n                    if (\n                        (scrollDirection === -1 && x > scrollThreshold) ||\n                        (scrollDirection === 1 &&\n                            x + regionRect.width <\n                                wrapperRect.right - scrollThreshold)\n                    ) {\n                        scrollDirection = null;\n                    }\n                } else {\n                    // Mouse based threshold\n                    let x = e.clientX - wrapperRect.left;\n\n                    // Check direction\n                    if (x <= scrollThreshold) {\n                        scrollDirection = -1;\n                    } else if (x >= wrapperRect.right - scrollThreshold) {\n                        scrollDirection = 1;\n                    } else {\n                        scrollDirection = null;\n                    }\n                }\n\n                if (scrollDirection) {\n                    edgeScroll(e);\n                }\n            }\n        };\n\n        this.element.addEventListener('mousedown', onDown);\n        this.element.addEventListener('touchstart', onDown);\n\n        this.wrapper.addEventListener('mousemove', onMove);\n        this.wrapper.addEventListener('touchmove', onMove);\n\n        document.body.addEventListener('mouseup', onUp);\n        document.body.addEventListener('touchend', onUp);\n\n        this.on('remove', () => {\n            document.body.removeEventListener('mouseup', onUp);\n            document.body.removeEventListener('touchend', onUp);\n            this.wrapper.removeEventListener('mousemove', onMove);\n            this.wrapper.removeEventListener('touchmove', onMove);\n        });\n\n        this.wavesurfer.on('destroy', () => {\n            document.body.removeEventListener('mouseup', onUp);\n            document.body.removeEventListener('touchend', onUp);\n        });\n    }\n\n    onDrag(delta) {\n        const maxEnd = this.wavesurfer.getDuration();\n        if (this.end + delta > maxEnd || this.start + delta < 0) {\n            return;\n        }\n\n        this.update({\n            start: this.start + delta,\n            end: this.end + delta\n        });\n    }\n\n    onResize(delta, direction) {\n        if (direction === 'start') {\n            this.update({\n                start: Math.min(this.start + delta, this.end),\n                end: Math.max(this.start + delta, this.end)\n            });\n        } else {\n            this.update({\n                start: Math.min(this.end + delta, this.start),\n                end: Math.max(this.end + delta, this.start)\n            });\n        }\n    }\n}\n\n/**\n * @typedef {Object} RegionsPluginParams\n * @property {?boolean} dragSelection Enable creating regions by dragging with\n * the mouse\n * @property {?RegionParams[]} regions Regions that should be added upon\n * initialisation\n * @property {number} slop=2 The sensitivity of the mouse dragging\n * @property {?number} snapToGridInterval Snap the regions to a grid of the specified multiples in seconds\n * @property {?number} snapToGridOffset Shift the snap-to-grid by the specified seconds. May also be negative.\n * @property {?boolean} deferInit Set to true to manually call\n * @property {number[]} maxRegions Maximum number of regions that may be created by the user at one time.\n * `initPlugin('regions')`\n */\n\n/**\n * @typedef {Object} RegionParams\n * @desc The parameters used to describe a region.\n * @example wavesurfer.addRegion(regionParams);\n * @property {string} id=→random The id of the region\n * @property {number} start=0 The start position of the region (in seconds).\n * @property {number} end=0 The end position of the region (in seconds).\n * @property {?boolean} loop Whether to loop the region when played back.\n * @property {boolean} drag=true Allow/disallow dragging the region.\n * @property {boolean} resize=true Allow/disallow resizing the region.\n * @property {string} [color='rgba(0, 0, 0, 0.1)'] HTML color code.\n * @property {?number} channelIdx Select channel to draw the region on (if there are multiple channel waveforms).\n */\n\n/**\n * Regions are visual overlays on waveform that can be used to play and loop\n * portions of audio. Regions can be dragged and resized.\n *\n * Visual customization is possible via CSS (using the selectors\n * `.wavesurfer-region` and `.wavesurfer-handle`).\n *\n * @implements {PluginClass}\n * @extends {Observer}\n *\n * @example\n * // es6\n * import RegionsPlugin from 'wavesurfer.regions.js';\n *\n * // commonjs\n * var RegionsPlugin = require('wavesurfer.regions.js');\n *\n * // if you are using <script> tags\n * var RegionsPlugin = window.WaveSurfer.regions;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     RegionsPlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\nexport default class RegionsPlugin {\n    /**\n     * Regions plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param {RegionsPluginParams} params parameters use to initialise the plugin\n     * @return {PluginDefinition} an object representing the plugin\n     */\n    static create(params) {\n        return {\n            name: 'regions',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            staticProps: {\n                addRegion(options) {\n                    if (!this.initialisedPluginList.regions) {\n                        this.initPlugin('regions');\n                    }\n                    return this.regions.add(options);\n                },\n\n                clearRegions() {\n                    this.regions && this.regions.clear();\n                },\n\n                enableDragSelection(options) {\n                    if (!this.initialisedPluginList.regions) {\n                        this.initPlugin('regions');\n                    }\n                    this.regions.enableDragSelection(options);\n                },\n\n                disableDragSelection() {\n                    this.regions.disableDragSelection();\n                }\n            },\n            instance: RegionsPlugin\n        };\n    }\n\n    constructor(params, ws) {\n        this.params = params;\n        this.wavesurfer = ws;\n        this.util = {\n            ...ws.util,\n            getRegionSnapToGridValue: value => {\n                return this.getRegionSnapToGridValue(value, params);\n            }\n        };\n        this.maxRegions = params.maxRegions;\n\n        // turn the plugin instance into an observer\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\n            this.util.Observer.prototype\n        );\n        observerPrototypeKeys.forEach(key => {\n            Region.prototype[key] = this.util.Observer.prototype[key];\n        });\n        this.wavesurfer.Region = Region;\n\n        this._onBackendCreated = () => {\n            this.wrapper = this.wavesurfer.drawer.wrapper;\n            if (this.params.regions) {\n                this.params.regions.forEach(region => {\n                    this.add(region);\n                });\n            }\n        };\n\n        // Id-based hash of regions\n        this.list = {};\n        this._onReady = () => {\n            this.wrapper = this.wavesurfer.drawer.wrapper;\n            if (this.params.dragSelection) {\n                this.enableDragSelection(this.params);\n            }\n            Object.keys(this.list).forEach(id => {\n                this.list[id].updateRender();\n            });\n        };\n    }\n\n    init() {\n        // Check if ws is ready\n        if (this.wavesurfer.isReady) {\n            this._onBackendCreated();\n            this._onReady();\n        } else {\n            this.wavesurfer.once('ready', this._onReady);\n            this.wavesurfer.once('backend-created', this._onBackendCreated);\n        }\n    }\n\n    destroy() {\n        this.wavesurfer.un('ready', this._onReady);\n        this.wavesurfer.un('backend-created', this._onBackendCreated);\n        this.disableDragSelection();\n        this.clear();\n    }\n\n    /**\n     * check to see if adding a new region would exceed maxRegions\n     * @return {boolean} whether we should proceed and create a region\n     * @private\n     */\n    wouldExceedMaxRegions() {\n        return (\n            this.maxRegions && Object.keys(this.list).length >= this.maxRegions\n        );\n    }\n\n    /**\n     * Add a region\n     *\n     * @param {object} params Region parameters\n     * @return {Region} The created region\n     */\n    add(params) {\n        if (this.wouldExceedMaxRegions()) return null;\n\n        const region = new this.wavesurfer.Region(params, this.wavesurfer);\n\n        this.list[region.id] = region;\n\n        region.on('remove', () => {\n            delete this.list[region.id];\n        });\n\n        return region;\n    }\n\n    /**\n     * Remove all regions\n     */\n    clear() {\n        Object.keys(this.list).forEach(id => {\n            this.list[id].remove();\n        });\n    }\n\n    enableDragSelection(params) {\n        this.disableDragSelection();\n\n        const slop = params.slop || 2;\n        const container = this.wavesurfer.drawer.container;\n        const scroll =\n            params.scroll !== false && this.wavesurfer.params.scrollParent;\n        const scrollSpeed = params.scrollSpeed || 1;\n        const scrollThreshold = params.scrollThreshold || 10;\n        let drag;\n        let duration = this.wavesurfer.getDuration();\n        let maxScroll;\n        let start;\n        let region;\n        let touchId;\n        let pxMove = 0;\n        let scrollDirection;\n        let wrapperRect;\n\n        // Scroll when the user is dragging within the threshold\n        const edgeScroll = e => {\n            if (!region || !scrollDirection) {\n                return;\n            }\n\n            // Update scroll position\n            let scrollLeft =\n                this.wrapper.scrollLeft + scrollSpeed * scrollDirection;\n            this.wrapper.scrollLeft = scrollLeft = Math.min(\n                maxScroll,\n                Math.max(0, scrollLeft)\n            );\n\n            // Update range\n            const end = this.wavesurfer.drawer.handleEvent(e);\n            region.update({\n                start: Math.min(end * duration, start * duration),\n                end: Math.max(end * duration, start * duration)\n            });\n\n            // Check that there is more to scroll and repeat\n            if (scrollLeft < maxScroll && scrollLeft > 0) {\n                window.requestAnimationFrame(() => {\n                    edgeScroll(e);\n                });\n            }\n        };\n\n        const eventDown = e => {\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n            duration = this.wavesurfer.getDuration();\n            touchId = e.targetTouches ? e.targetTouches[0].identifier : null;\n\n            // Store for scroll calculations\n            maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n            wrapperRect = this.wrapper.getBoundingClientRect();\n\n            drag = true;\n            start = this.wavesurfer.drawer.handleEvent(e, true);\n            region = null;\n            scrollDirection = null;\n        };\n        this.wrapper.addEventListener('mousedown', eventDown);\n        this.wrapper.addEventListener('touchstart', eventDown);\n        this.on('disable-drag-selection', () => {\n            this.wrapper.removeEventListener('touchstart', eventDown);\n            this.wrapper.removeEventListener('mousedown', eventDown);\n        });\n\n        const eventUp = e => {\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n\n            drag = false;\n            pxMove = 0;\n            scrollDirection = null;\n\n            if (region) {\n                this.util.preventClick();\n                region.fireEvent('update-end', e);\n                this.wavesurfer.fireEvent('region-update-end', region, e);\n            }\n\n            region = null;\n        };\n        this.wrapper.addEventListener('mouseup', eventUp);\n        this.wrapper.addEventListener('touchend', eventUp);\n\n        document.body.addEventListener('mouseup', eventUp);\n        document.body.addEventListener('touchend', eventUp);\n        this.on('disable-drag-selection', () => {\n            document.body.removeEventListener('mouseup', eventUp);\n            document.body.removeEventListener('touchend', eventUp);\n            this.wrapper.removeEventListener('touchend', eventUp);\n            this.wrapper.removeEventListener('mouseup', eventUp);\n        });\n\n        const eventMove = e => {\n            if (!drag) {\n                return;\n            }\n            if (++pxMove <= slop) {\n                return;\n            }\n\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n            if (e.targetTouches && e.targetTouches[0].identifier != touchId) {\n                return;\n            }\n\n            // auto-create a region during mouse drag, unless region-count would exceed \"maxRegions\"\n            if (!region) {\n                region = this.add(params || {});\n                if (!region) return;\n            }\n\n            const end = this.wavesurfer.drawer.handleEvent(e);\n            const startUpdate = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                start * duration\n            );\n            const endUpdate = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                end * duration\n            );\n            region.update({\n                start: Math.min(endUpdate, startUpdate),\n                end: Math.max(endUpdate, startUpdate)\n            });\n\n            // If scrolling is enabled\n            if (scroll && container.clientWidth < this.wrapper.scrollWidth) {\n                // Check threshold based on mouse\n                const x = e.clientX - wrapperRect.left;\n                if (x <= scrollThreshold) {\n                    scrollDirection = -1;\n                } else if (x >= wrapperRect.right - scrollThreshold) {\n                    scrollDirection = 1;\n                } else {\n                    scrollDirection = null;\n                }\n                scrollDirection && edgeScroll(e);\n            }\n        };\n        this.wrapper.addEventListener('mousemove', eventMove);\n        this.wrapper.addEventListener('touchmove', eventMove);\n        this.on('disable-drag-selection', () => {\n            this.wrapper.removeEventListener('touchmove', eventMove);\n            this.wrapper.removeEventListener('mousemove', eventMove);\n        });\n    }\n\n    disableDragSelection() {\n        this.fireEvent('disable-drag-selection');\n    }\n\n    /**\n     * Get current region\n     *\n     * The smallest region that contains the current time. If several such\n     * regions exist, take the first. Return `null` if none exist.\n     *\n     * @returns {Region} The current region\n     */\n    getCurrentRegion() {\n        const time = this.wavesurfer.getCurrentTime();\n        let min = null;\n        Object.keys(this.list).forEach(id => {\n            const cur = this.list[id];\n            if (cur.start <= time && cur.end >= time) {\n                if (!min || cur.end - cur.start < min.end - min.start) {\n                    min = cur;\n                }\n            }\n        });\n\n        return min;\n    }\n\n    /**\n     * Match the value to the grid, if required\n     *\n     * If the regions plugin params have a snapToGridInterval set, return the\n     * value matching the nearest grid interval. If no snapToGridInterval is set,\n     * the passed value will be returned without modification.\n     *\n     * @param {number} value the value to snap to the grid, if needed\n     * @param {Object} params the regions plugin params\n     * @returns {number} value\n     */\n    getRegionSnapToGridValue(value, params) {\n        if (params.snapToGridInterval) {\n            // the regions should snap to a grid\n            const offset = params.snapToGridOffset || 0;\n            return (\n                Math.round((value - offset) / params.snapToGridInterval) *\n                    params.snapToGridInterval +\n                offset\n            );\n        }\n\n        // no snap-to-grid\n        return value;\n    }\n}\n"],"sourceRoot":""}