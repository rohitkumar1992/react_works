{"ast":null,"code":"var _jsxFileName = \"/var/www/html/REACT_WORK/playflix/src/container/seasons/seasons.js\";\nimport React from 'react';\nimport OwlCarousel from 'react-owl-carousel';\nimport 'owl.carousel/dist/assets/owl.carousel.css';\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Loader from '../../component/loader/home_loading';\nimport Content_Loader from '../../component/loader/loader';\nimport Horizontal_Banner from '../../component/horizontal_banner/horizontal_banner';\nimport Duration from '../../component/duration';\nimport { SEASON_DATA, COUNTRYCODE, PARTNER_ID, USERID } from '../../url';\nimport Authenticator from '../Authentication/Authentication';\n\nclass Seasons extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      seasonData: [],\n      isLoading: false,\n      cat_id: ''\n    };\n\n    this.getData = async () => {\n      var formData = new FormData();\n      formData.append('userid', USERID);\n      formData.append('countrycode', COUNTRYCODE);\n      formData.append('partnerid', PARTNER_ID);\n      formData.append('limit', 8);\n      formData.append('page', 0);\n      formData.append('categoryid', this.state.cat_id);\n      let response = await axios.post(SEASON_DATA, formData, {\n        headers: {\n          'token': localStorage.getItem('token')\n        }\n      });\n\n      if (response.status == 200) {\n        var result = response.data; //console.log(result.series_subdata);\n\n        this.setState({\n          seasonData: result.series_subdata,\n          isLoading: true\n        });\n        setTimeout(() => this.setState({\n          isLoading: true\n        }), 1000);\n      } else {}\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      cat_id: this.props.match.params.season_id\n    }, function () {\n      this.getData();\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.state.cat_id != this.props.match.params.season_id) {\n      this.setState({\n        cat_id: this.props.match.params.season_id,\n        isLoading: false\n      }, function () {\n        this.getData();\n      });\n    }\n  }\n\n  render() {\n    const seasonData = this.state.seasonData; // const SeasonData=(seasonData.length>0?<div>{seasonData.map((result,key)=>{\n    //       return(<Horizontal_Banner result={result} uniqId=\"season_list\"/>)\n    //     })}</div>:<div><center><h4>No Result Found</h4></center></div>)\n\n    if (this.state.isLoading) {\n      return React.createElement(\"div\", {\n        class: \"inner_wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, seasonData.length > 0 ? seasonData.map((result, key) => {\n        if (result.search_tag.length > 0) {\n          return React.createElement(Horizontal_Banner, {\n            result: result,\n            uniqId: \"season_list\",\n            route_name: \"Home\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          });\n        }\n      }) : React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"No Result Found\"))));\n    } else {\n      return React.createElement(Content_Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default Authenticator(Seasons);\n{\n  /*<section class=\"inner_banner\">\n   <div class=\"item\">\n     <img src=\"images/home_banner1.jpg\" alt=\"\" />\n     <div class=\"caption\">\n       <div class=\"container\">\n         <div class=\"b_title\">\n              <h2>The Crown (season 1)</h2>\n             <p><span></span>Examples might be simplified to improve reading and basic understanding. Tutorials, references, and examples are constantly reviewed to avoid errors, but we cannot warrant full correctness of all content. While using this site, you agree to have read and accepted our terms of use,</p>\n         </div>\n       </div>\n     </div>\n   </div>\n  </section>*/\n}","map":{"version":3,"sources":["/var/www/html/REACT_WORK/playflix/src/container/seasons/seasons.js"],"names":["React","OwlCarousel","axios","Link","Loader","Content_Loader","Horizontal_Banner","Duration","SEASON_DATA","COUNTRYCODE","PARTNER_ID","USERID","Authenticator","Seasons","Component","state","seasonData","isLoading","cat_id","getData","formData","FormData","append","response","post","headers","localStorage","getItem","status","result","data","setState","series_subdata","setTimeout","componentDidMount","props","match","params","season_id","componentDidUpdate","render","length","map","key","search_tag"],"mappings":"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","sourcesContent":["import React from 'react'\nimport OwlCarousel from 'react-owl-carousel';\nimport 'owl.carousel/dist/assets/owl.carousel.css';\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom'\nimport Loader from '../../component/loader/home_loading';\nimport Content_Loader from '../../component/loader/loader';\nimport Horizontal_Banner from '../../component/horizontal_banner/horizontal_banner';\nimport Duration from '../../component/duration'\nimport {SEASON_DATA,COUNTRYCODE,PARTNER_ID,USERID} from '../../url';\nimport Authenticator from '../Authentication/Authentication'\nclass Seasons extends React.Component{\n    state={seasonData:[],isLoading:false,cat_id:''}\n    componentDidMount()\n    {\n      this.setState({cat_id:this.props.match.params.season_id},function(){\n        this.getData();\n      })\n    }\n     getData=async()=>{\n      var formData=new FormData();\n      formData.append('userid',USERID);\n      formData.append('countrycode',COUNTRYCODE);\n      formData.append('partnerid',PARTNER_ID);\n      formData.append('limit',8);\n      formData.append('page',0);\n      formData.append('categoryid',this.state.cat_id);\n      let response=await axios.post(SEASON_DATA,formData,{headers:{'token':localStorage.getItem('token')}})\n        if(response.status==200)\n        {\n            var result=response.data;\n            //console.log(result.series_subdata);\n            this.setState({seasonData:result.series_subdata,isLoading:true})\n            setTimeout(()=>this.setState({isLoading:true}),1000)\n        }\n      else {\n\n      }\n    }\n    componentDidUpdate()\n    {\n      if(this.state.cat_id!=this.props.match.params.season_id)\n      {\n        this.setState({cat_id:this.props.match.params.season_id,isLoading:false},function(){\n            this.getData();\n        })\n      }\n    }\n  render()\n  {\n    const {seasonData}=this.state\n    // const SeasonData=(seasonData.length>0?<div>{seasonData.map((result,key)=>{\n    //       return(<Horizontal_Banner result={result} uniqId=\"season_list\"/>)\n    //     })}</div>:<div><center><h4>No Result Found</h4></center></div>)\n        if(this.state.isLoading)\n        {\n    return(\n      <div class=\"inner_wrap\">\n        <div class=\"container\">\n      {seasonData.length>0?seasonData.map((result,key)=>{\n        if(result.search_tag.length>0)\n        {\n            return(<Horizontal_Banner result={result} uniqId=\"season_list\" route_name=\"Home\"/>)\n        }  }):<center><h4>No Result Found</h4></center>}\n      </div>\n      </div>\n    )\n  }\n  else {\n    return(<Content_Loader />)\n  }\n}\n}\nexport default Authenticator(Seasons);\n{/*<section class=\"inner_banner\">\n  <div class=\"item\">\n    <img src=\"images/home_banner1.jpg\" alt=\"\" />\n    <div class=\"caption\">\n      <div class=\"container\">\n        <div class=\"b_title\">\n\n            <h2>The Crown (season 1)</h2>\n            <p><span></span>Examples might be simplified to improve reading and basic understanding. Tutorials, references, and examples are constantly reviewed to avoid errors, but we cannot warrant full correctness of all content. While using this site, you agree to have read and accepted our terms of use,</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>*/}\n"]},"metadata":{},"sourceType":"module"}