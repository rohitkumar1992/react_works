{"ast":null,"code":"var _jsxFileName = \"/var/www/html/REACT_WORK/NEW_PLANETSHARE_CMS/src/Container/Vendor/create_vendor.js\";\nimport React, { Component } from 'react';\nimport Authentication from '../Authentication/Authentication';\nimport { Link, Redirect } from \"react-router-dom\";\nimport { LOGIN, TAG, TOKEN, VENDORLIST, USERID, HEADER, CHANGE_STATUS } from '../../url.js';\nimport BreadCrumb from '../../Component/breadcrumb';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport { EditorState, convertToRaw, convertFromRaw } from 'draft-js';\nimport { stateToHTML } from 'draft-js-export-html';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport Loader from '../../Component/Loader/loader';\n\nclass VendorList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: false,\n      editorState: EditorState.createEmpty(),\n      contentState: {}\n    };\n\n    this.onEditorStateChange = editorState => {\n      this.setState({\n        editorState\n      });\n    };\n\n    this.onContentStateChange = contentState => {\n      this.setState({\n        contentState\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      var convertedData = convertToRaw(this.state.editorState.getCurrentContent());\n      console.log(convertedData.blocks);\n      this.setState({\n        editorState: EditorState.createEmpty()\n      });\n    };\n\n    this.convertCommentFromJSONToHTML = text => {\n      return stateToHTML(convertFromRaw(JSON.parse(text)));\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => this.setState({\n      isLoading: true\n    }), 1000);\n  }\n\n  render() {\n    console.log(convertToRaw(this.state.editorState.getCurrentContent()));\n    const isLoading = this.state.isLoading;\n\n    if (isLoading) {\n      return React.createElement(\"div\", {\n        id: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"content_area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(BreadCrumb, {\n        name: \"Create Vendor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Editor, {\n        editorState: this.state.editorState,\n        toolbarClassName: \"toolbarClassName\",\n        wrapperClassName: \"wrapperClassName\",\n        editorClassName: \"editorClassName\",\n        onEditorStateChange: this.onEditorStateChange,\n        onContentStateChange: this.onContentStateChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"comment-button-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleSubmit,\n        id: \"comment-submit-button\",\n        color: \"teal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Submit\")));\n    } else {\n      return React.createElement(\"div\", {\n        id: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default Authentication(VendorList);","map":{"version":3,"sources":["/var/www/html/REACT_WORK/NEW_PLANETSHARE_CMS/src/Container/Vendor/create_vendor.js"],"names":["React","Component","Authentication","Link","Redirect","LOGIN","TAG","TOKEN","VENDORLIST","USERID","HEADER","CHANGE_STATUS","BreadCrumb","axios","$","EditorState","convertToRaw","convertFromRaw","stateToHTML","Editor","Loader","VendorList","state","isLoading","editorState","createEmpty","contentState","onEditorStateChange","setState","onContentStateChange","handleSubmit","e","preventDefault","convertedData","getCurrentContent","console","log","blocks","convertCommentFromJSONToHTML","text","JSON","parse","componentDidMount","setTimeout","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Authentication from '../Authentication/Authentication';\nimport {Link,Redirect} from \"react-router-dom\";\nimport {LOGIN,TAG,TOKEN,VENDORLIST,USERID,HEADER,CHANGE_STATUS} from '../../url.js';\nimport BreadCrumb from '../../Component/breadcrumb';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport { EditorState,convertToRaw,convertFromRaw } from 'draft-js';\nimport {stateToHTML} from 'draft-js-export-html';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport Loader from '../../Component/Loader/loader'\nclass VendorList extends Component {\n  state={\n    isLoading:false,editorState:EditorState.createEmpty(),contentState: {}\n}\n  componentDidMount()\n  {\n    setTimeout(()=>this.setState({isLoading:true}),1000)\n  }\n  onEditorStateChange=(editorState) => {\n  this.setState({\n    editorState,\n  });\n};\nonContentStateChange: Function = (contentState) => {\n  this.setState({\n    contentState,\n  });\n};\nhandleSubmit = (e) => {\n   e.preventDefault()\n   var convertedData = convertToRaw(this.state.editorState.getCurrentContent())\nconsole.log(convertedData.blocks);\n   this.setState({editorState: EditorState.createEmpty()})\n }\nconvertCommentFromJSONToHTML = (text) => {\n      return stateToHTML(convertFromRaw(JSON.parse(text))) }\n  render() {\nconsole.log(convertToRaw(this.state.editorState.getCurrentContent()))\n    const {isLoading}=this.state;\n    if(isLoading)\n    {\n    return (\n      <div id=\"content\">\n        <div class=\"content_area\">\n          <BreadCrumb name=\"Create Vendor\"/>\n          <Editor\n        editorState={this.state.editorState}\n        toolbarClassName=\"toolbarClassName\"\n        wrapperClassName=\"wrapperClassName\"\n        editorClassName=\"editorClassName\"\n        onEditorStateChange={this.onEditorStateChange}\n        onContentStateChange={this.onContentStateChange}\n      />\n        </div>\n      {/*  <div dangerouslySetInnerHTML={{ __html: this.convertCommentFromJSONToHTML(this.state.editorState.getCurrentContent())}}>  </div>*/}\n      <div id=\"comment-button-div\">\n        <button onClick={this.handleSubmit} id=\"comment-submit-button\" color=\"teal\">Submit</button>\n      </div>\n      </div>\n    );\n  }\n else {\n   return(<div id=\"content\"><Loader/></div>);\n }\n  }\n}\n\nexport default Authentication(VendorList);\n"]},"metadata":{},"sourceType":"module"}