{"version":3,"sources":["../node_modules/laravel-echo/dist/echo.js","container/Request/transcoding_request.js"],"names":["echo_classCallCheck","instance","Constructor","TypeError","echo_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","_extends","assign","arguments","source","hasOwnProperty","call","echo_inherits","subClass","superClass","create","constructor","value","setPrototypeOf","__proto__","echo_possibleConstructorReturn","self","ReferenceError","Connector","options","this","_defaultOptions","auth","headers","authEndpoint","broadcaster","csrfToken","host","namespace","setOptions","connect","selector","window","document","querySelector","getAttribute","Channel","event","callback","listen","EventFormatter","setNamespace","charAt","substr","replace","PusherChannel","_Channel","pusher","name","_this","getPrototypeOf","eventFormatter","subscribe","subscription","unsubscribe","on","format","unbind","bind","PusherPrivateChannel","_PusherChannel","apply","eventName","data","channels","trigger","PusherPresenceChannel","keys","members","map","k","member","info","SocketIoChannel","socket","events","configureReconnector","emit","channel","removeListener","_this2","listener","_this3","push","_this4","forEach","SocketIoPrivateChannel","_SocketIoChannel","SocketIoPresenceChannel","_SocketIoPrivateChann","m","user_info","NullChannel","NullPrivateChannel","_NullChannel","NullPresenceChannel","PusherConnector","_Connector","client","Pusher","index","leaveChannel","connection","socket_id","disconnect","SocketIoConnector","io","getSocketIO","Error","id","NullConnector","Request","Echo","registerInterceptors","_channel","connector","presenceChannel","leave","privateChannel","socketId","Vue","http","registerVueRequestInterceptor","axios","registerAxiosRequestInterceptor","jQuery","registerjQueryAjaxSetup","interceptors","request","next","set","use","config","ajax","ajaxSetup","beforeSend","xhr","setRequestHeader","state","list","show","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","pageNumber","search","loader","statusMessage","status_change_loader","downloadVideo","video_id","title","url","TRANSCODE_VIDEO_DOWNLOAD","method","responseType","transcode_id","then","response","URL","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","click","handlePageChange","searchKeyword","email","localStorage","getItem","post","concat","TRANSCODE_ORDERS","request_coming_from","result","setTimeout","setState","current_page","per_page","total","catch","error","console","log","nextProps","host_url","thumbnail","react_default","a","src","style","width","height","status","payment_id","file_name","payment_status","textAlign","marginLeft","className","cursor","color","Action_action","tag","download_video","status_change","statuschange","TRANSCODE_ORDERS_STATUS","content","e","videolist","Link","to","class","preset","created_at","action","successalert","searchbar","placeholder","clicked","searchHandler","marginTop","scope","Pagination_default","onChange","itemClass","linkClass","Component","withRouter"],"mappings":"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","file":"static/js/11.23cd4587.chunk.js","sourcesContent":["var classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar Connector = function () {\n  /**\n   * Create a new class instance.\n   */\n  function Connector(options) {\n    classCallCheck(this, Connector);\n    /**\n     * Default connector options.\n     */\n\n    this._defaultOptions = {\n      auth: {\n        headers: {}\n      },\n      authEndpoint: '/broadcasting/auth',\n      broadcaster: 'pusher',\n      csrfToken: null,\n      host: null,\n      key: null,\n      namespace: 'App.Events'\n    };\n    this.setOptions(options);\n    this.connect();\n  }\n  /**\n   * Merge the custom options with the defaults.\n   */\n\n\n  createClass(Connector, [{\n    key: 'setOptions',\n    value: function setOptions(options) {\n      this.options = _extends(this._defaultOptions, options);\n\n      if (this.csrfToken()) {\n        this.options.auth.headers['X-CSRF-TOKEN'] = this.csrfToken();\n      }\n\n      return options;\n    }\n    /**\n     * Extract the CSRF token from the page.\n     */\n\n  }, {\n    key: 'csrfToken',\n    value: function csrfToken() {\n      var selector = void 0;\n\n      if (typeof window !== 'undefined' && window['Laravel'] && window['Laravel'].csrfToken) {\n        return window['Laravel'].csrfToken;\n      } else if (this.options.csrfToken) {\n        return this.options.csrfToken;\n      } else if (typeof document !== 'undefined' && (selector = document.querySelector('meta[name=\"csrf-token\"]'))) {\n        return selector.getAttribute('content');\n      }\n\n      return null;\n    }\n  }]);\n  return Connector;\n}();\n/**\n * This class represents a basic channel.\n */\n\n\nvar Channel = function () {\n  function Channel() {\n    classCallCheck(this, Channel);\n  }\n\n  createClass(Channel, [{\n    key: 'listenForWhisper',\n\n    /**\n     * Listen for a whisper event on the channel instance.\n     */\n    value: function listenForWhisper(event, callback) {\n      return this.listen('.client-' + event, callback);\n    }\n    /**\n     * Listen for an event on the channel instance.\n     */\n\n  }, {\n    key: 'notification',\n    value: function notification(callback) {\n      return this.listen('.Illuminate\\\\Notifications\\\\Events\\\\BroadcastNotificationCreated', callback);\n    }\n  }]);\n  return Channel;\n}();\n/**\n * Event name formatter\n */\n\n\nvar EventFormatter = function () {\n  /**\n   * Create a new class instance.\n   */\n  function EventFormatter(namespace) {\n    classCallCheck(this, EventFormatter);\n    this.setNamespace(namespace);\n  }\n  /**\n   * Format the given event name.\n   */\n\n\n  createClass(EventFormatter, [{\n    key: 'format',\n    value: function format(event) {\n      if (event.charAt(0) === '.' || event.charAt(0) === '\\\\') {\n        return event.substr(1);\n      } else if (this.namespace) {\n        event = this.namespace + '.' + event;\n      }\n\n      return event.replace(/\\./g, '\\\\');\n    }\n    /**\n     * Set the event namespace.\n     */\n\n  }, {\n    key: 'setNamespace',\n    value: function setNamespace(value) {\n      this.namespace = value;\n    }\n  }]);\n  return EventFormatter;\n}();\n/**\n * This class represents a Pusher channel.\n */\n\n\nvar PusherChannel = function (_Channel) {\n  inherits(PusherChannel, _Channel);\n  /**\n   * Create a new class instance.\n   */\n\n  function PusherChannel(pusher, name, options) {\n    classCallCheck(this, PusherChannel);\n\n    var _this = possibleConstructorReturn(this, (PusherChannel.__proto__ || Object.getPrototypeOf(PusherChannel)).call(this));\n\n    _this.name = name;\n    _this.pusher = pusher;\n    _this.options = options;\n    _this.eventFormatter = new EventFormatter(_this.options.namespace);\n\n    _this.subscribe();\n\n    return _this;\n  }\n  /**\n   * Subscribe to a Pusher channel.\n   */\n\n\n  createClass(PusherChannel, [{\n    key: 'subscribe',\n    value: function subscribe() {\n      this.subscription = this.pusher.subscribe(this.name);\n    }\n    /**\n     * Unsubscribe from a Pusher channel.\n     */\n\n  }, {\n    key: 'unsubscribe',\n    value: function unsubscribe() {\n      this.pusher.unsubscribe(this.name);\n    }\n    /**\n     * Listen for an event on the channel instance.\n     */\n\n  }, {\n    key: 'listen',\n    value: function listen(event, callback) {\n      this.on(this.eventFormatter.format(event), callback);\n      return this;\n    }\n    /**\n     * Stop listening for an event on the channel instance.\n     */\n\n  }, {\n    key: 'stopListening',\n    value: function stopListening(event) {\n      this.subscription.unbind(this.eventFormatter.format(event));\n      return this;\n    }\n    /**\n     * Bind a channel to an event.\n     */\n\n  }, {\n    key: 'on',\n    value: function on(event, callback) {\n      this.subscription.bind(event, callback);\n      return this;\n    }\n  }]);\n  return PusherChannel;\n}(Channel);\n/**\n * This class represents a Pusher private channel.\n */\n\n\nvar PusherPrivateChannel = function (_PusherChannel) {\n  inherits(PusherPrivateChannel, _PusherChannel);\n\n  function PusherPrivateChannel() {\n    classCallCheck(this, PusherPrivateChannel);\n    return possibleConstructorReturn(this, (PusherPrivateChannel.__proto__ || Object.getPrototypeOf(PusherPrivateChannel)).apply(this, arguments));\n  }\n\n  createClass(PusherPrivateChannel, [{\n    key: 'whisper',\n\n    /**\n     * Trigger client event on the channel.\n     */\n    value: function whisper(eventName, data) {\n      this.pusher.channels.channels[this.name].trigger('client-' + eventName, data);\n      return this;\n    }\n  }]);\n  return PusherPrivateChannel;\n}(PusherChannel);\n/**\n * This class represents a Pusher presence channel.\n */\n\n\nvar PusherPresenceChannel = function (_PusherChannel) {\n  inherits(PusherPresenceChannel, _PusherChannel);\n\n  function PusherPresenceChannel() {\n    classCallCheck(this, PusherPresenceChannel);\n    return possibleConstructorReturn(this, (PusherPresenceChannel.__proto__ || Object.getPrototypeOf(PusherPresenceChannel)).apply(this, arguments));\n  }\n\n  createClass(PusherPresenceChannel, [{\n    key: 'here',\n\n    /**\n     * Register a callback to be called anytime the member list changes.\n     */\n    value: function here(callback) {\n      this.on('pusher:subscription_succeeded', function (data) {\n        callback(Object.keys(data.members).map(function (k) {\n          return data.members[k];\n        }));\n      });\n      return this;\n    }\n    /**\n     * Listen for someone joining the channel.\n     */\n\n  }, {\n    key: 'joining',\n    value: function joining(callback) {\n      this.on('pusher:member_added', function (member) {\n        callback(member.info);\n      });\n      return this;\n    }\n    /**\n     * Listen for someone leaving the channel.\n     */\n\n  }, {\n    key: 'leaving',\n    value: function leaving(callback) {\n      this.on('pusher:member_removed', function (member) {\n        callback(member.info);\n      });\n      return this;\n    }\n    /**\n     * Trigger client event on the channel.\n     */\n\n  }, {\n    key: 'whisper',\n    value: function whisper(eventName, data) {\n      this.pusher.channels.channels[this.name].trigger('client-' + eventName, data);\n      return this;\n    }\n  }]);\n  return PusherPresenceChannel;\n}(PusherChannel);\n/**\n * This class represents a Socket.io channel.\n */\n\n\nvar SocketIoChannel = function (_Channel) {\n  inherits(SocketIoChannel, _Channel);\n  /**\n   * Create a new class instance.\n   */\n\n  function SocketIoChannel(socket, name, options) {\n    classCallCheck(this, SocketIoChannel);\n    /**\n     * The event callbacks applied to the channel.\n     */\n\n    var _this = possibleConstructorReturn(this, (SocketIoChannel.__proto__ || Object.getPrototypeOf(SocketIoChannel)).call(this));\n\n    _this.events = {};\n    _this.name = name;\n    _this.socket = socket;\n    _this.options = options;\n    _this.eventFormatter = new EventFormatter(_this.options.namespace);\n\n    _this.subscribe();\n\n    _this.configureReconnector();\n\n    return _this;\n  }\n  /**\n   * Subscribe to a Socket.io channel.\n   */\n\n\n  createClass(SocketIoChannel, [{\n    key: 'subscribe',\n    value: function subscribe() {\n      this.socket.emit('subscribe', {\n        channel: this.name,\n        auth: this.options.auth || {}\n      });\n    }\n    /**\n     * Unsubscribe from channel and ubind event callbacks.\n     */\n\n  }, {\n    key: 'unsubscribe',\n    value: function unsubscribe() {\n      this.unbind();\n      this.socket.emit('unsubscribe', {\n        channel: this.name,\n        auth: this.options.auth || {}\n      });\n    }\n    /**\n     * Listen for an event on the channel instance.\n     */\n\n  }, {\n    key: 'listen',\n    value: function listen(event, callback) {\n      this.on(this.eventFormatter.format(event), callback);\n      return this;\n    }\n    /**\n     * Stop listening for an event on the channel instance.\n     */\n\n  }, {\n    key: 'stopListening',\n    value: function stopListening(event) {\n      var name = this.eventFormatter.format(event);\n      this.socket.removeListener(name);\n      delete this.events[name];\n      return this;\n    }\n    /**\n     * Bind the channel's socket to an event and store the callback.\n     */\n\n  }, {\n    key: 'on',\n    value: function on(event, callback) {\n      var _this2 = this;\n\n      var listener = function listener(channel, data) {\n        if (_this2.name == channel) {\n          callback(data);\n        }\n      };\n\n      this.socket.on(event, listener);\n      this.bind(event, listener);\n    }\n    /**\n     * Attach a 'reconnect' listener and bind the event.\n     */\n\n  }, {\n    key: 'configureReconnector',\n    value: function configureReconnector() {\n      var _this3 = this;\n\n      var listener = function listener() {\n        _this3.subscribe();\n      };\n\n      this.socket.on('reconnect', listener);\n      this.bind('reconnect', listener);\n    }\n    /**\n     * Bind the channel's socket to an event and store the callback.\n     */\n\n  }, {\n    key: 'bind',\n    value: function bind(event, callback) {\n      this.events[event] = this.events[event] || [];\n      this.events[event].push(callback);\n    }\n    /**\n     * Unbind the channel's socket from all stored event callbacks.\n     */\n\n  }, {\n    key: 'unbind',\n    value: function unbind() {\n      var _this4 = this;\n\n      Object.keys(this.events).forEach(function (event) {\n        _this4.events[event].forEach(function (callback) {\n          _this4.socket.removeListener(event, callback);\n        });\n\n        delete _this4.events[event];\n      });\n    }\n  }]);\n  return SocketIoChannel;\n}(Channel);\n/**\n * This class represents a Socket.io presence channel.\n */\n\n\nvar SocketIoPrivateChannel = function (_SocketIoChannel) {\n  inherits(SocketIoPrivateChannel, _SocketIoChannel);\n\n  function SocketIoPrivateChannel() {\n    classCallCheck(this, SocketIoPrivateChannel);\n    return possibleConstructorReturn(this, (SocketIoPrivateChannel.__proto__ || Object.getPrototypeOf(SocketIoPrivateChannel)).apply(this, arguments));\n  }\n\n  createClass(SocketIoPrivateChannel, [{\n    key: 'whisper',\n\n    /**\n     * Trigger client event on the channel.\n     */\n    value: function whisper(eventName, data) {\n      this.socket.emit('client event', {\n        channel: this.name,\n        event: 'client-' + eventName,\n        data: data\n      });\n      return this;\n    }\n  }]);\n  return SocketIoPrivateChannel;\n}(SocketIoChannel);\n/**\n * This class represents a Socket.io presence channel.\n */\n\n\nvar SocketIoPresenceChannel = function (_SocketIoPrivateChann) {\n  inherits(SocketIoPresenceChannel, _SocketIoPrivateChann);\n\n  function SocketIoPresenceChannel() {\n    classCallCheck(this, SocketIoPresenceChannel);\n    return possibleConstructorReturn(this, (SocketIoPresenceChannel.__proto__ || Object.getPrototypeOf(SocketIoPresenceChannel)).apply(this, arguments));\n  }\n\n  createClass(SocketIoPresenceChannel, [{\n    key: 'here',\n\n    /**\n     * Register a callback to be called anytime the member list changes.\n     */\n    value: function here(callback) {\n      this.on('presence:subscribed', function (members) {\n        callback(members.map(function (m) {\n          return m.user_info;\n        }));\n      });\n      return this;\n    }\n    /**\n     * Listen for someone joining the channel.\n     */\n\n  }, {\n    key: 'joining',\n    value: function joining(callback) {\n      this.on('presence:joining', function (member) {\n        return callback(member.user_info);\n      });\n      return this;\n    }\n    /**\n     * Listen for someone leaving the channel.\n     */\n\n  }, {\n    key: 'leaving',\n    value: function leaving(callback) {\n      this.on('presence:leaving', function (member) {\n        return callback(member.user_info);\n      });\n      return this;\n    }\n  }]);\n  return SocketIoPresenceChannel;\n}(SocketIoPrivateChannel);\n/**\n * This class represents a null channel.\n */\n\n\nvar NullChannel = function (_Channel) {\n  inherits(NullChannel, _Channel);\n\n  function NullChannel() {\n    classCallCheck(this, NullChannel);\n    return possibleConstructorReturn(this, (NullChannel.__proto__ || Object.getPrototypeOf(NullChannel)).apply(this, arguments));\n  }\n\n  createClass(NullChannel, [{\n    key: 'subscribe',\n\n    /**\n     * Subscribe to a channel.\n     */\n    value: function subscribe() {} //\n\n    /**\n     * Unsubscribe from a channel.\n     */\n\n  }, {\n    key: 'unsubscribe',\n    value: function unsubscribe() {} //\n\n    /**\n     * Listen for an event on the channel instance.\n     */\n\n  }, {\n    key: 'listen',\n    value: function listen(event, callback) {\n      return this;\n    }\n    /**\n     * Stop listening for an event on the channel instance.\n     */\n\n  }, {\n    key: 'stopListening',\n    value: function stopListening(event) {\n      return this;\n    }\n    /**\n     * Bind a channel to an event.\n     */\n\n  }, {\n    key: 'on',\n    value: function on(event, callback) {\n      return this;\n    }\n  }]);\n  return NullChannel;\n}(Channel);\n/**\n * This class represents a null private channel.\n */\n\n\nvar NullPrivateChannel = function (_NullChannel) {\n  inherits(NullPrivateChannel, _NullChannel);\n\n  function NullPrivateChannel() {\n    classCallCheck(this, NullPrivateChannel);\n    return possibleConstructorReturn(this, (NullPrivateChannel.__proto__ || Object.getPrototypeOf(NullPrivateChannel)).apply(this, arguments));\n  }\n\n  createClass(NullPrivateChannel, [{\n    key: 'whisper',\n\n    /**\n     * Trigger client event on the channel.\n     */\n    value: function whisper(eventName, data) {\n      return this;\n    }\n  }]);\n  return NullPrivateChannel;\n}(NullChannel);\n/**\n * This class represents a null presence channel.\n */\n\n\nvar NullPresenceChannel = function (_NullChannel) {\n  inherits(NullPresenceChannel, _NullChannel);\n\n  function NullPresenceChannel() {\n    classCallCheck(this, NullPresenceChannel);\n    return possibleConstructorReturn(this, (NullPresenceChannel.__proto__ || Object.getPrototypeOf(NullPresenceChannel)).apply(this, arguments));\n  }\n\n  createClass(NullPresenceChannel, [{\n    key: 'here',\n\n    /**\n     * Register a callback to be called anytime the member list changes.\n     */\n    value: function here(callback) {\n      return this;\n    }\n    /**\n     * Listen for someone joining the channel.\n     */\n\n  }, {\n    key: 'joining',\n    value: function joining(callback) {\n      return this;\n    }\n    /**\n     * Listen for someone leaving the channel.\n     */\n\n  }, {\n    key: 'leaving',\n    value: function leaving(callback) {\n      return this;\n    }\n    /**\n     * Trigger client event on the channel.\n     */\n\n  }, {\n    key: 'whisper',\n    value: function whisper(eventName, data) {\n      return this;\n    }\n  }]);\n  return NullPresenceChannel;\n}(NullChannel);\n/**\n * This class creates a connector to Pusher.\n */\n\n\nvar PusherConnector = function (_Connector) {\n  inherits(PusherConnector, _Connector);\n\n  function PusherConnector() {\n    classCallCheck(this, PusherConnector);\n    /**\n     * All of the subscribed channel names.\n     */\n\n    var _this = possibleConstructorReturn(this, (PusherConnector.__proto__ || Object.getPrototypeOf(PusherConnector)).apply(this, arguments));\n\n    _this.channels = {};\n    return _this;\n  }\n  /**\n   * Create a fresh Pusher connection.\n   */\n\n\n  createClass(PusherConnector, [{\n    key: 'connect',\n    value: function connect() {\n      if (typeof this.options.client !== 'undefined') {\n        this.pusher = this.options.client;\n      } else {\n        this.pusher = new Pusher(this.options.key, this.options);\n      }\n    }\n    /**\n     * Listen for an event on a channel instance.\n     */\n\n  }, {\n    key: 'listen',\n    value: function listen(name, event, callback) {\n      return this.channel(name).listen(event, callback);\n    }\n    /**\n     * Get a channel instance by name.\n     */\n\n  }, {\n    key: 'channel',\n    value: function channel(name) {\n      if (!this.channels[name]) {\n        this.channels[name] = new PusherChannel(this.pusher, name, this.options);\n      }\n\n      return this.channels[name];\n    }\n    /**\n     * Get a private channel instance by name.\n     */\n\n  }, {\n    key: 'privateChannel',\n    value: function privateChannel(name) {\n      if (!this.channels['private-' + name]) {\n        this.channels['private-' + name] = new PusherPrivateChannel(this.pusher, 'private-' + name, this.options);\n      }\n\n      return this.channels['private-' + name];\n    }\n    /**\n     * Get a presence channel instance by name.\n     */\n\n  }, {\n    key: 'presenceChannel',\n    value: function presenceChannel(name) {\n      if (!this.channels['presence-' + name]) {\n        this.channels['presence-' + name] = new PusherPresenceChannel(this.pusher, 'presence-' + name, this.options);\n      }\n\n      return this.channels['presence-' + name];\n    }\n    /**\n     * Leave the given channel, as well as its private and presence variants.\n     */\n\n  }, {\n    key: 'leave',\n    value: function leave(name) {\n      var _this2 = this;\n\n      var channels = [name, 'private-' + name, 'presence-' + name];\n      channels.forEach(function (name, index) {\n        _this2.leaveChannel(name);\n      });\n    }\n    /**\n     * Leave the given channel.\n     */\n\n  }, {\n    key: 'leaveChannel',\n    value: function leaveChannel(name) {\n      if (this.channels[name]) {\n        this.channels[name].unsubscribe();\n        delete this.channels[name];\n      }\n    }\n    /**\n     * Get the socket ID for the connection.\n     */\n\n  }, {\n    key: 'socketId',\n    value: function socketId() {\n      return this.pusher.connection.socket_id;\n    }\n    /**\n     * Disconnect Pusher connection.\n     */\n\n  }, {\n    key: 'disconnect',\n    value: function disconnect() {\n      this.pusher.disconnect();\n    }\n  }]);\n  return PusherConnector;\n}(Connector);\n/**\n * This class creates a connnector to a Socket.io server.\n */\n\n\nvar SocketIoConnector = function (_Connector) {\n  inherits(SocketIoConnector, _Connector);\n\n  function SocketIoConnector() {\n    classCallCheck(this, SocketIoConnector);\n    /**\n     * All of the subscribed channel names.\n     */\n\n    var _this = possibleConstructorReturn(this, (SocketIoConnector.__proto__ || Object.getPrototypeOf(SocketIoConnector)).apply(this, arguments));\n\n    _this.channels = {};\n    return _this;\n  }\n  /**\n   * Create a fresh Socket.io connection.\n   */\n\n\n  createClass(SocketIoConnector, [{\n    key: 'connect',\n    value: function connect() {\n      var io = this.getSocketIO();\n      this.socket = io(this.options.host, this.options);\n      return this.socket;\n    }\n    /**\n     * Get socket.io module from global scope or options.\n     */\n\n  }, {\n    key: 'getSocketIO',\n    value: function getSocketIO() {\n      if (typeof io !== 'undefined') {\n        return io;\n      }\n\n      if (typeof this.options.client !== 'undefined') {\n        return this.options.client;\n      }\n\n      throw new Error('Socket.io client not found. Should be globally available or passed via options.client');\n    }\n    /**\n     * Listen for an event on a channel instance.\n     */\n\n  }, {\n    key: 'listen',\n    value: function listen(name, event, callback) {\n      return this.channel(name).listen(event, callback);\n    }\n    /**\n     * Get a channel instance by name.\n     */\n\n  }, {\n    key: 'channel',\n    value: function channel(name) {\n      if (!this.channels[name]) {\n        this.channels[name] = new SocketIoChannel(this.socket, name, this.options);\n      }\n\n      return this.channels[name];\n    }\n    /**\n     * Get a private channel instance by name.\n     */\n\n  }, {\n    key: 'privateChannel',\n    value: function privateChannel(name) {\n      if (!this.channels['private-' + name]) {\n        this.channels['private-' + name] = new SocketIoPrivateChannel(this.socket, 'private-' + name, this.options);\n      }\n\n      return this.channels['private-' + name];\n    }\n    /**\n     * Get a presence channel instance by name.\n     */\n\n  }, {\n    key: 'presenceChannel',\n    value: function presenceChannel(name) {\n      if (!this.channels['presence-' + name]) {\n        this.channels['presence-' + name] = new SocketIoPresenceChannel(this.socket, 'presence-' + name, this.options);\n      }\n\n      return this.channels['presence-' + name];\n    }\n    /**\n     * Leave the given channel, as well as its private and presence variants.\n     */\n\n  }, {\n    key: 'leave',\n    value: function leave(name) {\n      var _this2 = this;\n\n      var channels = [name, 'private-' + name, 'presence-' + name];\n      channels.forEach(function (name) {\n        _this2.leaveChannel(name);\n      });\n    }\n    /**\n     * Leave the given channel.\n     */\n\n  }, {\n    key: 'leaveChannel',\n    value: function leaveChannel(name) {\n      if (this.channels[name]) {\n        this.channels[name].unsubscribe();\n        delete this.channels[name];\n      }\n    }\n    /**\n     * Get the socket ID for the connection.\n     */\n\n  }, {\n    key: 'socketId',\n    value: function socketId() {\n      return this.socket.id;\n    }\n    /**\n     * Disconnect Socketio connection.\n     */\n\n  }, {\n    key: 'disconnect',\n    value: function disconnect() {\n      this.socket.disconnect();\n    }\n  }]);\n  return SocketIoConnector;\n}(Connector);\n/**\n * This class creates a null connector.\n */\n\n\nvar NullConnector = function (_Connector) {\n  inherits(NullConnector, _Connector);\n\n  function NullConnector() {\n    classCallCheck(this, NullConnector);\n    /**\n     * All of the subscribed channel names.\n     */\n\n    var _this = possibleConstructorReturn(this, (NullConnector.__proto__ || Object.getPrototypeOf(NullConnector)).apply(this, arguments));\n\n    _this.channels = {};\n    return _this;\n  }\n  /**\n   * Create a fresh connection.\n   */\n\n\n  createClass(NullConnector, [{\n    key: 'connect',\n    value: function connect() {} //\n\n    /**\n     * Listen for an event on a channel instance.\n     */\n\n  }, {\n    key: 'listen',\n    value: function listen(name, event, callback) {\n      return new NullChannel();\n    }\n    /**\n     * Get a channel instance by name.\n     */\n\n  }, {\n    key: 'channel',\n    value: function channel(name) {\n      return new NullChannel();\n    }\n    /**\n     * Get a private channel instance by name.\n     */\n\n  }, {\n    key: 'privateChannel',\n    value: function privateChannel(name) {\n      return new NullPrivateChannel();\n    }\n    /**\n     * Get a presence channel instance by name.\n     */\n\n  }, {\n    key: 'presenceChannel',\n    value: function presenceChannel(name) {\n      return new NullPresenceChannel();\n    }\n    /**\n     * Leave the given channel, as well as its private and presence variants.\n     */\n\n  }, {\n    key: 'leave',\n    value: function leave(name) {} //\n\n    /**\n     * Leave the given channel.\n     */\n\n  }, {\n    key: 'leaveChannel',\n    value: function leaveChannel(name) {} //\n\n    /**\n     * Get the socket ID for the connection.\n     */\n\n  }, {\n    key: 'socketId',\n    value: function socketId() {\n      return 'fake-socket-id';\n    }\n    /**\n     * Disconnect the connection.\n     */\n\n  }, {\n    key: 'disconnect',\n    value: function disconnect() {//\n    }\n  }]);\n  return NullConnector;\n}(Connector);\n/**\n * This class is the primary API for interacting with broadcasting.\n */\n\n\nvar Echo = function () {\n  /**\n   * Create a new class instance.\n   */\n  function Echo(options) {\n    classCallCheck(this, Echo);\n    this.options = options;\n    this.connect();\n    this.registerInterceptors();\n  }\n  /**\n   * Get a channel instance by name.\n   */\n\n\n  createClass(Echo, [{\n    key: 'channel',\n    value: function channel(_channel) {\n      return this.connector.channel(_channel);\n    }\n    /**\n     * Create a new connection.\n     */\n\n  }, {\n    key: 'connect',\n    value: function connect() {\n      if (this.options.broadcaster == 'pusher') {\n        this.connector = new PusherConnector(this.options);\n      } else if (this.options.broadcaster == 'socket.io') {\n        this.connector = new SocketIoConnector(this.options);\n      } else if (this.options.broadcaster == 'null') {\n        this.connector = new NullConnector(this.options);\n      }\n    }\n    /**\n     * Disconnect from the Echo server.\n     */\n\n  }, {\n    key: 'disconnect',\n    value: function disconnect() {\n      this.connector.disconnect();\n    }\n    /**\n     * Get a presence channel instance by name.\n     */\n\n  }, {\n    key: 'join',\n    value: function join(channel) {\n      return this.connector.presenceChannel(channel);\n    }\n    /**\n     * Leave the given channel, as well as its private and presence variants.\n     */\n\n  }, {\n    key: 'leave',\n    value: function leave(channel) {\n      this.connector.leave(channel);\n    }\n    /**\n     * Leave the given channel.\n     */\n\n  }, {\n    key: 'leaveChannel',\n    value: function leaveChannel(channel) {\n      this.connector.leaveChannel(channel);\n    }\n    /**\n     * Listen for an event on a channel instance.\n     */\n\n  }, {\n    key: 'listen',\n    value: function listen(channel, event, callback) {\n      return this.connector.listen(channel, event, callback);\n    }\n    /**\n     * Get a private channel instance by name.\n     */\n\n  }, {\n    key: 'private',\n    value: function _private(channel) {\n      return this.connector.privateChannel(channel);\n    }\n    /**\n     * Get the Socket ID for the connection.\n     */\n\n  }, {\n    key: 'socketId',\n    value: function socketId() {\n      return this.connector.socketId();\n    }\n    /**\n     * Register 3rd party request interceptiors. These are used to automatically\n     * send a connections socket id to a Laravel app with a X-Socket-Id header.\n     */\n\n  }, {\n    key: 'registerInterceptors',\n    value: function registerInterceptors() {\n      if (typeof Vue === 'function' && Vue.http) {\n        this.registerVueRequestInterceptor();\n      }\n\n      if (typeof axios === 'function') {\n        this.registerAxiosRequestInterceptor();\n      }\n\n      if (typeof jQuery === 'function') {\n        this.registerjQueryAjaxSetup();\n      }\n    }\n    /**\n     * Register a Vue HTTP interceptor to add the X-Socket-ID header.\n     */\n\n  }, {\n    key: 'registerVueRequestInterceptor',\n    value: function registerVueRequestInterceptor() {\n      var _this = this;\n\n      Vue.http.interceptors.push(function (request, next) {\n        if (_this.socketId()) {\n          request.headers.set('X-Socket-ID', _this.socketId());\n        }\n\n        next();\n      });\n    }\n    /**\n     * Register an Axios HTTP interceptor to add the X-Socket-ID header.\n     */\n\n  }, {\n    key: 'registerAxiosRequestInterceptor',\n    value: function registerAxiosRequestInterceptor() {\n      var _this2 = this;\n\n      axios.interceptors.request.use(function (config) {\n        if (_this2.socketId()) {\n          config.headers['X-Socket-Id'] = _this2.socketId();\n        }\n\n        return config;\n      });\n    }\n    /**\n     * Register jQuery AjaxSetup to add the X-Socket-ID header.\n     */\n\n  }, {\n    key: 'registerjQueryAjaxSetup',\n    value: function registerjQueryAjaxSetup() {\n      var _this3 = this;\n\n      if (typeof jQuery.ajax != 'undefined') {\n        jQuery.ajaxSetup({\n          beforeSend: function beforeSend(xhr) {\n            if (_this3.socketId()) {\n              xhr.setRequestHeader('X-Socket-Id', _this3.socketId());\n            }\n          }\n        });\n      }\n    }\n  }]);\n  return Echo;\n}();\n\nexport default Echo;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {BrowserRouter as Router,Route,Redirect,Switch,HashRouter} from \"react-router-dom\";\nimport {Button} from 'primereact/button';\nimport {TRANSCODE_ORDERS,TRANSCODE_ORDERS_STATUS,VIDEO_DOWNLOAD,TRANSCODE_VIDEO_DOWNLOAD} from '../../url.js';\nimport SearchBar from '../../component/searchbar/searchbar';\nimport Pagination from \"react-js-pagination\";\nimport Action from '../../component/Action/action.js';\nimport {Link,withRouter} from 'react-router-dom';\nimport thumb from '../../video_thumb.png';\nimport Loader from '../../component/loader/loader.js';\nimport SuccessAlert from '../../component/flashmessages/successalert';\nimport './request.css';\nimport Echo from 'laravel-echo';\nclass Request extends Component {\n  state={\n    list:[],\n    show:false,\n    activePage:1,\n    itemsCountPerPage:1,\n    totalItemsCount:1,\n    pageRangeDisplayed:3,\n    pageNumber:'1',\n    search:'',\n    loader:false,\n    statusMessage:'',\n    status_change_loader:false\n  }\n  componentWillReceiveProps(nextProps){\nthis.handlePageChange('1');\n}\n      componentDidMount()\n      {\n        this.handlePageChange('1');\n        // Echo.private('new-post').listen('PostCreated',(e)=>{\n        //   console.log(e);\n        // })\n      }\n      video_thumb(host_url,thumbnail,video_id)\n      {\n  return <img src={`${thumbnail}`} style={{width:'70px',height:'60px'}}/>\n      }\n      action(status,transcode_id,payment_id,file_name) {\n          var payment_status=payment_id==null?6:status;\n       return (\n         <div style={{textAlign:'center',marginLeft:'-60px'}}>\n               <i className=\"fa fa-trash \" style={{width:'2em',height:'2em',cursor:'pointer',color:'#d9534f'}} ></i>\n               <i className=\"fa fa-edit\" style={{width:'2em',height:'2em',cursor:'pointer',color:'green'}} ></i>\n               <i style={{width:'2em',height:'2em'}} ><Action tag=\"services_transcode\" file_name={file_name} status={payment_status}  id={transcode_id} download_video={this.downloadVideo.bind(this)} status_change={this.statuschange.bind(this)}/></i>\n        </div>);\n   }\n   downloadVideo=(video_id,title)=>\n   {\n     axios({\n       url: TRANSCODE_VIDEO_DOWNLOAD, //your url\n       method: 'POST',\n       responseType: 'blob', // important\n       data:{transcode_id:video_id},\n     }).then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', title); //or any other extension\n        document.body.appendChild(link);\n        link.click();\n     });\n   }\n   statuschange(status,transcode_id)\n   {\n      this.setState({status_change_loader:true})\n     axios.post(TRANSCODE_ORDERS_STATUS, {\n         transcode_id:transcode_id,\n         status:status\n         })\n       .then(response=>{\n         this.setState({statusMessage:'Status Updated',status_change_loader:false});\n         this.handlePageChange(this.state.pageNumber);\n       })\n       .catch(function (error) {\n         console.log(error);\n     });\n   }\n   handlePageChange=(pageNumber,searchKeyword)=> {\n   var email=localStorage.getItem('email');\n     axios.post(`${TRANSCODE_ORDERS}?page=${pageNumber}`, {\n       email:email,\n       searchKeyword:searchKeyword,\n       request_coming_from:'web'\n     })\n   .then(response=>{\n   var result=response.data.data;\n   setTimeout(()=>{this.setState({\n                 activePage:result.current_page,\n                 itemsCountPerPage:result.per_page,\n                 totalItemsCount:result.total,\n                 list:result.data,\n                 show:true,\n                 pageNumber:pageNumber,\n                 loader:true,\n                 statusMessage:''\n                 });\n               },1500);\n   })\n   .catch(function (error) {\n     console.log(error);\n   });\n     }\n     status(status,payment_id)\n     {\n       var content='';\n       if(payment_id==null)\n       {\n         return <button className=\"inactive_button  btn-primary but_1\"  style={{cursor:'pointer',width:'116px',height:'28px'}}>Payment Pending</button>\n       }\n       if(status=='0' || status==0)\n       {\n         content=<button className=\"inactive_button  btn-danger but_1\"  style={{cursor:'pointer',width:'116',height:'28px'}}>Queued</button>;\n       }\n       if(status=='1' || status==1)\n       {\n         content=<button className=\"active_button btn-primary but_1\"  style={{cursor:'pointer',width:'116px',height:'28px'}}>In Progress</button>;\n       }\n       if(status=='2' || status==2)\n       {\n         content=<button className=\"inactive_button  btn-success but_1\"  style={{cursor:'pointer',width:'116px',height:'28px'}}>Completed</button>;\n       }\n       return content;\n     }\n     searchHandler(e)\n     {\n       this.setState({search:e.target.value});\n       this.handlePageChange('1',e.target.value);\n     }\n  render()\n  {\n    const videolist=(this.state.list.length>0 && this.state.list.map((result,key)=>{\n    return (\n      <tr>\n    <td ><Link to={`/services/transcoding/details/${result.id}`}><a href=\"#\" class=\"link_col\">{result.transcode_id}</a></Link></td>\n      <td class=\"ser_width\"> {result.email}</td>\n      <td class=\"ser_width\">{result.preset}</td>\n      <td class=\"ser_width\">{this.status(result.status,result.payment_id)}</td>\n      <td class=\"ser_width\">{result.created_at}</td>\n      <td class=\"ser_width\">{this.action(result.status,result.id,result.payment_id,result.file_name)}</td>\n    </tr>)\n  }));\n  if(!this.state.loader)\n  {\n  return (<Loader content=\"Transcoding List\"/>);\n  }\n  else {\n    return (\n      <div>\n      { <SuccessAlert title={this.state.statusMessage} />}\n      <SearchBar placeholder=\"Search By Anything\" clicked={this.searchHandler.bind(this)} />\n      <h2 >Transcoding List</h2>\n      <br/><br/><br/>\n      {this.state.status_change_loader==true && <div style={{marginTop:'-30px'}}><Loader content=\"\"/></div>}\n      {this.state.status_change_loader==false && <div class=\"table-responsive\" >\n    {this.state.show && <table class=\"table\">\n    <thead class=\"tr_1\">\n      <tr>\n        <th  scope=\"col\">Transcoding Id</th>\n        <th scope=\"col\">Requested By</th>\n        <th scope=\"col\">Preset</th>\n        <th scope=\"col\">Status</th>\n        <th scope=\"col\">Requested At</th>\n        <th scope=\"col\">Action</th>\n      </tr>\n    </thead>\n    {this.state.list.length>0 && <tbody>\n     {videolist}\n    </tbody>}\n    {this.state.list.length<=0 && <tbody>\n     No result Found\n    </tbody>}\n    </table>}\n    </div>}\n    {this.state.totalItemsCount > this.state.itemsCountPerPage &&<div className=\"d-flex justify-content-end\">\n    <Pagination\n              activePage={this.state.activePage}\n              itemsCountPerPage={this.state.itemsCountPerPage}\n              totalItemsCount={this.state.totalItemsCount}\n              pageRangeDisplayed={this.state.pageRangeDisplayed}\n              onChange={this.handlePageChange}\n              itemClass='page-item'\n              linkClass=\"page-link bold\"\n            /></div>}\n    </div>\n\n    )\n  }\n  }\n}\nexport default withRouter(Request);\n"],"sourceRoot":""}