{"version":3,"sources":["../node_modules/classnames/index.js","../node_modules/chart.js/dist/Chart.js","../node_modules/primereact/chart.js","../node_modules/moment/moment.js","../node_modules/primereact/components/chart/Chart.js"],"names":["__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","undefined","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","args","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","n","wh","bl","ratio","cmyk","c","m","lab","y2","a","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","func","prototype","slice","pair","exec","from","to","round","this","convs","routeSpace","space","values","getValues","setValues","vals","fspace","forEach","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","string","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","name","Color","obj","valid","lightness","value","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","type","result","source","target","prop","console","error","spaces","maxes","charAt","capped","chans","sname","index","svalues","window","chartjsColor","helpers","noop","uid","id","isNullOrUndef","Object","substr","isObject","isFinite","_isFinite","_x","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","keys","arrayEquals","a0","a1","ilen","v0","v1","map","klen","_merger","options","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","constructor","Surrogate","__super__","helpers_core","callCallback","indexOf","array","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","clear","chart","ctx","clearRect","width","height","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","point","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","defaults","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","core_animation","defineProperty","get","set","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","data","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","configurable","enumerable","method","base","res","object","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","boundingRects","fillRect","Arc","Line","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","stack","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","label","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","position","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","legend","generateLabels","ds","arcOpts","bw","onClick","e","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","props","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","node","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","createElement","className","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","config","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","event","pos","fromNativeEvent","addEvent","removeEvent","implementation","plugins","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","d","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","Error","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","abstract","DateAdapter","Controller","types","configMerge","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","__webpack_require__","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","number","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","deprecations","deprecateSimple","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","test","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","other","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","_react","_interopRequireWildcard","_propTypes","_interopRequireDefault","ChartJS","_classnames","__esModule","newObj","desc","getOwnPropertyDescriptor","_typeof","Symbol","iterator","_defineProperties","writable","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","_defineProperty","_Component","instance","Constructor","TypeError","_classCallCheck","protoProps","staticProps","subClass","superClass","create","_inherits","Component","initChart","nextProps","prevProps","prevState","reinit","_this","assign","ref"],"mappings":"6EAAA,IAAAA,GAOA,WACA,aAEA,IAAAC,EAAA,GAAiBC,eAEjB,SAAAC,IAGA,IAFA,IAAAC,EAAA,GAEAC,EAAA,EAAmBA,EAAAC,UAAAC,OAAsBF,IAAA,CACzC,IAAAG,EAAAF,UAAAD,GACA,GAAAG,EAAA,CACA,IAAAC,SAAAD,EAEA,cAAAC,GAAA,WAAAA,EACAL,EAAAM,KAAAF,QACO,GAAAG,MAAAC,QAAAJ,MAAAD,OAAA,CACP,IAAAM,EAAAV,EAAAW,MAAA,KAAAN,GAEAK,GACAT,EAAAM,KAAAG,QAEO,cAAAJ,EACP,QAAAM,KAAAP,EACAP,EAAAe,KAAAR,EAAAO,IAAAP,EAAAO,IACAX,EAAAM,KAAAK,IAMA,OAAAX,EAAAa,KAAA,KAGmCC,EAAAC,SACnChB,EAAAiB,QAAAjB,EACAe,EAAAC,QAAAhB,QAKKkB,KAFsBrB,EAAA,WAC3B,OAAAG,GACKW,MAAAK,EAFoB,OAEpBD,EAAAC,QAAAnB,GAxCL,wBCA8DkB,EAAAC,QAW7D,SAAAG,GACD,aAEAA,OAAApB,eAAA,WAAAoB,EAAA,QAAAA,EAGA,IAAAC,EAAA,CACAC,UACAC,UACAC,UACAC,WACAC,cACAC,UACAC,UACAC,QA0IA,SAAAC,GACA,OAAAC,EAAAH,EAAAE,KA1IAE,UACAC,QA0KA,SAAAC,GACA,IAAAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OAIA,WAAAG,EAGA,QAOA,CAAAF,EADA,GAFAC,IADAC,GAAA,IACA,EAAAA,EAAA,EAAAA,IAEAA,EAAAD,GACA,KAFAC,EAAAD,GAAA,EAEA,MA1LAE,QA6LA,SAAAR,GACA,OAAAN,EAAAQ,EAAAF,KA7LAS,SAgMA,SAAAT,GACA,OAAAL,EAAAO,EAAAF,KAhMAU,YAmMA,SAAAV,GACA,OAAAJ,EAAAM,EAAAF,KAnMAW,UACAC,QAqOA,SAAAC,GACA,IAGAC,EACAP,EAJAF,EAAAQ,EAAA,GACAP,EAAAO,EAAA,OACAE,EAAAF,EAAA,OAQA,OAJAC,EAAAR,EAAAS,EAIA,CAAAV,EAAA,KAFAS,GADAA,IAFAP,GAAA,EAAAD,GAAAS,IAEA,EAAAR,EAAA,EAAAA,IACA,GAEA,KADAA,GAAA,KA9OAS,QAkPA,SAAAhB,GACA,OAAAN,EAAAiB,EAAAX,KAlPAiB,SAqPA,SAAAjB,GACA,OAAAL,EAAAgB,EAAAX,KArPAkB,YAwPA,SAAAlB,GACA,OAAAJ,EAAAe,EAAAX,KAxPAmB,UACAC,QA+TA,SAAApB,GACA,OAAAR,EAAA2B,EAAAnB,KA/TAqB,QAkUA,SAAArB,GACA,OAAAP,EAAA0B,EAAAnB,KAlUAsB,SAqUA,SAAAtB,GACA,OAAAL,EAAAwB,EAAAnB,KArUAuB,YAwUA,SAAAvB,GACA,OAAAJ,EAAAuB,EAAAnB,KAxUAwB,WACAC,SAwVA,SAAAzB,GACA,OAAAR,EAAAgC,EAAAxB,KAxVA0B,SA2VA,SAAA1B,GACA,OAAAP,EAAA+B,EAAAxB,KA3VA2B,SA8VA,SAAA3B,GACA,OAAAN,EAAA8B,EAAAxB,KA9VA4B,aAiWA,SAAA5B,GACA,OAAAJ,EAAA4B,EAAAxB,KAjWA6B,cACAC,YAmdA,SAAA9B,GACA,OAAAR,EAAAqC,EAAA7B,KAndA+B,YAsdA,SAAA/B,GACA,OAAAP,EAAAoC,EAAA7B,KAtdAgC,YAydA,SAAAhC,GACA,OAAAN,EAAAmC,EAAA7B,KAzdAiC,aA4dA,SAAAjC,GACA,OAAAL,EAAAkC,EAAA7B,KA5dAkC,YA+dA,SAAAlC,GACA,OAAAF,EAAA+B,EAAA7B,KA/dAmC,YAkeA,SAAAnC,GACA,OAAAH,EAAAgC,EAAA7B,KAleAoC,UACAC,UACAC,QAkYA,SAAAtC,GACA,OAAAC,EAAAoC,EAAArC,KAlYAuC,UACAC,UACAvC,UACAwC,UACAC,QA0bA,SAAA1C,GACA,OAAAuC,EAAAE,EAAAzC,KA1bA2C,QA6bA,SAAA3C,GACA,OAAAwC,EAAAC,EAAAzC,MA3bA,SAAAR,EAAAoD,GACA,IAMAvC,EAEAE,EARAsC,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OACAI,EAAAC,KAAAD,IAAAH,EAAAC,EAAAC,GACAG,EAAAD,KAAAC,IAAAL,EAAAC,EAAAC,GACAI,EAAAD,EAAAF,EASA,OALAE,GAAAF,EAAA3C,EAAA,EAA0BwC,GAAAK,EAAA7C,GAAAyC,EAAAC,GAAAI,EAAuCL,GAAAI,EAAA7C,EAAA,GAAA0C,EAAAF,GAAAM,EAA2CJ,GAAAG,IAAA7C,EAAA,GAAAwC,EAAAC,GAAAK,IAC5G9C,EAAA4C,KAAAD,IAAA,GAAA3C,EAAA,MACA,IAAAA,GAAA,KACAE,GAAAyC,EAAAE,GAAA,EAEA,CAAA7C,EAAA,KADA6C,GAAAF,EAAA,EAA0BzC,GAAA,GAAA4C,GAAAD,EAAAF,GAA2CG,GAAA,EAAAD,EAAAF,IACrE,IAAAzC,GAGA,SAAAd,EAAAmD,GACA,IAMAvC,EACAC,EAPAuC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAC,KAAAD,IAAAH,EAAAC,EAAAC,GACAG,EAAAD,KAAAC,IAAAL,EAAAC,EAAAC,GACAI,EAAAD,EAAAF,EASA,OALA1C,EAAA,GAAA4C,EAAA,EAAwBC,EAAAD,EAAA,OACxBA,GAAAF,EAAA3C,EAAA,EAA0BwC,GAAAK,EAAA7C,GAAAyC,EAAAC,GAAAI,EAAuCL,GAAAI,EAAA7C,EAAA,GAAA0C,EAAAF,GAAAM,EAA2CJ,GAAAG,IAAA7C,EAAA,GAAAwC,EAAAC,GAAAK,IAC5G9C,EAAA4C,KAAAD,IAAA,GAAA3C,EAAA,MACA,IAAAA,GAAA,KAEA,CAAAA,EAAAC,EADA4C,EAAA,YAIA,SAAAxD,EAAAkD,GACA,IAAAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAvC,EAAAb,EAAAoD,GAAA,GACAQ,EAAA,MAAAH,KAAAD,IAAAH,EAAAI,KAAAD,IAAAF,EAAAC,IACAA,EAAA,QAAAE,KAAAC,IAAAL,EAAAI,KAAAC,IAAAJ,EAAAC,IACA,OAAA1C,EAAA,IAAA+C,EAAA,IAAAL,GAGA,SAAApD,EAAAiD,GACA,IAMAS,EANAR,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OASA,OAJAS,EAAAJ,KAAAD,IAAA,EAAAH,EAAA,EAAAC,EAAA,EAAAC,GAIA,OAHA,EAAAF,EAAAQ,IAAA,EAAAA,IAAA,GAGA,MAFA,EAAAP,EAAAO,IAAA,EAAAA,IAAA,GAEA,MADA,EAAAN,EAAAM,IAAA,EAAAA,IAAA,GACA,IAAAA,GAGA,SAAAzD,EAAAgD,GACA,OAAAU,EAAAC,KAAAC,UAAAZ,IAGA,SAAA/C,EAAA+C,GACA,IAAAC,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OAEAC,IAAA,OAAAI,KAAAQ,KAAAZ,EAAA,iBAAAA,EAAA,MACAC,IAAA,OAAAG,KAAAQ,KAAAX,EAAA,iBAAAA,EAAA,MACAC,IAAA,OAAAE,KAAAQ,KAAAV,EAAA,iBAAAA,EAAA,MACA,IAAAW,EAAA,MAAAb,EAAA,MAAAC,EAAA,MAAAC,EACAY,EAAA,MAAAd,EAAA,MAAAC,EAAA,MAAAC,EACAa,EAAA,MAAAf,EAAA,MAAAC,EAAA,MAAAC,EACA,WAAAW,EAAA,IAAAC,EAAA,IAAAC,GAGA,SAAA9D,EAAA8C,GACA,IAAAiB,EAAAhE,EAAA+C,GACAc,EAAAG,EAAA,GACAF,EAAAE,EAAA,GACAD,EAAAC,EAAA,GAaA,OARAF,GAAA,IACAC,GAAA,QACAF,GAHAA,GAAA,QAGA,QAAAT,KAAAQ,IAAAC,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAV,KAAAQ,IAAAE,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAX,KAAAQ,IAAAG,EAAA,WAAAA,EAAA,OAIA,CAHA,IAAAD,EAAA,GACA,KAAAD,EAAAC,GACA,KAAAA,EAAAC,IAQA,SAAA1D,EAAAE,GACA,IAGA0D,EACAC,EACAC,EACApB,EACAqB,EAPA5D,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OAOA,MAAAE,EAEA,OADA2D,EAAA,IAAA1D,EACA0D,KAIAH,EAAA,EAAAvD,GADAwD,EAAAxD,EAAA,GAAAA,GAAA,EAAAD,GAAkCC,EAAAD,EAAAC,EAAAD,GAElCsC,EAAA,QAEA,QAAAvE,EAAA,EAAmBA,EAAA,EAAOA,KAC1B2F,EAAA3D,EAAA,MAAAhC,EAAA,IACA,GAAA2F,IACAA,EAAA,GAAAA,IACAC,EAAA,EAAAD,EAAA,EAAAF,EAAA,GAAAC,EAAAD,GAAAE,EAAoD,EAAAA,EAAA,EAAAD,EAA8B,EAAAC,EAAA,EAAAF,GAAAC,EAAAD,IAAA,IAAAE,GAAA,EAA6DF,EAC/IlB,EAAAvE,GAAA,IAAA4F,EAGA,OAAArB,EAmCA,SAAAjC,EAAAE,GACA,IAAAR,EAAAQ,EAAA,MACAP,EAAAO,EAAA,OACAE,EAAAF,EAAA,OACAqD,EAAAjB,KAAAkB,MAAA9D,GAAA,EACA+D,EAAA/D,EAAA4C,KAAAkB,MAAA9D,GACAgE,EAAA,IAAAtD,GAAA,EAAAT,GACAgE,EAAA,IAAAvD,GAAA,EAAAT,EAAA8D,GACAG,EAAA,IAAAxD,GAAA,EAAAT,GAAA,EAAA8D,IACArD,EAAA,IAAAA,EAEA,OAAAmD,GACA,OACA,OAAAnD,EAAAwD,EAAAF,GAEA,OACA,OAAAC,EAAAvD,EAAAsD,GAEA,OACA,OAAAA,EAAAtD,EAAAwD,GAEA,OACA,OAAAF,EAAAC,EAAAvD,GAEA,OACA,OAAAwD,EAAAF,EAAAtD,GAEA,OACA,OAAAA,EAAAsD,EAAAC,IA+BA,SAAAnD,EAAAqD,GACA,IAIAnG,EACA0C,EACAqD,EACAK,EAPApE,EAAAmE,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OACAI,EAAAF,EAAAC,EAqBA,OAfAC,EAAA,IACAF,GAAAE,EACAD,GAAAC,GAGAvG,EAAA4E,KAAAkB,MAAA,EAAA9D,GAEA+D,EAAA,EAAA/D,EAAAhC,EAEA,MAAAA,KACA+F,EAAA,EAAAA,GAGAK,EAAAC,EAAAN,IAPArD,EAAA,EAAA4D,GAOAD,GAEArG,GACA,QACA,OACA,OACAwE,EAAA9B,EACA+B,EAAA2B,EACA1B,EAAA2B,EACA,MAEA,OACA7B,EAAA4B,EACA3B,EAAA/B,EACAgC,EAAA2B,EACA,MAEA,OACA7B,EAAA6B,EACA5B,EAAA/B,EACAgC,EAAA0B,EACA,MAEA,OACA5B,EAAA6B,EACA5B,EAAA2B,EACA1B,EAAAhC,EACA,MAEA,OACA8B,EAAA4B,EACA3B,EAAA4B,EACA3B,EAAAhC,EACA,MAEA,OACA8B,EAAA9B,EACA+B,EAAA4B,EACA3B,EAAA0B,EAIA,WAAA5B,EAAA,IAAAC,EAAA,IAAAC,GAmBA,SAAAvB,EAAAqD,GACA,IAIAhC,EACAC,EACAC,EANA+B,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAlB,EAAAkB,EAAA,OACAxB,EAAAwB,EAAA,OAOA,OAHAhC,EAAA,EAAAI,KAAAD,IAAA,EAAA8B,GAAA,EAAAzB,MACAP,EAAA,EAAAG,KAAAD,IAAA,EAAA+B,GAAA,EAAA1B,MACAN,EAAA,EAAAE,KAAAD,IAAA,EAAAW,GAAA,EAAAN,MACA,KAAAR,EAAA,IAAAC,EAAA,IAAAC,GAmBA,SAAAX,EAAAyB,GACA,IAGAhB,EACAC,EACAC,EALAW,EAAAG,EAAA,OACAF,EAAAE,EAAA,OACAD,EAAAC,EAAA,OAcA,OATAf,GAAA,MAAAY,EAAA,OAAAC,EAAA,MAAAC,EACAb,EAAA,MAAAW,GAAA,KAAAC,EAAA,MAAAC,EAEAf,GAJAA,EAAA,OAAAa,GAAA,OAAAC,GAAA,MAAAC,GAIA,eAAAX,KAAAQ,IAAAZ,EAAA,YAAAA,GAAA,MACAC,IAAA,eAAAG,KAAAQ,IAAAX,EAAA,YAAAA,GAAA,MACAC,IAAA,eAAAE,KAAAQ,IAAAV,EAAA,YAAAA,GAAA,MACAF,EAAAI,KAAAD,IAAAC,KAAAC,IAAA,EAAAL,GAAA,GACAC,EAAAG,KAAAD,IAAAC,KAAAC,IAAA,EAAAJ,GAAA,GACAC,EAAAE,KAAAD,IAAAC,KAAAC,IAAA,EAAAH,GAAA,GACA,KAAAF,EAAA,IAAAC,EAAA,IAAAC,GAGA,SAAAV,EAAAwB,GACA,IAAAH,EAAAG,EAAA,GACAF,EAAAE,EAAA,GACAD,EAAAC,EAAA,GAaA,OARAF,GAAA,IACAC,GAAA,QACAF,GAHAA,GAAA,QAGA,QAAAT,KAAAQ,IAAAC,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAV,KAAAQ,IAAAE,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAX,KAAAQ,IAAAG,EAAA,WAAAA,EAAA,OAIA,CAHA,IAAAD,EAAA,GACA,KAAAD,EAAAC,GACA,KAAAA,EAAAC,IAQA,SAAArB,EAAAyC,GACA,IAGAtB,EACAC,EACAC,EACAqB,EANA1E,EAAAyE,EAAA,GACAE,EAAAF,EAAA,GACAjC,EAAAiC,EAAA,GAgBA,OAVAzE,GAAA,EAEA0E,GADAtB,EAAA,IAAApD,EAAA,OACA,kBAEAoD,EAAA,IAAAV,KAAAQ,KAAAlD,EAAA,WACA0E,EAAAhC,KAAAQ,IAAAE,EAAA,UAGAD,IAAA,gBAAAA,EAAA,QAAAwB,EAAA,IAAAD,EAAA,qBAAAhC,KAAAQ,IAAAyB,EAAA,IAAAD,EAAA,GACArB,IAAA,iBAAAA,EAAA,SAAAqB,EAAAlC,EAAA,0BAAAE,KAAAQ,IAAAwB,EAAAlC,EAAA,OACA,CAAAW,EAAAC,EAAAC,GAGA,SAAA3D,EAAA+E,GACA,IAGAG,EACA9E,EACAyE,EALAvE,EAAAyE,EAAA,GACAE,EAAAF,EAAA,GACAjC,EAAAiC,EAAA,GAYA,OARAG,EAAAlC,KAAAmC,MAAArC,EAAAmC,IACA7E,EAAA,IAAA8E,EAAA,EAAAlC,KAAAoC,IAEA,IACAhF,GAAA,KAGAyE,EAAA7B,KAAAqC,KAAAJ,IAAAnC,KACA,CAAAxC,EAAAuE,EAAAzE,GAGA,SAAAmC,EAAAxC,GACA,OAAAoC,EAAAG,EAAAvC,IAGA,SAAAyC,EAAA8C,GACA,IAGAL,EACAnC,EACAoC,EALA5E,EAAAgF,EAAA,GACAT,EAAAS,EAAA,GACAlF,EAAAkF,EAAA,GAOA,OAHAJ,EAAA9E,EAAA,MAAA4C,KAAAoC,GACAH,EAAAJ,EAAA7B,KAAAuC,IAAAL,GACApC,EAAA+B,EAAA7B,KAAAwC,IAAAN,GACA,CAAA5E,EAAA2E,EAAAnC,GAWA,SAAAlB,EAAA6D,GACA,OAAAC,EAAAD,GA2BA,IAAAC,EAAA,CACAC,UAAA,cACAC,aAAA,cACAC,KAAA,YACAC,WAAA,cACAC,MAAA,cACAC,MAAA,cACAC,OAAA,cACAC,MAAA,QACAC,eAAA,cACAC,KAAA,UACAC,WAAA,aACAC,MAAA,YACAC,UAAA,cACAC,UAAA,aACAC,WAAA,YACAC,UAAA,aACAC,MAAA,aACAC,eAAA,cACAC,SAAA,cACAC,QAAA,YACAC,KAAA,YACAC,SAAA,UACAC,SAAA,YACAC,cAAA,aACAC,SAAA,cACAC,UAAA,UACAC,SAAA,cACAC,UAAA,cACAC,YAAA,YACAC,eAAA,YACAC,WAAA,YACAC,WAAA,aACAC,QAAA,UACAC,WAAA,cACAC,aAAA,cACAC,cAAA,YACAC,cAAA,WACAC,cAAA,WACAC,cAAA,YACAC,WAAA,YACAC,SAAA,aACAC,YAAA,YACAC,QAAA,cACAC,QAAA,cACAC,WAAA,aACAC,UAAA,YACAC,YAAA,cACAC,YAAA,YACAC,QAAA,YACAC,UAAA,cACAC,WAAA,cACAC,KAAA,YACAC,UAAA,aACAC,KAAA,cACAC,MAAA,UACAC,YAAA,aACAC,KAAA,cACAC,SAAA,cACAC,QAAA,cACAC,UAAA,YACAC,OAAA,WACAC,MAAA,cACAC,MAAA,cACAC,SAAA,cACAC,cAAA,cACAC,UAAA,YACAC,aAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,qBAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,UAAA,cACAC,YAAA,cACAC,cAAA,aACAC,aAAA,cACAC,eAAA,cACAC,eAAA,cACAC,eAAA,cACAC,YAAA,cACAC,KAAA,UACAC,UAAA,YACAC,MAAA,cACAC,QAAA,YACAC,OAAA,UACAC,iBAAA,cACAC,WAAA,UACAC,aAAA,aACAC,aAAA,cACAC,eAAA,aACAC,gBAAA,cACAC,kBAAA,YACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,YACAC,UAAA,cACAC,UAAA,cACAC,SAAA,cACAC,YAAA,cACAC,KAAA,UACAC,QAAA,cACAC,MAAA,YACAC,UAAA,aACAC,OAAA,YACAC,UAAA,WACAC,OAAA,cACAC,cAAA,cACAC,UAAA,cACAC,cAAA,cACAC,cAAA,cACAC,WAAA,cACAC,UAAA,cACAC,KAAA,aACAC,KAAA,cACAC,KAAA,cACAC,WAAA,cACAC,OAAA,YACAC,cAAA,aACAC,IAAA,UACAC,UAAA,cACAC,UAAA,aACAC,YAAA,YACAC,OAAA,cACAC,WAAA,aACAC,SAAA,YACAC,SAAA,cACAC,OAAA,YACAC,OAAA,cACAC,QAAA,cACAC,UAAA,aACAC,UAAA,cACAC,UAAA,cACAC,KAAA,cACAC,YAAA,YACAC,UAAA,aACAC,IAAA,cACAC,KAAA,YACAC,QAAA,cACAC,OAAA,YACAC,UAAA,aACAC,OAAA,cACAC,MAAA,cACAC,MAAA,cACAC,WAAA,cACAC,OAAA,YACAC,YAAA,cAEAzL,EAAA,GAEA,QAAAvE,KAAA4G,EACArC,EAAAC,KAAAC,UAAAmC,EAAA5G,OAGA,IAAAiQ,EAAA,WACA,WAAAC,GAGA,QAAAC,KAAA3P,EAAA,CAEAyP,EAAAE,EAAA,gBAAAA,GAEA,gBAAA1Q,GAEA,MADA,iBAAAA,MAAAG,MAAAwQ,UAAAC,MAAApQ,KAAAV,YACAiB,EAAA2P,GAAA1Q,IAJA,CAMK0Q,GAEL,IAAAG,EAAA,cAAAC,KAAAJ,GACAK,EAAAF,EAAA,GACAG,EAAAH,EAAA,IAEAL,EAAAO,GAAAP,EAAAO,IAAA,IAEAC,GAAAR,EAAAE,GAAA,SAAAA,GACA,gBAAA1Q,GACA,iBAAAA,MAAAG,MAAAwQ,UAAAC,MAAApQ,KAAAV,YACA,IAAA2F,EAAA1E,EAAA2P,GAAA1Q,GACA,oBAAAyF,QAAA5E,IAAA4E,EAAA,OAAAA,EAEA,QAAA5F,EAAA,EAAuBA,EAAA4F,EAAA1F,OAAgBF,IACvC4F,EAAA5F,GAAA4E,KAAAwM,MAAAxL,EAAA5F,IAGA,OAAA4F,GAVA,CAYKiL,GAKL,IAAAD,EAAA,WACAS,KAAAC,MAAA,IAMAV,EAAAE,UAAAS,WAAA,SAAAC,EAAA7P,GACA,IAAA8P,EAAA9P,EAAA,GAEA,YAAAX,IAAAyQ,EAEAJ,KAAAK,UAAAF,IAIA,iBAAAC,IACAA,EAAAnR,MAAAwQ,UAAAC,MAAApQ,KAAAgB,IAGA0P,KAAAM,UAAAH,EAAAC,KAKAb,EAAAE,UAAAa,UAAA,SAAAH,EAAAC,GAIA,OAHAJ,KAAAG,QACAH,KAAAC,MAAA,GACAD,KAAAC,MAAAE,GAAAC,EACAJ,MAOAT,EAAAE,UAAAY,UAAA,SAAAF,GACA,IAAAI,EAAAP,KAAAC,MAAAE,GAEA,IAAAI,EAAA,CACA,IAAAC,EAAAR,KAAAG,MACAN,EAAAG,KAAAC,MAAAO,GACAD,EAAAjB,EAAAkB,GAAAL,GAAAN,GACAG,KAAAC,MAAAE,GAAAI,EAGA,OAAAA,GAGA,qCAAAE,QAAA,SAAAN,GACAZ,EAAAE,UAAAU,GAAA,SAAAI,GACA,OAAAP,KAAAE,WAAAC,EAAAvR,cAGA,IAAA8R,EAAApB,EACAqB,EAAA,CACAzK,UAAA,cACAC,aAAA,cACAC,KAAA,YACAC,WAAA,cACAC,MAAA,cACAC,MAAA,cACAC,OAAA,cACAC,MAAA,QACAC,eAAA,cACAC,KAAA,UACAC,WAAA,aACAC,MAAA,YACAC,UAAA,cACAC,UAAA,aACAC,WAAA,YACAC,UAAA,aACAC,MAAA,aACAC,eAAA,cACAC,SAAA,cACAC,QAAA,YACAC,KAAA,YACAC,SAAA,UACAC,SAAA,YACAC,cAAA,aACAC,SAAA,cACAC,UAAA,UACAC,SAAA,cACAC,UAAA,cACAC,YAAA,YACAC,eAAA,YACAC,WAAA,YACAC,WAAA,aACAC,QAAA,UACAC,WAAA,cACAC,aAAA,cACAC,cAAA,YACAC,cAAA,WACAC,cAAA,WACAC,cAAA,YACAC,WAAA,YACAC,SAAA,aACAC,YAAA,YACAC,QAAA,cACAC,QAAA,cACAC,WAAA,aACAC,UAAA,YACAC,YAAA,cACAC,YAAA,YACAC,QAAA,YACAC,UAAA,cACAC,WAAA,cACAC,KAAA,YACAC,UAAA,aACAC,KAAA,cACAC,MAAA,UACAC,YAAA,aACAC,KAAA,cACAC,SAAA,cACAC,QAAA,cACAC,UAAA,YACAC,OAAA,WACAC,MAAA,cACAC,MAAA,cACAC,SAAA,cACAC,cAAA,cACAC,UAAA,YACAC,aAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,qBAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,UAAA,cACAC,YAAA,cACAC,cAAA,aACAC,aAAA,cACAC,eAAA,cACAC,eAAA,cACAC,eAAA,cACAC,YAAA,cACAC,KAAA,UACAC,UAAA,YACAC,MAAA,cACAC,QAAA,YACAC,OAAA,UACAC,iBAAA,cACAC,WAAA,UACAC,aAAA,aACAC,aAAA,cACAC,eAAA,aACAC,gBAAA,cACAC,kBAAA,YACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,YACAC,UAAA,cACAC,UAAA,cACAC,SAAA,cACAC,YAAA,cACAC,KAAA,UACAC,QAAA,cACAC,MAAA,YACAC,UAAA,aACAC,OAAA,YACAC,UAAA,WACAC,OAAA,cACAC,cAAA,cACAC,UAAA,cACAC,cAAA,cACAC,cAAA,cACAC,WAAA,cACAC,UAAA,cACAC,KAAA,aACAC,KAAA,cACAC,KAAA,cACAC,WAAA,cACAC,OAAA,YACAC,cAAA,aACAC,IAAA,UACAC,UAAA,cACAC,UAAA,aACAC,YAAA,YACAC,OAAA,cACAC,WAAA,aACAC,SAAA,YACAC,SAAA,cACAC,OAAA,YACAC,OAAA,cACAC,QAAA,cACAC,UAAA,aACAC,UAAA,cACAC,UAAA,cACAC,KAAA,cACAC,YAAA,YACAC,UAAA,aACAC,IAAA,cACAC,KAAA,YACAC,QAAA,cACAC,OAAA,YACAC,UAAA,aACAC,OAAA,cACAC,MAAA,cACAC,MAAA,cACAC,WAAA,cACAC,OAAA,YACAC,YAAA,cAIAuB,EAAA,CACAC,UACAC,UACAC,OA8HA,SAAAC,GACA,IAAAC,EAAAJ,EAAAG,GACA,OAAAC,KAAAvB,MAAA,MA/HAwB,OAkIA,SAAAF,GACA,IAAAG,EAAAL,EAAAE,GACA,OAAAG,KAAAzB,MAAA,MAnIA0B,SACAC,SAqIA,SAAAL,GACA,IAAAT,EAAAM,EAAAG,GAEA,OAAAT,EACAA,EAAA,IACKA,EAAAO,EAAAE,IACLT,EAAA,IACKA,EAAAa,EAAAJ,IACLT,EAAA,QADK,GA3ILe,UAiJA,SAAAL,EAAAzL,GACA,IAAAA,OAAA7F,IAAA6F,GAAA,IAAAyL,EAAApS,OAAA2G,EAAAyL,EAAA,GACA,UAAAM,EAAAN,EAAA,IAAAM,EAAAN,EAAA,IAAAM,EAAAN,EAAA,KAAAzL,GAAA,GAAAA,EAAA,EAAA+L,EAAAhO,KAAAwM,MAAA,IAAAvK,IAAA,KAlJAgM,UAqJA,SAAAP,EAAAQ,GACA,OAAAA,EAAA,GAAAR,EAAA,IAAAA,EAAA,KACAS,EAAAT,EAAAQ,GAGA,OAAAR,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAzJAS,aACAC,cAmKA,SAAAV,EAAAQ,GACA,GAAAA,EAAA,GAAAR,EAAA,IAAAA,EAAA,KACA,OAAAW,EAAAX,EAAAQ,GAGA,IAAAtO,EAAAI,KAAAwM,MAAAkB,EAAA,YACA7N,EAAAG,KAAAwM,MAAAkB,EAAA,YACA5N,EAAAE,KAAAwM,MAAAkB,EAAA,YACA,aAAA9N,EAAA,MAAAC,EAAA,MAAAC,EAAA,MA1KAuO,iBACAC,UAmLA,SAAAV,EAAAM,GACA,OAAAA,EAAA,GAAAN,EAAA,IAAAA,EAAA,KACAW,EAAAX,EAAAM,GAGA,OAAAN,EAAA,QAAAA,EAAA,SAAAA,EAAA,SAvLAW,aACAC,UAmMA,SAAAjN,EAAA2M,GAKA,YAJA9R,IAAA8R,IACAA,OAAA9R,IAAAmF,EAAA,GAAAA,EAAA,MAGA,OAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,aAAAnF,IAAA8R,GAAA,IAAAA,EAAA,KAAAA,EAAA,SAvMAzL,QA0MA,SAAA9C,GACA,OAAA8O,EAAA9O,EAAAwM,MAAA,QAxMA,SAAAmB,EAAAG,GACA,GAAAA,EAAA,CAIA,IAKA9N,EAAA,QACAsC,EAAA,EACAyM,EAAAjB,EAAAiB,MAPA,0BAQAC,EAAA,GAEA,GAAAD,EAAA,CACAA,IAAA,GACAC,EAAAD,EAAA,GAEA,QAAAtT,EAAA,EAAqBA,EAAAuE,EAAArE,OAAgBF,IACrCuE,EAAAvE,GAAAwT,SAAAF,EAAAtT,GAAAsT,EAAAtT,GAAA,IAGAuT,IACA1M,EAAAjC,KAAAwM,MAAAoC,SAAAD,IAAA,uBAEK,GAAAD,EAAAjB,EAAAiB,MApBL,yCAoBK,CACLC,EAAAD,EAAA,GACAA,IAAA,GAEA,QAAAtT,EAAA,EAAqBA,EAAAuE,EAAArE,OAAgBF,IACrCuE,EAAAvE,GAAAwT,SAAAF,EAAAvC,MAAA,EAAA/Q,EAAA,EAAAA,EAAA,OAGAuT,IACA1M,EAAAjC,KAAAwM,MAAAoC,SAAAD,EAAA,uBAEK,GAAAD,EAAAjB,EAAAiB,MA9BL,4FA8BK,CACL,QAAAtT,EAAA,EAAqBA,EAAAuE,EAAArE,OAAgBF,IACrCuE,EAAAvE,GAAAwT,SAAAF,EAAAtT,EAAA,IAGA6G,EAAA4M,WAAAH,EAAA,SACK,GAAAA,EAAAjB,EAAAiB,MAnCL,8GAmCK,CACL,QAAAtT,EAAA,EAAqBA,EAAAuE,EAAArE,OAAgBF,IACrCuE,EAAAvE,GAAA4E,KAAAwM,MAAA,KAAAqC,WAAAH,EAAAtT,EAAA,KAGA6G,EAAA4M,WAAAH,EAAA,SACK,GAAAA,EAAAjB,EAAAiB,MAxCL,SAwCK,CACL,kBAAAA,EAAA,GACA,gBAKA,KAFA/O,EAAAyN,EAAAsB,EAAA,KAGA,OAIA,QAAAtT,EAAA,EAAmBA,EAAAuE,EAAArE,OAAgBF,IACnCuE,EAAAvE,GAAA0T,EAAAnP,EAAAvE,GAAA,OAUA,OAJA6G,EAHAA,GAAA,GAAAA,EAGA6M,EAAA7M,EAAA,KAFA,EAKAtC,EAAA,GAAAsC,EACAtC,GAGA,SAAA4N,EAAAE,GACA,GAAAA,EAAA,CAIA,IACAiB,EAAAjB,EAAAiB,MADA,4GAGA,GAAAA,EAAA,CACA,IAAAR,EAAAW,WAAAH,EAAA,IACAtR,EAAA0R,EAAAF,SAAAF,EAAA,WACArR,EAAAyR,EAAAD,WAAAH,EAAA,WACApR,EAAAwR,EAAAD,WAAAH,EAAA,WACAzM,EAAA6M,EAAAC,MAAAb,GAAA,EAAAA,EAAA,KACA,OAAA9Q,EAAAC,EAAAC,EAAA2E,KAIA,SAAA4L,EAAAJ,GACA,GAAAA,EAAA,CAIA,IACAiB,EAAAjB,EAAAiB,MADA,0GAGA,GAAAA,EAAA,CACA,IAAAR,EAAAW,WAAAH,EAAA,IACAtR,EAAA0R,EAAAF,SAAAF,EAAA,WACAvO,EAAA2O,EAAAD,WAAAH,EAAA,WACA5O,EAAAgP,EAAAD,WAAAH,EAAA,WACAzM,EAAA6M,EAAAC,MAAAb,GAAA,EAAAA,EAAA,KACA,OAAA9Q,EAAA+C,EAAAL,EAAAmC,KAwCA,SAAAkM,EAAAT,EAAAQ,GAKA,YAJA9R,IAAA8R,IACAA,OAAA9R,IAAAsR,EAAA,GAAAA,EAAA,MAGA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAQ,EAAA,IAcA,SAAAG,EAAAX,EAAAQ,GACA,IAAAtO,EAAAI,KAAAwM,MAAAkB,EAAA,YACA7N,EAAAG,KAAAwM,MAAAkB,EAAA,YACA5N,EAAAE,KAAAwM,MAAAkB,EAAA,YACA,cAAA9N,EAAA,MAAAC,EAAA,MAAAC,EAAA,OAAAoO,GAAAR,EAAA,WAWA,SAAAa,EAAAX,EAAAM,GAKA,YAJA9R,IAAA8R,IACAA,OAAA9R,IAAAwR,EAAA,GAAAA,EAAA,MAGA,QAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,SAAAM,EAAA,IAkBA,SAAAY,EAAAE,EAAAjP,EAAAE,GACA,OAAAD,KAAAD,IAAAC,KAAAC,IAAAF,EAAAiP,GAAA/O,GAGA,SAAA+N,EAAAgB,GACA,IAAAC,EAAAD,EAAAE,SAAA,IAAAC,cACA,OAAAF,EAAA3T,OAAA,MAAA2T,IAIA,IAAAR,EAAA,GAEA,QAAAW,KAAAhC,EACAqB,EAAArB,EAAAgC,MAKA,IAAAC,EAAA,SAAAA,EAAAC,GACA,OAAAA,aAAAD,EACAC,EAGA7C,gBAAA4C,GAIA5C,KAAA8C,OAAA,EACA9C,KAAAI,OAAA,CACAlN,IAAA,QACAxC,IAAA,QACAS,IAAA,QACA2D,IAAA,QACAK,KAAA,UACAsM,MAAA,QAKA,kBAAAoB,GACAtC,EAAAK,EAAAC,QAAAgC,IAGA7C,KAAAM,UAAA,MAAAC,IACOA,EAAAK,EAAAE,QAAA+B,IACP7C,KAAAM,UAAA,MAAAC,IACOA,EAAAK,EAAAQ,OAAAyB,KACP7C,KAAAM,UAAA,MAAAC,GAEK,kBAAAsC,SAGLlT,KAFA4Q,EAAAsC,GAEA1P,QAAAxD,IAAA4Q,EAAA7C,IACAsC,KAAAM,UAAA,MAAAC,QACO5Q,IAAA4Q,EAAA1P,QAAAlB,IAAA4Q,EAAAwC,UACP/C,KAAAM,UAAA,MAAAC,QACO5Q,IAAA4Q,EAAAlP,QAAA1B,IAAA4Q,EAAAyC,MACPhD,KAAAM,UAAA,MAAAC,QACO5Q,IAAA4Q,EAAA7M,QAAA/D,IAAA4Q,EAAA0C,UACPjD,KAAAM,UAAA,MAAAC,QACO5Q,IAAA4Q,EAAAnL,QAAAzF,IAAA4Q,EAAAjJ,MACP0I,KAAAM,UAAA,OAAAC,MArCA,IAAAqC,EAAAC,GAaA,IAAAtC,IA6BAqC,EAAAnD,UAAA,CACAyD,QAAA,WACA,OAAAlD,KAAA8C,OAEA5P,IAAA,WACA,OAAA8M,KAAAmD,SAAA,MAAAvU,YAEA8B,IAAA,WACA,OAAAsP,KAAAmD,SAAA,MAAAvU,YAEAuC,IAAA,WACA,OAAA6O,KAAAmD,SAAA,MAAAvU,YAEAkG,IAAA,WACA,OAAAkL,KAAAmD,SAAA,MAAAvU,YAEAuG,KAAA,WACA,OAAA6K,KAAAmD,SAAA,OAAAvU,YAEAwU,SAAA,WACA,OAAApD,KAAAI,OAAAlN,KAEAmQ,SAAA,WACA,OAAArD,KAAAI,OAAA1P,KAEA4S,SAAA,WACA,OAAAtD,KAAAI,OAAAjP,KAEAoS,SAAA,WACA,IAAAnD,EAAAJ,KAAAI,OAEA,WAAAA,EAAAqB,MACArB,EAAAtL,IAAA0O,OAAA,CAAApD,EAAAqB,QAGArB,EAAAtL,KAEA2O,UAAA,WACA,OAAAzD,KAAAI,OAAAjL,MAEAuO,UAAA,WACA,IAAAtD,EAAAJ,KAAAI,OACA,OAAAA,EAAAlN,IAAAsQ,OAAA,CAAApD,EAAAqB,SAEAkC,UAAA,WACA,IAAAvD,EAAAJ,KAAAI,OACA,OAAAA,EAAA1P,IAAA8S,OAAA,CAAApD,EAAAqB,SAEAA,MAAA,SAAAlN,GACA,YAAA5E,IAAA4E,EACAyL,KAAAI,OAAAqB,OAGAzB,KAAAM,UAAA,QAAA/L,GACAyL,OAEAtC,IAAA,SAAAnJ,GACA,OAAAyL,KAAA4D,WAAA,QAAArP,IAEAiF,MAAA,SAAAjF,GACA,OAAAyL,KAAA4D,WAAA,QAAArP,IAEAoC,KAAA,SAAApC,GACA,OAAAyL,KAAA4D,WAAA,QAAArP,IAEAsP,IAAA,SAAAtP,GAMA,OALAA,IAEAA,GADAA,GAAA,KACA,MAAAA,KAGAyL,KAAA4D,WAAA,QAAArP,IAEAuP,WAAA,SAAAvP,GACA,OAAAyL,KAAA4D,WAAA,QAAArP,IAEAwO,UAAA,SAAAxO,GACA,OAAAyL,KAAA4D,WAAA,QAAArP,IAEAwP,YAAA,SAAAxP,GACA,OAAAyL,KAAA4D,WAAA,QAAArP,IAEA0O,UAAA,SAAA1O,GACA,OAAAyL,KAAA4D,WAAA,QAAArP,IAEAyP,UAAA,SAAAzP,GACA,OAAAyL,KAAA4D,WAAA,QAAArP,IAEAyO,MAAA,SAAAzO,GACA,OAAAyL,KAAA4D,WAAA,QAAArP,IAEA+C,KAAA,SAAA/C,GACA,OAAAyL,KAAA4D,WAAA,SAAArP,IAEAgH,QAAA,SAAAhH,GACA,OAAAyL,KAAA4D,WAAA,SAAArP,IAEA6K,OAAA,SAAA7K,GACA,OAAAyL,KAAA4D,WAAA,SAAArP,IAEAkC,MAAA,SAAAlC,GACA,OAAAyL,KAAA4D,WAAA,SAAArP,IAEA+M,UAAA,WACA,OAAAV,EAAAU,UAAAtB,KAAAI,OAAAlN,MAEAsO,UAAA,WACA,OAAAZ,EAAAY,UAAAxB,KAAAI,OAAAlN,IAAA8M,KAAAI,OAAAqB,QAEAC,WAAA,WACA,OAAAd,EAAAc,WAAA1B,KAAAI,OAAAlN,IAAA8M,KAAAI,OAAAqB,QAEAE,cAAA,WACA,OAAAf,EAAAe,cAAA3B,KAAAI,OAAAlN,IAAA8M,KAAAI,OAAAqB,QAEAI,UAAA,WACA,OAAAjB,EAAAiB,UAAA7B,KAAAI,OAAA1P,IAAAsP,KAAAI,OAAAqB,QAEAK,WAAA,WACA,OAAAlB,EAAAkB,WAAA9B,KAAAI,OAAA1P,IAAAsP,KAAAI,OAAAqB,QAEAM,UAAA,WACA,OAAAnB,EAAAmB,UAAA/B,KAAAI,OAAAtL,IAAAkL,KAAAI,OAAAqB,QAEAzL,QAAA,WACA,OAAA4K,EAAA5K,QAAAgK,KAAAI,OAAAlN,IAAA8M,KAAAI,OAAAqB,QAEAwC,UAAA,WACA,IAAA/Q,EAAA8M,KAAAI,OAAAlN,IACA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAEAgR,WAAA,WAKA,IAHA,IAAAhR,EAAA8M,KAAAI,OAAAlN,IACAiR,EAAA,GAEAxV,EAAA,EAAqBA,EAAAuE,EAAArE,OAAgBF,IAAA,CACrC,IAAAyV,EAAAlR,EAAAvE,GAAA,IACAwV,EAAAxV,GAAAyV,GAAA,OAAAA,EAAA,MAAA7Q,KAAAQ,KAAAqQ,EAAA,iBAGA,YAAAD,EAAA,SAAAA,EAAA,SAAAA,EAAA,IAEAE,SAAA,SAAAC,GAEA,IAAAC,EAAAvE,KAAAkE,aACAM,EAAAF,EAAAJ,aAEA,OAAAK,EAAAC,GACAD,EAAA,MAAAC,EAAA,MAGAA,EAAA,MAAAD,EAAA,MAEAE,MAAA,SAAAH,GACA,IAAAI,EAAA1E,KAAAqE,SAAAC,GAEA,OAAAI,GAAA,IACA,MAGAA,GAAA,aAEAC,KAAA,WAEA,IAAAzR,EAAA8M,KAAAI,OAAAlN,IAEA,OADA,IAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,QACA,KAEA0R,MAAA,WACA,OAAA5E,KAAA2E,QAEAE,OAAA,WAGA,IAFA,IAAA3R,EAAA,GAEAvE,EAAA,EAAqBA,EAAA,EAAOA,IAC5BuE,EAAAvE,GAAA,IAAAqR,KAAAI,OAAAlN,IAAAvE,GAIA,OADAqR,KAAAM,UAAA,MAAApN,GACA8M,MAEA8E,QAAA,SAAA5P,GACA,IAAAxE,EAAAsP,KAAAI,OAAA1P,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAwE,EACA8K,KAAAM,UAAA,MAAA5P,GACAsP,MAEA+E,OAAA,SAAA7P,GACA,IAAAxE,EAAAsP,KAAAI,OAAA1P,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAwE,EACA8K,KAAAM,UAAA,MAAA5P,GACAsP,MAEAgF,SAAA,SAAA9P,GACA,IAAAxE,EAAAsP,KAAAI,OAAA1P,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAwE,EACA8K,KAAAM,UAAA,MAAA5P,GACAsP,MAEAiF,WAAA,SAAA/P,GACA,IAAAxE,EAAAsP,KAAAI,OAAA1P,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAwE,EACA8K,KAAAM,UAAA,MAAA5P,GACAsP,MAEAkF,OAAA,SAAAhQ,GACA,IAAAJ,EAAAkL,KAAAI,OAAAtL,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAI,EACA8K,KAAAM,UAAA,MAAAxL,GACAkL,MAEAmF,QAAA,SAAAjQ,GACA,IAAAJ,EAAAkL,KAAAI,OAAAtL,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAI,EACA8K,KAAAM,UAAA,MAAAxL,GACAkL,MAEAoF,UAAA,WACA,IAAAlS,EAAA8M,KAAAI,OAAAlN,IAEAqB,EAAA,GAAArB,EAAA,OAAAA,EAAA,OAAAA,EAAA,GAEA,OADA8M,KAAAM,UAAA,OAAA/L,QACAyL,MAEAqF,QAAA,SAAAnQ,GACA,IAAAuM,EAAAzB,KAAAI,OAAAqB,MAEA,OADAzB,KAAAM,UAAA,QAAAmB,IAAAvM,GACA8K,MAEAsF,QAAA,SAAApQ,GACA,IAAAuM,EAAAzB,KAAAI,OAAAqB,MAEA,OADAzB,KAAAM,UAAA,QAAAmB,IAAAvM,GACA8K,MAEAuF,OAAA,SAAAC,GACA,IAAA9U,EAAAsP,KAAAI,OAAA1P,IACAmT,GAAAnT,EAAA,GAAA8U,GAAA,IAGA,OAFA9U,EAAA,GAAAmT,EAAA,MAAAA,IACA7D,KAAAM,UAAA,MAAA5P,GACAsP,MAOAyF,IAAA,SAAAC,EAAAC,GACA,IACArB,EAAAoB,EACA/Q,OAAAhF,IAAAgW,EAAA,GAAAA,EACAjS,EAAA,EAAAiB,EAAA,EACAa,EAJAwK,KAIAyB,QAAA6C,EAAA7C,QACAmE,IAAAlS,EAAA8B,KAAA,EAAA9B,KAAA8B,IAAA,EAAA9B,EAAA8B,IAAA,KACAqQ,EAAA,EAAAD,EACA,OAAA5F,KAAA9M,IAAA0S,EAPA5F,KAOAtC,MAAAmI,EAAAvB,EAAA5G,MAAAkI,EAPA5F,KAOAxG,QAAAqM,EAAAvB,EAAA9K,QAAAoM,EAPA5F,KAOArJ,OAAAkP,EAAAvB,EAAA3N,QAAA8K,MAPAzB,KAOAyB,QAAA9M,EAAA2P,EAAA7C,SAAA,EAAA9M,KAEAmR,OAAA,WACA,OAAA9F,KAAA9M,OAEA6S,MAAA,WAKA,IAGA/C,EAAAgD,EAHAC,EAAA,IAAArD,EACAsD,EAAAlG,KAAAI,OACA+F,EAAAF,EAAA7F,OAGA,QAAAgG,KAAAF,EACAA,EAAA1X,eAAA4X,KACApD,EAAAkD,EAAAE,GAGA,oBAFAJ,EAAA,GAAmBvD,SAAAnT,KAAA0T,IAGnBmD,EAAAC,GAAApD,EAAAtD,MAAA,GACW,oBAAAsG,EACXG,EAAAC,GAAApD,EAEAqD,QAAAC,MAAA,0BAAAtD,IAKA,OAAAiD,KAGAM,OAAA,CACArT,IAAA,uBACAxC,IAAA,iCACAS,IAAA,6BACA2D,IAAA,gCACAK,KAAA,qCAEAyN,EAAAnD,UAAA+G,MAAA,CACAtT,IAAA,cACAxC,IAAA,cACAS,IAAA,cACA2D,IAAA,cACAK,KAAA,mBAGAyN,EAAAnD,UAAAY,UAAA,SAAAF,GAIA,IAHA,IAAAC,EAAAJ,KAAAI,OACAG,EAAA,GAEA5R,EAAA,EAAmBA,EAAAwR,EAAAtR,OAAkBF,IACrC4R,EAAAJ,EAAAsG,OAAA9X,IAAAyR,EAAAD,GAAAxR,GAQA,OALA,IAAAyR,EAAAqB,QACAlB,EAAA/K,EAAA4K,EAAAqB,OAIAlB,GAGAqC,EAAAnD,UAAAa,UAAA,SAAAH,EAAAI,GACA,IAIA5R,EAiCA+X,EArCAtG,EAAAJ,KAAAI,OACAmG,EAAAvG,KAAAuG,OACAC,EAAAxG,KAAAwG,MACA/E,EAAA,EAIA,GAFAzB,KAAA8C,OAAA,EAEA,UAAA3C,EACAsB,EAAAlB,OACK,GAAAA,EAAA1R,OAELuR,EAAAD,GAAAI,EAAAb,MAAA,EAAAS,EAAAtR,QACA4S,EAAAlB,EAAAJ,EAAAtR,aACK,QAAAc,IAAA4Q,EAAAJ,EAAAsG,OAAA,KAEL,IAAA9X,EAAA,EAAiBA,EAAAwR,EAAAtR,OAAkBF,IACnCyR,EAAAD,GAAAxR,GAAA4R,EAAAJ,EAAAsG,OAAA9X,IAGA8S,EAAAlB,EAAA/K,OACK,QAAA7F,IAAA4Q,EAAAgG,EAAApG,GAAA,KAEL,IAAAwG,EAAAJ,EAAApG,GAEA,IAAAxR,EAAA,EAAiBA,EAAAwR,EAAAtR,OAAkBF,IACnCyR,EAAAD,GAAAxR,GAAA4R,EAAAoG,EAAAhY,IAGA8S,EAAAlB,EAAAkB,MAKA,GAFArB,EAAAqB,MAAAlO,KAAAC,IAAA,EAAAD,KAAAD,IAAA,OAAA3D,IAAA8R,EAAArB,EAAAqB,UAEA,UAAAtB,EACA,SAKA,IAAAxR,EAAA,EAAeA,EAAAwR,EAAAtR,OAAkBF,IACjC+X,EAAAnT,KAAAC,IAAA,EAAAD,KAAAD,IAAAkT,EAAArG,GAAAxR,GAAAyR,EAAAD,GAAAxR,KACAyR,EAAAD,GAAAxR,GAAA4E,KAAAwM,MAAA2G,GAIA,QAAAE,KAAAL,EACAK,IAAAzG,IACAC,EAAAwG,GAAAlG,EAAAP,GAAAyG,GAAAxG,EAAAD,KAIA,UAGAyC,EAAAnD,UAAA0D,SAAA,SAAAhD,EAAA7P,GACA,IAAAiQ,EAAAjQ,EAAA,GAEA,YAAAX,IAAA4Q,EAEAP,KAAAK,UAAAF,IAIA,kBAAAI,IACAA,EAAAtR,MAAAwQ,UAAAC,MAAApQ,KAAAgB,IAGA0P,KAAAM,UAAAH,EAAAI,GACAP,OAGA4C,EAAAnD,UAAAmE,WAAA,SAAAzD,EAAA0G,EAAAtS,GACA,IAAAuS,EAAA9G,KAAAI,OAAAD,GAEA,YAAAxQ,IAAA4E,EAEAuS,EAAAD,GACKtS,IAAAuS,EAAAD,GAEL7G,MAIA8G,EAAAD,GAAAtS,EACAyL,KAAAM,UAAAH,EAAA2G,GACA9G,OAGA,qBAAA+G,SACAA,OAAAnE,SAGA,IAAAoE,EAAApE,EAKAqE,EAAA,CAIAC,KAAA,aAOAC,IAAA,WACA,IAAAC,EAAA,EACA,kBACA,OAAAA,KAHA,GAaAC,cAAA,SAAArE,GACA,cAAAA,GAAA,qBAAAA,GASA9T,QAAA,SAAA8T,GACA,GAAA/T,MAAAC,SAAAD,MAAAC,QAAA8T,GACA,SAGA,IAAAgD,EAAAsB,OAAA7H,UAAAgD,SAAAnT,KAAA0T,GAEA,kBAAAgD,EAAAuB,OAAA,iBAAAvB,EAAAuB,QAAA,IAaAC,SAAA,SAAAxE,GACA,cAAAA,GAAA,oBAAAsE,OAAA7H,UAAAgD,SAAAnT,KAAA0T,IAQAyE,SAAA,SAAAC,GACA,SAAAD,EAAAE,GACA,OAAAD,EAAAtY,MAAA4Q,KAAApR,WAOA,OAJA6Y,EAAAhF,SAAA,WACA,OAAAiF,EAAAjF,YAGAgF,EATA,CAUK,SAAAzE,GACL,yBAAAA,gBAAA4E,SAAAH,SAAAzE,KASA6E,eAAA,SAAA7E,EAAA8E,GACA,2BAAA9E,EAAA8E,EAAA9E,GAUA+E,sBAAA,SAAA/E,EAAA6D,EAAAiB,GACA,OAAAb,EAAAY,eAAAZ,EAAA/X,QAAA8T,KAAA6D,GAAA7D,EAAA8E,IAWAE,SAAA,SAAAC,EAAA3X,EAAA4X,GACA,GAAAD,GAAA,oBAAAA,EAAA3Y,KACA,OAAA2Y,EAAA7Y,MAAA8Y,EAAA5X,IAaA6X,KAAA,SAAAC,EAAAH,EAAAC,EAAAG,GACA,IAAA1Z,EAAA2Z,EAAAC,EAEA,GAAAtB,EAAA/X,QAAAkZ,GAGA,GAFAE,EAAAF,EAAAvZ,OAEAwZ,EACA,IAAA1Z,EAAA2Z,EAAA,EAA2B3Z,GAAA,EAAQA,IACnCsZ,EAAA3Y,KAAA4Y,EAAAE,EAAAzZ,WAGA,IAAAA,EAAA,EAAqBA,EAAA2Z,EAAS3Z,IAC9BsZ,EAAA3Y,KAAA4Y,EAAAE,EAAAzZ,WAGO,GAAAsY,EAAAO,SAAAY,GAIP,IAHAG,EAAAjB,OAAAiB,KAAAH,GACAE,EAAAC,EAAA1Z,OAEAF,EAAA,EAAmBA,EAAA2Z,EAAS3Z,IAC5BsZ,EAAA3Y,KAAA4Y,EAAAE,EAAAG,EAAA5Z,IAAA4Z,EAAA5Z,KAYA6Z,YAAA,SAAAC,EAAAC,GACA,IAAA/Z,EAAAga,EAAAC,EAAAC,EAEA,IAAAJ,IAAAC,GAAAD,EAAA5Z,SAAA6Z,EAAA7Z,OACA,SAGA,IAAAF,EAAA,EAAAga,EAAAF,EAAA5Z,OAAmCF,EAAAga,IAAUha,EAI7C,GAHAia,EAAAH,EAAA9Z,GACAka,EAAAH,EAAA/Z,GAEAia,aAAA3Z,OAAA4Z,aAAA5Z,OACA,IAAAgY,EAAAuB,YAAAI,EAAAC,GACA,cAES,GAAAD,IAAAC,EAET,SAIA,UAQA9C,MAAA,SAAAG,GACA,GAAAe,EAAA/X,QAAAgX,GACA,OAAAA,EAAA4C,IAAA7B,EAAAlB,OAGA,GAAAkB,EAAAO,SAAAtB,GAAA,CAMA,IALA,IAAAC,EAAA,GACAoC,EAAAjB,OAAAiB,KAAArC,GACA6C,EAAAR,EAAA1Z,OACA8E,EAAA,EAEcA,EAAAoV,IAAUpV,EACxBwS,EAAAoC,EAAA5U,IAAAsT,EAAAlB,MAAAG,EAAAqC,EAAA5U,KAGA,OAAAwS,EAGA,OAAAD,GAQA8C,QAAA,SAAA3Z,EAAA8W,EAAAD,EAAA+C,GACA,IAAAC,EAAA/C,EAAA9W,GACA8Z,EAAAjD,EAAA7W,GAEA4X,EAAAO,SAAA0B,IAAAjC,EAAAO,SAAA2B,GACAlC,EAAAmC,MAAAF,EAAAC,EAAAF,GAEA9C,EAAA9W,GAAA4X,EAAAlB,MAAAoD,IAQAE,UAAA,SAAAha,EAAA8W,EAAAD,GACA,IAAAgD,EAAA/C,EAAA9W,GACA8Z,EAAAjD,EAAA7W,GAEA4X,EAAAO,SAAA0B,IAAAjC,EAAAO,SAAA2B,GACAlC,EAAAqC,QAAAJ,EAAAC,GACOhD,EAAA3X,eAAAa,KACP8W,EAAA9W,GAAA4X,EAAAlB,MAAAoD,KAaAC,MAAA,SAAAjD,EAAAD,EAAA+C,GACA,IAEAG,EAAAza,EAAA4Z,EAAAQ,EAAApV,EAFA4V,EAAAtC,EAAA/X,QAAAgX,KAAA,CAAAA,GACAyC,EAAAY,EAAA1a,OAGA,IAAAoY,EAAAO,SAAArB,GACA,OAAAA,EAMA,IAFAiD,GADAH,KAAA,IACAO,QAAAvC,EAAA+B,QAEAra,EAAA,EAAiBA,EAAAga,IAAUha,EAG3B,GAFAuX,EAAAqD,EAAA5a,GAEAsY,EAAAO,SAAAtB,GAMA,IAFAqC,EAAAjB,OAAAiB,KAAArC,GAEAvS,EAAA,EAAAoV,EAAAR,EAAA1Z,OAAuC8E,EAAAoV,IAAUpV,EACjDyV,EAAAb,EAAA5U,GAAAwS,EAAAD,EAAA+C,GAIA,OAAA9C,GAUAmD,QAAA,SAAAnD,EAAAD,GACA,OAAAe,EAAAmC,MAAAjD,EAAAD,EAAA,CACAsD,OAAAvC,EAAAoC,aAWAI,OAAA,SAAAtD,GAKA,IAJA,IAAAuD,EAAA,SAAA1G,EAAA3T,GACA8W,EAAA9W,GAAA2T,GAGArU,EAAA,EAAAga,EAAA/Z,UAAAC,OAA8CF,EAAAga,IAAUha,EACxDsY,EAAAkB,KAAAvZ,UAAAD,GAAA+a,GAGA,OAAAvD,GAMAwD,SAAA,SAAAC,GACA,IAAAC,EAAA7J,KACA8J,EAAAF,KAAApb,eAAA,eAAAob,EAAAG,YAAA,WACA,OAAAF,EAAAza,MAAA4Q,KAAApR,YAGAob,EAAA,WACAhK,KAAA+J,YAAAD,GAYA,OATAE,EAAAvK,UAAAoK,EAAApK,UACAqK,EAAArK,UAAA,IAAAuK,EACAF,EAAAL,OAAAxC,EAAA0C,SAEAC,GACA3C,EAAAwC,OAAAK,EAAArK,UAAAmK,GAGAE,EAAAG,UAAAJ,EAAApK,UACAqK,IAGAI,EAAAjD,EAUAA,EAAAkD,aAAAlD,EAAAe,SAUAf,EAAAmD,QAAA,SAAAC,EAAAC,EAAAC,GACA,OAAAtb,MAAAwQ,UAAA2K,QAAA9a,KAAA+a,EAAAC,EAAAC,IAWAtD,EAAAuD,kBAAAvD,EAAAY,eASAZ,EAAAwD,yBAAAxD,EAAAc,sBAOA,IAAA2C,EAAA,CACAC,OAAA,SAAA9V,GACA,OAAAA,GAEA+V,WAAA,SAAA/V,GACA,OAAAA,KAEAgW,YAAA,SAAAhW,GACA,OAAAA,KAAA,IAEAiW,cAAA,SAAAjW,GACA,OAAAA,GAAA,MACA,GAAAA,KAGA,MAAAA,KAAA,OAEAkW,YAAA,SAAAlW,GACA,OAAAA,OAEAmW,aAAA,SAAAnW,GACA,OAAAA,GAAA,GAAAA,IAAA,GAEAoW,eAAA,SAAApW,GACA,OAAAA,GAAA,MACA,GAAAA,MAGA,KAAAA,GAAA,GAAAA,IAAA,IAEAqW,YAAA,SAAArW,GACA,OAAAA,SAEAsW,aAAA,SAAAtW,GACA,SAAAA,GAAA,GAAAA,MAAA,IAEAuW,eAAA,SAAAvW,GACA,OAAAA,GAAA,MACA,GAAAA,SAGA,KAAAA,GAAA,GAAAA,MAAA,IAEAwW,YAAA,SAAAxW,GACA,OAAAA,WAEAyW,aAAA,SAAAzW,GACA,OAAAA,GAAA,GAAAA,QAAA,GAEA0W,eAAA,SAAA1W,GACA,OAAAA,GAAA,MACA,GAAAA,UAGA,KAAAA,GAAA,GAAAA,QAAA,IAEA2W,WAAA,SAAA3W,GACA,SAAAtB,KAAAuC,IAAAjB,GAAAtB,KAAAoC,GAAA,KAEA8V,YAAA,SAAA5W,GACA,OAAAtB,KAAAwC,IAAAlB,GAAAtB,KAAAoC,GAAA,KAEA+V,cAAA,SAAA7W,GACA,WAAAtB,KAAAuC,IAAAvC,KAAAoC,GAAAd,GAAA,IAEA8W,WAAA,SAAA9W,GACA,WAAAA,EAAA,EAAAtB,KAAAQ,IAAA,MAAAc,EAAA,KAEA+W,YAAA,SAAA/W,GACA,WAAAA,EAAA,IAAAtB,KAAAQ,IAAA,MAAAc,IAEAgX,cAAA,SAAAhX,GACA,WAAAA,EACA,EAGA,IAAAA,EACA,GAGAA,GAAA,MACA,GAAAtB,KAAAQ,IAAA,MAAAc,EAAA,IAGA,MAAAtB,KAAAQ,IAAA,QAAAc,KAEAiX,WAAA,SAAAjX,GACA,OAAAA,GAAA,EACAA,IAGAtB,KAAAqC,KAAA,EAAAf,KAAA,IAEAkX,YAAA,SAAAlX,GACA,OAAAtB,KAAAqC,KAAA,GAAAf,GAAA,GAAAA,IAEAmX,cAAA,SAAAnX,GACA,OAAAA,GAAA,OACA,IAAAtB,KAAAqC,KAAA,EAAAf,KAAA,GAGA,IAAAtB,KAAAqC,KAAA,GAAAf,GAAA,GAAAA,GAAA,IAEAoX,cAAA,SAAApX,GACA,IAAAjE,EAAA,QACA+D,EAAA,EACAa,EAAA,EAEA,WAAAX,EACA,EAGA,IAAAA,EACA,GAGAF,IACAA,EAAA,IAGAa,EAAA,GACAA,EAAA,EACA5E,EAAA+D,EAAA,GAEA/D,EAAA+D,GAAA,EAAApB,KAAAoC,IAAApC,KAAA2Y,KAAA,EAAA1W,IAGAA,EAAAjC,KAAAQ,IAAA,MAAAc,GAAA,IAAAtB,KAAAwC,KAAAlB,EAAAjE,IAAA,EAAA2C,KAAAoC,IAAAhB,KAEAwX,eAAA,SAAAtX,GACA,IAAAjE,EAAA,QACA+D,EAAA,EACAa,EAAA,EAEA,WAAAX,EACA,EAGA,IAAAA,EACA,GAGAF,IACAA,EAAA,IAGAa,EAAA,GACAA,EAAA,EACA5E,EAAA+D,EAAA,GAEA/D,EAAA+D,GAAA,EAAApB,KAAAoC,IAAApC,KAAA2Y,KAAA,EAAA1W,GAGAA,EAAAjC,KAAAQ,IAAA,MAAAc,GAAAtB,KAAAwC,KAAAlB,EAAAjE,IAAA,EAAA2C,KAAAoC,IAAAhB,GAAA,IAEAyX,iBAAA,SAAAvX,GACA,IAAAjE,EAAA,QACA+D,EAAA,EACAa,EAAA,EAEA,WAAAX,EACA,EAGA,KAAAA,GAAA,IACA,GAGAF,IACAA,EAAA,KAGAa,EAAA,GACAA,EAAA,EACA5E,EAAA+D,EAAA,GAEA/D,EAAA+D,GAAA,EAAApB,KAAAoC,IAAApC,KAAA2Y,KAAA,EAAA1W,GAGAX,EAAA,EACAW,EAAAjC,KAAAQ,IAAA,MAAAc,GAAA,IAAAtB,KAAAwC,KAAAlB,EAAAjE,IAAA,EAAA2C,KAAAoC,IAAAhB,IAAA,GAGAa,EAAAjC,KAAAQ,IAAA,OAAAc,GAAA,IAAAtB,KAAAwC,KAAAlB,EAAAjE,IAAA,EAAA2C,KAAAoC,IAAAhB,GAAA,OAEA0X,WAAA,SAAAxX,GACA,IAAAjE,EAAA,QACA,OAAAiE,MAAAjE,EAAA,GAAAiE,EAAAjE,IAEA0b,YAAA,SAAAzX,GACA,IAAAjE,EAAA,QACA,OAAAiE,GAAA,GAAAA,IAAAjE,EAAA,GAAAiE,EAAAjE,GAAA,GAEA2b,cAAA,SAAA1X,GACA,IAAAjE,EAAA,QAEA,OAAAiE,GAAA,MACAA,MAAA,GAAAjE,GAAA,QAAAiE,EAAAjE,GAAA,GAGA,KAAAiE,GAAA,GAAAA,IAAA,GAAAjE,GAAA,QAAAiE,EAAAjE,GAAA,IAEA4b,aAAA,SAAA3X,GACA,SAAA6V,EAAA+B,cAAA,EAAA5X,IAEA4X,cAAA,SAAA5X,GACA,OAAAA,EAAA,OACA,OAAAA,IAGAA,EAAA,OACA,QAAAA,GAAA,UAAAA,EAAA,IAGAA,EAAA,SACA,QAAAA,GAAA,WAAAA,EAAA,MAGA,QAAAA,GAAA,YAAAA,EAAA,SAEA6X,gBAAA,SAAA7X,GACA,OAAAA,EAAA,GACA,GAAA6V,EAAA8B,aAAA,EAAA3X,GAGA,GAAA6V,EAAA+B,cAAA,EAAA5X,EAAA,QAGA8X,EAAA,CACAjC,WAWAR,EAAA0C,cAAAlC,EACA,IAAA/U,EAAApC,KAAAoC,GACAkX,EAAAlX,EAAA,IACAmX,EAAA,EAAAnX,EACAoX,GAAApX,EAAA,EACAqX,GAAArX,EAAA,EACAsX,GAAA,EAAAtX,EAAA,EAKAuX,GAAA,CAKAC,MAAA,SAAAC,GACAA,EAAAC,IAAAC,UAAA,IAAAF,EAAAG,MAAAH,EAAAI,SAcAC,YAAA,SAAAJ,EAAArZ,EAAAC,EAAAsZ,EAAAC,EAAAE,GACA,GAAAA,EAAA,CACA,IAAAva,EAAAI,KAAAD,IAAAoa,EAAAF,EAAA,EAAAD,EAAA,GACAI,EAAA3Z,EAAAb,EACAya,EAAA3Z,EAAAd,EACA0a,EAAA7Z,EAAAuZ,EAAApa,EACA2a,EAAA7Z,EAAAuZ,EAAAra,EACAka,EAAAU,OAAA/Z,EAAA4Z,GAEAD,EAAAE,GAAAD,EAAAE,GACAT,EAAAW,IAAAL,EAAAC,EAAAza,GAAAwC,GAAAoX,IACAM,EAAAW,IAAAH,EAAAD,EAAAza,GAAA4Z,GAAA,GACAM,EAAAW,IAAAH,EAAAC,EAAA3a,EAAA,EAAA4Z,IACAM,EAAAW,IAAAL,EAAAG,EAAA3a,EAAA4Z,GAAApX,IACSgY,EAAAE,GACTR,EAAAU,OAAAJ,EAAA1Z,GACAoZ,EAAAW,IAAAH,EAAAD,EAAAza,GAAA4Z,OACAM,EAAAW,IAAAL,EAAAC,EAAAza,EAAA4Z,GAAApX,EAAAoX,KACSa,EAAAE,GACTT,EAAAW,IAAAL,EAAAC,EAAAza,GAAAwC,EAAA,GACA0X,EAAAW,IAAAL,EAAAG,EAAA3a,EAAA,EAAAwC,IAEA0X,EAAAW,IAAAL,EAAAC,EAAAza,GAAAwC,KAGA0X,EAAAY,YACAZ,EAAAU,OAAA/Z,EAAAC,QAEAoZ,EAAAa,KAAAla,EAAAC,EAAAsZ,EAAAC,IAGAW,UAAA,SAAAd,EAAAe,EAAAV,EAAA1Z,EAAAC,EAAAoa,GACA,IAAArI,EAAAsI,EAAAC,EAAAC,EAAAC,EACAC,GAAAL,GAAA,GAAAxB,EAEA,IAAAuB,GAAA,kBAAAA,GAGA,+BAFApI,EAAAoI,EAAA3L,aAEA,+BAAAuD,GAMA,KAAA1D,MAAAoL,OAAA,IAMA,OAFAL,EAAAsB,YAEAP,GAEA,QACAf,EAAAW,IAAAha,EAAAC,EAAAyZ,EAAA,EAAAZ,GACAO,EAAAY,YACA,MAEA,eACAZ,EAAAU,OAAA/Z,EAAAT,KAAAwC,IAAA2Y,GAAAhB,EAAAzZ,EAAAV,KAAAuC,IAAA4Y,GAAAhB,GACAgB,GAAAzB,GACAI,EAAAuB,OAAA5a,EAAAT,KAAAwC,IAAA2Y,GAAAhB,EAAAzZ,EAAAV,KAAAuC,IAAA4Y,GAAAhB,GACAgB,GAAAzB,GACAI,EAAAuB,OAAA5a,EAAAT,KAAAwC,IAAA2Y,GAAAhB,EAAAzZ,EAAAV,KAAAuC,IAAA4Y,GAAAhB,GACAL,EAAAY,YACA,MAEA,kBASAO,EAAAd,GADAe,EAAA,KAAAf,GAEAY,EAAA/a,KAAAuC,IAAA4Y,EAAA1B,IAAAwB,EACAD,EAAAhb,KAAAwC,IAAA2Y,EAAA1B,IAAAwB,EACAnB,EAAAW,IAAAha,EAAAsa,EAAAra,EAAAsa,EAAAE,EAAAC,EAAA/Y,EAAA+Y,EAAA3B,IACAM,EAAAW,IAAAha,EAAAua,EAAAta,EAAAqa,EAAAG,EAAAC,EAAA3B,GAAA2B,GACArB,EAAAW,IAAAha,EAAAsa,EAAAra,EAAAsa,EAAAE,EAAAC,IAAA3B,IACAM,EAAAW,IAAAha,EAAAua,EAAAta,EAAAqa,EAAAG,EAAAC,EAAA3B,GAAA2B,EAAA/Y,GACA0X,EAAAY,YACA,MAEA,WACA,IAAAI,EAAA,CACAG,EAAAjb,KAAAsb,QAAAnB,EACAL,EAAAa,KAAAla,EAAAwa,EAAAva,EAAAua,EAAA,EAAAA,EAAA,EAAAA,GACA,MAGAE,GAAA1B,GAIA,cACAsB,EAAA/a,KAAAuC,IAAA4Y,GAAAhB,EACAa,EAAAhb,KAAAwC,IAAA2Y,GAAAhB,EACAL,EAAAU,OAAA/Z,EAAAsa,EAAAra,EAAAsa,GACAlB,EAAAuB,OAAA5a,EAAAua,EAAAta,EAAAqa,GACAjB,EAAAuB,OAAA5a,EAAAsa,EAAAra,EAAAsa,GACAlB,EAAAuB,OAAA5a,EAAAua,EAAAta,EAAAqa,GACAjB,EAAAY,YACA,MAEA,eACAS,GAAA1B,GAIA,YACAsB,EAAA/a,KAAAuC,IAAA4Y,GAAAhB,EACAa,EAAAhb,KAAAwC,IAAA2Y,GAAAhB,EACAL,EAAAU,OAAA/Z,EAAAsa,EAAAra,EAAAsa,GACAlB,EAAAuB,OAAA5a,EAAAsa,EAAAra,EAAAsa,GACAlB,EAAAU,OAAA/Z,EAAAua,EAAAta,EAAAqa,GACAjB,EAAAuB,OAAA5a,EAAAua,EAAAta,EAAAqa,GACA,MAEA,WACAA,EAAA/a,KAAAuC,IAAA4Y,GAAAhB,EACAa,EAAAhb,KAAAwC,IAAA2Y,GAAAhB,EACAL,EAAAU,OAAA/Z,EAAAsa,EAAAra,EAAAsa,GACAlB,EAAAuB,OAAA5a,EAAAsa,EAAAra,EAAAsa,GACAlB,EAAAU,OAAA/Z,EAAAua,EAAAta,EAAAqa,GACAjB,EAAAuB,OAAA5a,EAAAua,EAAAta,EAAAqa,GACAI,GAAA1B,GACAsB,EAAA/a,KAAAuC,IAAA4Y,GAAAhB,EACAa,EAAAhb,KAAAwC,IAAA2Y,GAAAhB,EACAL,EAAAU,OAAA/Z,EAAAsa,EAAAra,EAAAsa,GACAlB,EAAAuB,OAAA5a,EAAAsa,EAAAra,EAAAsa,GACAlB,EAAAU,OAAA/Z,EAAAua,EAAAta,EAAAqa,GACAjB,EAAAuB,OAAA5a,EAAAua,EAAAta,EAAAqa,GACA,MAEA,WACAA,EAAA/a,KAAAuC,IAAA4Y,GAAAhB,EACAa,EAAAhb,KAAAwC,IAAA2Y,GAAAhB,EACAL,EAAAU,OAAA/Z,EAAAsa,EAAAra,EAAAsa,GACAlB,EAAAuB,OAAA5a,EAAAsa,EAAAra,EAAAsa,GACA,MAEA,WACAlB,EAAAU,OAAA/Z,EAAAC,GACAoZ,EAAAuB,OAAA5a,EAAAT,KAAAuC,IAAA4Y,GAAAhB,EAAAzZ,EAAAV,KAAAwC,IAAA2Y,GAAAhB,GAIAL,EAAAyB,OACAzB,EAAA0B,eA/GA1B,EAAA2B,UAAAZ,EAAApa,EAAAoa,EAAAb,MAAA,EAAAtZ,EAAAma,EAAAZ,OAAA,EAAAY,EAAAb,MAAAa,EAAAZ,SAyHAyB,eAAA,SAAAC,EAAAC,GAGA,OAAAD,EAAAlb,EAAAmb,EAAAxB,KAFA,MAEAuB,EAAAlb,EAAAmb,EAAAtB,MAFA,MAEAqB,EAAAjb,EAAAkb,EAAAvB,IAFA,MAEAsB,EAAAjb,EAAAkb,EAAArB,OAFA,MAIAsB,SAAA,SAAA/B,EAAA8B,GACA9B,EAAAgC,OACAhC,EAAAsB,YACAtB,EAAAa,KAAAiB,EAAAxB,KAAAwB,EAAAvB,IAAAuB,EAAAtB,MAAAsB,EAAAxB,KAAAwB,EAAArB,OAAAqB,EAAAvB,KACAP,EAAAiC,QAEAC,WAAA,SAAAlC,GACAA,EAAAmC,WAEAZ,OAAA,SAAAvB,EAAAoC,EAAAtJ,EAAAuJ,GACA,IAAAC,EAAAxJ,EAAAyJ,YAEA,GAAAD,EAAA,CACA,cAAAA,EAAA,CACA,IAAAE,GAAAJ,EAAAzb,EAAAmS,EAAAnS,GAAA,EACAqZ,EAAAuB,OAAAiB,EAAAH,EAAAvJ,EAAAlS,EAAAwb,EAAAxb,GACAoZ,EAAAuB,OAAAiB,EAAAH,EAAAD,EAAAxb,EAAAkS,EAAAlS,OACS,UAAA0b,IAAAD,GAAA,UAAAC,GAAAD,EACTrC,EAAAuB,OAAAa,EAAAzb,EAAAmS,EAAAlS,GAEAoZ,EAAAuB,OAAAzI,EAAAnS,EAAAyb,EAAAxb,GAGAoZ,EAAAuB,OAAAzI,EAAAnS,EAAAmS,EAAAlS,QAIAkS,EAAA2J,QAKAzC,EAAA0C,cAAAL,EAAAD,EAAAO,sBAAAP,EAAAQ,kBAAAP,EAAAD,EAAAS,sBAAAT,EAAAU,kBAAAT,EAAAvJ,EAAA8J,kBAAA9J,EAAA6J,sBAAAN,EAAAvJ,EAAAgK,kBAAAhK,EAAA+J,sBAAA/J,EAAAnS,EAAAmS,EAAAlS,GAJAoZ,EAAAuB,OAAAzI,EAAAnS,EAAAmS,EAAAlS,KAOAmc,GAAAlD,GAUAhD,EAAAiD,MAAAD,GAAAC,MASAjD,EAAAmG,qBAAA,SAAAhD,GACAA,EAAAsB,YACAzB,GAAAO,YAAAre,MAAA8d,GAAAte,YAGA,IAAA0hB,GAAA,CAIAC,KAAA,SAAAC,EAAApQ,GACA,OAAA8J,EAAAd,MAAApJ,KAAAwQ,KAAAxQ,KAAAwQ,GAAA,IAAgEpQ,KAIhEkQ,GAAAC,KAAA,UACAE,aAAA,kBACAC,iBAAA,OACAC,kBAAA,qDACAC,gBAAA,GACAC,iBAAA,SACAC,kBAAA,IACAC,WAAA,IAGA,IAAAC,GAAAV,GACAzI,GAAAqC,EAAArC,eAqBAoJ,GAAA,CASAC,aAAA,SAAAlO,EAAAwL,GACA,IAAA2C,GAAA,GAAAnO,GAAAf,MAAA,wCAEA,IAAAkP,GAAA,WAAAA,EAAA,GACA,WAAA3C,EAKA,OAFAxL,GAAAmO,EAAA,GAEAA,EAAA,IACA,SACA,OAAAnO,EAEA,QACAA,GAAA,IAOA,OAAAwL,EAAAxL,GAUAoO,UAAA,SAAApO,GACA,IAAAnO,EAAA1B,EAAAE,EAAAxC,EAWA,OATAqZ,EAAA1C,SAAAxE,IACAnO,GAAAmO,EAAA4K,KAAA,EACAza,GAAA6P,EAAA6K,OAAA,EACAxa,GAAA2P,EAAA8K,QAAA,EACAjd,GAAAmS,EAAA2K,MAAA,GAEA9Y,EAAA1B,EAAAE,EAAAxC,GAAAmS,GAAA,EAGA,CACA4K,IAAA/Y,EACAgZ,MAAA1a,EACA2a,OAAAza,EACAsa,KAAA9c,EACA2c,OAAA3Y,EAAAxB,EACAka,MAAA1c,EAAAsC,IAWAke,WAAA,SAAApI,GACA,IAAAqI,EAAAN,GAAAO,OACA/C,EAAA3G,GAAAoB,EAAAuI,SAAAF,EAAAV,iBACAa,EAAA,CACAC,OAAA7J,GAAAoB,EAAA0I,WAAAL,EAAAX,mBACAiB,WAAA1H,EAAAjB,QAAAiI,aAAArJ,GAAAoB,EAAA2I,WAAAN,EAAAR,mBAAAtC,GACAA,OACAJ,MAAAvG,GAAAoB,EAAA4I,UAAAP,EAAAT,kBACAlL,OAAA,KACA3E,OAAA,IAGA,OADAyQ,EAAAzQ,OA7FA,SAAAyQ,GACA,OAAAA,GAAAvH,EAAA7C,cAAAoK,EAAAjD,OAAAtE,EAAA7C,cAAAoK,EAAAC,QACA,MAGAD,EAAArD,MAAAqD,EAAArD,MAAA,SAAAqD,EAAA9L,OAAA8L,EAAA9L,OAAA,QAAA8L,EAAAjD,KAAA,MAAAiD,EAAAC,OAwFAI,CAAAL,GACAA,GAYAM,QAAA,SAAAC,EAAAC,EAAApL,GACA,IAAAlY,EAAAga,EAAA3F,EAEA,IAAArU,EAAA,EAAAga,EAAAqJ,EAAAnjB,OAAuCF,EAAAga,IAAUha,EAGjD,QAAAgB,KAFAqT,EAAAgP,EAAArjB,WAMAgB,IAAAsiB,GAAA,oBAAAjP,IACAA,IAAAiP,SAGAtiB,IAAAkX,GAAAqD,EAAAhb,QAAA8T,KACAA,IAAA6D,SAGAlX,IAAAqT,GACA,OAAAA,IAKAkP,GAAAhI,EACAiI,GAAAxF,EACAyF,GAAAhC,GACAnH,GAAAgI,GACAiB,GAAAC,UACAD,GAAAE,UACAF,GAAAjJ,WAkDA,IAAAoJ,GAAA,SAAAC,GACAJ,GAAAzI,OAAAzJ,KAAAsS,GACAtS,KAAAuS,WAAAnjB,MAAA4Q,KAAApR,YAGAsjB,GAAAzI,OAAA4I,GAAA5S,UAAA,CACA8S,WAAA,WACAvS,KAAAwS,QAAA,GAEAC,MAAA,WACA,IAAA5I,EAAA7J,KAOA,OALA6J,EAAA6I,QACA7I,EAAA6I,MAAAR,GAAAnM,MAAA8D,EAAA8I,SAGA9I,EAAA+I,OAAA,GACA/I,GAEAgJ,WAAA,SAAAC,GACA,IAAAjJ,EAAA7J,KACA+S,EAAAlJ,EAAA8I,OACAK,EAAAnJ,EAAA+I,OACAK,EAAApJ,EAAA6I,MAEA,OAAAK,GAAA,IAAAD,GAMAG,IACAA,EAAApJ,EAAA6I,MAAA,IAGAM,IACAA,EAAAnJ,EAAA+I,OAAA,IApFA,SAAAI,EAAAC,EAAAF,EAAAD,GACA,IACAnkB,EAAAga,EAAAtZ,EAAA6jB,EAAAC,EAAAhN,EAAAH,EAAAoN,EAAAC,EADA9K,EAAAjB,OAAAiB,KAAAwK,GAGA,IAAApkB,EAAA,EAAAga,EAAAJ,EAAA1Z,OAAmCF,EAAAga,IAAUha,EAW7C,GAVAU,EAAAkZ,EAAA5Z,GACAwX,EAAA4M,EAAA1jB,GAGA4jB,EAAAzkB,eAAAa,KACA4jB,EAAA5jB,GAAA8W,IAGA+M,EAAAD,EAAA5jB,MAEA8W,GAAA,MAAA9W,EAAA,IAWA,GAPA2jB,EAAAxkB,eAAAa,KACA2jB,EAAA3jB,GAAA6jB,GAGAC,EAAAH,EAAA3jB,IACA2W,SAAAG,YAEAgN,EACA,cAAAnN,GAGA,IAFAoN,EAAApM,EAAAmM,IAEArQ,QACAuQ,EAAArM,EAAAb,IAEArD,MAAA,CACAmQ,EAAA5jB,GAAAgkB,EAAA5N,IAAA2N,EAAAN,GAAAtR,YACA,eAGS,GAAA0Q,GAAAzK,SAAA0L,IAAAjB,GAAAzK,SAAAtB,GAAA,CACT8M,EAAA5jB,GAAA8jB,GAAAhN,EAAAgN,GAAAL,EACA,SAIAG,EAAA5jB,GAAA8W,GA2CAmN,CAAAN,EAAAC,EAAAF,EAAAD,GACAjJ,IAdAA,EAAA6I,MAAAK,EACAlJ,EAAA+I,OAAA,KACA/I,IAcA0J,gBAAA,WACA,OACAvf,EAAAgM,KAAA2S,OAAA3e,EACAC,EAAA+L,KAAA2S,OAAA1e,IAGAuf,SAAA,WACA,OAAAtB,GAAAuB,SAAAzT,KAAA2S,OAAA3e,IAAAke,GAAAuB,SAAAzT,KAAA2S,OAAA1e,MAGAoe,GAAA5I,OAAAyI,GAAAvI,SACA,IAAA+J,GAAArB,GACAsB,GAAAD,GAAAjK,OAAA,CACA2D,MAAA,KAEAwG,YAAA,EAEAC,SAAA,GAEA1B,OAAA,GAEA2B,OAAA,KAEAC,oBAAA,KAEAC,oBAAA,OAGAC,GAAAN,GASArM,OAAA4M,eAAAP,GAAAlU,UAAA,mBACA0U,IAAA,WACA,OAAAnU,QAUAsH,OAAA4M,eAAAP,GAAAlU,UAAA,iBACA0U,IAAA,WACA,OAAAnU,KAAAoN,OAEAgH,IAAA,SAAApR,GACAhD,KAAAoN,MAAApK,KAIAgO,GAAAT,KAAA,UACA8D,UAAA,CACAC,SAAA,IACAnC,OAAA,eACAoC,WAAArC,GAAAhL,KACAsN,WAAAtC,GAAAhL,QAIA,IAAAuN,GAAA,CACAC,WAAA,GACAC,QAAA,KAQAC,aAAA,SAAAxH,EAAAiH,EAAAC,EAAAO,GACA,IACAlmB,EAAAga,EADA+L,EAAA1U,KAAA0U,WAUA,IARAL,EAAAjH,QACAiH,EAAAS,UAAAC,KAAAC,MACAX,EAAAC,WAEAO,IACAzH,EAAA6H,WAAA,GAGAtmB,EAAA,EAAAga,EAAA+L,EAAA7lB,OAA2CF,EAAAga,IAAUha,EACrD,GAAA+lB,EAAA/lB,GAAAye,UAEA,YADAsH,EAAA/lB,GAAA0lB,GAKAK,EAAA1lB,KAAAqlB,GAEA,IAAAK,EAAA7lB,QACAmR,KAAAkV,yBAGAC,gBAAA,SAAA/H,GACA,IAAAvG,EAAAqL,GAAAkD,UAAApV,KAAA0U,WAAA,SAAAL,GACA,OAAAA,EAAAjH,aAGA,IAAAvG,IACA7G,KAAA0U,WAAAW,OAAAxO,EAAA,GACAuG,EAAA6H,WAAA,IAGAC,sBAAA,WACA,IAAArL,EAAA7J,KAEA,OAAA6J,EAAA8K,UAIA9K,EAAA8K,QAAAzC,GAAAoD,iBAAAhmB,KAAAyX,OAAA,WACA8C,EAAA8K,QAAA,KACA9K,EAAA0L,kBAQAA,YAAA,WACAvV,KACAwV,UADAxV,KAGA0U,WAAA7lB,OAAA,GAHAmR,KAIAkV,yBAOAM,QAAA,WAKA,IAJA,IACAnB,EAAAjH,EAAAyG,EAAA4B,EADAf,EAAA1U,KAAA0U,WAEA/lB,EAAA,EAEAA,EAAA+lB,EAAA7lB,QACAwlB,EAAAK,EAAA/lB,GACAye,EAAAiH,EAAAjH,MACAyG,EAAAQ,EAAAR,SAGA4B,EAAAliB,KAAAkB,OAAAsgB,KAAAC,MAAAX,EAAAS,WAAAT,EAAAC,SAAAT,GAAA,EACAQ,EAAAT,YAAArgB,KAAAD,IAAAmiB,EAAA5B,GACA3B,GAAAlK,SAAAqM,EAAAP,OAAA,CAAA1G,EAAAiH,GAAAjH,GACA8E,GAAAlK,SAAAqM,EAAAN,oBAAA,CAAAM,GAAAjH,GAEAiH,EAAAT,aAAAC,GACA3B,GAAAlK,SAAAqM,EAAAL,oBAAA,CAAAK,GAAAjH,GACAA,EAAA6H,WAAA,EACAP,EAAAW,OAAA1mB,EAAA,MAEAA,IAKAojB,GAAAG,GAAAjJ,QAAA8I,QACA2D,GAAA,0CA8CA,SAAAC,GAAAtL,EAAAuL,GACA,IAAAC,EAAAxL,EAAAyL,SAEA,GAAAD,EAAA,CAIA,IAAAE,EAAAF,EAAAE,UACAlP,EAAAkP,EAAA3L,QAAAwL,IAEA,IAAA/O,GACAkP,EAAAV,OAAAxO,EAAA,GAGAkP,EAAAlnB,OAAA,IAIA6mB,GAAAjV,QAAA,SAAApR,UACAgb,EAAAhb,YAEAgb,EAAAyL,WAIA,IAAAE,GAAA,SAAA5I,EAAA6I,GACAjW,KAAAuS,WAAAnF,EAAA6I,IAGA/D,GAAAzI,OAAAuM,GAAAvW,UAAA,CAKAyW,mBAAA,KAMAC,gBAAA,KACA5D,WAAA,SAAAnF,EAAA6I,GACAjW,KACAoN,QADApN,KAEA6G,MAAAoP,EAFAjW,KAGAoW,aAHApW,KAIAqW,eAEAC,YAAA,SAAAL,GACAjW,KAAA6G,MAAAoP,GAEAG,WAAA,WACA,IAAAvM,EAAA7J,KACAuW,EAAA1M,EAAA2M,UACAC,EAAA5M,EAAA6M,aAEA,OAAAH,EAAAI,SAAAJ,EAAAI,WAAA9M,EAAAuD,MAAAwJ,SACAL,EAAAI,QAAAF,EAAAE,SAAA9M,EAAAuD,MAAAnE,QAAA2N,OAAAC,MAAA,GAAAzP,IAGA,OAAAmP,EAAAO,SAAAP,EAAAO,WAAAjN,EAAAuD,MAAAwJ,SACAL,EAAAO,QAAAL,EAAAK,SAAAjN,EAAAuD,MAAAnE,QAAA2N,OAAAG,MAAA,GAAA3P,KAGAsP,WAAA,WACA,OAAA1W,KAAAoN,MAAA4J,KAAAC,SAAAjX,KAAA6G,QAEA2P,QAAA,WACA,OAAAxW,KAAAoN,MAAA8J,eAAAlX,KAAA6G,QAEAsQ,cAAA,SAAAC,GACA,OAAApX,KAAAoN,MAAAwJ,OAAAQ,IAMAC,iBAAA,WACA,OAAArX,KAAAwW,UAAAM,SAMAQ,iBAAA,WACA,OAAAtX,KAAAwW,UAAAG,SAMAY,eAAA,WACA,OAAAvX,KAAAmX,cAAAnX,KAAAqX,qBAMAG,eAAA,WACA,OAAAxX,KAAAmX,cAAAnX,KAAAsX,qBAEAG,MAAA,WACAzX,KAAA0X,QAAA,IAMAC,QAAA,WACA3X,KAAA4X,OACAjC,GAAA3V,KAAA4X,MAAA5X,OAGA6X,kBAAA,WACA,IACA7R,EADAhG,KACAkW,mBACA,OAAAlQ,GAAA,IAAAA,EAAA,CACA8R,OAHA9X,KAGAoN,MACA2K,cAJA/X,KAIA6G,SAGAmR,eAAA,SAAAnR,GACA,IACAb,EADAhG,KACAmW,gBACA,OAAAnQ,GAAA,IAAAA,EAAA,CACA8R,OAHA9X,KAGAoN,MACA2K,cAJA/X,KAIA6G,MACAoR,OAAApR,KAGAwP,YAAA,WACA,IAIA1nB,EAAAga,EAHA4N,EADAvW,KACAwW,UACAQ,EAFAhX,KAEA0W,aAAAM,MAAA,GACAkB,EAAA3B,EAAAS,KAGA,IAAAroB,EAAA,EAAAga,EAAAqO,EAAAnoB,OAAqCF,EAAAga,IAAUha,EAC/CupB,EAAAvpB,GAAAupB,EAAAvpB,IAPAqR,KAOAgY,eAAArpB,GAGA4nB,EAAAE,QAAAF,EAAAE,SAVAzW,KAUA6X,qBAEAM,mBAAA,SAAAtR,GACA,IAAAuR,EAAApY,KAAAgY,eAAAnR,GACA7G,KAAAwW,UAAAQ,KAAA3B,OAAAxO,EAAA,EAAAuR,GACApY,KAAAqY,cAAAD,EAAAvR,GAAA,IAEAyR,sBAAA,WACA,IA5LAjO,EAAAuL,EA4LA/L,EAAA7J,KACAyW,EAAA5M,EAAA6M,aACAM,EAAAP,EAAAO,OAAAP,EAAAO,KAAA,IAIAnN,EAAA+N,QAAAZ,IACAnN,EAAA+N,OAEAjC,GAAA9L,EAAA+N,MAAA/N,GAGAmN,GAAA1P,OAAAiR,aAAAvB,KAxMApB,EAyMA/L,GAzMAQ,EAyMA2M,GAxMAlB,SACAzL,EAAAyL,SAAAC,UAAA/mB,KAAA4mB,IAKAtO,OAAA4M,eAAA7J,EAAA,YACAmO,cAAA,EACAC,YAAA,EACAzV,MAAA,CACA+S,UAAA,CAAAH,MAGAF,GAAAjV,QAAA,SAAApR,GACA,IAAAqpB,EAAA,SAAArpB,EAAAoX,OAAA,GAAA/D,cAAArT,EAAAqQ,MAAA,GACAiZ,EAAAtO,EAAAhb,GACAiY,OAAA4M,eAAA7J,EAAAhb,EAAA,CACAmpB,cAAA,EACAC,YAAA,EACAzV,MAAA,WACA,IAAA1S,EAAArB,MAAAwQ,UAAAC,MAAApQ,KAAAV,WACAgqB,EAAAD,EAAAvpB,MAAA4Q,KAAA1P,GAMA,OALA4hB,GAAA/J,KAAAkC,EAAAyL,SAAAC,UAAA,SAAA8C,GACA,oBAAAA,EAAAH,IACAG,EAAAH,GAAAtpB,MAAAypB,EAAAvoB,KAGAsoB,SAgLA/O,EAAA+N,MAAAZ,GAKAnN,EAAAiP,kBAEApB,OAAAxF,GAAAhL,KACA2L,WAAA,SAAAkG,GAMA,IALA,IAAAxC,EAAAvW,KAAAwW,UACAwC,EAAAzC,EAAAS,MAAA,GACArO,EAAAqQ,EAAAnqB,OACAF,EAAA,EAEYA,EAAAga,IAAUha,EACtBqqB,EAAArqB,GAAAkkB,WAAAkG,GAGAxC,EAAAE,SACAF,EAAAE,QAAA5D,WAAAkG,IAGAE,KAAA,WACA,IAAA1C,EAAAvW,KAAAwW,UACAwC,EAAAzC,EAAAS,MAAA,GACArO,EAAAqQ,EAAAnqB,OACAF,EAAA,EAMA,IAJA4nB,EAAAE,SACAF,EAAAE,QAAAwC,OAGYtqB,EAAAga,IAAUha,EACtBqqB,EAAArqB,GAAAsqB,QAGAC,iBAAA,SAAAd,GACAlG,GAAA9I,MAAAgP,EAAAzF,OAAAyF,EAAAe,gBAAA,WACAf,EAAAe,gBAEAC,cAAA,SAAAhB,GACA,IAAA3B,EAAAzW,KAAAoN,MAAA4J,KAAAC,SAAAmB,EAAAL,eACAlR,EAAAuR,EAAAH,OACAoB,EAAAjB,EAAAiB,QAAA,GACAtG,EAAAqF,EAAAzF,OACA2G,EAAApH,GAAAoH,cACAlB,EAAAe,eAAA,CACAI,gBAAAxG,EAAAwG,gBACAC,YAAAzG,EAAAyG,YACAC,YAAA1G,EAAA0G,aAEA1G,EAAAwG,gBAAAxH,GAAA,CAAAsH,EAAAK,qBAAAjD,EAAAiD,qBAAAJ,EAAAvG,EAAAwG,uBAAA5pB,EAAAkX,GACAkM,EAAAyG,YAAAzH,GAAA,CAAAsH,EAAAM,iBAAAlD,EAAAkD,iBAAAL,EAAAvG,EAAAyG,mBAAA7pB,EAAAkX,GACAkM,EAAA0G,YAAA1H,GAAA,CAAAsH,EAAAO,iBAAAnD,EAAAmD,iBAAA7G,EAAA0G,kBAAA9pB,EAAAkX,IAMAiS,eAAA,WACA,IACAvC,EADAvW,KACAwW,UACAQ,EAFAhX,KAEA0W,aAAAM,KACA6C,EAAAtD,EAAAS,KAAAnoB,OACAirB,EAAA9C,EAAAnoB,OAEAirB,EAAAD,EACAtD,EAAAS,KAAA3B,OAAAyE,EAAAD,EAAAC,GACOA,EAAAD,GARP7Z,KASA+Z,eAAAF,EAAAC,EAAAD,IAOAE,eAAA,SAAA/G,EAAAgH,GACA,QAAArrB,EAAA,EAAqBA,EAAAqrB,IAAWrrB,EAChCqR,KAAAmY,mBAAAnF,EAAArkB,IAOAsrB,WAAA,WACA,IAAAD,EAAAprB,UAAAC,OACAmR,KAAA+Z,eAAA/Z,KAAA0W,aAAAM,KAAAnoB,OAAAmrB,MAMAE,UAAA,WACAla,KAAAwW,UAAAQ,KAAAmD,OAMAC,YAAA,WACApa,KAAAwW,UAAAQ,KAAAqD,SAMAC,aAAA,SAAAtH,EAAAgH,GACAha,KAAAwW,UAAAQ,KAAA3B,OAAArC,EAAAgH,GACAha,KAAA+Z,eAAA/G,EAAApkB,UAAAC,OAAA,IAMA0rB,cAAA,WACAva,KAAA+Z,eAAA,EAAAnrB,UAAAC,WAGAmnB,GAAAvM,OAAAyI,GAAAvI,SACA,IAAA6Q,GAAAxE,GAEAhF,GAAAT,KAAA,UACAyI,SAAA,CACAhL,IAAA,CACAuL,gBAAAvI,GAAAO,OAAAd,aACA+I,YAAA,OACAC,YAAA,EACAgB,YAAA,aAKA,IAAAC,GAAAhH,GAAAjK,OAAA,CACAkR,aAAA,SAAAC,GACA,IAAAC,EAAA7a,KAAA0S,MAEA,QAAAmI,GACAtnB,KAAAQ,IAAA6mB,EAAAC,EAAA7mB,EAAA,GAAAT,KAAAQ,IAAA8mB,EAAAnN,OAAAmN,EAAAC,YAAA,IAKAC,QAAA,SAAAC,EAAAC,GACA,IAAAJ,EAAA7a,KAAA0S,MAEA,GAAAmI,EAAA,CAWA,IAVA,IAAAK,EAAAhJ,GAAAiJ,kBAAAN,EAAA,CACA7mB,EAAAgnB,EACA/mB,EAAAgnB,IAEAG,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,SAEAC,EAAAT,EAAAS,WACAC,EAAAV,EAAAU,SAEAA,EAAAD,GACAC,GAAA,EAAAhoB,KAAAoC,GAGA,KAAAylB,EAAAG,GACAH,GAAA,EAAA7nB,KAAAoC,GAGA,KAAAylB,EAAAE,GACAF,GAAA,EAAA7nB,KAAAoC,GAIA,IAAA6lB,EAAAJ,GAAAE,GAAAF,GAAAG,EACAE,EAAAJ,GAAAR,EAAAa,aAAAL,GAAAR,EAAAc,YACA,OAAAH,GAAAC,EAGA,UAEAG,eAAA,WACA,IAAAf,EAAA7a,KAAA0S,MACAmJ,GAAAhB,EAAAS,WAAAT,EAAAU,UAAA,EACAO,GAAAjB,EAAAa,YAAAb,EAAAc,aAAA,EACA,OACA3nB,EAAA6mB,EAAA7mB,EAAAT,KAAAuC,IAAA+lB,GAAAC,EACA7nB,EAAA4mB,EAAA5mB,EAAAV,KAAAwC,IAAA8lB,GAAAC,IAGAC,QAAA,WACA,IAAAlB,EAAA7a,KAAA0S,MACA,OAAAnf,KAAAoC,KAAAklB,EAAAU,SAAAV,EAAAS,aAAA,EAAA/nB,KAAAoC,MAAApC,KAAAQ,IAAA8mB,EAAAc,YAAA,GAAApoB,KAAAQ,IAAA8mB,EAAAa,YAAA,KAEAnI,gBAAA,WACA,IAAAsH,EAAA7a,KAAA0S,MACAsJ,EAAAnB,EAAAS,YAAAT,EAAAU,SAAAV,EAAAS,YAAA,EACAW,GAAApB,EAAAc,YAAAd,EAAAa,aAAA,EAAAb,EAAAa,YACA,OACA1nB,EAAA6mB,EAAA7mB,EAAAT,KAAAuC,IAAAkmB,GAAAC,EACAhoB,EAAA4mB,EAAA5mB,EAAAV,KAAAwC,IAAAimB,GAAAC,IAGAhD,KAAA,WACA,IAKAiD,EALA7O,EAAArN,KAAA8X,OAAAzK,IACAwN,EAAA7a,KAAA0S,MACAyJ,EAAAtB,EAAAS,WACAc,EAAAvB,EAAAU,SACAc,EAAA,UAAAxB,EAAAJ,YAAA,MAEApN,EAAAgC,OACAhC,EAAAsB,YACAtB,EAAAW,IAAA6M,EAAA7mB,EAAA6mB,EAAA5mB,EAAAV,KAAAC,IAAAqnB,EAAAc,YAAAU,EAAA,GAAAF,EAAAC,GACA/O,EAAAW,IAAA6M,EAAA7mB,EAAA6mB,EAAA5mB,EAAA4mB,EAAAa,YAAAU,EAAAD,GAAA,GACA9O,EAAAY,YACAZ,EAAAiP,UAAAzB,EAAAtB,gBACAlM,EAAAyB,OAEA+L,EAAApB,cACA,UAAAoB,EAAAJ,aAGApN,EAAAsB,YACAuN,EAAAG,EAAAxB,EAAAc,YACAtO,EAAAW,IAAA6M,EAAA7mB,EAAA6mB,EAAA5mB,EAAA4mB,EAAAc,YAAAQ,EAAAD,EAAAE,EAAAF,GAEArB,EAAAa,YAAAW,GACAH,EAAAG,EAAAxB,EAAAa,YACArO,EAAAW,IAAA6M,EAAA7mB,EAAA6mB,EAAA5mB,EAAA4mB,EAAAa,YAAAW,EAAAD,EAAAF,EAAAC,EAAAD,GAAA,IAEA7O,EAAAW,IAAA6M,EAAA7mB,EAAA6mB,EAAA5mB,EAAAooB,EAAAD,EAAA7oB,KAAAoC,GAAA,EAAAwmB,EAAA5oB,KAAAoC,GAAA,GAGA0X,EAAAY,YACAZ,EAAAiC,OACAjC,EAAAsB,YACAtB,EAAAW,IAAA6M,EAAA7mB,EAAA6mB,EAAA5mB,EAAA4mB,EAAAc,YAAAQ,EAAAC,GACA/O,EAAAW,IAAA6M,EAAA7mB,EAAA6mB,EAAA5mB,EAAA4mB,EAAAa,YAAAU,EAAAD,GAAA,GACA9O,EAAAY,YACAZ,EAAAkP,UAAA,EAAA1B,EAAApB,YACApM,EAAAmP,SAAA,UAEAnP,EAAAkP,UAAA1B,EAAApB,YACApM,EAAAmP,SAAA,SAGAnP,EAAAoP,YAAA5B,EAAArB,YACAnM,EAAA0B,UAGA1B,EAAAmC,aAGAkN,GAAAxK,GAAArK,eACA4I,GAAAO,GAAAO,OAAAd,aAEAO,GAAAT,KAAA,UACAyI,SAAA,CACA2D,KAAA,CACA7M,QAAA,GACAyJ,gBAAA9I,GACAgJ,YAAA,EACAD,YAAA/I,GACAmM,eAAA,OACAC,WAAA,GACAC,iBAAA,EACAC,gBAAA,QACAC,iBAAA,EACAlO,MAAA,MAMA,IAAAmO,GAAAvJ,GAAAjK,OAAA,CACAwP,KAAA,WACA,IAWApS,EAAAqW,EAAAzN,EAAA0N,EAVAtC,EADA7a,KACA0S,MACArF,EAFArN,KAEA8X,OAAAzK,IACA+P,EAAAvC,EAAAuC,SAEAC,EALArd,KAKAsd,UAAA5d,QAGA4R,EAAAN,GAAAO,OACAgM,EAAAjM,EAAA0H,SAAA2D,KACAa,GAAA,EAuBA,IAjCAxd,KAaAyd,OAAAJ,EAAAxuB,QACAwuB,EAAAruB,KAAAquB,EAAA,IAGAhQ,EAAAgC,OAEAhC,EAAAqQ,QAAA7C,EAAA+B,gBAAAW,EAAAX,eAEAvP,EAAAsQ,aACAtQ,EAAAsQ,YAAA9C,EAAAgC,YAAAU,EAAAV,YAGAxP,EAAAuQ,eAAAlB,GAAA7B,EAAAiC,iBAAAS,EAAAT,kBACAzP,EAAAmP,SAAA3B,EAAAkC,iBAAAQ,EAAAR,gBACA1P,EAAAkP,UAAAG,GAAA7B,EAAApB,YAAA8D,EAAA9D,aACApM,EAAAoP,YAAA5B,EAAArB,aAAAlI,EAAAb,aAEApD,EAAAsB,YACA6O,GAAA,EAEA3W,EAAA,EAAqBA,EAAAwW,EAAAxuB,SAAuBgY,EAC5CqW,EAAAG,EAAAxW,GACA4I,EAAAyC,GAAA2L,aAAAR,EAAAxW,GACAsW,EAAAD,EAAAxK,MAEA,IAAA7L,EACAsW,EAAAW,OACAzQ,EAAAU,OAAAoP,EAAAnpB,EAAAmpB,EAAAlpB,GACAupB,EAAA3W,IAGA4I,GAAA,IAAA+N,EAAA/N,EAAA4N,EAAAG,GAEAL,EAAAW,OACAN,IAAA3W,EAAA,IAAAuW,IAAA,IAAAI,EAEAnQ,EAAAU,OAAAoP,EAAAnpB,EAAAmpB,EAAAlpB,GAGAie,GAAAE,OAAAxD,OAAAvB,EAAAoC,EAAAiD,MAAAwK,EAAAxK,OAGA8K,EAAA3W,IAKAwG,EAAA0B,SACA1B,EAAAmC,aAGAuO,GAAA7L,GAAArK,eACAmW,GAAAhN,GAAAO,OAAAd,aAkBA,SAAAwN,GAAArD,GACA,IAAAC,EAAA7a,KAAA0S,MACA,QAAAmI,GAAAtnB,KAAA2qB,IAAAtD,EAAAC,EAAA7mB,GAAA6mB,EAAAnN,OAAAmN,EAAAsD,UAlBAnN,GAAAT,KAAA,UACAyI,SAAA,CACA9J,MAAA,CACAxB,OAAA,EACA0Q,WAAA,SACA7E,gBAAAyE,GACAxE,YAAAwE,GACAvE,YAAA,EAEA0E,UAAA,EACArD,YAAA,EACAlB,iBAAA,MAeA,IAAAyE,GAAA3K,GAAAjK,OAAA,CACAsR,QAAA,SAAAH,EAAA0D,GACA,IAAAzD,EAAA7a,KAAA0S,MACA,QAAAmI,GAAAtnB,KAAAQ,IAAA6mB,EAAAC,EAAA7mB,EAAA,GAAAT,KAAAQ,IAAAuqB,EAAAzD,EAAA5mB,EAAA,GAAAV,KAAAQ,IAAA8mB,EAAAsD,UAAAtD,EAAAnN,OAAA,IAEAiN,aAAAsD,GACAM,SAAAN,GACAO,SAZA,SAAAF,GACA,IAAAzD,EAAA7a,KAAA0S,MACA,QAAAmI,GAAAtnB,KAAA2qB,IAAAI,EAAAzD,EAAA5mB,GAAA4mB,EAAAnN,OAAAmN,EAAAsD,WAWAvC,eAAA,WACA,IAAAf,EAAA7a,KAAA0S,MACA,OACA1e,EAAA6mB,EAAA7mB,EACAC,EAAA4mB,EAAA5mB,IAGA8nB,QAAA,WACA,OAAAxoB,KAAAoC,GAAApC,KAAAQ,IAAAiM,KAAA0S,MAAAhF,OAAA,IAEA6F,gBAAA,WACA,IAAAsH,EAAA7a,KAAA0S,MACA,OACA1e,EAAA6mB,EAAA7mB,EACAC,EAAA4mB,EAAA5mB,EACAwqB,QAAA5D,EAAAnN,OAAAmN,EAAApB,cAGAR,KAAA,SAAAyF,GACA,IAAA7D,EAAA7a,KAAA0S,MACArF,EAAArN,KAAA8X,OAAAzK,IACA+Q,EAAAvD,EAAAuD,WACA/P,EAAAwM,EAAAxM,SACAX,EAAAmN,EAAAnN,OACA1Z,EAAA6mB,EAAA7mB,EACAC,EAAA4mB,EAAA5mB,EACAqd,EAAAN,GAAAO,OACAd,EAAAa,EAAAb,aAEAoK,EAAAiD,YAKAnuB,IAAA+uB,GAAAxM,GAAAE,OAAAnD,eAAA4L,EAAA6D,MACArR,EAAAoP,YAAA5B,EAAArB,aAAA/I,EACApD,EAAAkP,UAAAwB,GAAAlD,EAAApB,YAAAnI,EAAA0H,SAAA9J,MAAAuK,aACApM,EAAAiP,UAAAzB,EAAAtB,iBAAA9I,EACAyB,GAAAE,OAAAjE,UAAAd,EAAA+Q,EAAA1Q,EAAA1Z,EAAAC,EAAAoa,OAIAsQ,GAAA3N,GAAAO,OAAAd,aAaA,SAAAmO,GAAA/D,GACA,OAAAA,QAAAlrB,IAAAkrB,EAAAtN,MAUA,SAAAsR,GAAAhE,GACA,IAAAiE,EAAAC,EAAAC,EAAAzpB,EAAA0pB,EAgBA,OAdAL,GAAA/D,IACAoE,EAAApE,EAAAtN,MAAA,EACAuR,EAAAjE,EAAA7mB,EAAAirB,EACAF,EAAAlE,EAAA7mB,EAAAirB,EACAD,EAAAzrB,KAAAD,IAAAunB,EAAA5mB,EAAA4mB,EAAAlC,MACApjB,EAAAhC,KAAAC,IAAAqnB,EAAA5mB,EAAA4mB,EAAAlC,QAEAsG,EAAApE,EAAArN,OAAA,EACAsR,EAAAvrB,KAAAD,IAAAunB,EAAA7mB,EAAA6mB,EAAAlC,MACAoG,EAAAxrB,KAAAC,IAAAqnB,EAAA7mB,EAAA6mB,EAAAlC,MACAqG,EAAAnE,EAAA5mB,EAAAgrB,EACA1pB,EAAAslB,EAAA5mB,EAAAgrB,GAGA,CACAtR,KAAAmR,EACAlR,IAAAoR,EACAnR,MAAAkR,EACAjR,OAAAvY,GAIA,SAAA2pB,GAAAC,EAAAtW,EAAAuW,GACA,OAAAD,IAAAtW,EAAAuW,EAAAD,IAAAC,EAAAvW,EAAAsW,EAuBA,SAAAE,GAAAxE,EAAAyE,EAAAC,GACA,IAEA1qB,EAAA1B,EAAAE,EAAAxC,EAFAmS,EAAA6X,EAAApB,YACAqE,EAtBA,SAAAjD,GACA,IAAA2E,EAAA3E,EAAA4E,cACA7G,EAAA,GAEA,OAAA4G,GAIA3E,EAAA6E,WACA7E,EAAAlC,KAAAkC,EAAA7mB,IACAwrB,EAAAN,GAAAM,EAAA,iBAEK3E,EAAAlC,KAAAkC,EAAA5mB,IACLurB,EAAAN,GAAAM,EAAA,iBAGA5G,EAAA4G,IAAA,EACA5G,GAZAA,EAiBA+G,CAAA9E,GAYA,OATA3I,GAAA1K,SAAAxE,IACAnO,GAAAmO,EAAA4K,KAAA,EACAza,GAAA6P,EAAA6K,OAAA,EACAxa,GAAA2P,EAAA8K,QAAA,EACAjd,GAAAmS,EAAA2K,MAAA,GAEA9Y,EAAA1B,EAAAE,EAAAxC,GAAAmS,GAAA,EAGA,CACAnO,EAAAipB,EAAAlQ,KAAA/Y,EAAA,IAAAA,EAAA0qB,IAAA1qB,EACA1B,EAAA2qB,EAAAjQ,OAAA1a,EAAA,IAAAA,EAAAmsB,IAAAnsB,EACAE,EAAAyqB,EAAAhQ,QAAAza,EAAA,IAAAA,EAAAksB,IAAAlsB,EACAxC,EAAAitB,EAAAnQ,MAAA9c,EAAA,IAAAA,EAAAyuB,IAAAzuB,GAyBA,SAAA+uB,GAAA/E,EAAA7mB,EAAAC,GACA,IAAA4rB,EAAA,OAAA7rB,EACA8rB,EAAA,OAAA7rB,EACA8rB,KAAAlF,GAAAgF,GAAAC,IAAAjB,GAAAhE,GACA,OAAAkF,IAAAF,GAAA7rB,GAAA+rB,EAAApS,MAAA3Z,GAAA+rB,EAAAlS,SAAAiS,GAAA7rB,GAAA8rB,EAAAnS,KAAA3Z,GAAA8rB,EAAAjS,QAtHAkD,GAAAT,KAAA,UACAyI,SAAA,CACAgH,UAAA,CACAzG,gBAAAoF,GACAnF,YAAAmF,GACAc,cAAA,SACAhG,YAAA,MAmHA,IAAAwG,GAAAvM,GAAAjK,OAAA,CACAwP,KAAA,WACA,IAAA5L,EAAArN,KAAA8X,OAAAzK,IACAwN,EAAA7a,KAAA0S,MACAwN,EAhCA,SAAArF,GACA,IAAAkF,EAAAlB,GAAAhE,GACAtN,EAAAwS,EAAAlS,MAAAkS,EAAApS,KACAH,EAAAuS,EAAAjS,OAAAiS,EAAAnS,IACAuS,EAAAd,GAAAxE,EAAAtN,EAAA,EAAAC,EAAA,GACA,OACA4S,MAAA,CACApsB,EAAA+rB,EAAApS,KACA1Z,EAAA8rB,EAAAnS,IACAla,EAAA6Z,EACA5c,EAAA6c,GAEAre,MAAA,CACA6E,EAAA+rB,EAAApS,KAAAwS,EAAAtvB,EACAoD,EAAA8rB,EAAAnS,IAAAuS,EAAAtrB,EACAnB,EAAA6Z,EAAA4S,EAAAtvB,EAAAsvB,EAAAhtB,EACAxC,EAAA6c,EAAA2S,EAAAtrB,EAAAsrB,EAAA9sB,IAgBAgtB,CAAAxF,GACAuF,EAAAF,EAAAE,MACAjxB,EAAA+wB,EAAA/wB,MACAke,EAAAiP,UAAAzB,EAAAtB,gBACAlM,EAAAiT,SAAAF,EAAApsB,EAAAosB,EAAAnsB,EAAAmsB,EAAA1sB,EAAA0sB,EAAAzvB,GAEAyvB,EAAA1sB,IAAAvE,EAAAuE,GAAA0sB,EAAAzvB,IAAAxB,EAAAwB,IAIA0c,EAAAgC,OACAhC,EAAAsB,YACAtB,EAAAa,KAAAkS,EAAApsB,EAAAosB,EAAAnsB,EAAAmsB,EAAA1sB,EAAA0sB,EAAAzvB,GACA0c,EAAAiC,OACAjC,EAAAiP,UAAAzB,EAAArB,YACAnM,EAAAa,KAAA/e,EAAA6E,EAAA7E,EAAA8E,EAAA9E,EAAAuE,EAAAvE,EAAAwB,GACA0c,EAAAyB,KAAA,WACAzB,EAAAmC,YAEAhC,OAAA,WACA,IAAAqN,EAAA7a,KAAA0S,MACA,OAAAmI,EAAAlC,KAAAkC,EAAA5mB,GAEA8mB,QAAA,SAAAH,EAAA0D,GACA,OAAAsB,GAAA5f,KAAA0S,MAAAkI,EAAA0D,IAEA3D,aAAA,SAAAC,EAAA0D,GACA,IAAAzD,EAAA7a,KAAA0S,MACA,OAAAkM,GAAA/D,GAAA+E,GAAA/E,EAAAD,EAAA,MAAAgF,GAAA/E,EAAA,KAAAyD,IAEAC,SAAA,SAAA3D,GACA,OAAAgF,GAAA5f,KAAA0S,MAAAkI,EAAA,OAEA4D,SAAA,SAAAF,GACA,OAAAsB,GAAA5f,KAAA0S,MAAA,KAAA4L,IAEA1C,eAAA,WACA,IACA5nB,EAAAC,EADA4mB,EAAA7a,KAAA0S,MAWA,OARAkM,GAAA/D,IACA7mB,EAAA6mB,EAAA7mB,EACAC,GAAA4mB,EAAA5mB,EAAA4mB,EAAAlC,MAAA,IAEA3kB,GAAA6mB,EAAA7mB,EAAA6mB,EAAAlC,MAAA,EACA1kB,EAAA4mB,EAAA5mB,GAGA,CACAD,IACAC,MAGA8nB,QAAA,WACA,IAAAlB,EAAA7a,KAAA0S,MACA,OAAAkM,GAAA/D,KAAAtN,MAAAha,KAAA2qB,IAAArD,EAAA5mB,EAAA4mB,EAAAlC,MAAAkC,EAAArN,OAAAja,KAAA2qB,IAAArD,EAAA7mB,EAAA6mB,EAAAlC,OAEApF,gBAAA,WACA,IAAAsH,EAAA7a,KAAA0S,MACA,OACA1e,EAAA6mB,EAAA7mB,EACAC,EAAA4mB,EAAA5mB,MAIA+kB,GAAA,GACAuH,GAAA7F,GACA8F,GAAAvD,GACAwD,GAAApC,GACAqC,GAAAT,GACAjH,GAAAuH,OACAvH,GAAAwH,QACAxH,GAAAyH,SACAzH,GAAA0H,aACA,IAAAC,GAAAzO,GAAAjJ,QAAA8I,QAEAf,GAAAT,KAAA,OACAqQ,MAAA,CACAC,KAAA,SAEAjK,OAAA,CACAC,MAAA,EACA7Q,KAAA,WACA8a,mBAAA,GACAC,cAAA,GACAC,QAAA,EACAC,UAAA,CACAC,iBAAA,KAGAnK,MAAA,EACA/Q,KAAA,cA8FA,IAAAmb,GAAA3G,GAAA/Q,OAAA,CACA0M,gBAAA6C,GAAA0H,UACAnO,WAAA,WACA,IACAgE,EACAiE,GAAA/a,UAAA8S,WAAAnjB,MAFA4Q,KAEApR,YACA2nB,EAHAvW,KAGAwW,WACA4K,MAJAphB,KAIA0W,aAAA0K,MACA7K,EAAA8K,KAAA,GAEA3J,OAAA,SAAAD,GACA,IAEA9oB,EAAAga,EADAuX,EADAlgB,KACAwW,UAAAQ,KAIA,IALAhX,KAGAshB,OAHAthB,KAGAuhB,WAEA5yB,EAAA,EAAAga,EAAAuX,EAAArxB,OAAsCF,EAAAga,IAAUha,EALhDqR,KAMAqY,cAAA6H,EAAAvxB,KAAA8oB,IAGAY,cAAA,SAAA2H,EAAAnZ,EAAA4Q,GACA,IAAA5N,EAAA7J,KACAuW,EAAA1M,EAAA2M,UACAC,EAAA5M,EAAA6M,aAEAzN,EAAAY,EAAA2X,uBAAAxB,EAAAnZ,GAEAmZ,EAAAyB,QAAA5X,EAAAsN,cAAAZ,EAAAI,SACAqJ,EAAA0B,QAAA7X,EAAAsN,cAAAZ,EAAAO,SACAkJ,EAAAjI,cAAAlO,EAAAhD,MACAmZ,EAAA/H,OAAApR,EACAmZ,EAAArN,OAAA,CACA4G,gBAAAtQ,EAAAsQ,gBACAC,YAAAvQ,EAAAuQ,YACAiG,cAAAxW,EAAAwW,cACAhG,YAAAxQ,EAAAwQ,YACAkI,aAAAlL,EAAAmL,MACAA,MAAA/X,EAAAuD,MAAA4J,KAAA6K,OAAAhb,IAGAgD,EAAAiY,uBAAA9B,EAAAnZ,EAAA4Q,GAEAuI,EAAAvN,SAMAqP,uBAAA,SAAA9B,EAAAnZ,EAAA4Q,GACA,IAAA5N,EAAA7J,KACA+S,EAAAiN,EAAArN,OAEAoP,EAAAlY,EAAA0N,iBAEAoB,EAAAoJ,EAAAC,eACAtC,EAAAqC,EAAAE,eACAC,EAAArY,EAAAyX,QAAAzX,EAAA0X,WACAY,EAAAtY,EAAAuY,wBAAAvY,EAAAhD,SACAwb,EAAAxY,EAAAyY,wBAAAzY,EAAAhD,QAAAqb,GACAnP,EAAA2M,aACA3M,EAAA4F,KAAAlB,EAAAkB,EAAAwJ,EAAAxJ,KACA5F,EAAA/e,EAAA0rB,EAAAjI,EAAAkB,EAAAwJ,EAAAI,KAAAF,EAAAG,OACAzP,EAAA9e,EAAAyrB,EAAA2C,EAAAG,OAAA/K,EAAAkB,EAAAwJ,EAAAI,KACAxP,EAAAvF,OAAAkS,EAAA2C,EAAA7T,UAAA7e,EACAojB,EAAAxF,MAAAmS,OAAA/vB,EAAA0yB,EAAA7T,MASAiU,WAAA,SAAAC,GACA,IAQA/zB,EAAA4nB,EAPAnJ,EADApN,KACAoN,MAEA/K,EAHArC,KAGAwX,iBAEAmL,EAAAtgB,EAAA4G,QAAA0Z,QACAha,OAAAhZ,IAAA+yB,EAAAtV,EAAA4J,KAAAC,SAAApoB,OAAA6zB,EAAA,EACAE,EAAA,GAGA,IAAAj0B,EAAA,EAAiBA,EAAAga,IAAUha,GAC3B4nB,EAAAnJ,EAAA8J,eAAAvoB,IAEA0yB,KAAAjU,EAAAyV,iBAAAl0B,MAAA,IAAAg0B,IAAA,IAAAA,IAAA,IAAAC,EAAAxY,QAAAmM,EAAA6K,aAAAzxB,IAAAgzB,SAAAhzB,IAAA4mB,EAAA6K,QAAA,IAAAwB,EAAAxY,QAAAmM,EAAA6K,UACAwB,EAAA5zB,KAAAunB,EAAA6K,OAIA,OAAAwB,GAOAE,cAAA,WACA,OAAA9iB,KAAAyiB,aAAA5zB,QAUAk0B,cAAA,SAAA9M,EAAAtT,GACA,IAAAigB,EAAA5iB,KAAAyiB,WAAAxM,GAEApP,OAAAlX,IAAAgT,EAAAigB,EAAAxY,QAAAzH,IAAA,EAEA,WAAAkE,EAAA+b,EAAA/zB,OAAA,EAAAgY,GAMA0a,SAAA,WACA,IAUA5yB,EAAAga,EARAtG,EAFArC,KAEAwX,iBAEAwL,EAJAhjB,KAIA8iB,gBACA7M,EALAjW,KAKA6G,MACAob,EAAA5f,EAAA4f,eACAjP,EAAAiP,EAAA5f,EAAAsL,KAAAtL,EAAAuL,IACAqV,EAAAjQ,GAAAiP,EAAA5f,EAAAkL,MAAAlL,EAAAmL,QACA0V,EAAA,GAGA,IAAAv0B,EAAA,EAAAga,EAZA3I,KAYAwW,UAAAQ,KAAAnoB,OAAkDF,EAAAga,IAAUha,EAC5Du0B,EAAAl0B,KAAAqT,EAAA8gB,iBAAA,KAAAx0B,EAAAsnB,IAIA,OACA3iB,IAFA4e,GAAA7K,cAAAhF,EAAA4G,QAAAma,cA9NA,SAAA/gB,EAAA6gB,GACA,IAEAG,EAAAC,EAAA30B,EAAAga,EAFArV,EAAA+O,EAAA4f,eAAA5f,EAAAkL,MAAAlL,EAAAmL,OACA+V,EAAAlhB,EAAAmhB,WAGA,IAAA70B,EAAA,EAAAga,EAAAua,EAAAr0B,OAAqCF,EAAAga,IAAUha,EAC/C2E,EAAAC,KAAAD,MAAAC,KAAA2qB,IAAAgF,EAAAv0B,GAAAu0B,EAAAv0B,EAAA,KAGA,IAAAA,EAAA,EAAAga,EAAA4a,EAAA10B,OAAoCF,EAAAga,IAAUha,EAC9C20B,EAAAjhB,EAAAohB,gBAAA90B,GACA2E,EAAA3E,EAAA,EAAA4E,KAAAD,MAAAgwB,EAAAD,GAAA/vB,EACA+vB,EAAAC,EAGA,OAAAhwB,EA+MAowB,CAAArhB,EAAA6gB,IAAA,EAGAA,SACAlQ,QACAiQ,MACAD,aACA3gB,UAQA+f,wBAAA,SAAAnM,EAAApP,GACA,IAaAlY,EAAAg1B,EAAAC,EAAAjL,EAAA4J,EAAA/T,EAZApB,EADApN,KACAoN,MACAmJ,EAFAvW,KAEAwW,UAEAnU,EAJArC,KAIAuX,iBAEA0K,EAAA5f,EAAA4f,eACAhL,EAAA7J,EAAA4J,KAAAC,SACAjU,GAAAX,EAAAwhB,cAAA5M,EAAAhB,GAAAe,KAAAnQ,IACAid,EAAAzhB,EAAA4G,QAAA6a,aACAnB,EAAAtgB,EAAA4G,QAAA0Z,QACAvB,EAAA7K,EAAA6K,MACApO,EAAA,EAGA,GAAA2P,QAAAhzB,IAAAgzB,QAAAhzB,IAAAyxB,EACA,IAAAzyB,EAAA,EAAmBA,EAAAsnB,IAAkBtnB,GACrCg1B,EAAAvW,EAAA8J,eAAAvoB,IAEA0yB,KAAAsC,EAAAvC,WAAAuC,EAAAI,WAAA1M,qBAAAhV,EAAA+E,IAAAgG,EAAAyV,iBAAAl0B,KACAi1B,GAAAvhB,EAAAwhB,cAAA5M,EAAAtoB,GAAAqoB,KAAAnQ,KAEA7D,EAAA,GAAA4gB,EAAA,GAAA5gB,GAAA,GAAA4gB,EAAA,KACA5Q,GAAA4Q,IAoBA,OAdAjL,EAAAtW,EAAA8gB,iBAAAnQ,GACAuP,EAAAlgB,EAAA8gB,iBAAAnQ,EAAAhQ,GACAwL,EAAA+T,EAAA5J,OAEAhpB,IAAAm0B,GAAAvwB,KAAA2qB,IAAA1P,GAAAsV,IACAtV,EAAAsV,EAGAvB,EADAvf,GAAA,IAAAif,GAAAjf,EAAA,GAAAif,EACAtJ,EAAAmL,EAEAnL,EAAAmL,GAIA,CACAtV,OACAmK,OACA4J,OACAC,OAAAD,EAAA/T,EAAA,IAOA8T,wBAAA,SAAArM,EAAApP,EAAAqb,GACA,IACAjZ,EAAAiZ,EAAA7f,MAAA4G,QACA+a,EAAA,SAAA/a,EAAAma,aA/OA,SAAAvc,EAAAqb,EAAAjZ,GACA,IAKA+J,EALAkQ,EAAAhB,EAAAgB,OACAI,EAAAJ,EAAArc,GACAwc,EAAAxc,EAAA,EAAAqc,EAAArc,EAAA,QACAod,EAAApd,EAAAqc,EAAAr0B,OAAA,EAAAq0B,EAAArc,EAAA,QACAqd,EAAAjb,EAAA6X,mBAgBA,OAbA,OAAAuC,IAGAA,EAAAC,GAAA,OAAAW,EAAA/B,EAAAe,IAAAf,EAAAlP,MAAAiR,EAAAX,IAGA,OAAAW,IAEAA,EAAAX,IAAAD,GAGArQ,EAAAsQ,KAAA/vB,KAAAD,IAAA+vB,EAAAY,IAAA,EAAAC,EAEA,CACAC,MAFA5wB,KAAA2qB,IAAA+F,EAAAZ,GAAA,EAAAa,EAEAhC,EAAAc,WACA9tB,MAAA+T,EAAA8X,cACA/N,SAuNAoR,CAAAvd,EAAAqb,EAAAjZ,GA9QA,SAAApC,EAAAqb,EAAAjZ,GACA,IAGAuF,EAAAtZ,EAHAmvB,EAAApb,EAAAma,aACApJ,EAAAkI,EAAAc,WACAM,EAAApB,EAAAgB,OAAArc,GAcA,OAXAqL,GAAA7K,cAAAgd,IACA7V,EAAA0T,EAAA5uB,IAAA2V,EAAA6X,mBACA5rB,EAAA+T,EAAA8X,gBAKAvS,EAAA6V,EAAArK,EACA9kB,EAAA,GAGA,CACAivB,MAAA3V,EAAAwL,EACA9kB,QACA8d,MAAAsQ,EAAA9U,EAAA,GA0PA8V,CAAAzd,EAAAqb,EAAAjZ,GACAsb,EAHAvkB,KAGA+iB,cAAA9M,EAHAjW,KAGAwW,UAAA4K,OACAoB,EAAAwB,EAAAhR,MAAAgR,EAAAG,MAAAI,EAAAP,EAAAG,MAAA,EACA3V,EAAAjb,KAAAD,IAAA4e,GAAArK,eAAAoB,EAAAub,gBAAAC,KAAAT,EAAAG,MAAAH,EAAA9uB,OACA,OACAyjB,KAAA6J,EAAAhU,EAAA,EACA+T,KAAAC,EAAAhU,EAAA,EACAgU,SACAhU,SAGAyK,KAAA,WACA,IACA7L,EADApN,KACAoN,MAEA/K,EAHArC,KAGAuX,iBAEA2I,EALAlgB,KAKAwW,UAAAQ,KACAP,EANAzW,KAMA0W,aACA/N,EAAAuX,EAAArxB,OACAF,EAAA,EAGA,IAFAujB,GAAAE,OAAAhD,SAAAhC,EAAAC,IAAAD,EAAAsR,WAEY/vB,EAAAga,IAAUha,EACtB2T,MAAAD,EAAAwhB,cAAApN,EAAAO,KAAAroB,MACAuxB,EAAAvxB,GAAAsqB,OAIA/G,GAAAE,OAAA7C,WAAAnC,EAAAC,MAMAmU,uBAAA,SAAAxB,EAAAnZ,GACA,IAOAlY,EAAAga,EAAAtZ,EANA+d,EADApN,KACAoN,MACA6J,EAAA7J,EAAA4J,KAAAC,SACAR,EAAAQ,EAHAjX,KAGA6G,OACAwS,EAAA2G,EAAA3G,QAAA,GACApQ,EAAAmE,EAAAnE,QAAA+P,SAAAgH,UACA5f,EAAA,GAGA6R,EAAA,CACA7E,QACAsX,UAAA7d,EACA4P,UACAR,aAbAjW,KAaA6G,OAEA0B,EAAA,gEAEA,IAAA5Z,EAAA,EAAAga,EAAAJ,EAAA1Z,OAAqCF,EAAAga,IAAUha,EAE/CyR,EADA/Q,EAAAkZ,EAAA5Z,IACAgyB,GAAA,CAAAtH,EAAAhqB,GAAAonB,EAAApnB,GAAA4Z,EAAA5Z,IAAA4iB,EAAApL,GAGA,OAAAzG,KAGAukB,GAAAzS,GAAArK,eACA+c,GAAA1S,GAAAjJ,QAAA8I,QAEAf,GAAAT,KAAA,UACAqQ,MAAA,CACAC,KAAA,UAEAjK,OAAA,CACAC,MAAA,EACA7Q,KAAA,SAEA6e,SAAA,SACAzd,GAAA,aAGA2P,MAAA,EACA/Q,KAAA,SACA6e,SAAA,OACAzd,GAAA,cAGA0d,SAAA,CACAC,UAAA,CACAC,MAAA,WAEA,UAEApD,MAAA,SAAAtX,EAAA0M,GACA,IAAA2K,EAAA3K,EAAAC,SAAA3M,EAAA2L,cAAA2L,OAAA,GACAqD,EAAAjO,EAAAC,SAAA3M,EAAA2L,cAAAe,KAAA1M,EAAAzD,OACA,OAAA8a,EAAA,MAAArX,EAAA4a,OAAA,KAAA5a,EAAA6a,OAAA,KAAAF,EAAA9xB,EAAA,SAMA,IAAAiyB,GAAA5K,GAAA/Q,OAAA,CAIA0M,gBAAA6C,GAAAyH,MAKA/I,OAAA,SAAAD,GACA,IAAA5N,EAAA7J,KACAuW,EAAA1M,EAAA2M,UACA6G,EAAA9G,EAAAS,KAEA9E,GAAA/J,KAAAkV,EAAA,SAAAnO,EAAArI,GACAgD,EAAAwO,cAAAnJ,EAAArI,EAAA4Q,MAOAY,cAAA,SAAAnJ,EAAArI,EAAA4Q,GACA,IAAA5N,EAAA7J,KACAuW,EAAA1M,EAAA2M,UACA6C,EAAAnK,EAAAmK,QAAA,GACAgM,EAAAxb,EAAAsN,cAAAZ,EAAAI,SACA2O,EAAAzb,EAAAsN,cAAAZ,EAAAO,SAEA7N,EAAAY,EAAA2X,uBAAAtS,EAAArI,GAEAmQ,EAAAnN,EAAA6M,aAAAM,KAAAnQ,GACA0e,EAAA1b,EAAAhD,MACA7S,EAAAyjB,EAAA4N,EAAAG,mBAAA,IAAAH,EAAAlC,iBAAA,kBAAAnM,IAAAyO,IAAA5e,EAAA0e,GACAtxB,EAAAwjB,EAAA6N,EAAAtD,eAAAsD,EAAAnC,iBAAAnM,EAAAnQ,EAAA0e,GACArW,EAAAuS,QAAA4D,EACAnW,EAAAwS,QAAA4D,EACApW,EAAAwW,SAAAzc,EACAiG,EAAA6I,cAAAwN,EACArW,EAAA+I,OAAApR,EACAqI,EAAAyD,OAAA,CACA4G,gBAAAtQ,EAAAsQ,gBACAC,YAAAvQ,EAAAuQ,YACAC,YAAAxQ,EAAAwQ,YACA0E,UAAAlV,EAAAkV,UACAC,WAAAnV,EAAAmV,WACA/P,SAAApF,EAAAoF,SACAX,OAAA+J,EAAA,EAAAxO,EAAAyE,OACAoQ,KAAAzE,EAAAyE,MAAAxb,MAAAtO,IAAAsO,MAAArO,GACAD,IACAC,KAEAib,EAAAuD,SAMA2G,cAAA,SAAAlK,GACA,IAAA6D,EAAA7D,EAAAyD,OACA1J,EAAAiG,EAAAwW,SACApM,EAAApH,GAAAoH,cACApK,EAAAiK,eAAA,CACAI,gBAAAxG,EAAAwG,gBACAC,YAAAzG,EAAAyG,YACAC,YAAA1G,EAAA0G,YACA/L,OAAAqF,EAAArF,QAEAqF,EAAAwG,gBAAAoL,GAAA1b,EAAAyQ,qBAAAJ,EAAArQ,EAAAsQ,kBACAxG,EAAAyG,YAAAmL,GAAA1b,EAAA0Q,iBAAAL,EAAArQ,EAAAuQ,cACAzG,EAAA0G,YAAAkL,GAAA1b,EAAA2Q,iBAAA3Q,EAAAwQ,aACA1G,EAAArF,OAAAzE,EAAAyE,OAAAzE,EAAA6R,aAMA0G,uBAAA,SAAAtS,EAAArI,GACA,IAQAlY,EAAAga,EAAAtZ,EAPA+d,EADApN,KACAoN,MACA6J,EAAA7J,EAAA4J,KAAAC,SACAR,EAAAQ,EAHAjX,KAGA6G,OACAwS,EAAAnK,EAAAmK,QAAA,GACApQ,EAAAmE,EAAAnE,QAAA+P,SAAA9J,MACA8H,EAAAP,EAAAO,KAAAnQ,GACAzG,EAAA,GAGA6R,EAAA,CACA7E,QACAsX,UAAA7d,EACA4P,UACAR,aAdAjW,KAcA6G,OAEA0B,EAAA,+JAEA,IAAA5Z,EAAA,EAAAga,EAAAJ,EAAA1Z,OAAqCF,EAAAga,IAAUha,EAE/CyR,EADA/Q,EAAAkZ,EAAA5Z,IACAi2B,GAAA,CAAAvL,EAAAhqB,GAAAonB,EAAApnB,GAAA4Z,EAAA5Z,IAAA4iB,EAAApL,GAKA,OADAzG,EAAAsN,OAAAkX,GAAA,CAAAvL,EAAA3L,OAAAsJ,IAAA7jB,OAAAxD,EAAA8mB,EAAA/I,OAAAzE,EAAAyE,QAAAuE,EAAApL,GACAzG,KAGAulB,GAAAzT,GAAAjJ,QAAA8I,QACA6T,GAAA1T,GAAArK,eAEAmJ,GAAAT,KAAA,YACA8D,UAAA,CAEAwR,eAAA,EAEAC,cAAA,GAEAlF,MAAA,CACAC,KAAA,UAEAkF,eAAA,SAAA3Y,GACA,IAAA4Y,EAAA,GACAA,EAAAh3B,KAAA,cAAAoe,EAAAhG,GAAA,aACA,IAAA4P,EAAA5J,EAAA4J,KACAC,EAAAD,EAAAC,SACA4K,EAAA7K,EAAA6K,OAEA,GAAA5K,EAAApoB,OACA,QAAAF,EAAA,EAAuBA,EAAAsoB,EAAA,GAAAD,KAAAnoB,SAA6BF,EACpDq3B,EAAAh3B,KAAA,qCAAAioB,EAAA,GAAAsC,gBAAA5qB,GAAA,aAEAkzB,EAAAlzB,IACAq3B,EAAAh3B,KAAA6yB,EAAAlzB,IAGAq3B,EAAAh3B,KAAA,SAKA,OADAg3B,EAAAh3B,KAAA,SACAg3B,EAAAz2B,KAAA,KAEA02B,OAAA,CACApE,OAAA,CACAqE,eAAA,SAAA9Y,GACA,IAAA4J,EAAA5J,EAAA4J,KAEA,OAAAA,EAAA6K,OAAAhzB,QAAAmoB,EAAAC,SAAApoB,OACAmoB,EAAA6K,OAAA/Y,IAAA,SAAA8Y,EAAAjzB,GACA,IAAA4nB,EAAAnJ,EAAA8J,eAAA,GACAiP,EAAAnP,EAAAC,SAAA,GACAjJ,EAAAuI,EAAAS,KAAAroB,GACA0qB,EAAArL,KAAAqL,QAAA,GACA+M,EAAAhZ,EAAAnE,QAAA+P,SAAAhL,IACAc,EAAA6W,GAAA,CAAAtM,EAAAE,gBAAA4M,EAAA5M,gBAAA6M,EAAA7M,sBAAA5pB,EAAAhB,GACAogB,EAAA4W,GAAA,CAAAtM,EAAAG,YAAA2M,EAAA3M,YAAA4M,EAAA5M,kBAAA7pB,EAAAhB,GACA03B,EAAAV,GAAA,CAAAtM,EAAAI,YAAA0M,EAAA1M,YAAA2M,EAAA3M,kBAAA9pB,EAAAhB,GACA,OACAq3B,KAAApE,EACAtF,UAAAxN,EACA2N,YAAA1N,EACAwN,UAAA8J,EACA7T,OAAAlQ,MAAA6jB,EAAAnP,KAAAroB,KAAA4nB,EAAAS,KAAAroB,GAAA6jB,OAEA3L,MAAAlY,KAKA,KAGA23B,QAAA,SAAAC,EAAAC,GACA,IAEA73B,EAAAga,EAAA4N,EAFA1P,EAAA2f,EAAA3f,MACAuG,EAAApN,KAAAoN,MAGA,IAAAze,EAAA,EAAAga,GAAAyE,EAAA4J,KAAAC,UAAA,IAAApoB,OAA8DF,EAAAga,IAAUha,GACxE4nB,EAAAnJ,EAAA8J,eAAAvoB,IAEAqoB,KAAAnQ,KACA0P,EAAAS,KAAAnQ,GAAA2L,QAAA+D,EAAAS,KAAAnQ,GAAA2L,QAIApF,EAAAsK,WAIA+O,iBAAA,GAEApY,UAAA,GAAA9a,KAAAoC,GAEA+wB,cAAA,EAAAnzB,KAAAoC,GAEAmvB,SAAA,CACAC,UAAA,CACAC,MAAA,WACA,UAEApD,MAAA,SAAA+E,EAAA3P,GACA,IAAA4P,EAAA5P,EAAA6K,OAAA8E,EAAA9f,OACA7D,EAAA,KAAAgU,EAAAC,SAAA0P,EAAA1Q,cAAAe,KAAA2P,EAAA9f,OAWA,OATAqL,GAAAhjB,QAAA03B,IAGAA,IAAAlnB,SACA,IAAAsD,EAEA4jB,GAAA5jB,EAGA4jB,OAMA,IAAAC,GAAArM,GAAA/Q,OAAA,CACA0M,gBAAA6C,GAAAuH,IACAnK,WAAAlE,GAAAhL,KAEA4f,aAAA,SAAA7Q,GAGA,IAFA,IAAA8Q,EAAA,EAEAC,EAAA,EAAqBA,EAAA/Q,IAAkB+Q,EACvChnB,KAAAoN,MAAAyV,iBAAAmE,MACAD,EAIA,OAAAA,GAEArP,OAAA,SAAAD,GACA,IAkBA9oB,EAAAga,EAlBAkB,EAAA7J,KACAoN,EAAAvD,EAAAuD,MACAsR,EAAAtR,EAAAsR,UACAuI,EAAA7Z,EAAAnE,QACAie,EAAAxI,EAAA7Q,MAAA6Q,EAAA/Q,KACAwZ,EAAAzI,EAAA5Q,OAAA4Q,EAAA9Q,IACAwZ,EAAA7zB,KAAAD,IAAA4zB,EAAAC,GACAnG,EAAA,CACAhtB,EAAA,EACAC,EAAA,GAEAsiB,EAAA1M,EAAA2M,UACA6Q,EAAA9Q,EAAAS,KACAyP,EAAAQ,EAAAR,iBACAC,EAAAO,EAAAP,cAEAY,EAAAzd,EAAA0d,eAAA1d,EAAAhD,OAIA,GAAA6f,EAAA,EAAAnzB,KAAAoC,GAAA,CACA,IAAA2lB,EAAA2L,EAAA5Y,UAAA,EAAA9a,KAAAoC,IAEA4lB,GADAD,GAAA,EAAA/nB,KAAAoC,IAAA2lB,GAAA/nB,KAAAoC,IAAA,EAAA2lB,GAAA/nB,KAAAoC,GAAA,MACA+wB,EACA1T,EAAA,CACAhf,EAAAT,KAAAuC,IAAAwlB,GACArnB,EAAAV,KAAAwC,IAAAulB,IAEA2H,EAAA,CACAjvB,EAAAT,KAAAuC,IAAAylB,GACAtnB,EAAAV,KAAAwC,IAAAwlB,IAEAiM,EAAAlM,GAAA,GAAAC,GAAA,GAAAD,GAAA,EAAA/nB,KAAAoC,IAAA,EAAApC,KAAAoC,IAAA4lB,EACAkM,EAAAnM,GAAA,GAAA/nB,KAAAoC,IAAA,GAAApC,KAAAoC,IAAA4lB,GAAAD,GAAA,IAAA/nB,KAAAoC,IAAA,IAAApC,KAAAoC,IAAA4lB,EACAmM,EAAApM,IAAA/nB,KAAAoC,KAAApC,KAAAoC,IAAA4lB,GAAAD,GAAA/nB,KAAAoC,IAAApC,KAAAoC,IAAA4lB,EACAoM,EAAArM,GAAA,IAAA/nB,KAAAoC,IAAA,IAAApC,KAAAoC,IAAA4lB,GAAAD,GAAA,IAAA/nB,KAAAoC,IAAA,IAAApC,KAAAoC,IAAA4lB,EACAqM,EAAAnB,EAAA,IACAnzB,EAAA,CACAU,EAAA0zB,GAAA,EAAAn0B,KAAAD,IAAA0f,EAAAhf,GAAAgf,EAAAhf,EAAA,IAAA4zB,GAAA3E,EAAAjvB,GAAAivB,EAAAjvB,EAAA,IAAA4zB,IACA3zB,EAAA0zB,GAAA,EAAAp0B,KAAAD,IAAA0f,EAAA/e,GAAA+e,EAAA/e,EAAA,IAAA2zB,GAAA3E,EAAAhvB,GAAAgvB,EAAAhvB,EAAA,IAAA2zB,KAEAp0B,EAAA,CACAQ,EAAAwzB,EAAA,EAAAj0B,KAAAC,IAAAwf,EAAAhf,GAAAgf,EAAAhf,EAAA,IAAA4zB,GAAA3E,EAAAjvB,GAAAivB,EAAAjvB,EAAA,IAAA4zB,IACA3zB,EAAAwzB,EAAA,EAAAl0B,KAAAC,IAAAwf,EAAA/e,GAAA+e,EAAA/e,EAAA,IAAA2zB,GAAA3E,EAAAhvB,GAAAgvB,EAAAhvB,EAAA,IAAA2zB,KAEApZ,EAAA,CACAjB,MAAA,IAAA/Z,EAAAQ,EAAAV,EAAAU,GACAwZ,OAAA,IAAAha,EAAAS,EAAAX,EAAAW,IAEAmzB,EAAA7zB,KAAAD,IAAA4zB,EAAA1Y,EAAAjB,MAAA4Z,EAAA3Y,EAAAhB,QACAwT,EAAA,CACAhtB,GAAA,IAAAR,EAAAQ,EAAAV,EAAAU,GACAC,GAAA,IAAAT,EAAAS,EAAAX,EAAAW,IAIA,IAAAtF,EAAA,EAAAga,EAAA0e,EAAAx4B,OAAqCF,EAAAga,IAAUha,EAC/C04B,EAAA14B,GAAA+2B,SAAA7b,EAAA2X,uBAAA6F,EAAA14B,MAaA,IAVAye,EAAAqM,YAAA5P,EAAAge,oBACAza,EAAAuO,YAAApoB,KAAAC,KAAA4zB,EAAAha,EAAAqM,aAAA,KACArM,EAAAsO,YAAAnoB,KAAAC,IAAAizB,EAAArZ,EAAAuO,YAAA,IAAA8K,EAAA,KACArZ,EAAA0a,cAAA1a,EAAAuO,YAAAvO,EAAAsO,cAAA7R,EAAAke,iCAAA,GACA3a,EAAA4a,QAAAhH,EAAAhtB,EAAAoZ,EAAAuO,YACAvO,EAAA6a,QAAAjH,EAAA/sB,EAAAmZ,EAAAuO,YACApF,EAAA2R,MAAAre,EAAAse,iBACAte,EAAA8R,YAAAvO,EAAAuO,YAAAvO,EAAA0a,aAAAje,EAAAue,qBAAAve,EAAAhD,OACAgD,EAAA6R,YAAAnoB,KAAAC,IAAAqW,EAAA8R,YAAAvO,EAAA0a,aAAAR,EAAA,GAEA34B,EAAA,EAAAga,EAAA0e,EAAAx4B,OAAqCF,EAAAga,IAAUha,EAC/Ckb,EAAAwO,cAAAgP,EAAA14B,KAAA8oB,IAGAY,cAAA,SAAArK,EAAAnH,EAAA4Q,GACA,IAAA5N,EAAA7J,KACAoN,EAAAvD,EAAAuD,MACAsR,EAAAtR,EAAAsR,UACAuI,EAAA7Z,EAAAnE,QACAof,EAAApB,EAAA5S,UACAiU,GAAA5J,EAAA/Q,KAAA+Q,EAAA7Q,OAAA,EACA0a,GAAA7J,EAAA9Q,IAAA8Q,EAAA5Q,QAAA,EACAwN,EAAA2L,EAAA5Y,SAEAkN,EAAA0L,EAAA5Y,SAEAoI,EAAA5M,EAAA6M,aACAgQ,EAAAjP,GAAA4Q,EAAAxC,cAAA,EAAA7X,EAAAwE,OAAA,EAAA3I,EAAA2e,uBAAA/R,EAAAO,KAAAnQ,KAAAogB,EAAAP,eAAA,EAAAnzB,KAAAoC,KACA+lB,EAAAjE,GAAA4Q,EAAAvC,aAAA,EAAAjc,EAAA6R,YACAC,EAAAlE,GAAA4Q,EAAAvC,aAAA,EAAAjc,EAAA8R,YACA1S,EAAA+E,EAAA0X,UAAA,GACAxT,GAAAzI,OAAAuE,EAAA,CAEA+J,cAAAlO,EAAAhD,MACAoR,OAAApR,EAEA8L,OAAA,CACA4G,gBAAAtQ,EAAAsQ,gBACAC,YAAAvQ,EAAAuQ,YACAC,YAAAxQ,EAAAwQ,YACAgB,YAAAxR,EAAAwR,YACAzmB,EAAAs0B,EAAAlb,EAAA4a,QACA/zB,EAAAs0B,EAAAnb,EAAA6a,QACA3M,aACAC,WACAmL,gBACA/K,cACAD,cACAkG,MAAA1P,GAAAnK,sBAAA0O,EAAAmL,MAAA/a,EAAAuG,EAAA4J,KAAA6K,OAAAhb,OAGA,IAAAkM,EAAA/E,EAAA2E,OAEA8E,GAAA4Q,EAAAxC,gBAEA9S,EAAAuI,WADA,IAAAzU,EACAogB,EAAA5Y,SAEAxE,EAAA2M,UAAAQ,KAAAnQ,EAAA,GAAA8L,OAAA4I,SAGAxI,EAAAwI,SAAAxI,EAAAuI,WAAAvI,EAAA2T,eAGA1Y,EAAAyE,SAEA0V,eAAA,WACA,IAGAnlB,EAHAyT,EAAAzW,KAAA0W,aACAH,EAAAvW,KAAAwW,UACA0R,EAAA,EAaA,OAXAhW,GAAA/J,KAAAoO,EAAAS,KAAA,SAAAoB,EAAAvR,GACA7D,EAAAyT,EAAAO,KAAAnQ,GAEAvE,MAAAU,IAAAoV,EAAA5F,SACA0V,GAAA30B,KAAA2qB,IAAAlb,MAOAklB,GAEAM,uBAAA,SAAAxlB,GACA,IAAAklB,EAAAloB,KAAAwW,UAAA0R,MAEA,OAAAA,EAAA,IAAA5lB,MAAAU,GACA,EAAAzP,KAAAoC,IAAApC,KAAA2qB,IAAAlb,GAAAklB,GAGA,GAGAL,kBAAA,SAAAR,GACA,IAGA14B,EAAAga,EAAA4N,EAAAvI,EAAA+V,EAAA9a,EAAAwQ,EAAAgP,EAFAj1B,EAAA,EACA4Z,EAFApN,KAEAoN,MAGA,IAAAia,EAEA,IAAA14B,EAAA,EAAAga,EAAAyE,EAAA4J,KAAAC,SAAApoB,OAAsDF,EAAAga,IAAUha,EAChE,GAAAye,EAAAyV,iBAAAl0B,GAAA,CACA4nB,EAAAnJ,EAAA8J,eAAAvoB,GACA04B,EAAA9Q,EAAAS,KAEAroB,IAZAqR,KAYA6G,QACAkd,EAAAxN,EAAAwN,YAGA,MAKA,IAAAsD,EACA,SAGA,IAAA14B,EAAA,EAAAga,EAAA0e,EAAAx4B,OAAqCF,EAAAga,IAAUha,EAC/Cqf,EAAAqZ,EAAA14B,GAGA,WAFAsa,EAAA8a,IAAAvC,uBAAAxT,EAAArf,GAAAqf,EAAA0X,UAEAjL,cACAhB,EAAAxQ,EAAAwQ,YACAgP,EAAAxf,EAAA2Q,iBAEApmB,EAAAi1B,GADAj1B,EAAAimB,EAAAjmB,EAAAimB,EAAAjmB,GACAi1B,EAAAj1B,GAIA,OAAAA,GAMA4lB,cAAA,SAAApL,GACA,IAAA+E,EAAA/E,EAAA2E,OACA1J,EAAA+E,EAAA0X,SACApM,EAAApH,GAAAoH,cACAtL,EAAAmL,eAAA,CACAI,gBAAAxG,EAAAwG,gBACAC,YAAAzG,EAAAyG,YACAC,YAAA1G,EAAA0G,aAEA1G,EAAAwG,gBAAAqM,GAAA3c,EAAAyQ,qBAAAJ,EAAArQ,EAAAsQ,kBACAxG,EAAAyG,YAAAoM,GAAA3c,EAAA0Q,iBAAAL,EAAArQ,EAAAuQ,cACAzG,EAAA0G,YAAAmM,GAAA3c,EAAA2Q,iBAAA3Q,EAAAwQ,cAMA+H,uBAAA,SAAAxT,EAAAnH,GACA,IAMAlY,EAAAga,EAAAtZ,EALA+d,EADApN,KACAoN,MACAqJ,EAFAzW,KAEA0W,aACA2C,EAAArL,EAAAqL,QAAA,GACApQ,EAAAmE,EAAAnE,QAAA+P,SAAAhL,IACA5N,EAAA,GAGA6R,EAAA,CACA7E,QACAsX,UAAA7d,EACA4P,UACAR,aAZAjW,KAYA6G,OAEA0B,EAAA,2HAEA,IAAA5Z,EAAA,EAAAga,EAAAJ,EAAA1Z,OAAqCF,EAAAga,IAAUha,EAE/CyR,EADA/Q,EAAAkZ,EAAA5Z,IACAg3B,GAAA,CAAAtM,EAAAhqB,GAAAonB,EAAApnB,GAAA4Z,EAAA5Z,IAAA4iB,EAAApL,GAGA,OAAAzG,GAOAgoB,qBAAA,SAAAnS,GAGA,IAFA,IAAAyS,EAAA,EAEA/5B,EAAA,EAAqBA,EAAAsnB,IAAkBtnB,EACvCqR,KAAAoN,MAAAyV,iBAAAl0B,KACA+5B,GAAA1oB,KAAAunB,eAAA54B,IAIA,OAAA+5B,GAMAnB,eAAA,SAAAoB,GACA,OAAAp1B,KAAAC,IAAAoyB,GAAA5lB,KAAAoN,MAAA4J,KAAAC,SAAA0R,GAAAhjB,OAAA,OAOAoiB,8BAAA,WACA,OAAA/nB,KAAAooB,qBAAApoB,KAAAoN,MAAA4J,KAAAC,SAAApoB,WAIAmiB,GAAAT,KAAA,iBACAqQ,MAAA,CACAC,KAAA,QACA+H,KAAA,KAEAhS,OAAA,CACAC,MAAA,EACA7Q,KAAA,SACA6e,SAAA,WAEA9N,MAAA,EACA/Q,KAAA,WACA6e,SAAA,OACA/D,mBAAA,GACAC,cAAA,GACAC,QAAA,EACAC,UAAA,CACAC,iBAAA,MAIAlI,SAAA,CACAgH,UAAA,CACAP,cAAA,SAGAqF,SAAA,CACAjE,KAAA,QACA+H,KAAA,OAIA,IAAAC,GAAA1H,GAAA1X,OAAA,CAIA4N,iBAAA,WACA,OAAArX,KAAAwW,UAAAG,SAMAW,iBAAA,WACA,OAAAtX,KAAAwW,UAAAM,WAGAgS,GAAA5W,GAAArK,eACAkhB,GAAA7W,GAAAjJ,QAAA8I,QACAiX,GAAA9W,GAAAE,OAAAnD,eAoBA,SAAAga,GAAAxS,EAAAxN,GACA,OAAA6f,GAAArS,EAAAyS,SAAAjgB,EAAA8H,WAnBAC,GAAAT,KAAA,QACAQ,WAAA,EACAqM,UAAA,EACAwD,MAAA,CACAC,KAAA,SAEAjK,OAAA,CACAC,MAAA,EACA7Q,KAAA,WACAoB,GAAA,aAEA2P,MAAA,EACA/Q,KAAA,SACAoB,GAAA,gBASA,IAAA+hB,GAAA3O,GAAA/Q,OAAA,CACAyM,mBAAA8C,GAAAwH,KACArK,gBAAA6C,GAAAyH,MACA/I,OAAA,SAAAD,GACA,IAOA9oB,EAAAga,EAPAkB,EAAA7J,KACAuW,EAAA1M,EAAA2M,UACAmG,EAAApG,EAAAE,QACA4G,EAAA9G,EAAAS,MAAA,GACA3U,EAAAwH,EAAAsN,cAAAZ,EAAAO,SACAL,EAAA5M,EAAA6M,aACAwS,EAAAD,GAAAxS,EAAA5M,EAAAuD,MAAAnE,SAoBA,IAjBAigB,SAEAv5B,IAAA8mB,EAAA3G,cAAAngB,IAAA8mB,EAAA2S,cACA3S,EAAA2S,YAAA3S,EAAA3G,SAIA6M,EAAA0M,OAAAhnB,EACAsa,EAAA5E,cAAAlO,EAAAhD,MAEA8V,EAAAW,UAAAD,EAEAV,EAAAhK,OAAA9I,EAAAyf,oBAAA3M,GACAA,EAAAlK,SAIA9jB,EAAA,EAAAga,EAAA0U,EAAAxuB,OAAuCF,EAAAga,IAAUha,EACjDkb,EAAAwO,cAAAgF,EAAA1uB,KAAA8oB,GAQA,IALAyR,GAAA,IAAAvM,EAAAhK,OAAA7C,SACAjG,EAAA0f,4BAIA56B,EAAA,EAAAga,EAAA0U,EAAAxuB,OAAuCF,EAAAga,IAAUha,EACjD0uB,EAAA1uB,GAAA8jB,SAGA4F,cAAA,SAAAnJ,EAAArI,EAAA4Q,GACA,IASAzjB,EAAAC,EATA4V,EAAA7J,KACAuW,EAAA1M,EAAA2M,UACA6C,EAAAnK,EAAAmK,QAAA,GACA5C,EAAA5M,EAAA6M,aACAT,EAAApM,EAAAhD,MACA7D,EAAAyT,EAAAO,KAAAnQ,GACAye,EAAAzb,EAAAsN,cAAAZ,EAAAO,SACAuO,EAAAxb,EAAAsN,cAAAZ,EAAAI,SACA6S,EAAAjT,EAAAE,QAAA9D,OAGA1J,EAAAY,EAAA4f,qBAAAva,EAAArI,GAEA7S,EAAAqxB,EAAAlC,iBAAA,kBAAAngB,IAAAyiB,IAAA5e,EAAAoP,GACAhiB,EAAAwjB,EAAA6N,EAAAtD,eAAAnY,EAAA6f,gBAAA1mB,EAAA6D,EAAAoP,GAEA/G,EAAAuS,QAAA4D,EACAnW,EAAAwS,QAAA4D,EACApW,EAAAwW,SAAAzc,EACAiG,EAAA6I,cAAA9B,EACA/G,EAAA+I,OAAApR,EAEAqI,EAAAyD,OAAA,CACA3e,IACAC,IACA6pB,KAAAzE,EAAAyE,MAAAxb,MAAAtO,IAAAsO,MAAArO,GAEAyZ,OAAAzE,EAAAyE,OACA0Q,WAAAnV,EAAAmV,WACA/P,SAAApF,EAAAoF,SACAkL,gBAAAtQ,EAAAsQ,gBACAC,YAAAvQ,EAAAuQ,YACAC,YAAAxQ,EAAAwQ,YACA3J,QAAAgZ,GAAAzP,EAAAvJ,QAAA0Z,IAAA1Z,QAAA,GACAF,cAAA4Z,KAAA5Z,YAEAuO,UAAAlV,EAAAkV,YAOAsL,qBAAA,SAAArR,EAAAvR,GACA,IAMAlY,EAAAga,EAAAtZ,EALA+d,EADApN,KACAoN,MACAqJ,EAAArJ,EAAA4J,KAAAC,SAFAjX,KAEA6G,OACAwS,EAAAjB,EAAAiB,QAAA,GACApQ,EAAAmE,EAAAnE,QAAA+P,SAAA9J,MACA9O,EAAA,GAGA6R,EAAA,CACA7E,QACAsX,UAAA7d,EACA4P,UACAR,aAZAjW,KAYA6G,OAEA8iB,EAAA,CACApQ,gBAAA,uBACAC,YAAA,mBACAC,YAAA,mBACA0E,UAAA,iBACAzE,qBAAA,4BACAC,iBAAA,wBACAC,iBAAA,wBACAkB,YAAA,mBACAsD,WAAA,aACA1Q,OAAA,cACAW,SAAA,iBAEA9F,EAAAjB,OAAAiB,KAAAohB,GAEA,IAAAh7B,EAAA,EAAAga,EAAAJ,EAAA1Z,OAAqCF,EAAAga,IAAUha,EAC/CU,EAAAkZ,EAAA5Z,GACAyR,EAAA/Q,GAAA05B,GAAA,CAAA1P,EAAAhqB,GAAAonB,EAAAkT,EAAAt6B,IAAAonB,EAAApnB,GAAA4Z,EAAA5Z,IAAA4iB,EAAApL,GAGA,OAAAzG,GAMAkpB,oBAAA,SAAAlR,GACA,IAOAzpB,EAAAga,EAAAtZ,EANA+d,EADApN,KACAoN,MACAqJ,EAAArJ,EAAA4J,KAAAC,SAFAjX,KAEA6G,OACAwS,EAAAjB,EAAAiB,QAAA,GACApQ,EAAAmE,EAAAnE,QACA2gB,EAAA3gB,EAAA+P,SAAA2D,KACAvc,EAAA,GAEAmI,EAAA,mJAEA,IAAA5Z,EAAA,EAAAga,EAAAJ,EAAA1Z,OAAqCF,EAAAga,IAAUha,EAE/CyR,EADA/Q,EAAAkZ,EAAA5Z,IACAo6B,GAAA,CAAA1P,EAAAhqB,GAAAonB,EAAApnB,GAAAu6B,EAAAv6B,KASA,OAHA+Q,EAAAgd,SAAA0L,GAAArS,EAAA2G,SAAAnU,EAAAmU,UACAhd,EAAA0P,QAAAgZ,GAAArS,EAAA2S,YAAAQ,EAAA9Z,SACA1P,EAAAwP,YAAAmZ,GAAA,CAAA1P,EAAAzJ,YAAA6G,EAAA7G,YAAAga,EAAAja,UACAvP,GAEAspB,gBAAA,SAAA1mB,EAAA6D,EAAAoP,GACA,IAMAtnB,EAAAw3B,EAAA0D,EALAzc,EADApN,KACAoN,MACAmJ,EAFAvW,KAEAwW,UACA8O,EAHAtlB,KAGAmX,cAAAZ,EAAAO,SACAgT,EAAA,EACAC,EAAA,EAGA,GAAAzE,EAAArc,QAAA0Z,QAAA,CACA,IAAAh0B,EAAA,EAAmBA,EAAAsnB,EAAkBtnB,IAIrC,GAHAw3B,EAAA/Y,EAAA4J,KAAAC,SAAAtoB,GAGA,UAFAk7B,EAAAzc,EAAA8J,eAAAvoB,IAEAqX,MAAA6jB,EAAA/S,UAAAwO,EAAAle,IAAAgG,EAAAyV,iBAAAl0B,GAAA,CACA,IAAAq7B,EAAApiB,OAAA0d,EAAAzB,cAAAsC,EAAAnP,KAAAnQ,KAEAmjB,EAAA,EACAD,GAAAC,GAAA,EAEAF,GAAAE,GAAA,EAKA,IAAAC,EAAAriB,OAAA0d,EAAAzB,cAAA7gB,IAEA,OAAAinB,EAAA,EACA3E,EAAAnC,iBAAA4G,EAAAE,GAGA3E,EAAAnC,iBAAA2G,EAAAG,GAGA,OAAA3E,EAAAnC,iBAAAngB,IAEAumB,0BAAA,WACA,IAMA56B,EAAAga,EAAAoK,EAAAmX,EALA9c,EADApN,KACAoN,MACAmJ,EAFAvW,KAEAwW,UACAgT,EAAAjT,EAAAE,QAAA9D,OACAxD,EAAA/B,EAAAsR,UACArB,EAAA9G,EAAAS,MAAA,GASA,SAAAmT,EAAAC,EAAA92B,EAAAE,GACA,OAAAD,KAAAC,IAAAD,KAAAD,IAAA82B,EAAA52B,GAAAF,GAGA,GAVAk2B,EAAApM,WACAC,IAAAgN,OAAA,SAAAD,GACA,OAAAA,EAAAzX,OAAAmL,QAQA,aAAA0L,EAAAc,uBACApY,GAAAqY,oBAAAlN,QAEA,IAAA1uB,EAAA,EAAAga,EAAA0U,EAAAxuB,OAAyCF,EAAAga,IAAUha,EACnDokB,EAAAsK,EAAA1uB,GAAAgkB,OACAuX,EAAAhY,GAAAsY,YAAAtY,GAAA2L,aAAAR,EAAA1uB,GAAAgkB,OAAAI,EAAAb,GAAAuY,SAAApN,EAAA1uB,GAAAgkB,OAAA6W,EAAA1Z,SACAiD,EAAA/C,sBAAAka,EAAAza,SAAAzb,EACA+e,EAAA7C,sBAAAga,EAAAza,SAAAxb,EACA8e,EAAA9C,kBAAAia,EAAAjG,KAAAjwB,EACA+e,EAAA5C,kBAAA+Z,EAAAjG,KAAAhwB,EAIA,GAAAmZ,EAAAnE,QAAA+P,SAAA2D,KAAAK,gBACA,IAAAruB,EAAA,EAAAga,EAAA0U,EAAAxuB,OAAyCF,EAAAga,IAAUha,EACnDokB,EAAAsK,EAAA1uB,GAAAgkB,OAEAqW,GAAAjW,EAAA5D,KACAxgB,EAAA,GAAAq6B,GAAA3L,EAAA1uB,EAAA,GAAAgkB,OAAAxD,KACA4D,EAAA/C,sBAAAma,EAAApX,EAAA/C,sBAAAb,EAAAxB,KAAAwB,EAAAtB,OACAkF,EAAA7C,sBAAAia,EAAApX,EAAA7C,sBAAAf,EAAAvB,IAAAuB,EAAArB,SAGAnf,EAAA0uB,EAAAxuB,OAAA,GAAAm6B,GAAA3L,EAAA1uB,EAAA,GAAAgkB,OAAAxD,KACA4D,EAAA9C,kBAAAka,EAAApX,EAAA9C,kBAAAd,EAAAxB,KAAAwB,EAAAtB,OACAkF,EAAA5C,kBAAAga,EAAApX,EAAA5C,kBAAAhB,EAAAvB,IAAAuB,EAAArB,WAMAmL,KAAA,WACA,IAMAyR,EALAtd,EADApN,KACAoN,MACAmJ,EAFAvW,KAEAwW,UACA6G,EAAA9G,EAAAS,MAAA,GACA7H,EAAA/B,EAAAsR,UACA/V,EAAA0U,EAAAxuB,OAEAF,EAAA,EAeA,IAbAs6B,GATAjpB,KASA0W,aAAAtJ,EAAAnE,WACAyhB,GAAAnU,EAAAE,QAAA9D,OAAA8G,aAAA,KACAvH,GAAAE,OAAAhD,SAAAhC,EAAAC,IAAA,CACAM,KAAAwB,EAAAxB,KACAE,MAAAsB,EAAAtB,MACAD,IAAAuB,EAAAvB,IAAA8c,EACA5c,OAAAqB,EAAArB,OAAA4c,IAEAnU,EAAAE,QAAAwC,OACA/G,GAAAE,OAAA7C,WAAAnC,EAAAC,MAIY1e,EAAAga,IAAUha,EACtB0uB,EAAA1uB,GAAAsqB,KAAA9J,IAOAiK,cAAA,SAAAlK,GACA,IAAA6D,EAAA7D,EAAAyD,OACA1J,EAAAiG,EAAAwW,SACApM,EAAApH,GAAAoH,cACApK,EAAAiK,eAAA,CACAI,gBAAAxG,EAAAwG,gBACAC,YAAAzG,EAAAyG,YACAC,YAAA1G,EAAA0G,YACA/L,OAAAqF,EAAArF,QAEAqF,EAAAwG,gBAAAuP,GAAA7f,EAAAyQ,qBAAAJ,EAAArQ,EAAAsQ,kBACAxG,EAAAyG,YAAAsP,GAAA7f,EAAA0Q,iBAAAL,EAAArQ,EAAAuQ,cACAzG,EAAA0G,YAAAqP,GAAA7f,EAAA2Q,iBAAA3Q,EAAAwQ,aACA1G,EAAArF,OAAAob,GAAA7f,EAAA6R,YAAA7R,EAAAyE,WAGAid,GAAAzY,GAAAjJ,QAAA8I,QAEAf,GAAAT,KAAA,aACAlO,MAAA,CACA2D,KAAA,eACA4kB,WAAA,CACAC,SAAA,GAEA5J,UAAA,CACA6J,UAAA,GAEAC,YAAA,CACAF,SAAA,GAEAtH,MAAA,CACAyH,aAAA,IAIA3W,UAAA,CACAwR,eAAA,EACAC,cAAA,GAEAxK,YAAA,GAAA/nB,KAAAoC,GACAowB,eAAA,SAAA3Y,GACA,IAAA4Y,EAAA,GACAA,EAAAh3B,KAAA,cAAAoe,EAAAhG,GAAA,aACA,IAAA4P,EAAA5J,EAAA4J,KACAC,EAAAD,EAAAC,SACA4K,EAAA7K,EAAA6K,OAEA,GAAA5K,EAAApoB,OACA,QAAAF,EAAA,EAAuBA,EAAAsoB,EAAA,GAAAD,KAAAnoB,SAA6BF,EACpDq3B,EAAAh3B,KAAA,qCAAAioB,EAAA,GAAAsC,gBAAA5qB,GAAA,aAEAkzB,EAAAlzB,IACAq3B,EAAAh3B,KAAA6yB,EAAAlzB,IAGAq3B,EAAAh3B,KAAA,SAKA,OADAg3B,EAAAh3B,KAAA,SACAg3B,EAAAz2B,KAAA,KAEA02B,OAAA,CACApE,OAAA,CACAqE,eAAA,SAAA9Y,GACA,IAAA4J,EAAA5J,EAAA4J,KAEA,OAAAA,EAAA6K,OAAAhzB,QAAAmoB,EAAAC,SAAApoB,OACAmoB,EAAA6K,OAAA/Y,IAAA,SAAA8Y,EAAAjzB,GACA,IAAA4nB,EAAAnJ,EAAA8J,eAAA,GACAiP,EAAAnP,EAAAC,SAAA,GACAjJ,EAAAuI,EAAAS,KAAAroB,GACA0qB,EAAArL,EAAAqL,QAAA,GACA+M,EAAAhZ,EAAAnE,QAAA+P,SAAAhL,IACAc,EAAA6b,GAAA,CAAAtR,EAAAE,gBAAA4M,EAAA5M,gBAAA6M,EAAA7M,sBAAA5pB,EAAAhB,GACAogB,EAAA4b,GAAA,CAAAtR,EAAAG,YAAA2M,EAAA3M,YAAA4M,EAAA5M,kBAAA7pB,EAAAhB,GACA03B,EAAAsE,GAAA,CAAAtR,EAAAI,YAAA0M,EAAA1M,YAAA2M,EAAA3M,kBAAA9pB,EAAAhB,GACA,OACAq3B,KAAApE,EACAtF,UAAAxN,EACA2N,YAAA1N,EACAwN,UAAA8J,EACA7T,OAAAlQ,MAAA6jB,EAAAnP,KAAAroB,KAAA4nB,EAAAS,KAAAroB,GAAA6jB,OAEA3L,MAAAlY,KAKA,KAGA23B,QAAA,SAAAC,EAAAC,GACA,IAEA73B,EAAAga,EAAA4N,EAFA1P,EAAA2f,EAAA3f,MACAuG,EAAApN,KAAAoN,MAGA,IAAAze,EAAA,EAAAga,GAAAyE,EAAA4J,KAAAC,UAAA,IAAApoB,OAA8DF,EAAAga,IAAUha,GACxE4nB,EAAAnJ,EAAA8J,eAAAvoB,IACAqoB,KAAAnQ,GAAA2L,QAAA+D,EAAAS,KAAAnQ,GAAA2L,OAGApF,EAAAsK,WAIAoN,SAAA,CACAC,UAAA,CACAC,MAAA,WACA,UAEApD,MAAA,SAAAtX,EAAA0M,GACA,OAAAA,EAAA6K,OAAAvX,EAAAzD,OAAA,KAAAyD,EAAA6a,YAMA,IAAA8F,GAAAzQ,GAAA/Q,OAAA,CACA0M,gBAAA6C,GAAAuH,IACAnK,WAAAlE,GAAAhL,KACAwQ,OAAA,SAAAD,GACA,IAOA9oB,EAAAga,EAAAyS,EAPAvR,EAAA7J,KACAyW,EAAA5M,EAAA6M,aACAH,EAAA1M,EAAA2M,UACAxD,EAAAnJ,EAAAuD,MAAAnE,QAAAqS,YAAA,EACA4P,EAAArhB,EAAAshB,QAAA,GACAC,EAAAvhB,EAAAwhB,QAAA,GACAhE,EAAA9Q,EAAAS,KAOA,IAJAnN,EAAAyhB,gBAEA/U,EAAAyD,MAAAnQ,EAAA0hB,uBAEA58B,EAAA,EAAAga,EAAA8N,EAAAO,KAAAnoB,OAA6CF,EAAAga,EAAUha,IACvDu8B,EAAAv8B,GAAAqkB,EACAoI,EAAAvR,EAAA2hB,cAAA78B,GACAy8B,EAAAz8B,GAAAysB,EACApI,GAAAoI,EAGA,IAAAzsB,EAAA,EAAAga,EAAA0e,EAAAx4B,OAAqCF,EAAAga,IAAUha,EAC/C04B,EAAA14B,GAAA+2B,SAAA7b,EAAA2X,uBAAA6F,EAAA14B,MACAkb,EAAAwO,cAAAgP,EAAA14B,KAAA8oB,IAOA6T,cAAA,WACA,IAAAzhB,EAAA7J,KACAoN,EAAAvD,EAAAuD,MACAsR,EAAAtR,EAAAsR,UACAuI,EAAA7Z,EAAAnE,QACAme,EAAA7zB,KAAAD,IAAAorB,EAAA7Q,MAAA6Q,EAAA/Q,KAAA+Q,EAAA5Q,OAAA4Q,EAAA9Q,KACAR,EAAAuO,YAAApoB,KAAAC,IAAA4zB,EAAA,KACAha,EAAAsO,YAAAnoB,KAAAC,IAAAyzB,EAAAR,iBAAArZ,EAAAuO,YAAA,IAAAsL,EAAAR,iBAAA,KACArZ,EAAA0a,cAAA1a,EAAAuO,YAAAvO,EAAAsO,aAAAtO,EAAAqe,yBACA5hB,EAAA8R,YAAAvO,EAAAuO,YAAAvO,EAAA0a,aAAAje,EAAAhD,MACAgD,EAAA6R,YAAA7R,EAAA8R,YAAAvO,EAAA0a,cAEAzP,cAAA,SAAArK,EAAAnH,EAAA4Q,GACA,IAAA5N,EAAA7J,KACAoN,EAAAvD,EAAAuD,MACAqJ,EAAA5M,EAAA6M,aACAuQ,EAAA7Z,EAAAnE,QACAof,EAAApB,EAAA5S,UACAhS,EAAA+K,EAAA/K,MACAwf,EAAAzU,EAAA4J,KAAA6K,OACAyG,EAAAjmB,EAAAqpB,QACAnD,EAAAlmB,EAAAspB,QAEAC,EAAA3E,EAAA3L,WACAD,EAAArN,EAAAwE,OAAA,EAAAnQ,EAAAwpB,8BAAApV,EAAAO,KAAAnQ,IACAyU,EAAAzR,EAAAshB,QAAAtkB,GACA0U,EAAAD,GAAAtN,EAAAwE,OAAA,EAAA3I,EAAAwhB,QAAAxkB,IACAilB,EAAAzD,EAAAvC,aAAA,EAAAzjB,EAAAwpB,8BAAApV,EAAAO,KAAAnQ,IACAoC,EAAA+E,EAAA0X,UAAA,GACAxT,GAAAzI,OAAAuE,EAAA,CAEA+J,cAAAlO,EAAAhD,MACAoR,OAAApR,EACAwiB,OAAAhnB,EAEAsQ,OAAA,CACA4G,gBAAAtQ,EAAAsQ,gBACAC,YAAAvQ,EAAAuQ,YACAC,YAAAxQ,EAAAwQ,YACAgB,YAAAxR,EAAAwR,YACAzmB,EAAAs0B,EACAr0B,EAAAs0B,EACA7M,YAAA,EACAC,YAAAlE,EAAAqU,EAAAzQ,EACAC,WAAA7D,GAAA4Q,EAAAxC,cAAA+F,EAAAtQ,EACAC,SAAA9D,GAAA4Q,EAAAxC,cAAA+F,EAAArQ,EACAqG,MAAA1P,GAAAnK,sBAAA8Z,EAAAhb,EAAAgb,EAAAhb,OAGAmH,EAAAyE,SAEA8Y,qBAAA,WACA,IAAA9U,EAAAzW,KAAA0W,aACAH,EAAAvW,KAAAwW,UACAwD,EAAA,EAMA,OALA9H,GAAA/J,KAAAoO,EAAAS,KAAA,SAAAoB,EAAAvR,GACAvE,MAAAmU,EAAAO,KAAAnQ,KAAAuR,EAAA5F,QACAwH,MAGAA,GAMAZ,cAAA,SAAApL,GACA,IAAA+E,EAAA/E,EAAA2E,OACA1J,EAAA+E,EAAA0X,SACApM,EAAApH,GAAAoH,cACAzR,EAAAqK,GAAArK,eACAmG,EAAAmL,eAAA,CACAI,gBAAAxG,EAAAwG,gBACAC,YAAAzG,EAAAyG,YACAC,YAAA1G,EAAA0G,aAEA1G,EAAAwG,gBAAA1R,EAAAoB,EAAAyQ,qBAAAJ,EAAArQ,EAAAsQ,kBACAxG,EAAAyG,YAAA3R,EAAAoB,EAAA0Q,iBAAAL,EAAArQ,EAAAuQ,cACAzG,EAAA0G,YAAA5R,EAAAoB,EAAA2Q,iBAAA3Q,EAAAwQ,cAMA+H,uBAAA,SAAAxT,EAAAnH,GACA,IAMAlY,EAAAga,EAAAtZ,EALA+d,EADApN,KACAoN,MACAqJ,EAFAzW,KAEA0W,aACA2C,EAAArL,EAAAqL,QAAA,GACApQ,EAAAmE,EAAAnE,QAAA+P,SAAAhL,IACA5N,EAAA,GAGA6R,EAAA,CACA7E,QACAsX,UAAA7d,EACA4P,UACAR,aAZAjW,KAYA6G,OAEA0B,EAAA,2HAEA,IAAA5Z,EAAA,EAAAga,EAAAJ,EAAA1Z,OAAqCF,EAAAga,IAAUha,EAE/CyR,EADA/Q,EAAAkZ,EAAA5Z,IACAg8B,GAAA,CAAAtR,EAAAhqB,GAAAonB,EAAApnB,GAAA4Z,EAAA5Z,IAAA4iB,EAAApL,GAGA,OAAAzG,GAMAorB,cAAA,SAAA3kB,GACA,IAAAgD,EAAA7J,KACAga,EAAAha,KAAAwW,UAAAwD,MACAvD,EAAA5M,EAAA6M,aACAH,EAAA1M,EAAA2M,UAEA,GAAAlU,MAAAmU,EAAAO,KAAAnQ,KAAA0P,EAAAS,KAAAnQ,GAAA2L,OACA,SAIA,IAAAP,EAAA,CACA7E,MAAAvD,EAAAuD,MACAsX,UAAA7d,EACA4P,UACAR,aAAApM,EAAAhD,OAEA,OAAA8jB,GAAA,CAAA9gB,EAAAuD,MAAAnE,QAAA+P,SAAAhL,IAAAoN,MAAA,EAAA7nB,KAAAoC,GAAAqkB,GAAA/H,EAAApL,MAIAmK,GAAAT,KAAA,MAAA2B,GAAAnM,MAAAiL,GAAA+a,WAEA/a,GAAAT,KAAA,OACAkW,iBAAA,IAIA,IAAAuF,GAAAnF,GACAoF,GAAA/Z,GAAArK,eACAqkB,GAAAha,GAAAjJ,QAAA8I,QAEAf,GAAAT,KAAA,SACAlO,MAAA,CACA2D,KAAA,gBAEAgT,SAAA,CACA2D,KAAA,CACA7M,QAAA,MAMA,IAAAqc,GAAA3R,GAAA/Q,OAAA,CACAyM,mBAAA8C,GAAAwH,KACArK,gBAAA6C,GAAAyH,MACArK,WAAAlE,GAAAhL,KACAwQ,OAAA,SAAAD,GACA,IAMA9oB,EAAAga,EANAkB,EAAA7J,KACAuW,EAAA1M,EAAA2M,UACAmG,EAAApG,EAAAE,QACA4G,EAAA9G,EAAAS,MAAA,GACA3U,EAAAwH,EAAAuD,MAAA/K,MACAoU,EAAA5M,EAAA6M,aAiBA,SAdA/mB,IAAA8mB,EAAA3G,cAAAngB,IAAA8mB,EAAA2S,cACA3S,EAAA2S,YAAA3S,EAAA3G,SAIA6M,EAAA0M,OAAAhnB,EACAsa,EAAA5E,cAAAlO,EAAAhD,MAEA8V,EAAAW,UAAAD,EACAV,EAAAc,OAAA,EAEAd,EAAAhK,OAAA9I,EAAAyf,oBAAA3M,GACAA,EAAAlK,QAEA9jB,EAAA,EAAAga,EAAA0U,EAAAxuB,OAAuCF,EAAAga,IAAUha,EACjDkb,EAAAwO,cAAAgF,EAAA1uB,KAAA8oB,GAMA,IAFA5N,EAAA0f,4BAEA56B,EAAA,EAAAga,EAAA0U,EAAAxuB,OAAuCF,EAAAga,IAAUha,EACjD0uB,EAAA1uB,GAAA8jB,SAGA4F,cAAA,SAAAnJ,EAAArI,EAAA4Q,GACA,IAAA5N,EAAA7J,KACAqZ,EAAAnK,EAAAmK,QAAA,GACA5C,EAAA5M,EAAA6M,aACArU,EAAAwH,EAAAuD,MAAA/K,MACA+pB,EAAA/pB,EAAAgqB,yBAAAxlB,EAAA4P,EAAAO,KAAAnQ,IAEAoC,EAAAY,EAAA4f,qBAAAva,EAAArI,GAEA2iB,EAAA3f,EAAA2M,UAAAC,QAAA9D,OAEA3e,EAAAyjB,EAAApV,EAAAqpB,QAAAU,EAAAp4B,EACAC,EAAAwjB,EAAApV,EAAAspB,QAAAS,EAAAn4B,EAEAib,EAAAma,OAAAhnB,EACA6M,EAAAwW,SAAAzc,EACAiG,EAAA6I,cAAAlO,EAAAhD,MACAqI,EAAA+I,OAAApR,EAEAqI,EAAAyD,OAAA,CACA3e,IAEAC,IACA6pB,KAAAzE,EAAAyE,MAAAxb,MAAAtO,IAAAsO,MAAArO,GAEAyZ,OAAAzE,EAAAyE,OACA0Q,WAAAnV,EAAAmV,WACA/P,SAAApF,EAAAoF,SACAkL,gBAAAtQ,EAAAsQ,gBACAC,YAAAvQ,EAAAuQ,YACAC,YAAAxQ,EAAAwQ,YACA3J,QAAAmc,GAAA5S,EAAAvJ,QAAA0Z,IAAA1Z,QAAA,GAEAqO,UAAAlV,EAAAkV,YAOAsL,qBAAA,SAAArR,EAAAvR,GACA,IAMAlY,EAAAga,EAAAtZ,EALA+d,EADApN,KACAoN,MACAqJ,EAAArJ,EAAA4J,KAAAC,SAFAjX,KAEA6G,OACAwS,EAAAjB,EAAAiB,QAAA,GACApQ,EAAAmE,EAAAnE,QAAA+P,SAAA9J,MACA9O,EAAA,GAGA6R,EAAA,CACA7E,QACAsX,UAAA7d,EACA4P,UACAR,aAZAjW,KAYA6G,OAEA8iB,EAAA,CACApQ,gBAAA,uBACAC,YAAA,mBACAC,YAAA,mBACA0E,UAAA,iBACAzE,qBAAA,4BACAC,iBAAA,wBACAC,iBAAA,wBACAkB,YAAA,mBACAsD,WAAA,aACA1Q,OAAA,cACAW,SAAA,iBAEA9F,EAAAjB,OAAAiB,KAAAohB,GAEA,IAAAh7B,EAAA,EAAAga,EAAAJ,EAAA1Z,OAAqCF,EAAAga,IAAUha,EAC/CU,EAAAkZ,EAAA5Z,GACAyR,EAAA/Q,GAAA68B,GAAA,CAAA7S,EAAAhqB,GAAAonB,EAAAkT,EAAAt6B,IAAAonB,EAAApnB,GAAA4Z,EAAA5Z,IAAA4iB,EAAApL,GAGA,OAAAzG,GAMAkpB,oBAAA,SAAAlR,GACA,IAMAzpB,EAAAga,EAAAtZ,EALA+d,EADApN,KACAoN,MACAqJ,EAAArJ,EAAA4J,KAAAC,SAFAjX,KAEA6G,OACAwS,EAAAjB,EAAAiB,QAAA,GACApQ,EAAAmE,EAAAnE,QAAA+P,SAAA2D,KACAvc,EAAA,GAEAmI,EAAA,0HAEA,IAAA5Z,EAAA,EAAAga,EAAAJ,EAAA1Z,OAAqCF,EAAAga,IAAUha,EAE/CyR,EADA/Q,EAAAkZ,EAAA5Z,IACAu9B,GAAA,CAAA7S,EAAAhqB,GAAAonB,EAAApnB,GAAA4Z,EAAA5Z,KAIA,OADA+Q,EAAA0P,QAAAmc,GAAAxV,EAAA2S,YAAAngB,EAAA6G,SACA1P,GAEAmpB,0BAAA,WACA,IAIA56B,EAAAga,EAAAoK,EAAAmX,EAHA3T,EADAvW,KACAwW,UACArH,EAFAnP,KAEAoN,MAAAsR,UACArB,EAAA9G,EAAAS,MAAA,GAGA,SAAAmT,EAAAC,EAAA92B,EAAAE,GACA,OAAAD,KAAAC,IAAAD,KAAAD,IAAA82B,EAAA52B,GAAAF,GAGA,IAAA3E,EAAA,EAAAga,EAAA0U,EAAAxuB,OAAuCF,EAAAga,IAAUha,EACjDokB,EAAAsK,EAAA1uB,GAAAgkB,OACAuX,EAAAhY,GAAAsY,YAAAtY,GAAA2L,aAAAR,EAAA1uB,GAAA,GAAAgkB,OAAAI,EAAAb,GAAAuY,SAAApN,EAAA1uB,GAAA,GAAAgkB,OAAAI,EAAAjD,SAEAiD,EAAA/C,sBAAAma,EAAAD,EAAAza,SAAAzb,EAAAmb,EAAAxB,KAAAwB,EAAAtB,OACAkF,EAAA7C,sBAAAia,EAAAD,EAAAza,SAAAxb,EAAAkb,EAAAvB,IAAAuB,EAAArB,QACAiF,EAAA9C,kBAAAka,EAAAD,EAAAjG,KAAAjwB,EAAAmb,EAAAxB,KAAAwB,EAAAtB,OACAkF,EAAA5C,kBAAAga,EAAAD,EAAAjG,KAAAhwB,EAAAkb,EAAAvB,IAAAuB,EAAArB,SAGAsL,cAAA,SAAAlK,GACA,IAAA6D,EAAA7D,EAAAyD,OACA1J,EAAAiG,EAAAwW,SACApM,EAAApH,GAAAoH,cACApK,EAAAiK,eAAA,CACAI,gBAAAxG,EAAAwG,gBACAC,YAAAzG,EAAAyG,YACAC,YAAA1G,EAAA0G,YACA/L,OAAAqF,EAAArF,QAEAqF,EAAAwG,gBAAA0S,GAAAhjB,EAAAyQ,qBAAAJ,EAAArQ,EAAAsQ,kBACAxG,EAAAyG,YAAAyS,GAAAhjB,EAAA0Q,iBAAAL,EAAArQ,EAAAuQ,cACAzG,EAAA0G,YAAAwS,GAAAhjB,EAAA2Q,iBAAA3Q,EAAAwQ,aACA1G,EAAArF,OAAAue,GAAAhjB,EAAA6R,YAAA7R,EAAAyE,WAIAsD,GAAAT,KAAA,WACAqQ,MAAA,CACAC,KAAA,UAEAjK,OAAA,CACAC,MAAA,EACAzP,GAAA,WAEApB,KAAA,SAEA6e,SAAA,WAEA9N,MAAA,EACA3P,GAAA,WACApB,KAAA,SACA6e,SAAA,UAGA9T,WAAA,EACA+T,SAAA,CACAC,UAAA,CACAC,MAAA,WACA,UAEApD,MAAA,SAAAtX,GACA,UAAAA,EAAA4a,OAAA,KAAA5a,EAAA6a,OAAA,SAOA,IAIAmH,GAAA,CACAjL,IAAAF,GACAoL,OAAAnH,GACA2G,SAAAlF,GACA2F,cAAA3D,GACAlM,KAAAwM,GACAsD,UAAAxB,GACAyB,IAAAV,GACAW,MAAAR,GACAS,QAbAzD,IAsBA,SAAA0D,GAAAtG,EAAAnZ,GACA,OAAAmZ,EAAAuG,OACA,CACA94B,EAAAuyB,EAAAvyB,EACAC,EAAAsyB,EAAAtyB,GAIAie,GAAA2a,oBAAAtG,EAAAnZ,GASA,SAAA2f,GAAA3f,EAAA4f,GACA,IACAzW,EAAA5nB,EAAAq4B,EAAAre,EAAAskB,EADAhW,EAAA7J,EAAA4J,KAAAC,SAGA,IAAAtoB,EAAA,EAAAga,EAAAsO,EAAApoB,OAAuCF,EAAAga,IAAUha,EACjD,GAAAye,EAAAyV,iBAAAl0B,GAMA,IAFA4nB,EAAAnJ,EAAA8J,eAAAvoB,GAEAq4B,EAAA,EAAAiG,EAAA1W,EAAAS,KAAAnoB,OAA0Cm4B,EAAAiG,IAAUjG,EAAA,CACpD,IAAA5O,EAAA7B,EAAAS,KAAAgQ,GAEA5O,EAAA1F,MAAAoL,MACAkP,EAAA5U,IAaA,SAAA8U,GAAA9f,EAAAyX,GACA,IAAA7L,EAAA,GAMA,OALA+T,GAAA3f,EAAA,SAAAgL,GACAA,EAAA2C,QAAA8J,EAAA7wB,EAAA6wB,EAAA5wB,IACA+kB,EAAAhqB,KAAAopB,KAGAY,EAYA,SAAAmU,GAAA/f,EAAAyX,EAAAuI,EAAAC,GACA,IAAAC,EAAA1lB,OAAA2lB,kBACAC,EAAA,GAiBA,OAhBAT,GAAA3f,EAAA,SAAAgL,GACA,IAAAgV,GAAAhV,EAAA2C,QAAA8J,EAAA7wB,EAAA6wB,EAAA5wB,GAAA,CAIA,IAAAuuB,EAAApK,EAAAwD,iBACAP,EAAAgS,EAAAxI,EAAArC,GAEAnH,EAAAiS,GACAE,EAAA,CAAApV,GACAkV,EAAAjS,GACOA,IAAAiS,GAEPE,EAAAx+B,KAAAopB,MAGAoV,EASA,SAAAC,GAAA7E,GACA,IAAA8E,GAAA,IAAA9E,EAAAxe,QAAA,KACAujB,GAAA,IAAA/E,EAAAxe,QAAA,KACA,gBAAAwjB,EAAAC,GACA,IAAAC,EAAAJ,EAAAn6B,KAAA2qB,IAAA0P,EAAA55B,EAAA65B,EAAA75B,GAAA,EACA+5B,EAAAJ,EAAAp6B,KAAA2qB,IAAA0P,EAAA35B,EAAA45B,EAAA55B,GAAA,EACA,OAAAV,KAAAqC,KAAArC,KAAAQ,IAAA+5B,EAAA,GAAAv6B,KAAAQ,IAAAg6B,EAAA,KAIA,SAAAC,GAAA5gB,EAAAmZ,EAAAtd,GACA,IAAA4b,EAAAgI,GAAAtG,EAAAnZ,GAEAnE,EAAA2f,KAAA3f,EAAA2f,MAAA,IACA,IAAAyE,EAAAI,GAAAxkB,EAAA2f,MACAqF,EAAAhlB,EAAAmkB,UAAAF,GAAA9f,EAAAyX,GAAAsI,GAAA/f,EAAAyX,GAAA,EAAAwI,GACArU,EAAA,GAEA,OAAAiV,EAAAp/B,QAIAue,EAAA4J,KAAAC,SAAAxW,QAAA,SAAAgW,EAAAR,GACA,GAAA7I,EAAAyV,iBAAA5M,GAAA,CACA,IAAAM,EAAAnJ,EAAA8J,eAAAjB,GACAmC,EAAA7B,EAAAS,KAAAiX,EAAA,GAAAhW,QAEAG,MAAA1F,MAAAoL,MACA9E,EAAAhqB,KAAAopB,MAIAY,GAbA,GA+BA,IAAAkV,GAAA,CAEAC,MAAA,CACAC,OAAA,SAAAhhB,EAAAmZ,GACA,IAAA1B,EAAAgI,GAAAtG,EAAAnZ,GACA4L,EAAA,GAOA,OANA+T,GAAA3f,EAAA,SAAAgL,GACA,GAAAA,EAAA2C,QAAA8J,EAAA7wB,EAAA6wB,EAAA5wB,GAEA,OADA+kB,EAAAhqB,KAAAopB,GACAY,IAGAA,EAAAtZ,MAAA,MASAkiB,MAAAoM,GAYAnnB,MAAAmnB,GAWAvX,QAAA,SAAArJ,EAAAmZ,EAAAtd,GACA,IAAA4b,EAAAgI,GAAAtG,EAAAnZ,GACAnE,EAAA2f,KAAA3f,EAAA2f,MAAA,KACA,IAAAyE,EAAAI,GAAAxkB,EAAA2f,MACAqF,EAAAhlB,EAAAmkB,UAAAF,GAAA9f,EAAAyX,GAAAsI,GAAA/f,EAAAyX,GAAA,EAAAwI,GAMA,OAJAY,EAAAp/B,OAAA,IACAo/B,EAAA7gB,EAAA8J,eAAA+W,EAAA,GAAAlW,eAAAf,MAGAiX,GASAI,SAAA,SAAAjhB,EAAAmZ,GACA,OAAAyH,GAAA5gB,EAAAmZ,EAAA,CACA6G,WAAA,KAYAle,MAAA,SAAA9B,EAAAmZ,GACA,IAAA1B,EAAAgI,GAAAtG,EAAAnZ,GACA,OAAA8f,GAAA9f,EAAAyX,IAWAyJ,QAAA,SAAAlhB,EAAAmZ,EAAAtd,GACA,IAAA4b,EAAAgI,GAAAtG,EAAAnZ,GACAnE,EAAA2f,KAAA3f,EAAA2f,MAAA,KACA,IAAAyE,EAAAI,GAAAxkB,EAAA2f,MACA,OAAAuE,GAAA/f,EAAAyX,EAAA5b,EAAAmkB,UAAAC,IAWAr5B,EAAA,SAAAoZ,EAAAmZ,EAAAtd,GACA,IAAA4b,EAAAgI,GAAAtG,EAAAnZ,GACA6gB,EAAA,GACAM,GAAA,EAgBA,OAfAxB,GAAA3f,EAAA,SAAAgL,GACAA,EAAAmG,SAAAsG,EAAA7wB,IACAi6B,EAAAj/B,KAAAopB,GAGAA,EAAA2C,QAAA8J,EAAA7wB,EAAA6wB,EAAA5wB,KACAs6B,GAAA,KAKAtlB,EAAAmkB,YAAAmB,IACAN,EAAA,IAGAA,GAWAh6B,EAAA,SAAAmZ,EAAAmZ,EAAAtd,GACA,IAAA4b,EAAAgI,GAAAtG,EAAAnZ,GACA6gB,EAAA,GACAM,GAAA,EAgBA,OAfAxB,GAAA3f,EAAA,SAAAgL,GACAA,EAAAoG,SAAAqG,EAAA5wB,IACAg6B,EAAAj/B,KAAAopB,GAGAA,EAAA2C,QAAA8J,EAAA7wB,EAAA6wB,EAAA5wB,KACAs6B,GAAA,KAKAtlB,EAAAmkB,YAAAmB,IACAN,EAAA,IAGAA,KAKA,SAAAO,GAAAnkB,EAAAwa,GACA,OAAA3S,GAAAuc,MAAApkB,EAAA,SAAAhZ,GACA,OAAAA,EAAAwzB,eAIA,SAAA6J,GAAArkB,EAAAhC,GACAgC,EAAA5J,QAAA,SAAApP,EAAA1C,GAEA,OADA0C,EAAAs9B,WAAAhgC,EACA0C,IAEAgZ,EAAAukB,KAAA,SAAAp5B,EAAAnC,GACA,IAAAuV,EAAAP,EAAAhV,EAAAmC,EACAqT,EAAAR,EAAA7S,EAAAnC,EACA,OAAAuV,EAAAjD,SAAAkD,EAAAlD,OAAAiD,EAAA+lB,WAAA9lB,EAAA8lB,WAAA/lB,EAAAjD,OAAAkD,EAAAlD,SAEA0E,EAAA5J,QAAA,SAAApP,UACAA,EAAAs9B,aA0BA,SAAAE,GAAAC,EAAAtgB,GACA0D,GAAA/J,KAAA2mB,EAAA,SAAAC,GACAvgB,EAAAugB,EAAAlK,WAAAkK,EAAA9M,eAAA8M,EAAAvhB,OAAAuhB,EAAAxhB,QAIAyD,GAAAT,KAAA,UACAye,OAAA,CACAvQ,QAAA,CACA7Q,IAAA,EACAC,MAAA,EACAC,OAAA,EACAH,KAAA,MAyBA,IA8TA5Y,GA9TAk6B,GAAA,CACA3e,SAAA,GAQA4e,OAAA,SAAA9hB,EAAA9C,GACA8C,EAAA0hB,QACA1hB,EAAA0hB,MAAA,IAIAxkB,EAAA6kB,UAAA7kB,EAAA6kB,YAAA,EACA7kB,EAAAua,SAAAva,EAAAua,UAAA,MACAva,EAAA3E,OAAA2E,EAAA3E,QAAA,EACAyH,EAAA0hB,MAAA9/B,KAAAsb,IAQA8kB,UAAA,SAAAhiB,EAAAiiB,GACA,IAAAxoB,EAAAuG,EAAA0hB,MAAA1hB,EAAA0hB,MAAA1kB,QAAAilB,IAAA,GAEA,IAAAxoB,GACAuG,EAAA0hB,MAAAzZ,OAAAxO,EAAA,IAUAyoB,UAAA,SAAAliB,EAAA9C,EAAArB,GAMA,IALA,IAGA7C,EAHAmpB,EAAA,kCACA5mB,EAAA4mB,EAAA1gC,OACAF,EAAA,EAGYA,EAAAga,IAAUha,EACtByX,EAAAmpB,EAAA5gC,GAEAsa,EAAAza,eAAA4X,KACAkE,EAAAlE,GAAA6C,EAAA7C,KAYAsR,OAAA,SAAAtK,EAAAG,EAAAC,GACA,GAAAJ,EAAA,CAIA,IAAAoiB,EAAApiB,EAAAnE,QAAA+lB,QAAA,GACAvQ,EAAAvM,GAAAjJ,QAAAmI,UAAAoe,EAAA/Q,SACAgR,EAAAhR,EAAA9Q,KACA+hB,EAAAjR,EAAA5Q,MACA8hB,EAAAlR,EAAA7Q,IACAgiB,EAAAnR,EAAA3Q,OACA+hB,EAAArB,GAAAphB,EAAA0hB,MAAA,QACAgB,EAAAtB,GAAAphB,EAAA0hB,MAAA,SACAiB,EAAAvB,GAAAphB,EAAA0hB,MAAA,OACAkB,EAAAxB,GAAAphB,EAAA0hB,MAAA,UACAmB,EAAAzB,GAAAphB,EAAA0hB,MAAA,aAEAJ,GAAAmB,GAAA,GACAnB,GAAAoB,GAAA,GACApB,GAAAqB,GAAA,GACArB,GAAAsB,GAAA,GACA,IA2DAE,EA3DAC,EAAAN,EAAArsB,OAAAssB,GACAM,EAAAL,EAAAvsB,OAAAwsB,GACAK,EAAAF,EAAA3sB,OAAA4sB,GAsCAE,EAAA/iB,EAAAkiB,EAAAC,EACAa,EAAA/iB,EAAAmiB,EAAAC,EACAY,EAAAF,EAAA,EAGAG,GAAAljB,EAAAijB,GAAAL,EAAAthC,OAKA6hC,EAAAJ,EACAK,EAAAJ,EACAK,EAAA,CACAhjB,IAAA+hB,EACAhiB,KAAA8hB,EACA3hB,OAAA8hB,EACA/hB,MAAA6hB,GAEAmB,EAAA,GAsBA3e,GAAA/J,KAAAkoB,EAnBA,SAAAtB,GACA,IAAA3H,EACAnF,EAAA8M,EAAA9M,eAEAA,GACAmF,EAAA2H,EAAArX,OAAAqX,EAAAI,UAAAmB,EAAAI,EAAAH,EAAA,GACAI,GAAAvJ,EAAA5Z,SAEA4Z,EAAA2H,EAAArX,OAAA+Y,EAAAE,GACAD,GAAAtJ,EAAA7Z,OAGAsjB,EAAA7hC,KAAA,CACA0wB,WAAAuC,EACA1U,MAAA6Z,EAAA7Z,MACAwhB,UAMAmB,EAhOA,SAAApB,GACA,IAAAlhB,EAAA,EACAD,EAAA,EACAG,EAAA,EACAD,EAAA,EAUA,OATAqE,GAAA/J,KAAA2mB,EAAA,SAAAC,GACA,GAAAA,EAAA+B,WAAA,CACA,IAAAC,EAAAhC,EAAA+B,aACAljB,EAAAra,KAAAC,IAAAoa,EAAAmjB,EAAAnjB,KACAD,EAAApa,KAAAC,IAAAma,EAAAojB,EAAApjB,MACAG,EAAAva,KAAAC,IAAAsa,EAAAijB,EAAAjjB,QACAD,EAAAta,KAAAC,IAAAqa,EAAAkjB,EAAAljB,UAGA,CACAD,MACAD,OACAG,SACAD,SA8MAmjB,CAAAX,GA4BAne,GAAA/J,KAAAgoB,EAAAc,GACApC,GAAAsB,EAAAS,GAEA1e,GAAA/J,KAAAioB,EAAAa,GACApC,GAAAuB,EAAAQ,GAmBA1e,GAAA/J,KAAAgoB,EAjBA,SAAApB,GACA,IAAAmC,EAAAhf,GAAAif,cAAAN,EAAA,SAAAzJ,GACA,OAAAA,EAAA2H,UAEAqC,EAAA,CACAzjB,KAAA,EACAE,MAAA,EACAD,IAAAgjB,EAAAhjB,IACAE,OAAA8iB,EAAA9iB,QAGAojB,GACAnC,EAAArX,OAAAwZ,EAAA3jB,MAAAojB,EAAAS,KAaAvC,GAAAwB,EANAO,EAAA,CACAhjB,IAAA+hB,EACAhiB,KAAA8hB,EACA3hB,OAAA8hB,EACA/hB,MAAA6hB,IAIA,IAAA2B,EAAA99B,KAAAC,IAAA08B,EAAAviB,KAAAijB,EAAAjjB,KAAA,GACAijB,EAAAjjB,MAAA0jB,EACAT,EAAA/iB,OAAAta,KAAAC,IAAA08B,EAAAriB,MAAA+iB,EAAA/iB,MAAA,GACA,IAAAyjB,EAAA/9B,KAAAC,IAAA08B,EAAAtiB,IAAAgjB,EAAAhjB,IAAA,GACAgjB,EAAAhjB,KAAA0jB,EACAV,EAAA9iB,QAAAva,KAAAC,IAAA08B,EAAApiB,OAAA8iB,EAAA9iB,OAAA,GAIA,IAAAyjB,EAAA/jB,EAAAojB,EAAAhjB,IAAAgjB,EAAA9iB,OACA0jB,EAAAjkB,EAAAqjB,EAAAjjB,KAAAijB,EAAA/iB,MAEA2jB,IAAAd,GAAAa,IAAAZ,IACAze,GAAA/J,KAAAgoB,EAAA,SAAApB,GACAA,EAAAvhB,OAAA+jB,IAEArf,GAAA/J,KAAAioB,EAAA,SAAArB,GACAA,EAAAI,YACAJ,EAAAxhB,MAAAikB,KAGAb,EAAAY,EACAb,EAAAc,GAIA,IAAA7jB,EAAA8hB,EAAA4B,EACAzjB,EAAA+hB,EAAA2B,EAoBApf,GAAA/J,KAAA0nB,EAAArsB,OAAAusB,GAAA0B,GAEA9jB,GAAA+iB,EACA9iB,GAAA+iB,EACAze,GAAA/J,KAAA2nB,EAAA2B,GACAvf,GAAA/J,KAAA6nB,EAAAyB,GAEArkB,EAAAsR,UAAA,CACA/Q,KAAAijB,EAAAjjB,KACAC,IAAAgjB,EAAAhjB,IACAC,MAAA+iB,EAAAjjB,KAAA+iB,EACA5iB,OAAA8iB,EAAAhjB,IAAA+iB,GAGAze,GAAA/J,KAAA8nB,EAAA,SAAAlB,GACAA,EAAAphB,KAAAP,EAAAsR,UAAA/Q,KACAohB,EAAAnhB,IAAAR,EAAAsR,UAAA9Q,IACAmhB,EAAAlhB,MAAAT,EAAAsR,UAAA7Q,MACAkhB,EAAAjhB,OAAAV,EAAAsR,UAAA5Q,OACAihB,EAAArX,OAAAgZ,EAAAC,KA1HA,SAAAM,EAAAlC,GACA,IAAAmC,EAAAhf,GAAAif,cAAAN,EAAA,SAAAa,GACA,OAAAA,EAAA3C,UAGA,GAAAmC,EACA,GAAAA,EAAAxR,WAAA,CACA,IAAA0R,EAAA,CACAzjB,KAAApa,KAAAC,IAAAo9B,EAAAjjB,KAAAuiB,EAAAviB,MACAE,MAAAta,KAAAC,IAAAo9B,EAAA/iB,MAAAqiB,EAAAriB,OACAD,IAAA,EACAE,OAAA,GAIAihB,EAAArX,OAAAqX,EAAAI,UAAAmB,EAAAI,EAAAH,EAAA,EAAAa,QAEArC,EAAArX,OAAAwZ,EAAA3jB,MAAAojB,GAoEA,SAAAc,EAAA1C,GACAA,EAAA9M,gBACA8M,EAAAphB,KAAAohB,EAAAI,UAAAM,EAAAmB,EAAAjjB,KACAohB,EAAAlhB,MAAAkhB,EAAAI,UAAA5hB,EAAAmiB,EAAAkB,EAAAjjB,KAAA+iB,EACA3B,EAAAnhB,MACAmhB,EAAAjhB,OAAAF,EAAAmhB,EAAAvhB,OAEAI,EAAAmhB,EAAAjhB,SAEAihB,EAAAphB,OACAohB,EAAAlhB,MAAAF,EAAAohB,EAAAxhB,MACAwhB,EAAAnhB,IAAAgjB,EAAAhjB,IACAmhB,EAAAjhB,OAAA8iB,EAAAhjB,IAAA+iB,EAEAhjB,EAAAohB,EAAAlhB,UAqDA8jB,IAJA58B,GAJAuS,OAAAsqB,OAAA,CACAliC,QAJA,w3BAQAqF,GAAArF,SAAAqF,GAIA88B,GAAA,WAEAC,GAAAC,uBACAC,GAAAD,yBACAE,GAAAF,2BACAG,GAAA,0CAOAC,GAAA,CACAC,WAAA,YACAC,UAAA,YACAC,SAAA,UACAC,aAAA,aACAC,YAAA,YACAC,YAAA,YACAC,UAAA,UACAC,aAAA,WACAC,WAAA,YAYA,SAAAC,GAAAza,EAAA0a,GACA,IAAA9vB,EAAAkP,GAAA6gB,SAAA3a,EAAA0a,GACA3hB,EAAAnO,KAAAf,MAAA,qBACA,OAAAkP,EAAAvJ,OAAAuJ,EAAA,SAAAxhB,EAgEA,IAmBAqjC,KAnBA,WACA,IAAAC,GAAA,EAEA,IACA,IAAAhqB,EAAA3B,OAAA4M,eAAA,GAA4C,WAE5CC,IAAA,WACA8e,GAAA,KAGAlsB,OAAAmsB,iBAAA,SAAAjqB,GACK,MAAAsd,IAGL,OAAA0M,EAdA,IAmBA,CACAE,SAAA,GAGA,SAAAC,GAAAC,EAAArtB,EAAA4P,GACAyd,EAAAH,iBAAAltB,EAAA4P,EAAAod,IAGA,SAAAM,GAAAD,EAAArtB,EAAA4P,GACAyd,EAAAE,oBAAAvtB,EAAA4P,EAAAod,IAGA,SAAAQ,GAAAxtB,EAAAoH,EAAApZ,EAAAC,EAAAw/B,GACA,OACAztB,OACAoH,QACA0f,OAAA2G,GAAA,KACAz/B,OAAArE,IAAAqE,IAAA,KACAC,OAAAtE,IAAAsE,IAAA,MA2BA,SAAAy/B,GAAAC,GACA,IAAAC,EAAAC,SAAAC,cAAA,OAEA,OADAF,EAAAG,UAAAJ,GAAA,GACAC,EAsEA,SAAAI,GAAAX,EAAAzd,EAAAxI,GACA,IAAA6mB,EAAAZ,EAAAxB,MAAAwB,EAAAxB,IAAA,IAEAqC,EAAAD,EAAAC,QArEA,SAAAlH,GACA,IAGAkH,EAAAR,GAAA5B,IACAqC,EAAAT,GAAA5B,GAAA,WACAsC,EAAAV,GAAA5B,GAAA,WACAqC,EAAAE,YAAAX,MACAU,EAAAC,YAAAX,MACAQ,EAAAG,YAAAF,GACAD,EAAAG,YAAAD,GAEAF,EAAAI,OAAA,WACAH,EAAAI,WAZA,IAaAJ,EAAAK,UAbA,IAcAJ,EAAAG,WAdA,IAeAH,EAAAI,UAfA,KAkBA,IAAAC,EAAA,WACAP,EAAAI,SAEAtH,KAKA,OAFAoG,GAAAe,EAAA,SAAAM,EAAAC,KAAAP,EAAA,WACAf,GAAAgB,EAAA,SAAAK,EAAAC,KAAAN,EAAA,WACAF,EA0CAS,CA7FA,SAAA1sB,EAAAC,GACA,IAAA0sB,GAAA,EACAtkC,EAAA,GACA,kBACAA,EAAArB,MAAAwQ,UAAAC,MAAApQ,KAAAV,WACAsZ,KAAAlI,KAEA40B,IACAA,GAAA,EACA1iB,GAAAoD,iBAAAhmB,KAAAyX,OAAA,WACA6tB,GAAA,EACA3sB,EAAA7Y,MAAA8Y,EAAA5X,OAkFAukC,CAAA,WACA,GAAAZ,EAAAC,QAAA,CACA,IAAAY,EAAA1nB,EAAAnE,QAAA8rB,qBAAA1B,EAAA2B,WACAthC,EAAAohC,IAAAG,YAAA,EACArf,EAAA4d,GAAA,SAAApmB,IAEA0nB,KAAAG,YAAAvhC,GAAA0Z,EAAAgF,QAQAwD,EAAA4d,GAAA,SAAApmB,SApDA,SAAAimB,EAAArG,GACA,IAAAiH,EAAAZ,EAAAxB,MAAAwB,EAAAxB,IAAA,IAEAqD,EAAAjB,EAAAkB,YAAA,SAAA5O,GACAA,EAAA6O,gBAAAnD,IACAjF,KAIA9a,GAAA/J,KAAA+pB,GAAA,SAAAlsB,GACAotB,GAAAC,EAAArtB,EAAAkvB,KAOAjB,EAAAoB,SAAAhC,EAAAiC,aACAjC,EAAAkC,UAAAC,IAAAxD,IAwCAyD,CAAApC,EAAA,WACA,GAAAY,EAAAC,QAAA,CACA,IAAAY,EAAAzB,EAAA2B,WAEAF,OAAAZ,EAAAc,YACAF,EAAAY,aAAAxB,EAAAY,EAAAa,YAIAzB,EAAAI,YAKA,SAAAsB,GAAAvC,GACA,IAAAY,EAAAZ,EAAAxB,KAAA,GACAqC,EAAAD,EAAAC,eACAD,EAAAC,QAtDA,SAAAb,GACA,IAAAY,EAAAZ,EAAAxB,KAAA,GACAqD,EAAAjB,EAAAkB,YAEAD,IACAhjB,GAAA/J,KAAA+pB,GAAA,SAAAlsB,GACAstB,GAAAD,EAAArtB,EAAAkvB,YAEAjB,EAAAkB,aAGA9B,EAAAkC,UAAAM,OAAA7D,IA4CA8D,CAAAzC,GAEAa,KAAAc,YACAd,EAAAc,WAAAe,YAAA7B,GAkBA,IAAA8B,GAAA,CAQAC,qBAAA,EAOAC,SAAA,qBAAAnvB,QAAA,qBAAA8sB,SAKAsC,cAAA,WACAn2B,KAAAo2B,UAIAp2B,KAAAo2B,SAAA,EAEAp2B,KAAAi2B,qBAzCA,SAAAI,EAAAC,GAEA,IAAAloB,EAAAioB,EAAAE,QAAA1C,SAAAC,cAAA,SAEAuC,EAAAE,SACAF,EAAAE,OAAAnoB,EACAkoB,EAAA,mBAAAA,EACAloB,EAAAooB,aAAA,mBACA3C,SAAA4C,qBAAA,WAAApC,YAAAjmB,IAGAA,EAAAimB,YAAAR,SAAA6C,eAAAJ,IA+BAK,CAAA32B,KAAA2xB,MAGAiF,eAAA,SAAAtsB,EAAAusB,GACA,kBAAAvsB,EACAA,EAAAupB,SAAAiD,eAAAxsB,GACOA,EAAAzb,SAEPyb,IAAA,IAGAA,KAAA8H,SAEA9H,IAAA8H,QAMA,IAAAH,EAAA3H,KAAAysB,YAAAzsB,EAAAysB,WAAA,MAYA,OATA/2B,KAAAm2B,gBASAlkB,KAAAG,SAAA9H,GAzTA,SAAA8H,EAAAykB,GACA,IAAAzoB,EAAAgE,EAAAhE,MAGA4oB,EAAA5kB,EAAA6kB,aAAA,UACAC,EAAA9kB,EAAA6kB,aAAA,SAkBA,GAhBA7kB,EAAAyf,IAAA,CACAsF,QAAA,CACA3pB,OAAAwpB,EACAzpB,MAAA2pB,EACA9oB,MAAA,CACAyc,QAAAzc,EAAAyc,QACArd,OAAAY,EAAAZ,OACAD,MAAAa,EAAAb,SAOAa,EAAAyc,QAAAzc,EAAAyc,SAAA,QAEA,OAAAqM,GAAA,KAAAA,EAAA,CACA,IAAAE,EAAAvE,GAAAzgB,EAAA,cAEAziB,IAAAynC,IACAhlB,EAAA7E,MAAA6pB,GAIA,UAAAJ,GAAA,KAAAA,EACA,QAAA5kB,EAAAhE,MAAAZ,OAIA4E,EAAA5E,OAAA4E,EAAA7E,OAAAspB,EAAA5tB,QAAAouB,aAAA,OACO,CACP,IAAAC,EAAAzE,GAAAzgB,EAAA,eAEAziB,IAAAynC,IACAhlB,EAAA5E,OAAA8pB,IAiRAC,CAAAjtB,EAAAusB,GACA5kB,GAGA,MAEAulB,eAAA,SAAAvlB,GACA,IAAAG,EAAAH,EAAAG,OAEA,GAAAA,EAAAyf,IAAA,CAIA,IAAAsF,EAAA/kB,EAAAyf,IAAAsF,QACA,mBAAA12B,QAAA,SAAA2F,GACA,IAAApD,EAAAm0B,EAAA/wB,GAEA8L,GAAA7K,cAAArE,GACAoP,EAAAqlB,gBAAArxB,GAEAgM,EAAAokB,aAAApwB,EAAApD,KAGAkP,GAAA/J,KAAAgvB,EAAA/oB,OAAA,GAAwC,SAAApL,EAAA3T,GACxC+iB,EAAAhE,MAAA/e,GAAA2T,IAOAoP,EAAA7E,MAAA6E,EAAA7E,aACA6E,EAAAyf,MAEAqB,iBAAA,SAAA9lB,EAAApH,EAAA4P,GACA,IAAAxD,EAAAhF,EAAAgF,OAEA,cAAApM,EAAA,CAMA,IAAAiuB,EAAAre,EAAAic,MAAAjc,EAAAic,IAAA,IACA6F,EAAAzD,EAAAyD,UAAAzD,EAAAyD,QAAA,IAEAxC,EAAAwC,EAAAtqB,EAAAhG,GAAA,IAAApB,GAAA,SAAA2xB,GACA/hB,EAzQA,SAAA+hB,EAAAvqB,GACA,IAAApH,EAAAmsB,GAAAwF,EAAA3xB,OAAA2xB,EAAA3xB,KACA4xB,EAAA1lB,GAAA2a,oBAAA8K,EAAAvqB,GACA,OAAAomB,GAAAxtB,EAAAoH,EAAAwqB,EAAA5jC,EAAA4jC,EAAA3jC,EAAA0jC,GAsQAE,CAAAF,EAAAvqB,KAGAgmB,GAAAhhB,EAAApM,EAAAkvB,QAXAlB,GAAA5hB,EAAAwD,EAAAxI,IAaAmmB,oBAAA,SAAAnmB,EAAApH,EAAA4P,GACA,IAAAxD,EAAAhF,EAAAgF,OAEA,cAAApM,EAAA,CAMA,IAAAiuB,EAAAre,EAAAic,KAAA,GACA6F,EAAAzD,EAAAyD,SAAA,GACAxC,EAAAwC,EAAAtqB,EAAAhG,GAAA,IAAApB,GAEAkvB,GAIA5B,GAAAlhB,EAAApM,EAAAkvB,QAZAU,GAAAxjB,KA0BAF,GAAA4lB,SAAA1E,GAWAlhB,GAAA6lB,YAAAzE,GAEA,IAAA0E,GAAAhC,GAAAE,SAAAF,GA7dA,CACAY,eAAA,SAAAtsB,GAMA,OALAA,KAAA8H,SAEA9H,IAAA8H,QAGA9H,KAAAysB,WAAA,cA6dAV,GAAAnkB,GAAAzI,OAAA,CAIA8I,WAAA,aASAqkB,eAAA,aAQAY,eAAA,aASAtE,iBAAA,aAQAK,oBAAA,cACGyE,IAEHhnB,GAAAT,KAAA,UACA0nB,QAAA,KASA,IAAAC,GAAA,CAKAC,SAAA,GAQAC,SAAA,EAMAC,SAAA,SAAAJ,GACA,IAAAtjC,EAAAqL,KAAAm4B,SACA,GAAA30B,OAAAy0B,GAAAx3B,QAAA,SAAA63B,IACA,IAAA3jC,EAAAyV,QAAAkuB,IACA3jC,EAAA3F,KAAAspC,KAGAt4B,KAAAo4B,YAOAG,WAAA,SAAAN,GACA,IAAAtjC,EAAAqL,KAAAm4B,SACA,GAAA30B,OAAAy0B,GAAAx3B,QAAA,SAAA63B,GACA,IAAAE,EAAA7jC,EAAAyV,QAAAkuB,IAEA,IAAAE,GACA7jC,EAAA0gB,OAAAmjB,EAAA,KAGAx4B,KAAAo4B,YAOAjrB,MAAA,WACAnN,KAAAm4B,SAAA,GACAn4B,KAAAo4B,YAQApe,MAAA,WACA,OAAAha,KAAAm4B,SAAAtpC,QAQA4pC,OAAA,WACA,OAAAz4B,KAAAm4B,UAYAO,OAAA,SAAAtrB,EAAAurB,EAAAroC,GACA,IAEA3B,EAAAiqC,EAAAN,EAAAO,EAAAngB,EAFAogB,EAAA94B,KAAA84B,YAAA1rB,GACAzE,EAAAmwB,EAAAjqC,OAGA,IAAAF,EAAA,EAAiBA,EAAAga,IAAUha,EAK3B,GAJAiqC,EAAAE,EAAAnqC,GACA2pC,EAAAM,EAAAN,OAGA,oBAFA5f,EAAA4f,EAAAK,OAGAE,EAAA,CAAAzrB,GAAA5J,OAAAlT,GAAA,KACAtB,KAAA4pC,EAAA3vB,UAEA,IAAAyP,EAAAtpB,MAAAkpC,EAAAO,IACA,SAKA,UAQAC,YAAA,SAAA1rB,GACA,IAAA2rB,EAAA3rB,EAAA4rB,WAAA5rB,EAAA4rB,SAAA,IAEA,GAAAD,EAAA3xB,KAAApH,KAAAo4B,SACA,OAAAW,EAAAD,YAGA,IAAAb,EAAA,GACAa,EAAA,GACAjC,EAAAzpB,KAAAypB,QAAA,GACA5tB,EAAA4tB,EAAA5tB,SAAA4tB,EAAA5tB,QAAAgvB,SAAA,GA6BA,OA3BAj4B,KAAAm4B,SAAA30B,OAAAqzB,EAAAoB,SAAA,IAAAx3B,QAAA,SAAA63B,GACA,IAAAE,EAAAP,EAAA7tB,QAAAkuB,GAEA,QAAAE,EAAA,CAIA,IAAApxB,EAAAkxB,EAAAlxB,GACA6f,EAAAhe,EAAA7B,IAEA,IAAA6f,KAIA,IAAAA,IACAA,EAAA/U,GAAAnM,MAAAiL,GAAAO,OAAA0mB,QAAA7wB,KAGA6wB,EAAAjpC,KAAAspC,GACAQ,EAAA9pC,KAAA,CACAspC,SACArvB,QAAAge,GAAA,SAIA8R,EAAAD,cACAC,EAAA3xB,GAAApH,KAAAo4B,SACAU,GASAG,YAAA,SAAA7rB,UACAA,EAAA4rB,WAGAE,GAAA,CAGAC,aAAA,GAIA7oB,SAAA,GACA8oB,kBAAA,SAAApzB,EAAAqzB,EAAAC,GACAt5B,KAAAm5B,aAAAnzB,GAAAqzB,EACAr5B,KAAAsQ,SAAAtK,GAAAkM,GAAAnM,MAAAuzB,IAEAC,oBAAA,SAAAvzB,GACA,OAAAhG,KAAAm5B,aAAA3qC,eAAAwX,GAAAhG,KAAAm5B,aAAAnzB,QAAArW,GAEA6pC,iBAAA,SAAAxzB,GAEA,OAAAhG,KAAAsQ,SAAA9hB,eAAAwX,GAAAkM,GAAA9I,MAAA,GAAoE,CAAA4H,GAAA3O,MAAArC,KAAAsQ,SAAAtK,KAAA,IAEpEyzB,oBAAA,SAAAzzB,EAAA0zB,GACA15B,KAEAsQ,SAAA9hB,eAAAwX,KAFAhG,KAGAsQ,SAAAtK,GAAAkM,GAAAzI,OAHAzJ,KAGAsQ,SAAAtK,GAAA0zB,KAGAC,kBAAA,SAAAvsB,GAEA8E,GAAA/J,KAAAiF,EAAAwJ,OAAA,SAAAvU,GAEAA,EAAA8sB,UAAA9sB,EAAA4G,QAAAkmB,UACA9sB,EAAAwiB,SAAAxiB,EAAA4G,QAAA4b,SACAxiB,EAAAsD,OAAAtD,EAAA4G,QAAAtD,OACAspB,GAAAC,OAAA9hB,EAAA/K,OAIAu3B,GAAA1nB,GAAArK,eAEAmJ,GAAAT,KAAA,UACAuU,SAAA,CACA+U,SAAA,EACAxgB,OAAA,KACAwH,KAAA,UACAgE,SAAA,UACAuI,WAAA,EACA7T,gBAAA,kBACAugB,eAAA,OACAC,aAAA,EACAC,kBAAA,EACAC,eAAA,OACAC,WAAA,OACAC,YAAA,EACAC,cAAA,OACAC,UAAA,OACAC,gBAAA,OACAC,cAAA,EACAC,gBAAA,EACAC,gBAAA,OACAC,YAAA,OACAC,SAAA,EACAC,SAAA,EACAC,aAAA,EACAC,UAAA,EACArsB,aAAA,EACAssB,mBAAA,OACAC,eAAA,EACAxhB,YAAA,gBACAC,YAAA,EACAsL,UAAA,CAEAkW,YAAA/oB,GAAAhL,KACA8d,MAAA,SAAAkW,EAAAlkB,GACA,IAAAgO,EAAA,GACAnD,EAAA7K,EAAA6K,OACAsZ,EAAAtZ,IAAAhzB,OAAA,EAEA,GAAAqsC,EAAArsC,OAAA,GACA,IAAAyb,EAAA4wB,EAAA,GAEA5wB,EAAAsX,MACAoD,EAAA1a,EAAAsX,MACatX,EAAA4a,OACbF,EAAA1a,EAAA4a,OACaiW,EAAA,GAAA7wB,EAAAzD,MAAAs0B,IACbnW,EAAAnD,EAAAvX,EAAAzD,QAIA,OAAAme,GAEAoW,WAAAlpB,GAAAhL,KAEAm0B,WAAAnpB,GAAAhL,KAEAo0B,YAAAppB,GAAAhL,KACA0a,MAAA,SAAA+E,EAAA3P,GACA,IAAA4K,EAAA5K,EAAAC,SAAA0P,EAAA1Q,cAAA2L,OAAA,GAYA,OAVAA,IACAA,GAAA,MAGA1P,GAAA7K,cAAAsf,EAAA3jB,OAGA4e,GAAA+E,EAAAxB,OAFAvD,GAAA+E,EAAA3jB,MAKA4e,GAEA2Z,WAAA,SAAA5U,EAAAvZ,GACA,IAAAmJ,EAAAnJ,EAAA8J,eAAAyP,EAAA1Q,cACAulB,EAAAjlB,EAAAS,KAAA2P,EAAA9f,OACAoM,EAAAuoB,EAAA9oB,MACA,OACA8G,YAAAvG,EAAAuG,YACAD,gBAAAtG,EAAAsG,kBAGAkiB,eAAA,WACA,OAAAz7B,KAAA0lB,SAAA0U,eAEAsB,WAAAxpB,GAAAhL,KAEAy0B,UAAAzpB,GAAAhL,KAEA00B,aAAA1pB,GAAAhL,KACA20B,OAAA3pB,GAAAhL,KACA40B,YAAA5pB,GAAAhL,SAKA,IAAA60B,GAAA,CAOAC,QAAA,SAAAhjB,GACA,IAAAA,EAAAnqB,OACA,SAGA,IAAAF,EAAA2Z,EACAtU,EAAA,EACAC,EAAA,EACA+lB,EAAA,EAEA,IAAArrB,EAAA,EAAA2Z,EAAA0Q,EAAAnqB,OAAwCF,EAAA2Z,IAAS3Z,EAAA,CACjD,IAAAilC,EAAA5a,EAAArqB,GAEA,GAAAilC,KAAApgB,WAAA,CACA,IAAAokB,EAAAhE,EAAArgB,kBACAvf,GAAA4jC,EAAA5jC,EACAC,GAAA2jC,EAAA3jC,IACA+lB,GAIA,OACAhmB,IAAAgmB,EACA/lB,IAAA+lB,IAWAsU,QAAA,SAAAtV,EAAAijB,GACA,IAGAttC,EAAA2Z,EAAA4zB,EAHAloC,EAAAioC,EAAAjoC,EACAC,EAAAgoC,EAAAhoC,EACAq5B,EAAA1lB,OAAA2lB,kBAGA,IAAA5+B,EAAA,EAAA2Z,EAAA0Q,EAAAnqB,OAAwCF,EAAA2Z,IAAS3Z,EAAA,CACjD,IAAAilC,EAAA5a,EAAArqB,GAEA,GAAAilC,KAAApgB,WAAA,CACA,IAAAgP,EAAAoR,EAAAhY,iBACAugB,EAAAjqB,GAAAkqB,sBAAAH,EAAAzZ,GAEA2Z,EAAA7O,IACAA,EAAA6O,EACAD,EAAAtI,IAKA,GAAAsI,EAAA,CACA,IAAAG,EAAAH,EAAA3oB,kBACAvf,EAAAqoC,EAAAroC,EACAC,EAAAooC,EAAApoC,EAGA,OACAD,IACAC,OAKA,SAAAqoC,GAAA3jB,EAAA4jB,GAUA,OATAA,IACArqB,GAAAhjB,QAAAqtC,GAEAttC,MAAAwQ,UAAAzQ,KAAAI,MAAAupB,EAAA4jB,GAEA5jB,EAAA3pB,KAAAutC,IAIA5jB,EAUA,SAAA6jB,GAAAh6B,GACA,yBAAAA,gBAAAi6B,SAAAj6B,EAAA4H,QAAA,SACA5H,EAAAk6B,MAAA,MAGAl6B,EASA,SAAAm6B,GAAAvkB,GACA,IAAAiN,EAAAjN,EAAAqJ,QACA6D,EAAAlN,EAAAsJ,SAAAtJ,EAAAiR,OAEAxiB,EAAAuR,EAAAH,OACAhC,EAAAmC,EAAAL,cAEAgM,EAAA3L,EAAAN,OAAAZ,eAAAjB,GAAA8N,WAEA6Y,EAAA7Y,EAAAvM,iBAEAqlB,EAAA9Y,EAAAxM,iBAEA,OACA2N,OAAAG,IAAAyX,iBAAAj2B,EAAAoP,GAAA,GACAkP,OAAAG,IAAAwX,iBAAAj2B,EAAAoP,GAAA,GACA2L,MAAAgb,EAAA,GAAAA,EAAAE,iBAAAj2B,EAAAoP,GAAA,GACAjT,MAAA65B,EAAA,GAAAA,EAAAC,iBAAAj2B,EAAAoP,GAAA,GACApP,QACAoP,eACAjiB,EAAAokB,EAAAzF,OAAA3e,EACAC,EAAAmkB,EAAAzF,OAAA1e,GASA,SAAA8oC,GAAAC,GACA,IAAA1rB,EAAAN,GAAAO,OACA,OAEAqpB,SAAAoC,EAAApC,SACAD,SAAAqC,EAAArC,SACAsC,OAAAD,EAAAC,OACAC,OAAAF,EAAAE,OAEA9C,cAAA4C,EAAA5C,cACA+C,gBAAAvD,GAAAoD,EAAAI,eAAA9rB,EAAAX,mBACA0sB,eAAAzD,GAAAoD,EAAAM,cAAAhsB,EAAAT,kBACA0sB,WAAAP,EAAA3C,UACAmD,aAAA5D,GAAAoD,EAAAQ,aAAAlsB,EAAAV,iBACAupB,YAAA6C,EAAA7C,YAEAF,eAAA+C,EAAA/C,eACAwD,iBAAA7D,GAAAoD,EAAAU,gBAAApsB,EAAAX,mBACAgtB,gBAAA/D,GAAAoD,EAAAlD,eAAAxoB,EAAAT,kBACA+sB,cAAAhE,GAAAoD,EAAAY,cAAAtsB,EAAAV,iBACAitB,YAAAb,EAAA9C,WACAH,aAAAiD,EAAAjD,aACAC,kBAAAgD,EAAAhD,kBAEAS,gBAAAuC,EAAAvC,gBACAqD,kBAAAlE,GAAAoD,EAAAe,iBAAAzsB,EAAAX,mBACAqtB,iBAAApE,GAAAoD,EAAA1C,gBAAAhpB,EAAAT,kBACAotB,eAAArE,GAAAoD,EAAAiB,eAAA3sB,EAAAV,iBACAstB,aAAAlB,EAAAtC,YACAH,cAAAyC,EAAAzC,cACAC,gBAAAwC,EAAAxC,gBAEAM,UAAAkC,EAAAlC,UACArsB,aAAAuuB,EAAAvuB,aACA8K,gBAAAyjB,EAAAzjB,gBACA4kB,QAAA,EACAC,sBAAApB,EAAAjC,mBACAC,cAAAgC,EAAAhC,cACAxhB,YAAAwjB,EAAAxjB,YACAC,YAAAujB,EAAAvjB,aA+MA,SAAA4kB,GAAAxjB,EAAAyjB,GACA,iBAAAA,EAAAzjB,EAAA7mB,EAAA6mB,EAAAtN,MAAA,YAAA+wB,EAAAzjB,EAAA7mB,EAAA6mB,EAAAtN,MAAAsN,EAAA+f,SAAA/f,EAAA7mB,EAAA6mB,EAAA+f,SAOA,SAAA2D,GAAAv2B,GACA,OAAAs0B,GAAA,GAAAE,GAAAx0B,IAGA,IAAAw2B,GAAA9qB,GAAAjK,OAAA,CACA8I,WAAA,WACAvS,KAAA2S,OAAAoqB,GAAA/8B,KAAA0lB,UACA1lB,KAAAy+B,YAAA,IAIAC,SAAA,WACA,IACAzX,EADAjnB,KACA0lB,SACAX,EAAAkC,EAAAlC,UACAkW,EAAAlW,EAAAkW,YAAA7rC,MAHA4Q,KAGApR,WACAo2B,EAAAD,EAAAC,MAAA51B,MAJA4Q,KAIApR,WACAwsC,EAAArW,EAAAqW,WAAAhsC,MALA4Q,KAKApR,WACA+vC,EAAA,GAIA,OAHAA,EAAArC,GAAAqC,EAAAnC,GAAAvB,IACA0D,EAAArC,GAAAqC,EAAAnC,GAAAxX,IACA2Z,EAAArC,GAAAqC,EAAAnC,GAAApB,KAIAwD,cAAA,WACA,OAAAL,GAAAv+B,KAAA0lB,SAAAX,UAAAsW,WAAAjsC,MAAA4Q,KAAApR,aAGAiwC,QAAA,SAAA3D,EAAAlkB,GACA,IAAAnN,EAAA7J,KACA+kB,EAAAlb,EAAA6b,SAAAX,UACA+Z,EAAA,GAYA,OAXA5sB,GAAA/J,KAAA+yB,EAAA,SAAAvU,GACA,IAAAoY,EAAA,CACAC,OAAA,GACAL,MAAA,GACAM,MAAA,IAEA3C,GAAAyC,EAAAC,OAAAxC,GAAAzX,EAAAuW,YAAAhsC,KAAAua,EAAA8c,EAAA3P,KACAslB,GAAAyC,EAAAJ,MAAA5Z,EAAAnD,MAAAtyB,KAAAua,EAAA8c,EAAA3P,IACAslB,GAAAyC,EAAAE,MAAAzC,GAAAzX,EAAA2W,WAAApsC,KAAAua,EAAA8c,EAAA3P,KACA8nB,EAAA9vC,KAAA+vC,KAEAD,GAGAI,aAAA,WACA,OAAAX,GAAAv+B,KAAA0lB,SAAAX,UAAA4W,UAAAvsC,MAAA4Q,KAAApR,aAIAuwC,UAAA,WACA,IACApa,EADA/kB,KACA0lB,SAAAX,UACA6W,EAAA7W,EAAA6W,aAAAxsC,MAFA4Q,KAEApR,WACAitC,EAAA9W,EAAA8W,OAAAzsC,MAHA4Q,KAGApR,WACAktC,EAAA/W,EAAA+W,YAAA1sC,MAJA4Q,KAIApR,WACA+vC,EAAA,GAIA,OAHAA,EAAArC,GAAAqC,EAAAnC,GAAAZ,IACA+C,EAAArC,GAAAqC,EAAAnC,GAAAX,IACA8C,EAAArC,GAAAqC,EAAAnC,GAAAV,KAGApkB,OAAA,SAAA0nB,GACA,IA0BAzwC,EAAA2Z,EA1BAuB,EAAA7J,KACAinB,EAAApd,EAAA6b,SAIA2Z,EAAAx1B,EAAA8I,OACAI,EAAAlJ,EAAA8I,OAAAoqB,GAAA9V,GACAqY,EAAAz1B,EAAA01B,QACAvoB,EAAAnN,EAAA+N,MAEA4nB,EAAA,CACAvC,OAAAoC,EAAApC,OACAC,OAAAmC,EAAAnC,QAEAuC,EAAA,CACAzrC,EAAAqrC,EAAArrC,EACAC,EAAAorC,EAAAprC,GAEAyrC,EAAA,CACAnyB,MAAA8xB,EAAA9xB,MACAC,OAAA6xB,EAAA7xB,QAEA+F,EAAA,CACAvf,EAAAqrC,EAAAM,OACA1rC,EAAAorC,EAAAO,QAIA,GAAAN,EAAAzwC,OAAA,CACAkkB,EAAAorB,QAAA,EACA,IAAA0B,EAAA,GACAC,EAAA,GACAvsB,EAAAwoB,GAAA9U,EAAApC,UAAAv1B,KAAAua,EAAAy1B,EAAAz1B,EAAAk2B,gBACA,IAAA7E,EAAA,GAEA,IAAAvsC,EAAA,EAAA2Z,EAAAg3B,EAAAzwC,OAAwCF,EAAA2Z,IAAS3Z,EACjDusC,EAAAlsC,KAAA2tC,GAAA2C,EAAA3wC,KAIAs4B,EAAAoD,SACA6Q,IAAA7Q,OAAA,SAAA70B,GACA,OAAAyxB,EAAAoD,OAAA70B,EAAAwhB,MAKAiQ,EAAA+Y,WACA9E,IAAAtM,KAAA,SAAAp5B,EAAAnC,GACA,OAAA4zB,EAAA+Y,SAAAxqC,EAAAnC,EAAA2jB,MAKA9E,GAAA/J,KAAA+yB,EAAA,SAAAvU,GACAkZ,EAAA7wC,KAAAi4B,EAAAlC,UAAAwW,WAAAjsC,KAAAua,EAAA8c,EAAA9c,EAAAiO,SACAgoB,EAAA9wC,KAAAi4B,EAAAlC,UAAA0W,eAAAnsC,KAAAua,EAAA8c,EAAA9c,EAAAiO,WAGA/E,EAAAiS,MAAAnb,EAAA60B,SAAAxD,EAAAlkB,GACAjE,EAAAsoB,WAAAxxB,EAAA+0B,cAAA1D,EAAAlkB,GACAjE,EAAAktB,KAAAp2B,EAAAg1B,QAAA3D,EAAAlkB,GACAjE,EAAA4oB,UAAA9xB,EAAAq1B,aAAAhE,EAAAlkB,GACAjE,EAAA8oB,OAAAhyB,EAAAs1B,UAAAjE,EAAAlkB,GAEAjE,EAAA/e,EAAAuf,EAAAvf,EACA+e,EAAA9e,EAAAsf,EAAAtf,EACA8e,EAAA8nB,aAAA5T,EAAA4T,aACA9nB,EAAA8sB,cACA9sB,EAAA+sB,kBAEA/sB,EAAAmtB,WAAAhF,EAEAwE,EAzVA,SAAAS,EAAAptB,GACA,IAAA1F,EAAA8yB,EAAAroB,OAAAzK,IACAG,EAAA,EAAAuF,EAAA4nB,SAEAptB,EAAA,EAEA0yB,EAAAltB,EAAAktB,KACAG,EAAAH,EAAAI,OAAA,SAAArmB,EAAA+kB,GACA,OAAA/kB,EAAA+kB,EAAAC,OAAAnwC,OAAAkwC,EAAAJ,MAAA9vC,OAAAkwC,EAAAE,MAAApwC,QACK,GACLuxC,GAAArtB,EAAAsoB,WAAAxsC,OAAAkkB,EAAA4oB,UAAA9sC,OACA,IAAAyxC,EAAAvtB,EAAAiS,MAAAn2B,OACA0xC,EAAAxtB,EAAA8oB,OAAAhtC,OACA+uC,EAAA7qB,EAAA6qB,cACAJ,EAAAzqB,EAAAyqB,aACAS,EAAAlrB,EAAAkrB,eACAzwB,GAAA8yB,EAAA1C,EAEApwB,GAAA8yB,KAAA,GAAAvtB,EAAAgnB,aAAA,EAEAvsB,GAAA8yB,EAAAvtB,EAAAinB,kBAAA,EAEAxsB,GAAA4yB,EAAA5C,EAEAhwB,GAAA4yB,KAAA,GAAArtB,EAAAonB,YAAA,EAEA3sB,GAAA+yB,EAAAxtB,EAAAynB,gBAAA,EAEAhtB,GAAA+yB,EAAAtC,EAEAzwB,GAAA+yB,KAAA,GAAAxtB,EAAAwnB,cAAA,EAGA,IAAAiG,EAAA,EAEAC,EAAA,SAAA9jB,GACApP,EAAAha,KAAAC,IAAA+Z,EAAAF,EAAAqzB,YAAA/jB,GAAApP,MAAAizB,IAsBA,OAnBAnzB,EAAAoE,KAAAS,GAAAyuB,WAAA/C,EAAA7qB,EAAA4qB,gBAAA5qB,EAAA0qB,kBACAvrB,GAAA/J,KAAA4K,EAAAiS,MAAAyb,GAEApzB,EAAAoE,KAAAS,GAAAyuB,WAAAnD,EAAAzqB,EAAAsqB,eAAAtqB,EAAAoqB,iBACAjrB,GAAA/J,KAAA4K,EAAAsoB,WAAA73B,OAAAuP,EAAA4oB,WAAA8E,GAEAD,EAAAztB,EAAAioB,cAAAwC,EAAA,IACAtrB,GAAA/J,KAAA83B,EAAA,SAAAlB,GACA7sB,GAAA/J,KAAA42B,EAAAC,OAAAyB,GACAvuB,GAAA/J,KAAA42B,EAAAJ,MAAA8B,GACAvuB,GAAA/J,KAAA42B,EAAAE,MAAAwB,KAGAD,EAAA,EAEAnzB,EAAAoE,KAAAS,GAAAyuB,WAAA1C,EAAAlrB,EAAAirB,iBAAAjrB,EAAA+qB,mBACA5rB,GAAA/J,KAAA4K,EAAA8oB,OAAA4E,GAGA,CACAlzB,MAFAA,GAAA,EAAAwF,EAAA6nB,SAGAptB,UA6RAozB,CAAA5gC,KAAA+S,GACAysB,EAtRA,SAAAW,EAAA3xB,GACA,IAYAqyB,EAAAC,EAEAC,EAAAC,EAEAC,EAhBAluB,EAAAotB,EAAAxtB,OACAvF,EAAA+yB,EAAAroB,OACA4G,EAAAyhB,EAAAroB,OAAA4G,UACAue,EAAA,SACAC,EAAA,SAEAnqB,EAAA9e,EAAAua,EAAAhB,OACA0vB,EAAA,MACKnqB,EAAA9e,EAAAmZ,EAAAI,OAAAgB,EAAAhB,SACL0vB,EAAA,UASA,IAAAgE,GAAAxiB,EAAA/Q,KAAA+Q,EAAA7Q,OAAA,EACAszB,GAAAziB,EAAA9Q,IAAA8Q,EAAA5Q,QAAA,EAEA,WAAAovB,GACA2D,EAAA,SAAA7sC,GACA,OAAAA,GAAAktC,GAGAJ,EAAA,SAAA9sC,GACA,OAAAA,EAAAktC,KAGAL,EAAA,SAAA7sC,GACA,OAAAA,GAAAwa,EAAAjB,MAAA,GAGAuzB,EAAA,SAAA9sC,GACA,OAAAA,GAAAoZ,EAAAG,MAAAiB,EAAAjB,MAAA,IAIAwzB,EAAA,SAAA/sC,GACA,OAAAA,EAAAwa,EAAAjB,MAAAwF,EAAA+nB,UAAA/nB,EAAA8nB,aAAAztB,EAAAG,OAGAyzB,EAAA,SAAAhtC,GACA,OAAAA,EAAAwa,EAAAjB,MAAAwF,EAAA+nB,UAAA/nB,EAAA8nB,aAAA,GAGAoG,EAAA,SAAAhtC,GACA,OAAAA,GAAAktC,EAAA,gBAGAN,EAAA9tB,EAAA/e,IACAipC,EAAA,OAEA8D,EAAAhuB,EAAA/e,KACAipC,EAAA,SACAC,EAAA+D,EAAAluB,EAAA9e,KAEK6sC,EAAA/tB,EAAA/e,KACLipC,EAAA,QAEA+D,EAAAjuB,EAAA/e,KACAipC,EAAA,SACAC,EAAA+D,EAAAluB,EAAA9e,KAIA,IAAAgzB,EAAAkZ,EAAAza,SACA,OACAuX,OAAAhW,EAAAgW,OAAAhW,EAAAgW,SACAC,OAAAjW,EAAAiW,OAAAjW,EAAAiW,UA+MAkE,CAAAphC,KAAA0/B,GAEAD,EAzMA,SAAA5kB,EAAArM,EAAAgxB,EAAApyB,GAEA,IAAApZ,EAAA6mB,EAAA7mB,EACAC,EAAA4mB,EAAA5mB,EACA6mC,EAAAjgB,EAAAigB,UACAD,EAAAhgB,EAAAggB,aACApsB,EAAAoM,EAAApM,aACAwuB,EAAAuC,EAAAvC,OACAC,EAAAsC,EAAAtC,OACAmE,EAAAvG,EAAAD,EACAyG,EAAA7yB,EAAAosB,EAoCA,MAlCA,UAAAoC,EACAjpC,GAAAwa,EAAAjB,MACK,WAAA0vB,KACLjpC,GAAAwa,EAAAjB,MAAA,GAEAiB,EAAAjB,MAAAH,EAAAG,QACAvZ,EAAAoZ,EAAAG,MAAAiB,EAAAjB,OAGAvZ,EAAA,IACAA,EAAA,IAIA,QAAAkpC,EACAjpC,GAAAotC,EAEAptC,GADK,WAAAipC,EACL1uB,EAAAhB,OAAA6zB,EAEA7yB,EAAAhB,OAAA,EAGA,WAAA0vB,EACA,SAAAD,EACAjpC,GAAAqtC,EACO,UAAApE,IACPjpC,GAAAqtC,GAEK,SAAApE,EACLjpC,GAAAstC,EACK,UAAArE,IACLjpC,GAAAstC,GAGA,CACAttC,IACAC,KAyJAstC,CAAAxuB,EAAA2sB,EAAAF,EAAA31B,EAAAiO,aAEA/E,EAAAorB,QAAA,EAkBA,OAfAprB,EAAAkqB,OAAAuC,EAAAvC,OACAlqB,EAAAmqB,OAAAsC,EAAAtC,OACAnqB,EAAA/e,EAAAyrC,EAAAzrC,EACA+e,EAAA9e,EAAAwrC,EAAAxrC,EACA8e,EAAAxF,MAAAmyB,EAAAnyB,MACAwF,EAAAvF,OAAAkyB,EAAAlyB,OAEAuF,EAAA4sB,OAAApsB,EAAAvf,EACA+e,EAAA6sB,OAAArsB,EAAAtf,EACA4V,EAAA8I,OAAAI,EAEAqsB,GAAAnY,EAAA5N,QACA4N,EAAA5N,OAAA/pB,KAAAua,EAAAkJ,GAGAlJ,GAEA23B,UAAA,SAAAC,EAAAjzB,GACA,IAAAnB,EAAArN,KAAA8X,OAAAzK,IACAwN,EAAA7a,KAAA0S,MACAgvB,EAAA1hC,KAAA2hC,iBAAAF,EAAAjzB,EAAAqM,GACAxN,EAAAuB,OAAA8yB,EAAA5iB,GAAA4iB,EAAA1iB,IACA3R,EAAAuB,OAAA8yB,EAAA3iB,GAAA2iB,EAAAnsC,IACA8X,EAAAuB,OAAA8yB,EAAAE,GAAAF,EAAAG,KAEAF,iBAAA,SAAAF,EAAAjzB,EAAAqM,GACA,IAAAiE,EAAAC,EAAA6iB,EAAA5iB,EAAAzpB,EAAAssC,EACA/G,EAAAjgB,EAAAigB,UACArsB,EAAAoM,EAAApM,aACAwuB,EAAApiB,EAAAoiB,OACAC,EAAAriB,EAAAqiB,OACA4E,EAAAL,EAAAztC,EACA+tC,EAAAN,EAAAxtC,EACAsZ,EAAAiB,EAAAjB,MACAC,EAAAgB,EAAAhB,OAEA,cAAA0vB,EACA3nC,EAAAwsC,EAAAv0B,EAAA,EAEA,SAAAyvB,GAEAle,GADAD,EAAAgjB,GACAhH,EACA8G,EAAA9iB,EACAE,EAAAzpB,EAAAulC,EACA+G,EAAAtsC,EAAAulC,IAGA/b,GADAD,EAAAgjB,EAAAv0B,GACAutB,EACA8G,EAAA9iB,EACAE,EAAAzpB,EAAAulC,EACA+G,EAAAtsC,EAAAulC,QAiBA,GAdA,SAAAmC,GAEAne,GADAC,EAAA+iB,EAAArzB,EAAAqsB,GACAA,EACA8G,EAAA7iB,EAAA+b,GACS,UAAAmC,GAETne,GADAC,EAAA+iB,EAAAv0B,EAAAkB,EAAAqsB,GACAA,EACA8G,EAAA7iB,EAAA+b,IAEA/b,EAAAlE,EAAA8kB,OACA7gB,EAAAC,EAAA+b,EACA8G,EAAA7iB,EAAA+b,GAGA,QAAAoC,EAEA3nC,GADAypB,EAAA+iB,GACAjH,EACA+G,EAAA7iB,MACS,CAETzpB,GADAypB,EAAA+iB,EAAAv0B,GACAstB,EACA+G,EAAA7iB,EAEA,IAAAgjB,EAAAJ,EACAA,EAAA9iB,EACAA,EAAAkjB,EAIA,OACAljB,KACAC,KACA6iB,KACA5iB,KACAzpB,KACAssC,OAGAI,UAAA,SAAA7X,EAAAvP,EAAAxN,GACA,IAAA2X,EAAAnK,EAAAmK,MAEA,GAAAA,EAAAn2B,OAAA,CACAu7B,EAAAp2B,EAAAqqC,GAAAxjB,IAAAgjB,aACAxwB,EAAA60B,UAAArnB,EAAAgjB,YACAxwB,EAAA80B,aAAA,MACA,IAIAxzC,EAAA2Z,EAJAs1B,EAAA/iB,EAAA+iB,cACA7D,EAAAlf,EAAAkf,aAKA,IAJA1sB,EAAAiP,UAAAzB,EAAAof,eACA5sB,EAAAoE,KAAAS,GAAAyuB,WAAA/C,EAAA/iB,EAAA8iB,gBAAA9iB,EAAA4iB,kBAGA9uC,EAAA,EAAA2Z,EAAA0c,EAAAn2B,OAAuCF,EAAA2Z,IAAS3Z,EAChD0e,EAAA+0B,SAAApd,EAAAr2B,GAAAy7B,EAAAp2B,EAAAo2B,EAAAn2B,GACAm2B,EAAAn2B,GAAA2pC,EAAA7D,EAEAprC,EAAA,IAAAq2B,EAAAn2B,SACAu7B,EAAAn2B,GAAA4mB,EAAAmf,kBAAAD,KAKAsI,SAAA,SAAAjY,EAAAvP,EAAAxN,GACA,IAQAi1B,EARA9E,EAAA3iB,EAAA2iB,aACArD,EAAAtf,EAAAsf,YACAE,EAAAxf,EAAA0iB,WACA0C,EAAAplB,EAAAolB,KACAsC,EAAA1nB,EAAAmgB,cACA6E,EAAAhlB,EAAAglB,YACA2C,EAAA,EACAC,EAAAF,EAAAlE,GAAAxjB,EAAA,UAEAxN,EAAA60B,UAAA7H,EACAhtB,EAAA80B,aAAA,MACA90B,EAAAoE,KAAAS,GAAAyuB,WAAAnD,EAAA3iB,EAAAwiB,eAAAxiB,EAAAsiB,iBACA/S,EAAAp2B,EAAAqqC,GAAAxjB,EAAAwf,GAEA,IAAAqI,EAAA,SAAA/lB,GACAtP,EAAA+0B,SAAAzlB,EAAAyN,EAAAp2B,EAAAwuC,EAAApY,EAAAn2B,GACAm2B,EAAAn2B,GAAAupC,EAAArD,GAIA9sB,EAAAiP,UAAAzB,EAAAuf,cACAloB,GAAA/J,KAAA0S,EAAAwgB,WAAAqH,GACAF,EAAAD,GAAA,UAAAlI,EAAA,WAAAA,EAAAmD,EAAA,IAAAA,EAAA,IAEAtrB,GAAA/J,KAAA83B,EAAA,SAAAlB,EAAApwC,GACA2zC,EAAAznB,EAAAilB,gBAAAnxC,GACA0e,EAAAiP,UAAAgmB,EACApwB,GAAA/J,KAAA42B,EAAAC,OAAA0D,GACAxwB,GAAA/J,KAAA42B,EAAAJ,MAAA,SAAAhiB,GAEA4lB,IAEAl1B,EAAAiP,UAAAzB,EAAAujB,sBACA/wB,EAAAiT,SAAAmiB,EAAArY,EAAAn2B,EAAAupC,KAEAnwB,EAAAkP,UAAA,EACAlP,EAAAoP,YAAAojB,EAAAlxC,GAAA6qB,YACAnM,EAAAs1B,WAAAF,EAAArY,EAAAn2B,EAAAupC,KAEAnwB,EAAAiP,UAAAujB,EAAAlxC,GAAA4qB,gBACAlM,EAAAiT,SAAAmiB,EAAA,EAAArY,EAAAn2B,EAAA,EAAAupC,EAAA,EAAAA,EAAA,GACAnwB,EAAAiP,UAAAgmB,GAGAI,EAAA/lB,KAEAzK,GAAA/J,KAAA42B,EAAAE,MAAAyD,KAGAF,EAAA,EAEAtwB,GAAA/J,KAAA0S,EAAA8gB,UAAA+G,GACAtY,EAAAn2B,GAAAkmC,GAEAyI,WAAA,SAAAxY,EAAAvP,EAAAxN,GACA,IAAAwuB,EAAAhhB,EAAAghB,OAEAA,EAAAhtC,SACAu7B,EAAAp2B,EAAAqqC,GAAAxjB,IAAAqjB,cACA9T,EAAAn2B,GAAA4mB,EAAA2f,gBACAntB,EAAA60B,UAAArnB,EAAAqjB,aACA7wB,EAAA80B,aAAA,MACA90B,EAAAiP,UAAAzB,EAAA4f,gBACAptB,EAAAoE,KAAAS,GAAAyuB,WAAA9lB,EAAAojB,eAAApjB,EAAAmjB,iBAAAnjB,EAAAijB,mBACA5rB,GAAA/J,KAAA0zB,EAAA,SAAAlf,GACAtP,EAAA+0B,SAAAzlB,EAAAyN,EAAAp2B,EAAAo2B,EAAAn2B,GACAm2B,EAAAn2B,GAAA4mB,EAAAojB,eAAApjB,EAAA0f,kBAIAsI,eAAA,SAAAzY,EAAAvP,EAAAxN,EAAAqyB,GACAryB,EAAAiP,UAAAzB,EAAAtB,gBACAlM,EAAAoP,YAAA5B,EAAArB,YACAnM,EAAAkP,UAAA1B,EAAApB,YACA,IAAAwjB,EAAApiB,EAAAoiB,OACAC,EAAAriB,EAAAqiB,OACAlpC,EAAAo2B,EAAAp2B,EACAC,EAAAm2B,EAAAn2B,EACAsZ,EAAAmyB,EAAAnyB,MACAC,EAAAkyB,EAAAlyB,OACAE,EAAAmN,EAAApM,aACApB,EAAAsB,YACAtB,EAAAU,OAAA/Z,EAAA0Z,EAAAzZ,GAEA,QAAAipC,GACAl9B,KAAAwhC,UAAApX,EAAAsV,GAGAryB,EAAAuB,OAAA5a,EAAAuZ,EAAAG,EAAAzZ,GACAoZ,EAAAy1B,iBAAA9uC,EAAAuZ,EAAAtZ,EAAAD,EAAAuZ,EAAAtZ,EAAAyZ,GAEA,WAAAwvB,GAAA,UAAAD,GACAj9B,KAAAwhC,UAAApX,EAAAsV,GAGAryB,EAAAuB,OAAA5a,EAAAuZ,EAAAtZ,EAAAuZ,EAAAE,GACAL,EAAAy1B,iBAAA9uC,EAAAuZ,EAAAtZ,EAAAuZ,EAAAxZ,EAAAuZ,EAAAG,EAAAzZ,EAAAuZ,GAEA,WAAA0vB,GACAl9B,KAAAwhC,UAAApX,EAAAsV,GAGAryB,EAAAuB,OAAA5a,EAAA0Z,EAAAzZ,EAAAuZ,GACAH,EAAAy1B,iBAAA9uC,EAAAC,EAAAuZ,EAAAxZ,EAAAC,EAAAuZ,EAAAE,GAEA,WAAAwvB,GAAA,SAAAD,GACAj9B,KAAAwhC,UAAApX,EAAAsV,GAGAryB,EAAAuB,OAAA5a,EAAAC,EAAAyZ,GACAL,EAAAy1B,iBAAA9uC,EAAAC,EAAAD,EAAA0Z,EAAAzZ,GACAoZ,EAAAY,YACAZ,EAAAyB,OAEA+L,EAAApB,YAAA,GACApM,EAAA0B,UAGAkK,KAAA,WACA,IAAA5L,EAAArN,KAAA8X,OAAAzK,IACAwN,EAAA7a,KAAA0S,MAEA,OAAAmI,EAAAsjB,QAAA,CAIA,IAAAuB,EAAA,CACAnyB,MAAAsN,EAAAtN,MACAC,OAAAqN,EAAArN,QAEA4c,EAAA,CACAp2B,EAAA6mB,EAAA7mB,EACAC,EAAA4mB,EAAA5mB,GAGAkqC,EAAA5qC,KAAA2qB,IAAArD,EAAAsjB,QAAA,QAAAtjB,EAAAsjB,QAEA4E,EAAAloB,EAAAmK,MAAAn2B,QAAAgsB,EAAAwgB,WAAAxsC,QAAAgsB,EAAAolB,KAAApxC,QAAAgsB,EAAA8gB,UAAA9sC,QAAAgsB,EAAAghB,OAAAhtC,OAEAmR,KAAA0lB,SAAAmU,SAAAkJ,IACA11B,EAAAgC,OACAhC,EAAA21B,YAAA7E,EAEAn+B,KAAA6iC,eAAAzY,EAAAvP,EAAAxN,EAAAqyB,GAEAtV,EAAAn2B,GAAA4mB,EAAA8f,SAEA36B,KAAAiiC,UAAA7X,EAAAvP,EAAAxN,GAEArN,KAAAqiC,SAAAjY,EAAAvP,EAAAxN,GAEArN,KAAA4iC,WAAAxY,EAAAvP,EAAAxN,GACAA,EAAAmC,aAUAyzB,YAAA,SAAA1c,GACA,IAAA1c,EAAA7J,KACAiJ,EAAAY,EAAA6b,SACA0Z,GAAA,EAyBA,OAxBAv1B,EAAA40B,YAAA50B,EAAA40B,aAAA,GAEA,aAAAlY,EAAAvgB,KACA6D,EAAA01B,QAAA,GAEA11B,EAAA01B,QAAA11B,EAAAiO,OAAAorB,0BAAA3c,EAAAtd,EAAA4X,KAAA5X,IAIAm2B,GAAAltB,GAAA1J,YAAAqB,EAAA01B,QAAA11B,EAAA40B,gBAGA50B,EAAA40B,YAAA50B,EAAA01B,SAEAt2B,EAAA4wB,SAAA5wB,EAAAoQ,UACAxP,EAAAk2B,eAAA,CACA/rC,EAAAuyB,EAAAvyB,EACAC,EAAAsyB,EAAAtyB,GAEA4V,EAAA6N,QAAA,GACA7N,EAAA4I,UAIA2sB,KAOA+D,GAAApH,GACAqH,GAAA5E,GACA4E,GAAArH,YAAAoH,GACA,IAAAE,GAAAnxB,GAAArK,eAuBA,SAAAy7B,KAGA,OAAApxB,GAAA9I,MAAA,GAA6B,GAAA1J,MAAApQ,KAAAV,WAAA,CAC7B4a,OAAA,SAAAna,EAAA8W,EAAAD,EAAA+C,GACA,aAAA5Z,GAAA,UAAAA,EAAA,CACA,IACAV,EAAAqX,EAAA3D,EADAkhC,EAAAr9B,EAAA7W,GAAAR,OAOA,IAJAsX,EAAA9W,KACA8W,EAAA9W,GAAA,IAGAV,EAAA,EAAqBA,EAAA40C,IAAU50C,EAC/B0T,EAAA6D,EAAA7W,GAAAV,GACAqX,EAAAq9B,GAAAhhC,EAAA2D,KAAA,UAAA3W,EAAA,qBAEAV,GAAAwX,EAAA9W,GAAAR,QACAsX,EAAA9W,GAAAL,KAAA,KAGAmX,EAAA9W,GAAAV,GAAAqX,MAAA3D,EAAA2D,MAAA3D,EAAA2D,OAAAG,EAAA9W,GAAAV,GAAAqX,KAGAkM,GAAA9I,MAAAjD,EAAA9W,GAAAV,GAAA,CAAAuqC,GAAAM,iBAAAxzB,GAAA3D,IAGA6P,GAAA9I,MAAAjD,EAAA9W,GAAAV,GAAA0T,QAIA6P,GAAAlJ,QAAA3Z,EAAA8W,EAAAD,EAAA+C,MAYA,SAAAu6B,KAGA,OAAAtxB,GAAA9I,MAAA,GAA6B,GAAA1J,MAAApQ,KAAAV,WAAA,CAC7B4a,OAAA,SAAAna,EAAA8W,EAAAD,EAAA+C,GACA,IAAAC,EAAA/C,EAAA9W,IAAA,GACA8Z,EAAAjD,EAAA7W,GAEA,WAAAA,EAEA8W,EAAA9W,GAAAi0C,GAAAp6B,EAAAC,GACS,UAAA9Z,EAET8W,EAAA9W,GAAA6iB,GAAA9I,MAAAF,EAAA,CAAAgwB,GAAAM,iBAAArwB,EAAAnD,MAAAmD,IAEA+I,GAAAlJ,QAAA3Z,EAAA8W,EAAAD,EAAA+C,MA+BA,SAAAw6B,GAAA5e,GACA,cAAAA,GAAA,WAAAA,EA/GA7T,GAAAT,KAAA,UACAyI,SAAA,GACA0qB,OAAA,0DACA9iB,MAAA,CACA+iB,QAAA,KACA9iB,KAAA,UACAuM,WAAA,EACAwW,kBAAA,KAEAtd,QAAA,KACAyO,qBAAA,EACA8O,YAAA,EACAC,4BAAA,IAsGA,IAAAC,GAAA,SAAAz5B,EAAAusB,GAEA,OADA72B,KAAAgkC,UAAA15B,EAAAusB,GACA72B,MAGAkS,GAAAzI,OAAAs6B,GAAAtkC,UAEA,CAIAukC,UAAA,SAAA15B,EAAAusB,GACA,IAAAhtB,EAAA7J,KACA62B,EA1CA,SAAAA,GAIA,IAAA7f,GAHA6f,KAAA,IAGA7f,KAAA6f,EAAA7f,MAAA,GAIA,OAHAA,EAAAC,SAAAD,EAAAC,UAAA,GACAD,EAAA6K,OAAA7K,EAAA6K,QAAA,GACAgV,EAAA5tB,QAAAu6B,GAAAxyB,GAAAO,OAAAP,GAAA6lB,EAAA7wB,MAAA6wB,EAAA5tB,SAAA,IACA4tB,EAkCAoN,CAAApN,GACA,IAAA5kB,EAAAokB,GAAAO,eAAAtsB,EAAAusB,GACAzkB,EAAAH,KAAAG,OACA5E,EAAA4E,KAAA5E,OACAD,EAAA6E,KAAA7E,MACA1D,EAAAzC,GAAA8K,GAAA/K,MACA0C,EAAAwD,IAAA4E,EACApI,EAAAuI,SACAvI,EAAAgtB,SACAhtB,EAAA0D,QACA1D,EAAA2D,SACA3D,EAAAwtB,YAAA7pB,EAAAD,EAAAC,EAAA,KACA3D,EAAAZ,QAAA4tB,EAAA5tB,QACAY,EAAAq6B,iBAAA,EAUAr6B,EAAAuD,MAAAvD,EACAA,EAAAka,WAAAla,EAGAk6B,GAAAI,UAAAt6B,EAAAzC,IAAAyC,EAEAvC,OAAA4M,eAAArK,EAAA,QACAsK,IAAA,WACA,OAAAtK,EAAAgtB,OAAA7f,MAEA5C,IAAA,SAAApR,GACA6G,EAAAgtB,OAAA7f,KAAAhU,KAIAiP,GAAAG,GASAvI,EAAA0I,aACA1I,EAAA6N,UALArR,QAAAC,MAAA,sEAWAiM,WAAA,WACA,IAAA1I,EAAA7J,KAiBA,OAfAk4B,GAAAQ,OAAA7uB,EAAA,cACAqI,GAAAkyB,YAAAv6B,IAAAZ,QAAAo7B,kBACAx6B,EAAAy6B,aAEAz6B,EAAAZ,QAAA46B,YAEAh6B,EAAA06B,QAAA,GAIA16B,EAAA26B,sBACA36B,EAAA46B,sBACA56B,EAAA66B,cAEAxM,GAAAQ,OAAA7uB,EAAA,aACAA,GAEAsD,MAAA,WAEA,OADA+E,GAAAE,OAAAjF,MAAAnN,MACAA,MAEA2kC,KAAA,WAGA,OADAlwB,GAAAU,gBAAAnV,MACAA,MAEAukC,OAAA,SAAAK,GACA,IAAA/6B,EAAA7J,KACAiJ,EAAAY,EAAAZ,QACAmJ,EAAAvI,EAAAuI,OACAilB,EAAApuB,EAAA8rB,qBAAAlrB,EAAAwtB,aAAA,KAIAwN,EAAAtxC,KAAAC,IAAA,EAAAD,KAAAkB,MAAAyd,GAAA4yB,gBAAA1yB,KACA2yB,EAAAxxC,KAAAC,IAAA,EAAAD,KAAAkB,MAAA4iC,EAAAwN,EAAAxN,EAAAnlB,GAAA8yB,iBAAA5yB,KAEA,IAAAvI,EAAA0D,QAAAs3B,GAAAh7B,EAAA2D,SAAAu3B,KAIA3yB,EAAA7E,MAAA1D,EAAA0D,MAAAs3B,EACAzyB,EAAA5E,OAAA3D,EAAA2D,OAAAu3B,EACA3yB,EAAAhE,MAAAb,MAAAs3B,EAAA,KACAzyB,EAAAhE,MAAAZ,OAAAu3B,EAAA,KACA7yB,GAAAkyB,YAAAv6B,EAAAZ,EAAAo7B,mBAEAO,GAAA,CAEA,IAAAK,EAAA,CACA13B,MAAAs3B,EACAr3B,OAAAu3B,GAEA7M,GAAAQ,OAAA7uB,EAAA,UAAAo7B,IAEAh8B,EAAAi8B,UACAj8B,EAAAi8B,SAAAr7B,EAAAo7B,GAGAp7B,EAAA86B,OACA96B,EAAA6N,OAAA,CACApD,SAAArL,EAAA66B,gCAIAU,oBAAA,WACA,IAAAv7B,EAAAjJ,KAAAiJ,QACAk8B,EAAAl8B,EAAA2N,QAAA,GACAwuB,EAAAn8B,EAAA5G,MACA6P,GAAA/J,KAAAg9B,EAAAtuB,MAAA,SAAAwuB,EAAAx+B,GACAw+B,EAAAj+B,GAAAi+B,EAAAj+B,IAAA,UAAAP,IAEAqL,GAAA/J,KAAAg9B,EAAApuB,MAAA,SAAAuuB,EAAAz+B,GACAy+B,EAAAl+B,GAAAk+B,EAAAl+B,IAAA,UAAAP,IAGAu+B,IACAA,EAAAh+B,GAAAg+B,EAAAh+B,IAAA,UAOAq9B,oBAAA,WACA,IAAA56B,EAAA7J,KACAiJ,EAAAY,EAAAZ,QACA2N,EAAA/M,EAAA+M,QAAA,GACAqX,EAAA,GACAsX,EAAAj+B,OAAAiB,KAAAqO,GAAAypB,OAAA,SAAAx9B,EAAAuE,GAEA,OADAvE,EAAAuE,IAAA,EACAvE,GACO,IAEPoG,EAAA2N,SACAqX,IAAAzqB,QAAAyF,EAAA2N,OAAAC,OAAA,IAAA/N,IAAA,SAAAu8B,GACA,OACAp8B,QAAAo8B,EACAG,MAAA,WACAC,UAAA,aAESx8B,EAAA2N,OAAAG,OAAA,IAAAjO,IAAA,SAAAw8B,GACT,OACAr8B,QAAAq8B,EACAE,MAAA,SACAC,UAAA,YAKAx8B,EAAA5G,OACA4rB,EAAAj/B,KAAA,CACAia,UAAA5G,MACAmjC,MAAA,eACAE,WAAA,EACAD,UAAA,cAIAvzB,GAAA/J,KAAA8lB,EAAA,SAAA3jB,GACA,IAAA86B,EAAA96B,EAAArB,QACA7B,EAAAg+B,EAAAh+B,GACAu+B,EAAAtC,GAAA+B,EAAAp/B,KAAAsE,EAAAk7B,OAEA/B,GAAA2B,EAAAvgB,YAAA4e,GAAAn5B,EAAAm7B,aACAL,EAAAvgB,SAAAva,EAAAm7B,WAGAF,EAAAn+B,IAAA,EACA,IAAA/E,EAAA,KAEA,GAAA+E,KAAAwP,KAAAxP,GAAApB,OAAA2/B,GACAtjC,EAAAuU,EAAAxP,IACA6B,QAAAm8B,EACA/iC,EAAAgL,IAAAxD,EAAAwD,IACAhL,EAAA+K,MAAAvD,MACS,CACT,IAAA+7B,EAAA1M,GAAAK,oBAAAoM,GAEA,IAAAC,EACA,OAGAvjC,EAAA,IAAAujC,EAAA,CACAx+B,KACApB,KAAA2/B,EACA18B,QAAAm8B,EACA/3B,IAAAxD,EAAAwD,IACAD,MAAAvD,IAEA+M,EAAAvU,EAAA+E,IAAA/E,EAGAA,EAAAwjC,oBAIAv7B,EAAAo7B,YACA77B,EAAAxH,WAIA6P,GAAA/J,KAAAo9B,EAAA,SAAAO,EAAA1+B,GACA0+B,UACAlvB,EAAAxP,KAGAyC,EAAA+M,SACAsiB,GAAAS,kBAAA35B,OAEA+lC,yBAAA,WACA,IAAAl8B,EAAA7J,KACAgmC,EAAA,GA0BA,OAzBA9zB,GAAA/J,KAAA0B,EAAAmN,KAAAC,SAAA,SAAAR,EAAAR,GACA,IAAAM,EAAA1M,EAAAqN,eAAAjB,GACAjQ,EAAAyQ,EAAAzQ,MAAA6D,EAAAgtB,OAAA7wB,KASA,GAPAuQ,EAAAvQ,MAAAuQ,EAAAvQ,WACA6D,EAAAo8B,mBAAAhwB,GACAM,EAAA1M,EAAAqN,eAAAjB,IAGAM,EAAAvQ,OAEAuQ,EAAAwN,WACAxN,EAAAwN,WAAAzN,YAAAL,GACAM,EAAAwN,WAAA3N,iBACS,CACT,IAAA8vB,EAAA5Z,GAAA/V,EAAAvQ,MAEA,QAAArW,IAAAu2C,EACA,UAAAC,MAAA,IAAA5vB,EAAAvQ,KAAA,0BAGAuQ,EAAAwN,WAAA,IAAAmiB,EAAAr8B,EAAAoM,GACA+vB,EAAAh3C,KAAAunB,EAAAwN,cAEOla,GACPm8B,GAOAI,cAAA,WACA,IAAAv8B,EAAA7J,KACAkS,GAAA/J,KAAA0B,EAAAmN,KAAAC,SAAA,SAAAR,EAAAR,GACApM,EAAAqN,eAAAjB,GAAA8N,WAAAtM,SACO5N,IAMP4N,MAAA,WACAzX,KAAAomC,gBACApmC,KAAAmgC,QAAA5tB,cAEAmF,OAAA,SAAAmf,GACA,IAAAhtB,EAAA7J,KAeA,GAbA62B,GAAA,kBAAAA,IAEAA,EAAA,CACAviB,SAAAuiB,EACAhiB,KAAAjmB,UAAA,KA1TA,SAAAwe,GACA,IAAAi5B,EAAAj5B,EAAAnE,QACAiJ,GAAA/J,KAAAiF,EAAAwJ,OAAA,SAAAvU,GACA4sB,GAAAG,UAAAhiB,EAAA/K,KAEAgkC,EAAA7C,GAAAxyB,GAAAO,OAAAP,GAAA5D,EAAAypB,OAAA7wB,MAAAqgC,GACAj5B,EAAAnE,QAAAmE,EAAAypB,OAAA5tB,QAAAo9B,EACAj5B,EAAAo3B,sBACAp3B,EAAAq3B,sBAEAr3B,EAAA+yB,QAAAza,SAAA2gB,EAAAvhB,SACA1X,EAAA+yB,QAAA5tB,aAmTA+zB,CAAAz8B,GAGAquB,GAAAe,YAAApvB,IAEA,IAAAquB,GAAAQ,OAAA7uB,EAAA,iBAKAA,EAAAs2B,QAAAvoB,MAAA/N,EAAAmN,KAEA,IAAAgvB,EAAAn8B,EAAAk8B,2BAEA7zB,GAAA/J,KAAA0B,EAAAmN,KAAAC,SAAA,SAAAR,EAAAR,GACApM,EAAAqN,eAAAjB,GAAA8N,WAAAzL,yBACOzO,GACPA,EAAA08B,eAEA18B,EAAAZ,QAAAoL,WAAAxK,EAAAZ,QAAAoL,UAAAC,UACApC,GAAA/J,KAAA69B,EAAA,SAAAjiB,GACAA,EAAAtM,UAIA5N,EAAA28B,iBAGA38B,EAAAs2B,QAAA5tB,aAGA1I,EAAA48B,WAAA,GAEAvO,GAAAQ,OAAA7uB,EAAA,eAEAA,EAAAq6B,gBACAr6B,EAAA68B,iBAAA,CACApyB,SAAAuiB,EAAAviB,SACAnC,OAAA0kB,EAAA1kB,OACA0C,KAAAgiB,EAAAhiB,MAGAhL,EAAAiK,OAAA+iB,KASA0P,aAAA,YAGA,IAAArO,GAAAQ,OAFA14B,KAEA,kBAIAivB,GAAAvX,OAAA1X,UAAAuN,MAAAvN,KAAAwN,QASA0qB,GAAAQ,OAfA14B,KAeA,oBACAk4B,GAAAQ,OAhBA14B,KAgBA,iBAQAwmC,eAAA,WAGA,QAAAtO,GAAAQ,OAFA14B,KAEA,yBAIA,QAAArR,EAAA,EAAAga,EANA3I,KAMAgX,KAAAC,SAAApoB,OAAqDF,EAAAga,IAAUha,EAN/DqR,KAOA2mC,cAAAh4C,GAGAupC,GAAAQ,OAVA14B,KAUA,yBAQA2mC,cAAA,SAAA9/B,GACA,IACA0P,EADAvW,KACAkX,eAAArQ,GACAvW,EAAA,CACAimB,OACA1P,UAGA,IAAAqxB,GAAAQ,OAPA14B,KAOA,uBAAA1P,MAIAimB,EAAAwN,WAAArM,SACAwgB,GAAAQ,OAZA14B,KAYA,sBAAA1P,MAEAwjB,OAAA,SAAA+iB,GACA,IAAAhtB,EAAA7J,KAEA62B,GAAA,kBAAAA,IAEAA,EAAA,CACAviB,SAAAuiB,EACAhiB,KAAAjmB,UAAA,KAIA,IAAAg4C,EAAA/8B,EAAAZ,QAAAoL,UACAC,EAAA+uB,GAAAxM,EAAAviB,SAAAsyB,KAAAtyB,UACAO,EAAAgiB,EAAAhiB,KAEA,QAAAqjB,GAAAQ,OAAA7uB,EAAA,iBAIA,IAAA2K,EAAA,SAAAH,GACA6jB,GAAAQ,OAAA7uB,EAAA,eACAqI,GAAAlK,SAAA4+B,KAAApyB,WAAA,CAAAH,GAAAxK,IAGA,GAAA+8B,GAAAtyB,EAAA,CACA,IAAAD,EAAA,IAAAJ,GAAA,CACAJ,SAAAS,EAAA,MAEAnC,OAAA0kB,EAAA1kB,QAAAy0B,EAAAz0B,OACA2B,OAAA,SAAA1G,EAAAy5B,GACA,IAAAC,EAAA50B,GAAAC,OAAAzH,QAAAm8B,EAAA10B,QACAyB,EAAAizB,EAAAjzB,YACAmzB,EAAAnzB,EAAAizB,EAAAhzB,SACAzG,EAAA6L,KAAA6tB,EAAAC,KAAAnzB,IAEAG,oBAAA6yB,EAAAryB,WACAP,oBAAAQ,IAEAC,GAAAG,aAAA/K,EAAAwK,EAAAC,EAAAO,QAEAhL,EAAAoP,OAEAzE,EAAA,IAAAP,GAAA,CACAJ,SAAA,EACAzG,MAAAvD,KAIA,OAAAA,IAEAoP,KAAA,SAAAF,GACA,IAAAlP,EAAA7J,KACA6J,EAAAsD,QAEA+E,GAAA7K,cAAA0R,KACAA,EAAA,GAGAlP,EAAAgJ,WAAAkG,GAEAlP,EAAA0D,OAAA,GAAA1D,EAAA2D,QAAA,IAIA,IAAA0qB,GAAAQ,OAAA7uB,EAAA,cAAAkP,MAKA7G,GAAA/J,KAAA0B,EAAAilB,MAAA,SAAAC,GACAA,EAAA9V,KAAApP,EAAA6U,YACO7U,GACPA,EAAAm9B,aAAAjuB,GAEAlP,EAAAo9B,aAAAluB,GAEAmf,GAAAQ,OAAA7uB,EAAA,aAAAkP,MAMAlG,WAAA,SAAAkG,GAGA,IAFA,IAEApqB,EAAA,EAAAga,GAFA3I,KAEAgX,KAAAC,UAAA,IAAApoB,OAA6DF,EAAAga,IAAUha,EAFvEqR,KAGA6iB,iBAAAl0B,IAHAqR,KAIAkX,eAAAvoB,GAAAo1B,WAAAlR,WAAAkG,GAJA/Y,KAQAmgC,QAAAttB,WAAAkG,IAQAiuB,aAAA,SAAAjuB,GACA,IAAAlP,EAAA7J,KAEA,QAAAk4B,GAAAQ,OAAA7uB,EAAA,sBAAAkP,IAAA,CAKA,QAAApqB,GAAAkb,EAAAmN,KAAAC,UAAA,IAAApoB,OAAA,EAAuDF,GAAA,IAAQA,EAC/Dkb,EAAAgZ,iBAAAl0B,IACAkb,EAAAq9B,YAAAv4C,EAAAoqB,GAIAmf,GAAAQ,OAAA7uB,EAAA,qBAAAkP,MAQAmuB,YAAA,SAAArgC,EAAAkS,GACA,IACAxC,EADAvW,KACAkX,eAAArQ,GACAvW,EAAA,CACAimB,OACA1P,QACAkS,gBAGA,IAAAmf,GAAAQ,OARA14B,KAQA,qBAAA1P,MAIAimB,EAAAwN,WAAA9K,KAAAF,GACAmf,GAAAQ,OAbA14B,KAaA,oBAAA1P,MAQA22C,aAAA,SAAAluB,GACA,IACAonB,EADAngC,KACAmgC,QACA7vC,EAAA,CACA6vC,UACApnB,gBAGA,IAAAmf,GAAAQ,OAPA14B,KAOA,qBAAA1P,MAIA6vC,EAAAlnB,OACAif,GAAAQ,OAZA14B,KAYA,oBAAA1P,MAOA62C,kBAAA,SAAA5gB,GACA,OAAA2H,GAAAC,MAAAC,OAAApuB,KAAAumB,IAEA6gB,mBAAA,SAAA7gB,GACA,OAAA2H,GAAAC,MAAAvM,MAAA5hB,KAAAumB,EAAA,CACA6G,WAAA,KAGAia,mBAAA,SAAA9gB,GACA,OAAA2H,GAAAC,MAAA,UAAAnuB,KAAAumB,EAAA,CACA6G,WAAA,KAGA8V,0BAAA,SAAA3c,EAAA1F,EAAA5X,GACA,IAAAyP,EAAAwV,GAAAC,MAAAtN,GAEA,0BAAAnI,EACAA,EAAA1Y,KAAAumB,EAAAtd,GAGA,IAEAq+B,kBAAA,SAAA/gB,GACA,OAAA2H,GAAAC,MAAA1X,QAAAzW,KAAAumB,EAAA,CACA6G,WAAA,KAGAlW,eAAA,SAAAjB,GACA,IACAQ,EADAzW,KACAgX,KAAAC,SAAAhB,GAEAQ,EAAA8wB,QACA9wB,EAAA8wB,MAAA,IAGA,IAAAhxB,EAAAE,EAAA8wB,MAPAvnC,KAOAoH,IAeA,OAbAmP,IACAA,EAAAE,EAAA8wB,MAVAvnC,KAUAoH,IAAA,CACApB,KAAA,KACAgR,KAAA,GACAP,QAAA,KACAsN,WAAA,KACAvR,OAAA,KAEAmE,QAAA,KACAG,QAAA,OAIAP,GAEAkV,uBAAA,WAGA,IAFA,IAAAzR,EAAA,EAEArrB,EAAA,EAAAga,EAAA3I,KAAAgX,KAAAC,SAAApoB,OAAuDF,EAAAga,IAAUha,EACjEqR,KAAA6iB,iBAAAl0B,IACAqrB,IAIA,OAAAA,GAEA6I,iBAAA,SAAA5M,GACA,IAAAM,EAAAvW,KAAAkX,eAAAjB,GAGA,yBAAAM,EAAA/D,QAAA+D,EAAA/D,QAAAxS,KAAAgX,KAAAC,SAAAhB,GAAAzD,QAEAg1B,eAAA,WACA,OAAAxnC,KAAAiJ,QAAA8c,eAAA/lB,OAMAimC,mBAAA,SAAAhwB,GACA,IAAA7O,EAAApH,KAAAoH,GACAqP,EAAAzW,KAAAgX,KAAAC,SAAAhB,GACAM,EAAAE,EAAA8wB,OAAA9wB,EAAA8wB,MAAAngC,GAEAmP,IACAA,EAAAwN,WAAApM,iBACAlB,EAAA8wB,MAAAngC,KAGAuQ,QAAA,WACA,IAEAhpB,EAAAga,EAFAkB,EAAA7J,KACAoS,EAAAvI,EAAAuI,OAIA,IAFAvI,EAAA86B,OAEAh2C,EAAA,EAAAga,EAAAkB,EAAAmN,KAAAC,SAAApoB,OAAiDF,EAAAga,IAAUha,EAC3Dkb,EAAAo8B,mBAAAt3C,GAGAyjB,IACAvI,EAAA49B,eACAv1B,GAAAE,OAAAjF,MAAAtD,GACAwsB,GAAAmB,eAAA3tB,EAAAwD,KACAxD,EAAAuI,OAAA,KACAvI,EAAAwD,IAAA,MAGA6qB,GAAAQ,OAAA7uB,EAAA,kBACAk6B,GAAAI,UAAAt6B,EAAAzC,KAEAsgC,cAAA,WACA,OAAA1nC,KAAAoS,OAAAu1B,UAAAv4C,MAAA4Q,KAAAoS,OAAAxjB,YAEA81C,YAAA,WACA,IAAA76B,EAAA7J,KACA6J,EAAAs2B,QAAA,IAAAiD,GAAA,CACAtrB,OAAAjO,EACA+9B,eAAA/9B,EAEA+N,MAAA/N,EAAAmN,KACA0O,SAAA7b,EAAAZ,QAAA6b,UACOjb,IAMPy6B,WAAA,WACA,IAAAz6B,EAAA7J,KACA+V,EAAAlM,EAAAg+B,WAAA,GAEAjyB,EAAA,WACA/L,EAAAi+B,aAAA14C,MAAAya,EAAAjb,YAGAsjB,GAAA/J,KAAA0B,EAAAZ,QAAAy6B,OAAA,SAAA19B,GACAqwB,GAAAnD,iBAAArpB,EAAA7D,EAAA4P,GACAG,EAAA/P,GAAA4P,IAIA/L,EAAAZ,QAAA46B,aACAjuB,EAAA,WACA/L,EAAA06B,UAGAlO,GAAAnD,iBAAArpB,EAAA,SAAA+L,GACAG,EAAAwuB,OAAA3uB,IAOA6xB,aAAA,WACA,IAAA59B,EAAA7J,KACA+V,EAAAlM,EAAAg+B,WAEA9xB,WAIAlM,EAAAg+B,WACA31B,GAAA/J,KAAA4N,EAAA,SAAAH,EAAA5P,GACAqwB,GAAA9C,oBAAA1pB,EAAA7D,EAAA4P,OAGAmyB,iBAAA,SAAA/uB,EAAA6H,EAAAgZ,GACA,IACAzhB,EAAAzpB,EAAAga,EADA+P,EAAAmhB,EAAA,mCAGA,IAAAlrC,EAAA,EAAAga,EAAAqQ,EAAAnqB,OAAyCF,EAAAga,IAAUha,GACnDypB,EAAAY,EAAArqB,KAGAqR,KAAAkX,eAAAkB,EAAAL,eAAAgM,WAAArL,GAAAN,IAQA0vB,aAAA,SAAAvhB,GACA,IAAA1c,EAAA7J,KACAmgC,EAAAt2B,EAAAs2B,QAEA,QAAAjI,GAAAQ,OAAA7uB,EAAA,eAAA0c,IAAA,CAKA1c,EAAAq6B,iBAAA,EACAr6B,EAAA68B,iBAAA,KACA,IAAAtH,EAAAv1B,EAAAo5B,YAAA1c,GAKA4Z,IACAf,EAAAe,EAAAvtB,OAAAutB,EAAA8C,YAAA1c,GAAA6Y,EAAAe,EAAA8C,YAAA1c,IAGA2R,GAAAQ,OAAA7uB,EAAA,cAAA0c,IACA,IAAAyhB,EAAAn+B,EAAA68B,iBAkBA,OAhBAsB,EAEAn+B,EAAAiK,OAAAk0B,GACO5I,IAAAv1B,EAAAoL,YAEPpL,EAAA86B,OAGA96B,EAAAiK,OAAA,CACAQ,SAAAzK,EAAAZ,QAAA2X,MAAAgjB,kBACA/uB,MAAA,KAIAhL,EAAAq6B,iBAAA,EACAr6B,EAAA68B,iBAAA,KACA78B,IASAo5B,YAAA,SAAA1c,GACA,IAAA1c,EAAA7J,KACAiJ,EAAAY,EAAAZ,SAAA,GACAg/B,EAAAh/B,EAAA2X,MACAwe,GAAA,EAiCA,OAhCAv1B,EAAA48B,WAAA58B,EAAA48B,YAAA,GAEA,aAAAlgB,EAAAvgB,KACA6D,EAAAy1B,OAAA,GAEAz1B,EAAAy1B,OAAAz1B,EAAAq5B,0BAAA3c,EAAA0hB,EAAApnB,KAAAonB,GAKA/1B,GAAAlK,SAAAiB,EAAA06B,SAAA16B,EAAA2X,MAAA+iB,QAAA,CAAApd,EAAAuG,OAAAjjB,EAAAy1B,QAAAz1B,GAEA,YAAA0c,EAAAvgB,MAAA,UAAAugB,EAAAvgB,MACAiD,EAAAqd,SAEArd,EAAAqd,QAAAh3B,KAAAua,EAAA0c,EAAAuG,OAAAjjB,EAAAy1B,QAKAz1B,EAAA48B,WAAA53C,QACAgb,EAAAk+B,iBAAAl+B,EAAA48B,WAAAwB,EAAApnB,MAAA,GAIAhX,EAAAy1B,OAAAzwC,QAAAo5C,EAAApnB,MACAhX,EAAAk+B,iBAAAl+B,EAAAy1B,OAAA2I,EAAApnB,MAAA,GAGAue,GAAAltB,GAAA1J,YAAAqB,EAAAy1B,OAAAz1B,EAAA48B,YAEA58B,EAAA48B,WAAA58B,EAAAy1B,OACAF,KASA2E,GAAAI,UAAA,GACA,IAAA+D,GAAAnE,GAyrBA,SAAAoE,KACA,UAAAhC,MAAA,6GAqBA,SAAAiC,GAAAn/B,GACAjJ,KAAAiJ,WAAA,GAtsBA86B,GAAAsE,WAAAtE,GASAA,GAAAuE,MAAA,GASAp2B,GAAAq2B,YAAA/E,GASAtxB,GAAAs2B,WAAAlF,GA8qBApxB,GAAAzI,OAAA2+B,GAAA3oC,UAEA,CAMAgpC,QAAAN,GASAO,MAAAP,GASAQ,OAAAR,GAUA3S,IAAA2S,GAUAS,KAAAT,GAUAU,QAAAV,GAQAW,MAAAX,GAUAY,QAAA,SAAA/lC,GACA,OAAAA,KAIAolC,GAAAY,SAAA,SAAAC,GACA/2B,GAAAzI,OAAA2+B,GAAA3oC,UAAAwpC,IAGA,IACAC,GAAA,CACAC,MAFAf,IASAgB,GAAA,CAKAC,WAAA,CAOAjpC,OAAA,SAAA4C,GACA,OAAAkP,GAAAhjB,QAAA8T,KAAA,GAAAA,GAWA2H,OAAA,SAAA2+B,EAAAziC,EAAA0c,GAEA,IAAA9vB,EAAA8vB,EAAA10B,OAAA,EAAA00B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAEAhwB,KAAA2qB,IAAAzqB,GAAA,GACA61C,IAAA/1C,KAAAkB,MAAA60C,KAEA71C,EAAA61C,EAAA/1C,KAAAkB,MAAA60C,IAIA,IAAAC,EAAAr3B,GAAAs3B,MAAAj2C,KAAA2qB,IAAAzqB,IACAg2C,EAAA,GAEA,OAAAH,EAAA,CACA,IAAAI,EAAAn2C,KAAAC,IAAAD,KAAA2qB,IAAAqF,EAAA,IAAAhwB,KAAA2qB,IAAAqF,IAAA10B,OAAA,KAEA,GAAA66C,EAAA,MAEA,IAAAC,EAAAz3B,GAAAs3B,MAAAj2C,KAAA2qB,IAAAorB,IACAG,EAAAH,EAAAM,cAAAr2C,KAAAkB,MAAAk1C,GAAAp2C,KAAAkB,MAAA80C,QACW,CACX,IAAAM,GAAA,EAAAt2C,KAAAkB,MAAA80C,GACAM,EAAAt2C,KAAAC,IAAAD,KAAAD,IAAAu2C,EAAA,OAEAJ,EAAAH,EAAAQ,QAAAD,SAGAJ,EAAA,IAGA,OAAAA,GAEAM,YAAA,SAAAT,EAAAziC,EAAA0c,GACA,IAAAymB,EAAAV,EAAA/1C,KAAAQ,IAAA,GAAAR,KAAAkB,MAAAyd,GAAAs3B,MAAAF,KAEA,WAAAA,EACA,IACS,IAAAU,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAnjC,OAAA0c,EAAA10B,OAAA,EACTy6C,EAAAM,gBAGA,MAIAK,GAAA/3B,GAAArK,eACAE,GAAAmK,GAAAnK,sBAsDA,SAAAmiC,GAAA3mB,GACA,IACA50B,EAAAga,EADAkZ,EAAA,GAGA,IAAAlzB,EAAA,EAAAga,EAAA4a,EAAA10B,OAAoCF,EAAAga,IAAUha,EAC9CkzB,EAAA7yB,KAAAu0B,EAAA50B,GAAAizB,OAGA,OAAAC,EAmBA,SAAAsoB,GAAAl4B,EAAAm4B,EAAA34B,GACA,OAAAS,GAAAhjB,QAAAk7C,GAAAl4B,GAAAm4B,YAAAp4B,EAAAR,EAAA24B,GAAAn4B,EAAAyuB,YAAA0J,GAAA78B,MAhFAyD,GAAAT,KAAA,SACAsa,SAAA,EACAhG,SAAA,OACA7D,QAAA,EAEAC,UAAA,CACA4J,SAAA,EACAyf,MAAA,qBACA/tB,UAAA,EACAguB,YAAA,EACAC,iBAAA,EACAC,WAAA,EACAC,eAAA,GACAC,cAAA,EACAC,cAAA,mBACAC,mBAAA,GACAC,yBAAA,EACA5pB,iBAAA,EACArE,WAAA,GACAC,iBAAA,GAGAiuB,WAAA,CAEAlgB,SAAA,EAEAmgB,YAAA,GAEAvsB,QAAA,CACA7Q,IAAA,EACAE,OAAA,IAIAyV,MAAA,CACAyH,aAAA,EACAigB,YAAA,EACAC,YAAA,GACAC,QAAA,EACA1sB,QAAA,EACApW,SAAA,EACAwiB,SAAA,EACAugB,UAAA,EACAC,gBAAA,EACAC,YAAA,EAEAtjC,SAAAohC,GAAAC,WAAAjpC,OACAmrC,MAAA,GACAC,MAAA,MAmCA,IAAAC,GAAA/3B,GAAAjK,OAAA,CAOAqnB,WAAA,WAEA,OACAnjB,KAFA3N,KAEA0rC,aAAA,EACA99B,IAHA5N,KAGA2rC,YAAA,EACA99B,MAJA7N,KAIA4rC,cAAA,EACA99B,OALA9N,KAKA6rC,eAAA,IAQAroB,SAAA,WACA,OAAAxjB,KAAA8rC,QAKAjG,kBAAA,WACA,IAAAtiB,EAAAvjB,KAAAiJ,QAAAsa,MAcA,QAAAl0B,KAZA,IAAAk0B,EAAAgoB,QACAhoB,EAAAgoB,MAAA,CACA1gB,SAAA,KAIA,IAAAtH,EAAAioB,QACAjoB,EAAAioB,MAAA,CACA3gB,SAAA,IAIAtH,EACA,UAAAl0B,GAAA,UAAAA,IACA,qBAAAk0B,EAAAgoB,MAAAl8C,KACAk0B,EAAAgoB,MAAAl8C,GAAAk0B,EAAAl0B,IAGA,qBAAAk0B,EAAAioB,MAAAn8C,KACAk0B,EAAAioB,MAAAn8C,GAAAk0B,EAAAl0B,MAKA08C,aAAA,WACA75B,GAAAlK,SAAAhI,KAAAiJ,QAAA8iC,aAAA,CAAA/rC,QAEA0X,OAAA,SAAAs0B,EAAAC,EAAAC,GACA,IACAv9C,EAAAga,EAAAkZ,EAAAD,EAAA2B,EAAA6mB,EADAvgC,EAAA7J,KA8CA,IA3CA6J,EAAAkiC,eAEAliC,EAAAmiC,WACAniC,EAAAoiC,YACApiC,EAAAqiC,QAAAh6B,GAAAzI,OAAA,CACAkE,KAAA,EACAE,MAAA,EACAD,IAAA,EACAE,OAAA,GACOo+B,GACPriC,EAAAsiC,eAAA,EACAtiC,EAAAuiC,kBAAA,EACAviC,EAAAwiC,iBAAAxiC,EAAAwiC,kBAAA,GAEAxiC,EAAAyiC,sBACAziC,EAAA0iC,gBACA1iC,EAAA2iC,qBAEA3iC,EAAA4iC,mBACA5iC,EAAA6iC,sBACA7iC,EAAA8iC,kBAOA9iC,EAAA+iC,mBAGArpB,EAAA1Z,EAAAgjC,cAAA,GAEAtpB,EAAA1Z,EAAAijC,gBAAAvpB,MACA1Z,EAAAkjC,8BAIAlrB,EAAAhY,EAAAmjC,qBAAAzpB,IAAA1Z,EAAA0Z,MACA1Z,EAAAojC,6BACApjC,EAAA0Z,MAAA1B,EAIAlzB,EAAA,EAAAga,EAAAkZ,EAAAhzB,OAAuCF,EAAAga,IAAUha,EACjDizB,EAAAC,EAAAlzB,IACAy7C,EAAA7mB,EAAA50B,IAQAy7C,EAAAxoB,QALA2B,EAAAv0B,KAAAo7C,EAAA,CACAxoB,QACA4pB,OAAA,IAkBA,OAXA3hC,EAAAiiC,OAAAvoB,EAEA1Z,EAAAqjC,8BACArjC,EAAAsjC,wBACAtjC,EAAAujC,6BAEAvjC,EAAAwjC,YACAxjC,EAAAyjC,MACAzjC,EAAA0jC,WAEA1jC,EAAA2jC,cACA3jC,EAAAud,SAEAomB,YAAA,WACAt7B,GAAAlK,SAAAhI,KAAAiJ,QAAAukC,YAAA,CAAAxtC,QAGAssC,oBAAA,WACAp6B,GAAAlK,SAAAhI,KAAAiJ,QAAAqjC,oBAAA,CAAAtsC,QAEAusC,cAAA,WACA,IAAA1iC,EAAA7J,KAEA6J,EAAAoY,gBAEApY,EAAA0D,MAAA1D,EAAAmiC,SACAniC,EAAA8D,KAAA,EACA9D,EAAAgE,MAAAhE,EAAA0D,QAEA1D,EAAA2D,OAAA3D,EAAAoiC,UAEApiC,EAAA+D,IAAA,EACA/D,EAAAiE,OAAAjE,EAAA2D,QAIA3D,EAAA6hC,YAAA,EACA7hC,EAAA8hC,WAAA,EACA9hC,EAAA+hC,aAAA,EACA/hC,EAAAgiC,cAAA,GAEAW,mBAAA,WACAt6B,GAAAlK,SAAAhI,KAAAiJ,QAAAujC,mBAAA,CAAAxsC,QAGAysC,iBAAA,WACAv6B,GAAAlK,SAAAhI,KAAAiJ,QAAAwjC,iBAAA,CAAAzsC,QAEA0sC,oBAAAx6B,GAAAhL,KACAylC,gBAAA,WACAz6B,GAAAlK,SAAAhI,KAAAiJ,QAAA0jC,gBAAA,CAAA3sC,QAGA4sC,iBAAA,WACA16B,GAAAlK,SAAAhI,KAAAiJ,QAAA2jC,iBAAA,CAAA5sC,QAEA6sC,WAAA36B,GAAAhL,KACA4lC,gBAAA,SAAAvpB,GACA,IAAA1Z,EAAA7J,KAEA,OAAAkS,GAAAhjB,QAAAq0B,MAAA10B,OACAqjB,GAAAlK,SAAA6B,EAAAZ,QAAA6jC,gBAAA,CAAAjjC,EAAA0Z,KAIA1Z,EAAA0Z,MAAArR,GAAAlK,SAAA6B,EAAAZ,QAAA6jC,gBAAA,CAAAjjC,IAAA0Z,SAAA1Z,EAAA0Z,MACAA,IAEAwpB,4BAAA,WACA76B,GAAAlK,SAAAhI,KAAAiJ,QAAA8jC,4BAAA,CAAA/sC,QAEAgtC,qBAAA,WACA,IAEAS,EAFAztC,KAEAiJ,QAAAsa,MAFAvjB,KAGAujB,MAHAvjB,KAGAujB,MAAAza,IAAA2kC,EAAAC,cAAAD,EAAAzlC,SAAAhI,OAEAitC,2BAAA,WACA/6B,GAAAlK,SAAAhI,KAAAiJ,QAAAgkC,2BAAA,CAAAjtC,QAGAktC,4BAAA,WACAh7B,GAAAlK,SAAAhI,KAAAiJ,QAAAikC,4BAAA,CAAAltC,QAEAmtC,sBAAA,WACA,IAAAtjC,EAAA7J,KACAiS,EAAApI,EAAAwD,IACAogC,EAAA5jC,EAAAZ,QAAAsa,MACA1B,EAAAqoB,GAAArgC,EAAAiiC,QAGA6B,EAAAz7B,GAAAjJ,QAAAoI,WAAAo8B,GAEAx7B,EAAAR,KAAAk8B,EAAA3sC,OACA,IAAA4sC,EAAAH,EAAAxC,aAAA,EAEA,GAAAppB,EAAAhzB,QAAAgb,EAAAZ,QAAA4hB,SAAAhhB,EAAAoY,eAOA,IANA,IAEA4rB,EAFAC,EAAA57B,GAAAm4B,YAAAp4B,EAAA07B,EAAA3sC,OAAA6gB,EAAAhY,EAAAwiC,kBACA0B,EAAAD,EAGAE,EAAAnkC,EAAA4Z,gBAAA,GAAA5Z,EAAA4Z,gBAAA,KAEAsqB,EAAAC,GAAAJ,EAAAH,EAAAvC,aAAA,CACA,IAAA+C,EAAA/7B,GAAAg8B,UAAAN,GAIA,GAHAC,EAAAt6C,KAAAuC,IAAAm4C,GACA16C,KAAAwC,IAAAk4C,GAEAH,EAAAjkC,EAAAoiC,UAAA,CAEA2B,IACA,MAGAA,IACAG,EAAAF,EAAAC,EAIAjkC,EAAA+jC,iBAEAR,2BAAA,WACAl7B,GAAAlK,SAAAhI,KAAAiJ,QAAAmkC,2BAAA,CAAAptC,QAGAqtC,UAAA,WACAn7B,GAAAlK,SAAAhI,KAAAiJ,QAAAokC,UAAA,CAAArtC,QAEAstC,IAAA,WACA,IAAAzjC,EAAA7J,KAEAonB,EAAAvd,EAAAud,QAAA,CACA7Z,MAAA,EACAC,OAAA,GAEAqU,EAAAqoB,GAAArgC,EAAAiiC,QACA7kB,EAAApd,EAAAZ,QACAwkC,EAAAxmB,EAAA1D,MACA4qB,EAAAlnB,EAAA8jB,WACAqD,EAAAnnB,EAAAhG,UAEA4J,EAAAhhB,EAAAwkC,aAEAxpB,EAAAoC,EAAApC,SACA5C,EAAApY,EAAAoY,eACAqsB,EAAAp8B,GAAAjJ,QAAAoI,WACAs8B,EAAAW,EAAAb,GACA/C,EAAAzjB,EAAAhG,UAAAypB,eAiBA,GAbAtjB,EAAA7Z,MAFA0U,EAEApY,EAAA0kC,cAAA1kC,EAAAmiC,SAAAniC,EAAAqiC,QAAAv+B,KAAA9D,EAAAqiC,QAAAr+B,MAAAhE,EAAAmiC,SAEAnhB,GAAAujB,EAAA3D,UAAAC,EAAA,EAKAtjB,EAAA5Z,OADAyU,EACA4I,GAAAujB,EAAA3D,UAAAC,EAAA,EAEA7gC,EAAAoiC,UAIAkC,EAAAtjB,WAAA,CACA,IAAA2jB,EAAAF,EAAAH,GACAM,EAAAv8B,GAAAjJ,QAAAmI,UAAA+8B,EAAA1vB,SACAiwB,EAAAF,EAAA58B,WAAA68B,EAAAjhC,OAEAyU,EACAmF,EAAA5Z,QAAAkhC,EAEAtnB,EAAA7Z,OAAAmhC,EAKA,GAAAjB,EAAA5iB,WAAA,CACA,IAAA8jB,EAAAz8B,GAAAm4B,YAAAxgC,EAAAwD,IAAAsgC,EAAA3sC,OAAA6gB,EAAAhY,EAAAwiC,kBACAuC,EAAA18B,GAAA28B,mBAAAhtB,GACAitB,EAAA,GAAAnB,EAAAn/B,KACAugC,EAAAllC,EAAAZ,QAAAsa,MAAA9E,QAKA,GAHA5U,EAAAsiC,eAAAyC,EACA/kC,EAAAuiC,kBAAAuC,EAEA1sB,EAAA,CACA,IAAAgsB,EAAA/7B,GAAAg8B,UAAArkC,EAAA+jC,eACAC,EAAAt6C,KAAAuC,IAAAm4C,GACAe,EAAAz7C,KAAAwC,IAAAk4C,GAEAgB,EAAAD,EAAAL,EAAAhB,EAAA/7B,WAAAg9B,EAAAE,EAEA1nB,EAAA5Z,OAAAja,KAAAD,IAAAuW,EAAAoiC,UAAA7kB,EAAA5Z,OAAAyhC,EAAAF,GACAllC,EAAAwD,IAAAoE,KAAAk8B,EAAA3sC,OACA,IAIA0qC,EAAAE,EAJAsD,EAAA/E,GAAAtgC,EAAAwD,IAAAwU,EAAA,GAAA8rB,EAAA3sC,QACAmuC,EAAAhF,GAAAtgC,EAAAwD,IAAAwU,IAAAhzB,OAAA,GAAA8+C,EAAA3sC,QACAouC,EAAAvlC,EAAA4Z,gBAAA,GAAA5Z,EAAA8D,KACA0hC,EAAAxlC,EAAAgE,MAAAhE,EAAA4Z,gBAAA5B,EAAAhzB,OAAA,GAIA,IAAAgb,EAAA+jC,eACAlC,EAAA,WAAA7mB,EAAAgpB,EAAAqB,EAAArB,EAAAiB,EACAlD,EAAA,WAAA/mB,EAAAgpB,EAAAiB,EAAAjB,EAAAsB,IAEAzD,EAAAwD,EAAA,EACAtD,EAAAuD,EAAA,GAGAtlC,EAAA6hC,YAAAn4C,KAAAC,IAAAk4C,EAAA0D,EAAA,KAEAvlC,EAAA+hC,aAAAr4C,KAAAC,IAAAo4C,EAAAyD,EAAA,UAIA5B,EAAAtC,OACAwD,EAAA,EAIAA,GAAAI,EAAAD,EAGA1nB,EAAA7Z,MAAAha,KAAAD,IAAAuW,EAAAmiC,SAAA5kB,EAAA7Z,MAAAohC,GACA9kC,EAAA8hC,WAAAgC,EAAAn/B,KAAA,EACA3E,EAAAgiC,cAAA8B,EAAAn/B,KAAA,EAIA3E,EAAAylC,gBACAzlC,EAAA0D,MAAA6Z,EAAA7Z,MACA1D,EAAA2D,OAAA4Z,EAAA5Z,QAOA8hC,cAAA,WACA,IAAAzlC,EAAA7J,KAEA6J,EAAAqiC,UACAriC,EAAA6hC,YAAAn4C,KAAAC,IAAAqW,EAAA6hC,YAAA7hC,EAAAqiC,QAAAv+B,KAAA,GACA9D,EAAA8hC,WAAAp4C,KAAAC,IAAAqW,EAAA8hC,WAAA9hC,EAAAqiC,QAAAt+B,IAAA,GACA/D,EAAA+hC,aAAAr4C,KAAAC,IAAAqW,EAAA+hC,aAAA/hC,EAAAqiC,QAAAr+B,MAAA,GACAhE,EAAAgiC,cAAAt4C,KAAAC,IAAAqW,EAAAgiC,cAAAhiC,EAAAqiC,QAAAp+B,OAAA,KAGAy/B,SAAA,WACAr7B,GAAAlK,SAAAhI,KAAAiJ,QAAAskC,SAAA,CAAAvtC,QAGAiiB,aAAA,WACA,cAAAjiB,KAAAiJ,QAAA4b,UAAA,WAAA7kB,KAAAiJ,QAAA4b,UAEA0pB,YAAA,WACA,OAAAvuC,KAAAiJ,QAAAkmB,WAGAtL,cAAA,SAAA0rB,GAEA,GAAAr9B,GAAA7K,cAAAkoC,GACA,OAAA9pB,IAIA,sBAAA8pB,gBAAA3nC,UAAAH,SAAA8nC,GACA,OAAA9pB,IAIA,GAAA8pB,EACA,GAAAvvC,KAAAiiB,gBACA,QAAAtyB,IAAA4/C,EAAAv7C,EACA,OAAAgM,KAAA6jB,cAAA0rB,EAAAv7C,QAES,QAAArE,IAAA4/C,EAAAt7C,EACT,OAAA+L,KAAA6jB,cAAA0rB,EAAAt7C,GAKA,OAAAs7C,GAQAzS,iBAAA5qB,GAAAhL,KASAic,iBAAAjR,GAAAhL,KAOAsoC,iBAAAt9B,GAAAhL,KAMAuc,gBAAA,SAAA5c,GACA,IAAAgD,EAAA7J,KACAghB,EAAAnX,EAAAZ,QAAA+X,OAEA,GAAAnX,EAAAoY,eAAA,CACA,IAAAwtB,EAAA5lC,EAAA0D,OAAA1D,EAAA6hC,YAAA7hC,EAAA+hC,cACAoC,EAAAyB,EAAAl8C,KAAAC,IAAAqW,EAAAiiC,OAAAj9C,QAAAmyB,EAAA,QACA0uB,EAAA1B,EAAAnnC,EAAAgD,EAAA6hC,YAEA1qB,IACA0uB,GAAA1B,EAAA,GAGA,IAAA2B,EAAA9lC,EAAA8D,KAAA+hC,EAEA,OADAC,GAAA9lC,EAAA0kC,cAAA1kC,EAAAqiC,QAAAv+B,KAAA,EAIA,IAAAiiC,EAAA/lC,EAAA2D,QAAA3D,EAAA8hC,WAAA9hC,EAAAgiC,eACA,OAAAhiC,EAAA+D,IAAA/G,GAAA+oC,GAAA/lC,EAAAiiC,OAAAj9C,OAAA,KAOA22B,mBAAA,SAAAqqB,GACA,IAAAhmC,EAAA7J,KAEA,GAAA6J,EAAAoY,eAAA,CACA,IAAAwtB,EAAA5lC,EAAA0D,OAAA1D,EAAA6hC,YAAA7hC,EAAA+hC,cACAkE,EAAAL,EAAAI,EAAAhmC,EAAA6hC,YACAiE,EAAA9lC,EAAA8D,KAAAmiC,EAEA,OADAH,GAAA9lC,EAAA0kC,cAAA1kC,EAAAqiC,QAAAv+B,KAAA,EAIA,OAAA9D,EAAA+D,IAAAiiC,EAAAhmC,EAAA2D,QAOAwU,aAAA,WACA,OAAAhiB,KAAAmjB,iBAAAnjB,KAAA+vC,iBAEAA,aAAA,WACA,IACAz8C,EADA0M,KACA1M,IACAE,EAFAwM,KAEAxM,IACA,OAHAwM,KAGAgrB,YAAA,EAAA13B,EAAA,GAAAE,EAAA,EAAAA,EAAAF,EAAA,GAAAE,EAAA,EAAAF,EAAA,GAOA08C,UAAA,SAAAzsB,GACA,IAYA50B,EAAAy7C,EAZAvgC,EAAA7J,KACAiiB,EAAApY,EAAAoY,eACAguB,EAAApmC,EAAAZ,QAAAsa,MAAAgoB,MACA2E,EAAA3sB,EAAA10B,OACAshD,GAAA,EACAC,EAAAH,EAAAI,cAGAC,EAAAzmC,EAAA0mC,aAAAL,EAAA,GAEAM,EAAAvuB,EAAApY,EAAA0D,OAAA1D,EAAA6hC,YAAA7hC,EAAA+hC,cAAA/hC,EAAA2D,QAAA3D,EAAA8hC,WAAA9hC,EAAA4mC,eACAxqC,EAAA,GAaA,IAVAqqC,EAAAE,IACAL,EAAA,EAAA58C,KAAAkB,MAAA67C,EAAAE,IAKAN,EAAAE,IACAD,EAAA58C,KAAAC,IAAA28C,EAAA,EAAA58C,KAAAkB,MAAAy7C,EAAAE,KAGAzhD,EAAA,EAAiBA,EAAAuhD,EAAevhD,IAChCy7C,EAAA7mB,EAAA50B,GAEAwhD,EAAA,GAAAxhD,EAAAwhD,EAAA,UAEA/F,EAAAxoB,MAGA3b,EAAAjX,KAAAo7C,GAGA,OAAAnkC,GAMAsqC,UAAA,WACA,IAAA1mC,EAAA7J,KACAiiB,EAAApY,EAAAoY,eACAguB,EAAApmC,EAAAZ,QAAAsa,MAAAgoB,MAEAmF,EAAAx+B,GAAAg8B,UAAArkC,EAAA+jC,eACA93C,EAAAvC,KAAA2qB,IAAA3qB,KAAAuC,IAAA46C,IACA36C,EAAAxC,KAAA2qB,IAAA3qB,KAAAwC,IAAA26C,IACAjyB,EAAAwxB,EAAA5E,iBAAA,EACA33C,EAAAmW,EAAAuiC,kBAAA3tB,GAAA,EAEAkvB,EAAAz7B,GAAAjJ,QAAAoI,WAAA4+B,GAEAt/C,EAAAkZ,EAAAsiC,eAAAwB,EAAA/7B,WAAA6M,GAAA,EAEA,OAAAwD,EAAAtxB,EAAAmF,EAAApC,EAAAqC,EAAArC,EAAAoC,EAAAnF,EAAAoF,EAAApF,EAAAoF,EAAArC,EAAAoC,EAAAnF,EAAAmF,EAAApC,EAAAqC,GAMAs4C,WAAA,WACA,IAGA1/C,EAAAga,EAAA4N,EAFAnJ,EADApN,KACAoN,MACAyd,EAFA7qB,KAEAiJ,QAAA4hB,QAGA,YAAAA,EACA,QAAAA,EAIA,IAAAl8B,EAAA,EAAAga,EAAAyE,EAAA4J,KAAAC,SAAApoB,OAAoDF,EAAAga,IAAUha,EAC9D,GAAAye,EAAAyV,iBAAAl0B,MACA4nB,EAAAnJ,EAAA8J,eAAAvoB,IAEAgoB,UAdA3W,KAcAoH,IAAAmP,EAAAO,UAdA9W,KAcAoH,IACA,SAKA,UAOA6R,KAAA,SAAAyF,GACA,IAAA7U,EAAA7J,KACAiJ,EAAAY,EAAAZ,QAEA,GAAAY,EAAAwkC,aAAA,CAIA,IA6BAsC,EAAAC,EAAAC,EA7BAzjC,EAAAvD,EAAAuD,MACA6E,EAAApI,EAAAwD,IACAiE,EAAAN,GAAAO,OACAb,EAAAY,EAAAZ,iBACAu/B,EAAAhnC,EAAAsa,MAAAgoB,MACAuF,EAAA7nC,EAAAsa,MAAAioB,OAAAyE,EACAhvB,EAAAhY,EAAAgY,UACA8pB,EAAA9hC,EAAA8hC,WACAlmB,EAAA5b,EAAA4b,SACAksB,EAAA,IAAAlnC,EAAA+jC,cACAoD,EAAAf,EAAA9E,OACAlpB,EAAApY,EAAAoY,eACAqsB,EAAAp8B,GAAAjJ,QAAAoI,WACAkS,EAAA0sB,EAAAplB,SAAAolB,EAAA7E,SAAAvhC,EAAAmmC,UAAAnmC,EAAA2Z,YAAA3Z,EAAA2Z,WACAytB,EAAAhH,GAAAgG,EAAAiB,UAAAxgC,GACAi9B,EAAAW,EAAA2B,GACAr+B,EAAA+7B,EAAA/7B,WACAu/B,EAAAlH,GAAA6G,EAAAI,UAAAxgC,GACA0gC,EAAA9C,EAAAwC,GACA/B,EAAAkB,EAAAxxB,QACA6sB,EAAA2E,EAAA3E,YACA+F,EAAApwB,EAAAwpB,UAAAxpB,EAAAypB,eAAA,EACA4G,EAAArH,GAAAc,EAAAmG,UAAAxgC,GACA89B,EAAAF,EAAAvD,GACA0D,EAAAv8B,GAAAjJ,QAAAmI,UAAA25B,EAAAtsB,SACA8yB,EAAAr/B,GAAAg8B,UAAArkC,EAAA+jC,eACA4D,EAAA,GACAC,EAAAxwB,EAAAspB,WAAAxiC,GAAAkZ,EAAA1E,UAAA,OACAm1B,EAAAx/B,GAAAy/B,YAoLA,GAjLA,QAAA9sB,GACA8rB,EAAAe,EAAAtkC,EAAAvD,EAAAiE,OAAA2jC,GACAb,EAAA/mC,EAAAiE,OAAAujC,EACAR,EAAAF,EAAAc,EAAA,GACO,WAAA5sB,GACP8rB,EAAAe,EAAAtkC,EAAAvD,EAAA+D,IAAA6jC,GACAb,EAAAD,EAAAc,EAAA,EACAZ,EAAAhnC,EAAA+D,IAAAyjC,GACO,SAAAxsB,GACP8rB,EAAAe,EAAAtkC,EAAAvD,EAAAgE,MAAA4jC,GACAb,EAAA/mC,EAAAgE,MAAAwjC,EACAR,EAAAF,EAAAc,EAAA,IAEAd,EAAAe,EAAAtkC,EAAAvD,EAAA8D,KAAA8jC,GACAb,EAAAD,EAAAc,EAAA,EACAZ,EAAAhnC,EAAA8D,KAAA0jC,GAKAn/B,GAAA/J,KAAAob,EAAA,SAAA6mB,EAAAvjC,GAEA,IAAAqL,GAAA7K,cAAA+iC,EAAAxoB,OAAA,CAIA,IACArF,EAAAq1B,EAAA/0B,EAAAC,EAgBA+0B,EAAAC,EAAAC,EAAAC,EAAAlzB,EAAAE,EAAAD,EAAAxpB,EAAA08C,EAAAC,EAAAC,EAAAjQ,EAjBAtgB,EAAAwoB,EAAAxoB,MAGA/a,IAAAgD,EAAAuoC,eAAAnpC,EAAA+X,SAAAC,EAAAC,iBAEA3E,EAAA0E,EAAA0pB,cACAiH,EAAA3wB,EAAA2pB,cACA/tB,EAAAoE,EAAA4pB,oBAAA,GACA/tB,EAAAmE,EAAA6pB,0BAAA,IAEAvuB,EAAAxU,GAAAkZ,EAAA1E,UAAA1V,GACA+qC,EAAA7pC,GAAAkZ,EAAAqpB,MAAAzjC,GACAgW,EAAAoE,EAAApE,YAAA,GACAC,EAAAmE,EAAAnE,kBAAA,GAKA,IAAAqe,EAAAjpB,GAAAhjB,QAAA0yB,KAAA/yB,OAAA,EACAwjD,EA5qBA,SAAAhwC,EAAAwE,EAAAqa,GACA,IAAAmxB,EAAAhwC,EAAAohB,gBAAA5c,GAYA,OAVAqa,IACA,IAAA7e,EAAAmhB,WAAA30B,OACAwjD,GAAAhwC,EAAA4f,eAAA1uB,KAAAC,IAAA6+C,EAAAhwC,EAAAsL,KAAAtL,EAAAwL,MAAAwkC,GAAA9+C,KAAAC,IAAA6+C,EAAAhwC,EAAAuL,IAAAvL,EAAAyL,OAAAukC,GAEAA,GADO,IAAAxrC,GACPxE,EAAAohB,gBAAA,GAAA4uB,GAAA,GAEAA,EAAAhwC,EAAAohB,gBAAA5c,EAAA,OAIAwrC,EA+pBAC,CAAAzoC,EAAAhD,EAAAoa,EAAAC,iBAEA,GAAAe,EAAA,CACA,IAAAswB,EAAAlB,EAAAtC,EAEAsD,EAAAxoC,EAAA8D,KAhCA,OAiCAikC,EAAA,iBAGAC,EAAAE,EAAAjzB,EAAAC,EAAA2yB,EAAAtkC,EAAAilC,EAAA91B,GACAu1B,EAAAlB,EACAoB,EAAAnB,EACAoB,EAAApoC,EAAA4Z,gBAAA5c,GAAAykC,EAEA,QAAAzmB,GACA7F,EAAA0yB,EAAAtkC,EAAAsR,EAAA9Q,IAAA6jC,KAAA,EACAl8C,EAAAmpB,EAAA5Q,OACAqkC,IAAApB,EAAA,MAAA5V,GAAAvpB,EACAswB,EAAA6O,EAAA,gBACAmB,EAAAroC,EAAAiE,OAAAykC,IAEAvzB,EAAAN,EAAA9Q,IACArY,EAAAm8C,EAAAtkC,EAAAsR,EAAA5Q,OAAA2jC,KAAA,EACAU,GAAApB,EAAA,MAAAn/B,EACAswB,EAAA6O,EAAA,iBACAmB,EAAAroC,EAAA+D,IAAA2kC,OAES,CACT,IAAAC,GAAAxB,EAAA,EAAAK,GAAAtC,EAEAsD,EAAAxoC,EAAA+D,IAzDA,OA0DAgkC,EAAA,iBAGAC,EAAAjB,EACAmB,EAAAlB,EACAiB,EAAAE,EAAAhzB,EAAAzpB,EAAAm8C,EAAAtkC,EAAAilC,EAAA91B,GACA21B,EAAAroC,EAAA4Z,gBAAA5c,GAAAykC,EACA6G,GAAA,EAAAhX,GAAAvpB,EAAA,EAEA,SAAAiT,GACA/F,EAAA4yB,EAAAtkC,EAAAsR,EAAA/Q,KAAA8jC,KAAA,EACA1yB,EAAAL,EAAA7Q,MACAq0B,EAAA8O,EAAA,eACAiB,EAAApoC,EAAAgE,MAAA2kC,IAEA1zB,EAAAJ,EAAA/Q,KACAoR,EAAA2yB,EAAAtkC,EAAAsR,EAAA7Q,MAAA4jC,KAAA,EACAvP,EAAA8O,EAAA,eACAiB,EAAApoC,EAAA8D,KAAA6kC,GAIAhB,EAAAxiD,KAAA,CACA6iD,MACAC,MACAC,MACAC,MACAlzB,KACAE,KACAD,KACAxpB,KACA08C,SACAC,SACAO,QAAAl2B,EACAm2B,QAAAd,EACAe,aAAA91B,EACA+1B,mBAAA91B,EACAzO,UAAA,EAAAkjC,EACA3vB,QACA4pB,MAAApB,EAAAoB,MACA2G,aACAjQ,iBAIAhwB,GAAA/J,KAAAqpC,EAAA,SAAAqB,GACA,IAAAJ,EAAAI,EAAAJ,QACAC,EAAAG,EAAAH,QA4BA,GA1BAzxB,EAAA4J,SAAA4nB,GAAAC,IACAzgC,EAAA5C,OACA4C,EAAAsK,UAAAk2B,EACAxgC,EAAAwK,YAAAi2B,EAEAzgC,EAAA0L,cACA1L,EAAA0L,YAAAk1B,EAAAF,cACA1gC,EAAA2L,eAAAi1B,EAAAD,oBAGA3gC,EAAAtD,YAEAsS,EAAAwpB,YACAx4B,EAAAlE,OAAA8kC,EAAAhB,IAAAgB,EAAAf,KACA7/B,EAAArD,OAAAikC,EAAAd,IAAAc,EAAAb,MAGA/wB,EAAAupB,kBACAv4B,EAAAlE,OAAA8kC,EAAA/zB,GAAA+zB,EAAA7zB,IACA/M,EAAArD,OAAAikC,EAAA9zB,GAAA8zB,EAAAt9C,KAGA0c,EAAAlD,SACAkD,EAAAzC,WAGAygC,EAAAplB,QAAA,CAEA5Y,EAAA5C,OACA4C,EAAA6gC,UAAAD,EAAAZ,OAAAY,EAAAX,QACAjgC,EAAA1M,OAAAstC,EAAAxkC,UACA4D,EAAAR,KAAAohC,EAAArH,MAAA4F,EAAApwC,OAAA2sC,EAAA3sC,OACAiR,EAAAqK,UAAAu2B,EAAArH,MAAA2F,EAAAF,EACAh/B,EAAAkwB,aAAA,SACAlwB,EAAAiwB,UAAA2Q,EAAA3Q,UACA,IAAAtgB,EAAAixB,EAAAjxB,MACA3tB,EAAA4+C,EAAAV,WAEA,GAAAjgC,GAAAhjB,QAAA0yB,GACA,QAAAjzB,EAAA,EAA2BA,EAAAizB,EAAA/yB,SAAkBF,EAE7CsjB,EAAAmwB,SAAA,GAAAxgB,EAAAjzB,GAAA,EAAAsF,GACAA,GAAA2d,OAGAK,EAAAmwB,SAAAxgB,EAAA,EAAA3tB,GAGAge,EAAAzC,aAIAu7B,EAAAlgB,QAAA,CAEA,IAAAkoB,EACAC,EACA3kC,EAAA,EACA4kC,EAAAzE,EAAA58B,WAAA,EAEA,GAAAqQ,EACA8wB,EAAAlpC,EAAA8D,MAAA9D,EAAAgE,MAAAhE,EAAA8D,MAAA,EAEAqlC,EAAA,WAAAnuB,EAAAhb,EAAAiE,OAAAmlC,EAAAxE,EAAA3gC,OAAAjE,EAAA+D,IAAAqlC,EAAAxE,EAAA7gC,QACS,CACT,IAAAslC,EAAA,SAAAruB,EACAkuB,EAAAG,EAAArpC,EAAA8D,KAAAslC,EAAAxE,EAAA7gC,IAAA/D,EAAAgE,MAAAolC,EAAAxE,EAAA7gC,IACAolC,EAAAnpC,EAAA+D,KAAA/D,EAAAiE,OAAAjE,EAAA+D,KAAA,EACAS,EAAA6kC,GAAA,GAAA3/C,KAAAoC,GAAA,GAAApC,KAAAoC,GAGAsc,EAAA5C,OACA4C,EAAA6gC,UAAAC,EAAAC,GACA/gC,EAAA1M,OAAA8I,GACA4D,EAAAiwB,UAAA,SACAjwB,EAAAkwB,aAAA,SACAlwB,EAAAqK,UAAAg1B,EAEAr/B,EAAAR,KAAA+8B,EAAAxtC,OACAiR,EAAAmwB,SAAA2I,EAAAC,YAAA,KACA/4B,EAAAzC,UAGA,GAAAiiC,EAAA,CAEA,IAEA3yB,EAAAC,EAAAC,EAAAzpB,EAFA49C,EAAA1B,EACA2B,EAAArrC,GAAAkZ,EAAA1E,UAAAgH,EAAA10B,OAAA,KAGAozB,GACAnD,EAAA4yB,EAAAtkC,EAAAvD,EAAA8D,KAAAwlC,KAAA,EACAp0B,EAAA2yB,EAAAtkC,EAAAvD,EAAAgE,MAAAulC,KAAA,EACAp0B,EAAAzpB,EAAAo7C,IAEA3xB,EAAA0yB,EAAAtkC,EAAAvD,EAAA+D,IAAAulC,KAAA,EACA59C,EAAAm8C,EAAAtkC,EAAAvD,EAAAiE,OAAAslC,KAAA,EACAt0B,EAAAC,EAAA4xB,GAGA1+B,EAAAsK,UAAAk1B,EACAx/B,EAAAwK,YAAA1U,GAAAkZ,EAAAqpB,MAAA,GACAr4B,EAAAtD,YACAsD,EAAAlE,OAAA+Q,EAAAE,GACA/M,EAAArD,OAAAmQ,EAAAxpB,GACA0c,EAAAlD,cAOAskC,GAAA5H,GAAAhiC,OAAA,CAMA6pC,UAAA,WACA,IAAAt8B,EAAAhX,KAAAoN,MAAA4J,KACA,OAAAhX,KAAAiJ,QAAA4Y,SAAA7hB,KAAAiiB,eAAAjL,EAAAu8B,QAAAv8B,EAAAw8B,UAAAx8B,EAAA6K,QAEA6qB,oBAAA,WACA,IAIAt3B,EAJAvL,EAAA7J,KACA6hB,EAAAhY,EAAAypC,YACAzpC,EAAA4pC,SAAA,EACA5pC,EAAA6pC,SAAA7xB,EAAAhzB,OAAA,OAGAc,IAAAka,EAAAZ,QAAAsa,MAAAjwB,MAEA8hB,EAAAyM,EAAAzX,QAAAP,EAAAZ,QAAAsa,MAAAjwB,KACAuW,EAAA4pC,UAAA,IAAAr+B,IAAAvL,EAAA4pC,eAGA9jD,IAAAka,EAAAZ,QAAAsa,MAAA/vB,MAEA4hB,EAAAyM,EAAAzX,QAAAP,EAAAZ,QAAAsa,MAAA/vB,KACAqW,EAAA6pC,UAAA,IAAAt+B,IAAAvL,EAAA6pC,UAGA7pC,EAAAvW,IAAAuuB,EAAAhY,EAAA4pC,UACA5pC,EAAArW,IAAAquB,EAAAhY,EAAA6pC,WAEA7G,WAAA,WACA,IAAAhjC,EAAA7J,KACA6hB,EAAAhY,EAAAypC,YAEAzpC,EAAA0Z,MAAA,IAAA1Z,EAAA4pC,UAAA5pC,EAAA6pC,WAAA7xB,EAAAhzB,OAAA,EAAAgzB,IAAAniB,MAAAmK,EAAA4pC,SAAA5pC,EAAA6pC,SAAA,IAEA5W,iBAAA,SAAAj2B,EAAAoP,GACA,IAAApM,EAAA7J,KACAoN,EAAAvD,EAAAuD,MAEA,OAAAA,EAAA8J,eAAAjB,GAAA8N,WAAA1M,qBAAAxN,EAAAzC,GACAyC,EAAAga,cAAAzW,EAAA4J,KAAAC,SAAAhB,GAAAe,KAAAnQ,IAGAgD,EAAA0Z,MAAA1c,EAAAgD,EAAA4pC,WAGAtwB,iBAAA,SAAAngB,EAAA6D,GACA,IAMA8sC,EANA9pC,EAAA7J,KACAghB,EAAAnX,EAAAZ,QAAA+X,OAEA4yB,EAAArgD,KAAAC,IAAAqW,EAAA6pC,SAAA,EAAA7pC,EAAA4pC,UAAAzyB,EAAA,QASA,QAJArxB,IAAAqT,GAAA,OAAAA,IACA2wC,EAAA9pC,EAAAoY,eAAAjf,EAAAhP,EAAAgP,EAAA/O,QAGAtE,IAAAgkD,QAAAhkD,IAAAqT,GAAAV,MAAAuE,GAAA,CACA,IAAAgb,EAAAhY,EAAAypC,YACAtwC,EAAA2wC,GAAA3wC,EACA,IAAAw1B,EAAA3W,EAAAzX,QAAApH,GACA6D,GAAA,IAAA2xB,IAAA3xB,EAGA,GAAAgD,EAAAoY,eAAA,CACA,IAAA4xB,EAAAhqC,EAAA0D,MAAAqmC,EACAE,EAAAD,GAAAhtC,EAAAgD,EAAA4pC,UAMA,OAJAzyB,IACA8yB,GAAAD,EAAA,GAGAhqC,EAAA8D,KAAAmmC,EAGA,IAAAC,EAAAlqC,EAAA2D,OAAAomC,EACAI,EAAAD,GAAAltC,EAAAgD,EAAA4pC,UAMA,OAJAzyB,IACAgzB,GAAAD,EAAA,GAGAlqC,EAAA+D,IAAAomC,GAEAvwB,gBAAA,SAAA5c,GACA,OAAA7G,KAAAmjB,iBAAAnjB,KAAAujB,MAAA1c,KAAA7G,KAAAyzC,SAAA,OAEAjE,iBAAA,SAAAE,GACA,IAAA7lC,EAAA7J,KACAghB,EAAAnX,EAAAZ,QAAA+X,OAEA4yB,EAAArgD,KAAAC,IAAAqW,EAAAiiC,OAAAj9C,QAAAmyB,EAAA,QACAizB,EAAApqC,EAAAoY,eACAiyB,GAAAD,EAAApqC,EAAA0D,MAAA1D,EAAA2D,QAAAomC,EAaA,OAZAlE,GAAAuE,EAAApqC,EAAA8D,KAAA9D,EAAA+D,IAEAoT,IACA0uB,GAAAwE,EAAA,IAGAxE,GAAA,EACA,EAEAn8C,KAAAwM,MAAA2vC,EAAAwE,IAGArqC,EAAA4pC,UAEAzxB,aAAA,WACA,OAAAhiB,KAAA8N,UAIAqmC,GAzHA,CACAtvB,SAAA,UAyHAwuB,GAAAc,aACA,IAAAjtC,GAAAgL,GAAAhL,KACAG,GAAA6K,GAAA7K,cAgFA+sC,GAAA3I,GAAAhiC,OAAA,CACAoa,cAAA,SAAA7gB,GACA,wBAAAA,GACAA,EAGAyoC,GAAAhsC,UAAAokB,cAAAv0B,KAAA0Q,KAAAgD,IAEAqxC,uBAAA,WACA,IAAAxqC,EAAA7J,KACAinB,EAAApd,EAAAZ,QACAwkC,EAAAxmB,EAAA1D,MAIA,GAAAkqB,EAAAziB,YAAA,CACA,IAAAspB,EAAApiC,GAAAqiC,KAAA1qC,EAAAvW,KACAkhD,EAAAtiC,GAAAqiC,KAAA1qC,EAAArW,KAEA8gD,EAAA,GAAAE,EAAA,EAEA3qC,EAAArW,IAAA,EACS8gD,EAAA,GAAAE,EAAA,IAET3qC,EAAAvW,IAAA,GAIA,IAAAmhD,OAAA9kD,IAAA89C,EAAAn6C,UAAA3D,IAAA89C,EAAAiH,aACAC,OAAAhlD,IAAA89C,EAAAj6C,UAAA7D,IAAA89C,EAAAmH,kBAEAjlD,IAAA89C,EAAAn6C,IACAuW,EAAAvW,IAAAm6C,EAAAn6C,SACO3D,IAAA89C,EAAAiH,eACP,OAAA7qC,EAAAvW,IACAuW,EAAAvW,IAAAm6C,EAAAiH,aAEA7qC,EAAAvW,IAAAC,KAAAD,IAAAuW,EAAAvW,IAAAm6C,EAAAiH,oBAIA/kD,IAAA89C,EAAAj6C,IACAqW,EAAArW,IAAAi6C,EAAAj6C,SACO7D,IAAA89C,EAAAmH,eACP,OAAA/qC,EAAArW,IACAqW,EAAArW,IAAAi6C,EAAAmH,aAEA/qC,EAAArW,IAAAD,KAAAC,IAAAqW,EAAArW,IAAAi6C,EAAAmH,eAIAH,IAAAE,GAKA9qC,EAAAvW,KAAAuW,EAAArW,MACAihD,EACA5qC,EAAArW,IAAAqW,EAAAvW,IAAA,EAEAuW,EAAAvW,IAAAuW,EAAArW,IAAA,GAKAqW,EAAAvW,MAAAuW,EAAArW,MACAqW,EAAArW,MAEAi6C,EAAAziB,aACAnhB,EAAAvW,QAIAuhD,aAAA,WACA,IAIAzE,EAHA3C,EADAztC,KACAiJ,QAAAsa,MACAuxB,EAAArH,EAAAqH,SACAzE,EAAA5C,EAAA4C,cAcA,OAXAyE,EACA1E,EAAA78C,KAAAwhD,KAPA/0C,KAOAxM,IAAAshD,GAAAvhD,KAAAkB,MAPAuL,KAOA1M,IAAAwhD,GAAA,GAEA1E,EATApwC,KASAg1C,oBACA3E,KAAA,IAGAA,IACAD,EAAA78C,KAAAD,IAAA+8C,EAAAD,IAGAA,GAEA4E,kBAAA,WACA,OAAAptC,OAAA2lB,mBAEA0nB,yBAAA/tC,GACA2lC,WAAA,WACA,IAAAhjC,EAAA7J,KACAinB,EAAApd,EAAAZ,QACAwkC,EAAAxmB,EAAA1D,MAKA6sB,EAAAvmC,EAAAgrC,eAEAK,EAAA,CACA9E,SAFAA,EAAA78C,KAAAC,IAAA,EAAA48C,GAGA98C,IAAAm6C,EAAAn6C,IACAE,IAAAi6C,EAAAj6C,IACA2hD,UAAA1H,EAAA0H,UACAL,SAAA5iC,GAAArK,eAAA4lC,EAAA2H,cAAA3H,EAAAqH,WAEAvxB,EAAA1Z,EAAA0Z,MA1LA,SAAA8xB,EAAAC,GACA,IAcAC,EAAAC,EAAAC,EAAAC,EAdAnyB,EAAA,GAKAuxB,EAAAO,EAAAP,SACAa,EAAAb,GAAA,EACAc,EAAAP,EAAAjF,SAAA,EACA98C,EAAA+hD,EAAA/hD,IACAE,EAAA6hD,EAAA7hD,IACA2hD,EAAAE,EAAAF,UACAU,EAAAP,EAAAhiD,IACAwiD,EAAAR,EAAA9hD,IACAuiD,EAAA7jC,GAAA8jC,SAAAF,EAAAD,GAAAD,EAAAD,KAIA,GAAAI,EAbA,OAaA1uC,GAAA/T,IAAA+T,GAAA7T,GACA,OAAAqiD,EAAAC,IAGAJ,EAAAniD,KAAAwhD,KAAAe,EAAAC,GAAAxiD,KAAAkB,MAAAohD,EAAAE,IAEAH,IAEAG,EAAA7jC,GAAA8jC,QAAAN,EAAAK,EAAAH,EAAAD,MAGAb,GAAAztC,GAAA8tC,GAEAI,EAAAhiD,KAAAQ,IAAA,GAAAme,GAAA+jC,eAAAF,KAGAR,EAAAhiD,KAAAQ,IAAA,GAAAohD,GACAY,EAAAxiD,KAAAwhD,KAAAgB,EAAAR,MAGAC,EAAAjiD,KAAAkB,MAAAohD,EAAAE,KACAN,EAAAliD,KAAAwhD,KAAAe,EAAAC,KAEAjB,KAEAztC,GAAA/T,IAAA4e,GAAAgkC,YAAA5iD,EAAAyiD,IAAA,OACAP,EAAAliD,IAGA+T,GAAA7T,IAAA0e,GAAAgkC,YAAA1iD,EAAAuiD,IAAA,OACAN,EAAAjiD,IAIAkiD,GAAAD,EAAAD,GAAAO,EAGAL,EADAxjC,GAAAikC,aAAAT,EAAAniD,KAAAwM,MAAA21C,GAAAK,EAAA,KACAxiD,KAAAwM,MAAA21C,GAEAniD,KAAAwhD,KAAAW,GAGAF,EAAAjiD,KAAAwM,MAAAy1C,EAAAD,KACAE,EAAAliD,KAAAwM,MAAA01C,EAAAF,KACAhyB,EAAAv0B,KAAAqY,GAAA/T,GAAAkiD,EAAAliD,GAEA,QAAA0zB,EAAA,EAAmBA,EAAA0uB,IAAe1uB,EAClCzD,EAAAv0B,KAAAuE,KAAAwM,OAAAy1C,EAAAxuB,EAAA+uB,GAAAR,MAIA,OADAhyB,EAAAv0B,KAAAqY,GAAA7T,GAAAiiD,EAAAjiD,GACA+vB,EAqHA6yB,CAAAlB,EAAArrC,GACAA,EAAAorC,2BAGAprC,EAAArW,IAAA0e,GAAA1e,IAAA+vB,GACA1Z,EAAAvW,IAAA4e,GAAA5e,IAAAiwB,GAEAkqB,EAAAplC,SACAkb,EAAAlb,UACAwB,EAAAmJ,MAAAnJ,EAAArW,IACAqW,EAAAoZ,IAAApZ,EAAAvW,MAEAuW,EAAAmJ,MAAAnJ,EAAAvW,IACAuW,EAAAoZ,IAAApZ,EAAArW,MAGAw5C,qBAAA,WACA,IAAAnjC,EAAA7J,KACA6J,EAAAwsC,eAAAxsC,EAAA0Z,MAAA7jB,QACAmK,EAAAuoC,cAAAvoC,EAAA0Z,MAAAnZ,QAAA,GACAqhC,GAAAhsC,UAAAutC,qBAAA19C,KAAAua,MAGAysC,GAAA,CACAzxB,SAAA,OACAtB,MAAA,CACAvb,SAAAohC,GAAAC,WAAA1+B,SAGA4rC,GAAAnC,GAAA3qC,OAAA,CACAijC,oBAAA,WACA,IAAA7iC,EAAA7J,KACAinB,EAAApd,EAAAZ,QACAmE,EAAAvD,EAAAuD,MACA4J,EAAA5J,EAAA4J,KACAC,EAAAD,EAAAC,SACAgL,EAAApY,EAAAoY,eAIA,SAAAu0B,EAAAjgC,GACA,OAAA0L,EAAA1L,EAAAI,UAAA9M,EAAAzC,GAAAmP,EAAAO,UAAAjN,EAAAzC,GAIAyC,EAAAvW,IAAA,KACAuW,EAAArW,IAAA,KACA,IAAAijD,EAAAxvB,EAAAtE,QAgBA,QAdAhzB,IAAA8mD,GACAvkC,GAAA/J,KAAA8O,EAAA,SAAAR,EAAAR,GACA,IAAAwgC,EAAA,CAIA,IAAAlgC,EAAAnJ,EAAA8J,eAAAjB,GAEA7I,EAAAyV,iBAAA5M,IAAAugC,EAAAjgC,SAAA5mB,IAAA4mB,EAAA6K,QACAq1B,GAAA,MAKAxvB,EAAAtE,SAAA8zB,EAAA,CACA,IAAAC,EAAA,GACAxkC,GAAA/J,KAAA8O,EAAA,SAAAR,EAAAR,GACA,IAAAM,EAAAnJ,EAAA8J,eAAAjB,GACA5mB,EAAA,CAAAknB,EAAAvQ,UACArW,IAAAs3B,EAAAtE,cAAAhzB,IAAA4mB,EAAA6K,MAAAnL,EAAA,GAAAM,EAAA6K,OAAA7xB,KAAA,UAEAI,IAAA+mD,EAAArnD,KACAqnD,EAAArnD,GAAA,CACAsnD,eAAA,GACAC,eAAA,KAKA,IAAAD,EAAAD,EAAArnD,GAAAsnD,eACAC,EAAAF,EAAArnD,GAAAunD,eAEAxpC,EAAAyV,iBAAA5M,IAAAugC,EAAAjgC,IACArE,GAAA/J,KAAAsO,EAAAO,KAAA,SAAAu4B,EAAA1oC,GACA,IAAA7D,GAAA6G,EAAAga,cAAA0rB,GAEAjtC,MAAAU,IAAAuT,EAAAS,KAAAnQ,GAAA2L,SAIAmkC,EAAA9vC,GAAA8vC,EAAA9vC,IAAA,EACA+vC,EAAA/vC,GAAA+vC,EAAA/vC,IAAA,EAEAogB,EAAA4vB,eACAF,EAAA9vC,GAAA,IACe7D,EAAA,EACf4zC,EAAA/vC,IAAA7D,EAEA2zC,EAAA9vC,IAAA7D,OAKAkP,GAAA/J,KAAAuuC,EAAA,SAAAI,GACA,IAAA12C,EAAA02C,EAAAH,eAAAnzC,OAAAszC,EAAAF,gBACAG,EAAA7kC,GAAA5e,IAAA8M,GACA42C,EAAA9kC,GAAA1e,IAAA4M,GACAyJ,EAAAvW,IAAA,OAAAuW,EAAAvW,IAAAyjD,EAAAxjD,KAAAD,IAAAuW,EAAAvW,IAAAyjD,GACAltC,EAAArW,IAAA,OAAAqW,EAAArW,IAAAwjD,EAAAzjD,KAAAC,IAAAqW,EAAArW,IAAAwjD,UAGA9kC,GAAA/J,KAAA8O,EAAA,SAAAR,EAAAR,GACA,IAAAM,EAAAnJ,EAAA8J,eAAAjB,GAEA7I,EAAAyV,iBAAA5M,IAAAugC,EAAAjgC,IACArE,GAAA/J,KAAAsO,EAAAO,KAAA,SAAAu4B,EAAA1oC,GACA,IAAA7D,GAAA6G,EAAAga,cAAA0rB,GAEAjtC,MAAAU,IAAAuT,EAAAS,KAAAnQ,GAAA2L,SAIA,OAAA3I,EAAAvW,IACAuW,EAAAvW,IAAA0P,EACeA,EAAA6G,EAAAvW,MACfuW,EAAAvW,IAAA0P,GAGA,OAAA6G,EAAArW,IACAqW,EAAArW,IAAAwP,EACeA,EAAA6G,EAAArW,MACfqW,EAAArW,IAAAwP,QAOA6G,EAAAvW,IAAAmU,SAAAoC,EAAAvW,OAAAgP,MAAAuH,EAAAvW,KAAAuW,EAAAvW,IApGA,EAqGAuW,EAAArW,IAAAiU,SAAAoC,EAAArW,OAAA8O,MAAAuH,EAAArW,KAAAqW,EAAArW,IApGA,EAsGAwM,KAAAq0C,0BAGAW,kBAAA,WACA,IACArH,EAEA,OAHA3tC,KAGAiiB,eACA1uB,KAAAwhD,KAJA/0C,KAIAuN,MAAA,KAGAogC,EAAAz7B,GAAAjJ,QAAAoI,WAPArR,KAOAiJ,QAAAsa,OACAhwB,KAAAwhD,KARA/0C,KAQAwN,OAAAmgC,EAAA/7B,cAGAqjC,yBAAA,WACAj1C,KAAAiiB,gBAEAjiB,KAAAujB,MAAAlb,WAGAy0B,iBAAA,SAAAj2B,EAAAoP,GACA,OAAAjW,KAAA6jB,cAAA7jB,KAAAoN,MAAA4J,KAAAC,SAAAhB,GAAAe,KAAAnQ,KAGAsc,iBAAA,SAAAngB,GAGA,IAAA6G,EAAA7J,KACAgT,EAAAnJ,EAAAmJ,MACAiX,GAAApgB,EAAAga,cAAA7gB,GAEAghB,EAAAna,EAAAoZ,IAAAjQ,EAQA,OANAnJ,EAAAoY,eACApY,EAAA8D,KAAA9D,EAAA0D,MAAAyW,GAAAiG,EAAAjX,GAEAnJ,EAAAiE,OAAAjE,EAAA2D,OAAAwW,GAAAiG,EAAAjX,IAKAw8B,iBAAA,SAAAE,GACA,IAAA7lC,EAAA7J,KACAiiB,EAAApY,EAAAoY,eACAg1B,EAAAh1B,EAAApY,EAAA0D,MAAA1D,EAAA2D,OACAwT,GAAAiB,EAAAytB,EAAA7lC,EAAA8D,KAAA9D,EAAAiE,OAAA4hC,GAAAuH,EACA,OAAAptC,EAAAmJ,OAAAnJ,EAAAoZ,IAAApZ,EAAAmJ,OAAAgO,GAEAyC,gBAAA,SAAA5c,GACA,OAAA7G,KAAAmjB,iBAAAnjB,KAAAq2C,eAAAxvC,OAIAqwC,GAAAZ,GACAC,GAAApC,UAAA+C,GACA,IAAAC,GAAAjlC,GAAArK,eA6CAuvC,GAAA,CACAvyB,SAAA,OAEAtB,MAAA,CACAvb,SAAAohC,GAAAC,WAAAU,cAIA,SAAAsN,GAAAr0C,EAAA8E,GACA,OAAAoK,GAAAzK,SAAAzE,OAAA,EAAAA,EAAA8E,EAGA,IAAAwvC,GAAA7L,GAAAhiC,OAAA,CACAijC,oBAAA,WACA,IAAA7iC,EAAA7J,KACAinB,EAAApd,EAAAZ,QACAmE,EAAAvD,EAAAuD,MACA4J,EAAA5J,EAAA4J,KACAC,EAAAD,EAAAC,SACAgL,EAAApY,EAAAoY,eAEA,SAAAu0B,EAAAjgC,GACA,OAAA0L,EAAA1L,EAAAI,UAAA9M,EAAAzC,GAAAmP,EAAAO,UAAAjN,EAAAzC,GAIAyC,EAAAvW,IAAA,KACAuW,EAAArW,IAAA,KACAqW,EAAA0tC,WAAA,KACA,IAAAd,EAAAxvB,EAAAtE,QAgBA,QAdAhzB,IAAA8mD,GACAvkC,GAAA/J,KAAA8O,EAAA,SAAAR,EAAAR,GACA,IAAAwgC,EAAA,CAIA,IAAAlgC,EAAAnJ,EAAA8J,eAAAjB,GAEA7I,EAAAyV,iBAAA5M,IAAAugC,EAAAjgC,SAAA5mB,IAAA4mB,EAAA6K,QACAq1B,GAAA,MAKAxvB,EAAAtE,SAAA8zB,EAAA,CACA,IAAAC,EAAA,GACAxkC,GAAA/J,KAAA8O,EAAA,SAAAR,EAAAR,GACA,IAAAM,EAAAnJ,EAAA8J,eAAAjB,GACA5mB,EAAA,CAAAknB,EAAAvQ,UACArW,IAAAs3B,EAAAtE,cAAAhzB,IAAA4mB,EAAA6K,MAAAnL,EAAA,GAAAM,EAAA6K,OAAA7xB,KAAA,KAEA6d,EAAAyV,iBAAA5M,IAAAugC,EAAAjgC,UACA5mB,IAAA+mD,EAAArnD,KACAqnD,EAAArnD,GAAA,IAGA6iB,GAAA/J,KAAAsO,EAAAO,KAAA,SAAAu4B,EAAA1oC,GACA,IAAAzG,EAAAs2C,EAAArnD,GACA2T,GAAA6G,EAAAga,cAAA0rB,GAEAjtC,MAAAU,IAAAuT,EAAAS,KAAAnQ,GAAA2L,QAAAxP,EAAA,IAIA5C,EAAAyG,GAAAzG,EAAAyG,IAAA,EACAzG,EAAAyG,IAAA7D,QAIAkP,GAAA/J,KAAAuuC,EAAA,SAAAI,GACA,GAAAA,EAAAjoD,OAAA,GACA,IAAAkoD,EAAA7kC,GAAA5e,IAAAwjD,GACAE,EAAA9kC,GAAA1e,IAAAsjD,GACAjtC,EAAAvW,IAAA,OAAAuW,EAAAvW,IAAAyjD,EAAAxjD,KAAAD,IAAAuW,EAAAvW,IAAAyjD,GACAltC,EAAArW,IAAA,OAAAqW,EAAArW,IAAAwjD,EAAAzjD,KAAAC,IAAAqW,EAAArW,IAAAwjD,WAIA9kC,GAAA/J,KAAA8O,EAAA,SAAAR,EAAAR,GACA,IAAAM,EAAAnJ,EAAA8J,eAAAjB,GAEA7I,EAAAyV,iBAAA5M,IAAAugC,EAAAjgC,IACArE,GAAA/J,KAAAsO,EAAAO,KAAA,SAAAu4B,EAAA1oC,GACA,IAAA7D,GAAA6G,EAAAga,cAAA0rB,GAEAjtC,MAAAU,IAAAuT,EAAAS,KAAAnQ,GAAA2L,QAAAxP,EAAA,IAIA,OAAA6G,EAAAvW,IACAuW,EAAAvW,IAAA0P,EACeA,EAAA6G,EAAAvW,MACfuW,EAAAvW,IAAA0P,GAGA,OAAA6G,EAAArW,IACAqW,EAAArW,IAAAwP,EACeA,EAAA6G,EAAArW,MACfqW,EAAArW,IAAAwP,GAGA,IAAAA,IAAA,OAAA6G,EAAA0tC,YAAAv0C,EAAA6G,EAAA0tC,cACA1tC,EAAA0tC,WAAAv0C,QAQAhD,KAAAq0C,0BAEAA,uBAAA,WACA,IAAAxqC,EAAA7J,KACAytC,EAAA5jC,EAAAZ,QAAAsa,MAGA1Z,EAAAvW,IAAA+jD,GAAA5J,EAAAn6C,IAAAuW,EAAAvW,KACAuW,EAAArW,IAAA6jD,GAAA5J,EAAAj6C,IAAAqW,EAAArW,KAEAqW,EAAAvW,MAAAuW,EAAArW,MACA,IAAAqW,EAAAvW,KAAA,OAAAuW,EAAAvW,KACAuW,EAAAvW,IAAAC,KAAAQ,IAAA,GAAAR,KAAAkB,MAAAyd,GAAAs3B,MAAA3/B,EAAAvW,MAAA,GACAuW,EAAArW,IAAAD,KAAAQ,IAAA,GAAAR,KAAAkB,MAAAyd,GAAAs3B,MAAA3/B,EAAArW,MAAA,KAEAqW,EAAAvW,IAVA,EAWAuW,EAAArW,IAVA,KAcA,OAAAqW,EAAAvW,MACAuW,EAAAvW,IAAAC,KAAAQ,IAAA,GAAAR,KAAAkB,MAAAyd,GAAAs3B,MAAA3/B,EAAArW,MAAA,IAGA,OAAAqW,EAAArW,MACAqW,EAAArW,IAAA,IAAAqW,EAAAvW,IAAAC,KAAAQ,IAAA,GAAAR,KAAAkB,MAAAyd,GAAAs3B,MAAA3/B,EAAAvW,MAAA,GAnBA,IAsBA,OAAAuW,EAAA0tC,aACA1tC,EAAAvW,IAAA,EACAuW,EAAA0tC,WAAA1tC,EAAAvW,IACSuW,EAAArW,IAAA,EACTqW,EAAA0tC,WAAAhkD,KAAAQ,IAAA,GAAAR,KAAAkB,MAAAyd,GAAAs3B,MAAA3/B,EAAArW,OAEAqW,EAAA0tC,WA7BA,IAiCA1K,WAAA,WACA,IAAAhjC,EAAA7J,KACAytC,EAAA5jC,EAAAZ,QAAAsa,MACAlb,GAAAwB,EAAAoY,eACAozB,EAAA,CACA/hD,IAAA+jD,GAAA5J,EAAAn6C,KACAE,IAAA6jD,GAAA5J,EAAAj6C,MAEA+vB,EAAA1Z,EAAA0Z,MAlMA,SAAA8xB,EAAAC,GACA,IAIAkC,EAAAC,EAJAl0B,EAAA,GACAm0B,EAAAP,GAAA9B,EAAA/hD,IAAAC,KAAAQ,IAAA,GAAAR,KAAAkB,MAAAyd,GAAAs3B,MAAA8L,EAAAhiD,QACAqkD,EAAApkD,KAAAkB,MAAAyd,GAAAs3B,MAAA8L,EAAA9hD,MACAokD,EAAArkD,KAAAwhD,KAAAO,EAAA9hD,IAAAD,KAAAQ,IAAA,GAAA4jD,IAGA,IAAAD,GACAF,EAAAjkD,KAAAkB,MAAAyd,GAAAs3B,MAAA8L,EAAAiC,aACAE,EAAAlkD,KAAAkB,MAAA6gD,EAAAiC,WAAAhkD,KAAAQ,IAAA,GAAAyjD,IACAj0B,EAAAv0B,KAAA0oD,GACAA,EAAAD,EAAAlkD,KAAAQ,IAAA,GAAAyjD,KAEAA,EAAAjkD,KAAAkB,MAAAyd,GAAAs3B,MAAAkO,IACAD,EAAAlkD,KAAAkB,MAAAijD,EAAAnkD,KAAAQ,IAAA,GAAAyjD,KAGA,IAAArC,EAAAqC,EAAA,EAAAjkD,KAAAQ,IAAA,GAAAR,KAAA2qB,IAAAs5B,IAAA,EAEA,GACAj0B,EAAAv0B,KAAA0oD,GAGA,OAFAD,IAGAA,EAAA,EAEAtC,IADAqC,GACA,IAAArC,GAGAuC,EAAAnkD,KAAAwM,MAAA03C,EAAAlkD,KAAAQ,IAAA,GAAAyjD,GAAArC,WACKqC,EAAAG,GAAAH,IAAAG,GAAAF,EAAAG,GAEL,IAAAC,EAAAV,GAAA9B,EAAA7hD,IAAAkkD,GAEA,OADAn0B,EAAAv0B,KAAA6oD,GACAt0B,EAgKAu0B,CAAAzC,EAAAxrC,GAGAA,EAAArW,IAAA0e,GAAA1e,IAAA+vB,GACA1Z,EAAAvW,IAAA4e,GAAA5e,IAAAiwB,GAEAkqB,EAAAplC,SACAA,KACAwB,EAAAmJ,MAAAnJ,EAAArW,IACAqW,EAAAoZ,IAAApZ,EAAAvW,MAEAuW,EAAAmJ,MAAAnJ,EAAAvW,IACAuW,EAAAoZ,IAAApZ,EAAArW,KAGA6U,GACAkb,EAAAlb,WAGA2kC,qBAAA,WACAhtC,KAAA+3C,WAAA/3C,KAAAujB,MAAA7jB,QACA+rC,GAAAhsC,UAAAutC,qBAAA19C,KAAA0Q,OAGA88B,iBAAA,SAAAj2B,EAAAoP,GACA,OAAAjW,KAAA6jB,cAAA7jB,KAAAoN,MAAA4J,KAAAC,SAAAhB,GAAAe,KAAAnQ,KAEA4c,gBAAA,SAAA5c,GACA,OAAA7G,KAAAmjB,iBAAAnjB,KAAA+3C,WAAAlxC,KASAmxC,mBAAA,SAAAh1C,GACA,IAAAw0C,EAAAjkD,KAAAkB,MAAAyd,GAAAs3B,MAAAxmC,IACAy0C,EAAAlkD,KAAAkB,MAAAuO,EAAAzP,KAAAQ,IAAA,GAAAyjD,IACA,OAAAC,EAAAlkD,KAAAQ,IAAA,GAAAyjD,IAEAr0B,iBAAA,SAAAngB,GACA,IAQAi0C,EAAAvH,EAAA18B,EAAAiQ,EAAAsxB,EARA1qC,EAAA7J,KACAytC,EAAA5jC,EAAAZ,QAAAsa,MACAlb,EAAAolC,EAAAplC,QACAmhC,EAAAt3B,GAAAs3B,MAEAyO,EAAApuC,EAAAmuC,mBAAAnuC,EAAA0tC,YAEAv2B,EAAA,EAuCA,OArCAhe,GAAA6G,EAAAga,cAAA7gB,GAEAqF,GACA2K,EAAAnJ,EAAAoZ,IACAA,EAAApZ,EAAAmJ,MACAuhC,GAAA,IAEAvhC,EAAAnJ,EAAAmJ,MACAiQ,EAAApZ,EAAAoZ,IACAsxB,EAAA,GAGA1qC,EAAAoY,gBACAg1B,EAAAptC,EAAA0D,MACAmiC,EAAArnC,EAAAwB,EAAAgE,MAAAhE,EAAA8D,OAEAspC,EAAAptC,EAAA2D,OACA+mC,IAAA,EAEA7E,EAAArnC,EAAAwB,EAAA+D,IAAA/D,EAAAiE,QAGA9K,IAAAgQ,IACA,IAAAA,IAEAgO,EAAAm2B,GAAA1J,EAAAj8B,SAAAR,GAAAO,OAAAX,iBACAqmC,GAAAj2B,EACAhO,EAAAilC,GAGA,IAAAj1C,IACAge,GAAAi2B,GAAAzN,EAAAvmB,GAAAumB,EAAAx2B,KAAAw2B,EAAAxmC,GAAAwmC,EAAAx2B,KAGA08B,GAAA6E,EAAAvzB,GAGA0uB,GAEAF,iBAAA,SAAAE,GACA,IAOAuH,EAAAjkC,EAAAiQ,EAAAjgB,EAPA6G,EAAA7J,KACAytC,EAAA5jC,EAAAZ,QAAAsa,MACAlb,EAAAolC,EAAAplC,QACAmhC,EAAAt3B,GAAAs3B,MAEAyO,EAAApuC,EAAAmuC,mBAAAnuC,EAAA0tC,YAoBA,GAhBAlvC,GACA2K,EAAAnJ,EAAAoZ,IACAA,EAAApZ,EAAAmJ,QAEAA,EAAAnJ,EAAAmJ,MACAiQ,EAAApZ,EAAAoZ,KAGApZ,EAAAoY,gBACAg1B,EAAAptC,EAAA0D,MACAvK,EAAAqF,EAAAwB,EAAAgE,MAAA6hC,IAAA7lC,EAAA8D,OAEAspC,EAAAptC,EAAA2D,OACAxK,EAAAqF,EAAAqnC,EAAA7lC,EAAA+D,IAAA/D,EAAAiE,OAAA4hC,GAGA1sC,IAAAgQ,EAAA,CACA,OAAAA,EAAA,CAEA,IAAAgO,EAAAm2B,GAAA1J,EAAAj8B,SAAAR,GAAAO,OAAAX,iBACA5N,GAAAge,EACAi2B,GAAAj2B,EACAhO,EAAAilC,EAGAj1C,GAAAwmC,EAAAvmB,GAAAumB,EAAAx2B,GACAhQ,GAAAi0C,EACAj0C,EAAAzP,KAAAQ,IAAA,GAAAy1C,EAAAx2B,GAAAhQ,GAGA,OAAAA,KAIAk1C,GAAAd,GACAE,GAAAnD,UAAA+D,GACA,IAAAC,GAAAjmC,GAAArK,eACAuwC,GAAAlmC,GAAAnK,sBACAswC,GAAAnmC,GAAAjJ,QAAA8I,QACAumC,GAAA,CACAztB,SAAA,EAEA0tB,SAAA,EACA1zB,SAAA,YACA+F,WAAA,CACAC,SAAA,EACAyf,MAAA,qBACA/tB,UAAA,EACAM,WAAA,GACAC,iBAAA,GAEAmE,UAAA,CACA6J,UAAA,GAGAvH,MAAA,CAEAi1B,mBAAA,EAEAC,cAAA,yBAEAC,iBAAA,EAEAC,iBAAA,EACA3wC,SAAAohC,GAAAC,WAAA1+B,QAEAogB,YAAA,CAEAF,SAAA,EAEArZ,SAAA,GAEAxJ,SAAA,SAAA4Z,GACA,OAAAA,KAKA,SAAAg3B,GAAAv2C,GACA,IAAA4kB,EAAA5kB,EAAA4G,QACA,OAAAge,EAAA2D,WAAAC,SAAA5D,EAAA8D,YAAAF,QAAAxoB,EAAA+K,MAAA4J,KAAA6K,OAAAhzB,OAAA,EAGA,SAAAgqD,GAAA5xB,GACA,IAAAwmB,EAAAxmB,EAAA1D,MAEA,OAAAkqB,EAAA5iB,SAAA5D,EAAA4D,QACAstB,GAAA1K,EAAAj8B,SAAAR,GAAAO,OAAAX,iBAAA,EAAA68B,EAAAiL,iBAGA,EAiBA,SAAAI,GAAA19B,EAAAwc,EAAAppB,EAAAlb,EAAAE,GACA,OAAA4nB,IAAA9nB,GAAA8nB,IAAA5nB,EACA,CACAwf,MAAA4kB,EAAAppB,EAAA,EACAyU,IAAA2U,EAAAppB,EAAA,GAEK4M,EAAA9nB,GAAA8nB,EAAA5nB,EACL,CACAwf,MAAA4kB,EAAAppB,EACAyU,IAAA2U,GAIA,CACA5kB,MAAA4kB,EACA3U,IAAA2U,EAAAppB,GAoFA,SAAAuqC,GAAA39B,GACA,WAAAA,GAAA,MAAAA,EACA,SACKA,EAAA,IACL,OAGA,QAGA,SAAAgnB,GAAA/0B,EAAA2Y,EAAAnB,EAAAjT,GACA,IACAjjB,EAAAga,EADA1U,EAAA4wB,EAAA5wB,EAAA2d,EAAA,EAGA,GAAAM,GAAAhjB,QAAA82B,GACA,IAAAr3B,EAAA,EAAAga,EAAAqd,EAAAn3B,OAAqCF,EAAAga,IAAUha,EAC/C0e,EAAA+0B,SAAApc,EAAAr3B,GAAAk2B,EAAA7wB,EAAAC,GACAA,GAAA2d,OAGAvE,EAAA+0B,SAAApc,EAAAnB,EAAA7wB,EAAAC,GAIA,SAAA+kD,GAAA59B,EAAA69B,EAAAp0B,GACA,KAAAzJ,GAAA,MAAAA,EACAyJ,EAAA5wB,GAAAglD,EAAAtoD,EAAA,GACKyqB,EAAA,KAAAA,EAAA,MACLyJ,EAAA5wB,GAAAglD,EAAAtoD,GAkGA,SAAAuoD,GAAAC,GACA,OAAAjnC,GAAAuB,SAAA0lC,KAAA,EAGA,IAAAC,GAAAhF,GAAA3qC,OAAA,CACA8iC,cAAA,WACA,IAAA1iC,EAAA7J,KAEA6J,EAAA0D,MAAA1D,EAAAmiC,SACAniC,EAAA2D,OAAA3D,EAAAoiC,UACApiC,EAAA8hC,WAAAkN,GAAAhvC,EAAAZ,SAAA,EACAY,EAAA6hB,QAAAn4B,KAAAkB,MAAAoV,EAAA0D,MAAA,GACA1D,EAAA8hB,QAAAp4B,KAAAkB,OAAAoV,EAAA2D,OAAA3D,EAAA8hC,YAAA,GACA9hC,EAAAwvC,YAAA9lD,KAAAD,IAAAuW,EAAA2D,OAAA3D,EAAA8hC,WAAA9hC,EAAA0D,OAAA,GAEAm/B,oBAAA,WACA,IAAA7iC,EAAA7J,KACAoN,EAAAvD,EAAAuD,MACA9Z,EAAAsU,OAAA2lB,kBACA/5B,EAAAoU,OAAA0xC,kBACApnC,GAAA/J,KAAAiF,EAAA4J,KAAAC,SAAA,SAAAR,EAAAR,GACA,GAAA7I,EAAAyV,iBAAA5M,GAAA,CACA,IAAAM,EAAAnJ,EAAA8J,eAAAjB,GACA/D,GAAA/J,KAAAsO,EAAAO,KAAA,SAAAu4B,EAAA1oC,GACA,IAAA7D,GAAA6G,EAAAga,cAAA0rB,GAEAjtC,MAAAU,IAAAuT,EAAAS,KAAAnQ,GAAA2L,SAIAlf,EAAAC,KAAAD,IAAA0P,EAAA1P,GACAE,EAAAD,KAAAC,IAAAwP,EAAAxP,SAIAqW,EAAAvW,QAAAsU,OAAA2lB,kBAAA,EAAAj6B,EACAuW,EAAArW,QAAAoU,OAAA0xC,kBAAA,EAAA9lD,EAEAqW,EAAAwqC,0BAGAW,kBAAA,WACA,OAAAzhD,KAAAwhD,KAAA/0C,KAAAq5C,YAAAR,GAAA74C,KAAAiJ,WAEA+jC,qBAAA,WACA,IAAAnjC,EAAA7J,KACAo0C,GAAA30C,UAAAutC,qBAAA19C,KAAAua,GAEAA,EAAAkhB,YAAAlhB,EAAAuD,MAAA4J,KAAA6K,OAAA/Y,IAAAe,EAAAZ,QAAA8hB,YAAA/iB,SAAA6B,IAEAizB,iBAAA,SAAAj2B,EAAAoP,GACA,OAAAjW,KAAA6jB,cAAA7jB,KAAAoN,MAAA4J,KAAAC,SAAAhB,GAAAe,KAAAnQ,KAEAymC,IAAA,WACA,IACArmB,EADAjnB,KACAiJ,QAEAge,EAAA4D,SAAA5D,EAAA8D,YAAAF,QAnQA,SAAAxoB,GA0BA,IAWA1T,EAAAsqD,EAAA7sB,EAXAmtB,EAAArnC,GAAAjJ,QAAAoI,WAAAhP,EAAA4G,QAAA8hB,aAIAyuB,EAAA,CACA3oD,EAAA,EACAsC,EAAAkP,EAAAkL,MACA1Y,EAAA,EACAxB,EAAAgP,EAAAmL,OAAAnL,EAAAspC,YAEA8N,EAAA,GAEAp3C,EAAAgL,IAAAoE,KAAA8nC,EAAAv4C,OACAqB,EAAAq3C,iBAAA,GACA,IA7EArsC,EAAAuE,EAAAgQ,EA6EA+3B,EAAAf,GAAAv2C,GAEA,IAAA1T,EAAA,EAAeA,EAAAgrD,EAAgBhrD,IAAA,CAC/By9B,EAAA/pB,EAAAu3C,iBAAAjrD,EAAA0T,EAAAg3C,YAAA,GAhFAhsC,EAiFAhL,EAAAgL,IAjFAuE,EAiFA2nC,EAAA3nC,WAjFAgQ,EAiFAvf,EAAA0oB,YAAAp8B,IAAA,GAAAsqD,EAhFA/mC,GAAAhjB,QAAA0yB,GACA,CACAluB,EAAAwe,GAAAm4B,YAAAh9B,IAAAoE,KAAAmQ,GACAjxB,EAAAixB,EAAA/yB,OAAA+iB,GAIA,CACAle,EAAA2Z,EAAAqzB,YAAA9e,GAAArU,MACA5c,EAAAihB,GAwEAvP,EAAAq3C,iBAAA/qD,GAAAsqD,EAEA,IAAAhL,EAAA5rC,EAAAw3C,cAAAlrD,GACAysB,EAAAlJ,GAAA4nC,UAAA7L,GAAA,IACA8L,EAAAjB,GAAA19B,EAAAgR,EAAAp4B,EAAAilD,EAAAvlD,EAAA,OACAsmD,EAAAlB,GAAA19B,EAAAgR,EAAAn4B,EAAAglD,EAAAtoD,EAAA,QAEAopD,EAAA/mC,MAAAwmC,EAAA3oD,IACA2oD,EAAA3oD,EAAAkpD,EAAA/mC,MACAymC,EAAA5oD,EAAAo9C,GAGA8L,EAAA92B,IAAAu2B,EAAArmD,IACAqmD,EAAArmD,EAAA4mD,EAAA92B,IACAw2B,EAAAtmD,EAAA86C,GAGA+L,EAAAhnC,MAAAwmC,EAAA3kD,IACA2kD,EAAA3kD,EAAAmlD,EAAAhnC,MACAymC,EAAA5kD,EAAAo5C,GAGA+L,EAAA/2B,IAAAu2B,EAAAnmD,IACAmmD,EAAAnmD,EAAA2mD,EAAA/2B,IACAw2B,EAAApmD,EAAA46C,GAIA5rC,EAAA43C,cAAA53C,EAAAg3C,YAAAG,EAAAC,GA2LAS,CAJAl6C,WAMAm6C,eAAA,UAQAF,cAAA,SAAAG,EAAAZ,EAAAC,GACA,IAAA5vC,EAAA7J,KACAq6C,EAAAb,EAAA3oD,EAAA0C,KAAAwC,IAAA0jD,EAAA5oD,GACAypD,EAAA/mD,KAAAC,IAAAgmD,EAAArmD,EAAA0W,EAAA0D,MAAA,GAAAha,KAAAwC,IAAA0jD,EAAAtmD,GACAonD,GAAAf,EAAA3kD,EAAAtB,KAAAuC,IAAA2jD,EAAA5kD,GACA2lD,GAAAjnD,KAAAC,IAAAgmD,EAAAnmD,GAAAwW,EAAA2D,OAAA3D,EAAA8hC,YAAA,GAAAp4C,KAAAuC,IAAA2jD,EAAApmD,GACAgnD,EAAAnB,GAAAmB,GACAC,EAAApB,GAAAoB,GACAC,EAAArB,GAAAqB,GACAC,EAAAtB,GAAAsB,GACA3wC,EAAAwvC,YAAA9lD,KAAAD,IAAAC,KAAAkB,MAAA2lD,GAAAC,EAAAC,GAAA,GAAA/mD,KAAAkB,MAAA2lD,GAAAG,EAAAC,GAAA,IACA3wC,EAAAswC,eAAAE,EAAAC,EAAAC,EAAAC,IAEAL,eAAA,SAAAM,EAAAC,EAAAC,EAAAC,GACA,IAAA/wC,EAAA7J,KACA66C,EAAAhxC,EAAA0D,MAAAmtC,EAAA7wC,EAAAwvC,YACAyB,EAAAL,EAAA5wC,EAAAwvC,YACA0B,EAAAJ,EAAA9wC,EAAAwvC,YACA2B,EAAAnxC,EAAA2D,OAAA3D,EAAA8hC,WAAAiP,EAAA/wC,EAAAwvC,YACAxvC,EAAA6hB,QAAAn4B,KAAAkB,OAAAqmD,EAAAD,GAAA,EAAAhxC,EAAA8D,MACA9D,EAAA8hB,QAAAp4B,KAAAkB,OAAAsmD,EAAAC,GAAA,EAAAnxC,EAAA+D,IAAA/D,EAAA8hC,aAEAkO,cAAA,SAAAhzC,GACA,IAAAo0C,EAAA,EAAA1nD,KAAAoC,GAAAijD,GAAA54C,MACAsb,EAAAtb,KAAAoN,MAAAnE,SAAAjJ,KAAAoN,MAAAnE,QAAAqS,WAAAtb,KAAAoN,MAAAnE,QAAAqS,WAAA,EACA4/B,EAAA5/B,EAAA/nB,KAAAoC,GAAA,MAEA,OAAAkR,EAAAo0C,EAAAC,GAEArvB,8BAAA,SAAA7oB,GACA,IAAA6G,EAAA7J,KAEA,UAAAgD,EACA,SAIA,IAAAm4C,EAAAtxC,EAAAwvC,aAAAxvC,EAAArW,IAAAqW,EAAAvW,KAEA,OAAAuW,EAAAZ,QAAAsa,MAAAlb,SACAwB,EAAArW,IAAAwP,GAAAm4C,GAGAn4C,EAAA6G,EAAAvW,KAAA6nD,GAEAvB,iBAAA,SAAA/yC,EAAAu0C,GACA,IACAC,EADAr7C,KACA65C,cAAAhzC,GAAAtT,KAAAoC,GAAA,EACA,OACA3B,EAAAT,KAAAuC,IAAAulD,GAAAD,EAHAp7C,KAGA0rB,QACAz3B,EAAAV,KAAAwC,IAAAslD,GAAAD,EAJAp7C,KAIA2rB,UAGAU,yBAAA,SAAAxlB,EAAA7D,GACA,OAAAhD,KAAA45C,iBAAA/yC,EAAA7G,KAAA6rB,8BAAA7oB,KAEAs4C,gBAAA,WACA,IACAhoD,EADA0M,KACA1M,IACAE,EAFAwM,KAEAxM,IACA,OAHAwM,KAGAqsB,yBAAA,EAHArsB,KAGAgrB,YAAA,EAAA13B,EAAA,GAAAE,EAAA,EAAAA,EAAAF,EAAA,GAAAE,EAAA,EAAAF,EAAA,IAEA2lB,KAAA,WACA,IAAApP,EAAA7J,KACAinB,EAAApd,EAAAZ,QACAmlC,EAAAnnB,EAAAhG,UACAwsB,EAAAxmB,EAAA1D,MAEA,GAAA0D,EAAA4D,QAAA,CACA,IAAAxd,EAAAxD,EAAAwD,IACAiO,EAAAtb,KAAA65C,cAAA,GAEAlM,EAAAz7B,GAAAjJ,QAAAoI,WAAAo8B,IAEAxmB,EAAA2D,WAAAC,SAAA5D,EAAA8D,YAAAF,UA5OA,SAAAxoB,GACA,IAAAgL,EAAAhL,EAAAgL,IACA4Z,EAAA5kB,EAAA4G,QACAsyC,EAAAt0B,EAAA2D,WACAwjB,EAAAnnB,EAAAhG,UACAu6B,EAAAv0B,EAAA8D,YACAxO,EAAA47B,GAAAoD,EAAAh/B,UAAA6xB,EAAA7xB,WACAq1B,EAAAuG,GAAAoD,EAAAjR,MAAA8D,EAAA9D,OACAmR,EAAA5C,GAAA5xB,GACA5Z,EAAAgC,OACAhC,EAAAkP,YACAlP,EAAAoP,YAAAm1B,EAEAvkC,EAAAsQ,cACAtQ,EAAAsQ,YAAA06B,GAAA,CAAAkD,EAAA1+B,WAAAuxB,EAAAvxB,WAAA,MACAxP,EAAAuQ,eAAAy6B,GAAA,CAAAkD,EAAAz+B,iBAAAsxB,EAAAtxB,iBAAA,KAGA,IAAA4+B,EAAAr5C,EAAAwpB,8BAAA5E,EAAA1D,MAAAlb,QAAAhG,EAAA/O,IAAA+O,EAAA7O,KAEA+lD,EAAArnC,GAAAjJ,QAAAoI,WAAAmqC,GAEAnuC,EAAAoE,KAAA8nC,EAAAv4C,OACAqM,EAAA80B,aAAA,SAEA,QAAAxzC,EAAAiqD,GAAAv2C,GAAA,EAA0C1T,GAAA,EAAQA,IAAA,CAClD,GAAA4sD,EAAA1wB,SAAAtO,GAAAq1B,EAAA,CACA,IAAA+J,EAAAt5C,EAAAu3C,iBAAAjrD,EAAA+sD,GACAruC,EAAAsB,YACAtB,EAAAU,OAAA1L,EAAAqpB,QAAArpB,EAAAspB,SACAte,EAAAuB,OAAA+sC,EAAA3nD,EAAA2nD,EAAA1nD,GACAoZ,EAAA0B,SAGA,GAAAysC,EAAA3wB,QAAA,CAEA,IAAA+wB,EAAA,IAAAjtD,EAAA8sD,EAAA,IACAI,EAAAx5C,EAAAu3C,iBAAAjrD,EAAA+sD,EAAAE,EAAA,GAEAE,EAAA1D,GAAAoD,EAAAtK,UAAAviD,EAAAqiB,GAAAO,OAAAb,kBACArD,EAAAiP,UAAAw/B,EACA,IAAA7N,EAAA5rC,EAAAw3C,cAAAlrD,GACAysB,EAAAlJ,GAAA4nC,UAAA7L,GACA5gC,EAAA60B,UAAA6W,GAAA39B,GACA49B,GAAA59B,EAAA/Y,EAAAq3C,iBAAA/qD,GAAAktD,GACAzZ,GAAA/0B,EAAAhL,EAAA0oB,YAAAp8B,IAAA,GAAAktD,EAAAtC,EAAA3nC,aAIAvE,EAAAmC,UA4LAusC,CAAAlyC,GAGAqI,GAAA/J,KAAA0B,EAAA0Z,MAAA,SAAA3B,EAAA/a,GAEA,GAAAA,EAAA,GAAA4mC,EAAAplC,QAAA,CACA,IAAA2zC,EAAAnyC,EAAAgiB,8BAAAhiB,EAAAwsC,eAAAxvC,IAMA,GAJAunC,EAAAvjB,SAAA,IAAAhkB,GAjMA,SAAAxE,EAAA+rC,EAAA1gC,EAAA7G,GACA,IAKAulB,EALA/e,EAAAhL,EAAAgL,IACAyd,EAAAsjB,EAAAtjB,SACA6uB,EAAAf,GAAAv2C,GACAuvC,EAAAwG,GAAAhK,EAAA9D,MAAAzjC,EAAA,GACA0V,EAAA67B,GAAAhK,EAAA7xB,UAAA1V,EAAA,GAGA,IAAAikB,GAAA6uB,IAAA/H,GAAAr1B,EAAA,CAeA,GAXAlP,EAAAgC,OACAhC,EAAAoP,YAAAm1B,EACAvkC,EAAAkP,YAEAlP,EAAAsQ,cACAtQ,EAAAsQ,YAAAywB,EAAAvxB,YAAA,IACAxP,EAAAuQ,eAAAwwB,EAAAtxB,kBAAA,GAGAzP,EAAAsB,YAEAmc,EAEAzd,EAAAW,IAAA3L,EAAAqpB,QAAArpB,EAAAspB,QAAAje,EAAA,IAAAna,KAAAoC,QACK,CAELy2B,EAAA/pB,EAAAu3C,iBAAA,EAAAlsC,GACAL,EAAAU,OAAAqe,EAAAp4B,EAAAo4B,EAAAn4B,GAEA,QAAAtF,EAAA,EAAqBA,EAAAgrD,EAAgBhrD,IACrCy9B,EAAA/pB,EAAAu3C,iBAAAjrD,EAAA+e,GACAL,EAAAuB,OAAAwd,EAAAp4B,EAAAo4B,EAAAn4B,GAIAoZ,EAAAY,YACAZ,EAAA0B,SACA1B,EAAAmC,WA2JAysC,CAAApyC,EAAAukC,EAAA4N,EAAAn1C,GAGA4mC,EAAA5iB,QAAA,CACA,IAAAomB,EAAAkH,GAAA1K,EAAAyD,UAAAlgC,GAAAO,OAAAb,kBAMA,GALArD,EAAAoE,KAAAk8B,EAAA3sC,OACAqM,EAAAgC,OACAhC,EAAAylC,UAAAjpC,EAAA6hB,QAAA7hB,EAAA8hB,SACAte,EAAA9H,OAAA+V,GAEAmyB,EAAA+K,kBAAA,CACA,IAAAzK,EAAA1gC,EAAAqzB,YAAA9e,GAAArU,MACAF,EAAAiP,UAAAmxB,EAAAgL,cACAprC,EAAAiT,UAAAytB,EAAA,EAAAN,EAAAkL,kBAAAqD,EAAArO,EAAAn/B,KAAA,EAAAi/B,EAAAiL,iBAAA3K,EAAA,EAAAN,EAAAkL,iBAAAhL,EAAAn/B,KAAA,EAAAi/B,EAAAiL,kBAGArrC,EAAA60B,UAAA,SACA70B,EAAA80B,aAAA,SACA90B,EAAAiP,UAAA20B,EACA5jC,EAAA+0B,SAAAxgB,EAAA,GAAAo6B,GACA3uC,EAAAmC,kBAQA0sC,GAAA5D,GACAc,GAAAjF,UAAA+H,GACA,IAAAC,GAAAjqC,GAAArK,eAEAu0C,GAAAx0C,OAAAy0C,mBAAA,iBACAC,GAAA10C,OAAA20C,kBAAA,iBACAC,GAAA,CACAC,YAAA,CACAC,QAAA,EACAluC,KAAA,EACAmuC,MAAA,8BAEAC,OAAA,CACAF,QAAA,EACAluC,KAAA,IACAmuC,MAAA,kBAEAE,OAAA,CACAH,QAAA,EACAluC,KAAA,IACAmuC,MAAA,kBAEAG,KAAA,CACAJ,QAAA,EACAluC,KAAA,KACAmuC,MAAA,cAEAI,IAAA,CACAL,QAAA,EACAluC,KAAA,MACAmuC,MAAA,SAEAK,KAAA,CACAN,QAAA,EACAluC,KAAA,OACAmuC,MAAA,WAEAM,MAAA,CACAP,QAAA,EACAluC,KAAA,OACAmuC,MAAA,SAEAO,QAAA,CACAR,QAAA,EACAluC,KAAA,OACAmuC,MAAA,WAEAQ,KAAA,CACAT,QAAA,EACAluC,KAAA,SAGA4uC,GAAA91C,OAAAiB,KAAAi0C,IAEA,SAAAa,GAAA7nD,EAAAnC,GACA,OAAAmC,EAAAnC,EAGA,SAAAiqD,GAAArvB,GACA,IAEAt/B,EAAAga,EAAA2B,EAFAizC,EAAA,GACAC,EAAA,GAGA,IAAA7uD,EAAA,EAAAga,EAAAslB,EAAAp/B,OAAoCF,EAAAga,IAAUha,EAC9C2b,EAAA2jB,EAAAt/B,GAEA4uD,EAAAjzC,KACAizC,EAAAjzC,IAAA,EACAkzC,EAAAxuD,KAAAsb,IAIA,OAAAkzC,EAuGA,SAAAC,GAAAC,EAAAC,EAAAx0C,EAAAy0C,GACA,IAAA55B,EA3CA,SAAA05B,EAAAruD,EAAA2T,GAKA,IAJA,IAEA66C,EAAAC,EAAAC,EAFAC,EAAA,EACAxpD,EAAAkpD,EAAA7uD,OAAA,EAGAmvD,GAAA,GAAAA,GAAAxpD,GAAA,CAKA,GAHAspD,EAAAJ,GADAG,EAAAG,EAAAxpD,GAAA,GACA,SACAupD,EAAAL,EAAAG,IAEAC,EAEA,OACAE,GAAA,KACAxpD,GAAAupD,GAEO,GAAAA,EAAA1uD,GAAA2T,EACPg7C,EAAAH,EAAA,MACO,MAAAC,EAAAzuD,GAAA2T,GAGP,OACAg7C,GAAAF,EACAtpD,GAAAupD,GAJAvpD,EAAAqpD,EAAA,GAUA,OACAG,GAAAD,EACAvpD,GAAA,MAYAypD,CAAAP,EAAAC,EAAAx0C,GAEAka,EAAAW,EAAAg6B,GAAAh6B,EAAAxvB,GAAAwvB,EAAAg6B,GAAAN,IAAA7uD,OAAA,GAAA6uD,EAAA,GACAz5B,EAAAD,EAAAg6B,GAAAh6B,EAAAxvB,GAAAwvB,EAAAxvB,GAAAkpD,IAAA7uD,OAAA,GAAA6uD,EAAA,GACAQ,EAAAj6B,EAAA05B,GAAAt6B,EAAAs6B,GACAzoD,EAAAgpD,GAAA/0C,EAAAka,EAAAs6B,IAAAO,EAAA,EACAl9B,GAAAiD,EAAA25B,GAAAv6B,EAAAu6B,IAAA1oD,EACA,OAAAmuB,EAAAu6B,GAAA58B,EAGA,SAAAm9B,GAAA97C,EAAA+7C,GACA,IAAAC,EAAAh8C,EAAAi8C,SACAr1C,EAAA5G,EAAA4G,QAAAs1C,KACAC,EAAAv1C,EAAAu1C,OACA7V,EAAA6V,GAAAv1C,EAAA0/B,OACA3lC,EAAAo7C,EAWA,MATA,oBAAAI,IACAx7C,EAAAw7C,EAAAx7C,IAIAkP,GAAAzK,SAAAzE,KACAA,EAAA,kBAAA2lC,EAAA0V,EAAA3V,MAAA1lC,EAAA2lC,GAAA0V,EAAA3V,MAAA1lC,IAGA,OAAAA,GACAA,GAKAw7C,GAAA,oBAAA7V,IACA3lC,EAAA2lC,EAAAyV,GAEAlsC,GAAAzK,SAAAzE,KACAA,EAAAq7C,EAAA3V,MAAA1lC,KAIAA,GAGA,SAAA0lC,GAAArmC,EAAA+7C,GACA,GAAAlsC,GAAA7K,cAAA+2C,GACA,YAGA,IAAAn1C,EAAA5G,EAAA4G,QAAAs1C,KACAv7C,EAAAm7C,GAAA97C,IAAAwhB,cAAAu6B,IAEA,cAAAp7C,EACAA,GAGAiG,EAAAlJ,QACAiD,GAAAX,EAAAi8C,SAAAzV,QAAA7lC,EAAAiG,EAAAlJ,QAGAiD,GAqEA,SAAAy7C,GAAA9I,GACA,QAAAhnD,EAAAyuD,GAAAhzC,QAAAurC,GAAA,EAAAhtC,EAAAy0C,GAAAvuD,OAA8DF,EAAAga,IAAUha,EACxE,GAAA6tD,GAAAY,GAAAzuD,IAAA+tD,OACA,OAAAU,GAAAzuD,GAYA,SAAA+vD,GAAAr8C,EAAA/O,EAAAE,EAAAmrD,GACA,IAYAJ,EAZAF,EAAAh8C,EAAAi8C,SACAr1C,EAAA5G,EAAA4G,QACA21C,EAAA31C,EAAAs1C,KACAhT,EAAAqT,EAAAjJ,MAtDA,SAAAkJ,EAAAvrD,EAAAE,EAAAmrD,GACA,IACAhwD,EAAAmwD,EAAAvJ,EADA5sC,EAAAy0C,GAAAvuD,OAGA,IAAAF,EAAAyuD,GAAAhzC,QAAAy0C,GAAoClwD,EAAAga,EAAA,IAAcha,EAIlD,GAHAmwD,EAAAtC,GAAAY,GAAAzuD,IACA4mD,EAAAuJ,EAAAnC,MAAAmC,EAAAnC,MAAAmC,EAAAnC,MAAA9tD,OAAA,GAAAytD,GAEAwC,EAAApC,QAAAnpD,KAAAwhD,MAAAvhD,EAAAF,IAAAiiD,EAAAuJ,EAAAtwC,QAAAmwC,EACA,OAAAvB,GAAAzuD,GAIA,OAAAyuD,GAAAz0C,EAAA,GAyCAo2C,CAAAH,EAAAC,QAAAvrD,EAAAE,EAAAmrD,GACAnT,EAAAiT,GAAAlT,GACAuJ,EAAAqH,GAAAyC,EAAA9J,SAAA8J,EAAAI,cACAC,EAAA,SAAA1T,GAAAqT,EAAAM,WACAC,EAAAl2C,EAAAsa,MAAAioB,MAAA3R,QACAilB,EAAAtC,GAAAjR,GACA6T,EAAA9rD,EACAovB,EAAAlvB,EACA+vB,EAAA,GA+BA,IA5BAuxB,IACAA,EA5FA,SAAAxhD,EAAAE,EAAAmiD,EAAAgJ,GACA,IAIAhwD,EAAAga,EAAA4sC,EAJAvxB,EAAAxwB,EAAAF,EACAwrD,EAAAtC,GAAA7G,GACA0J,EAAAP,EAAAtwC,KACAmuC,EAAAmC,EAAAnC,MAGA,IAAAA,EACA,OAAAppD,KAAAwhD,KAAA/wB,GAAA26B,EAAAU,IAGA,IAAA1wD,EAAA,EAAAga,EAAAg0C,EAAA9tD,OAAoCF,EAAAga,IACpC4sC,EAAAoH,EAAAhuD,KAEA4E,KAAAwhD,KAAA/wB,GAAAq7B,EAAA9J,KAAAoJ,MAH8ChwD,GAQ9C,OAAA4mD,EAyEA+J,CAAAhsD,EAAAE,EAAA+3C,EAAAoT,IAIAM,IACAG,GAAAf,EAAAxV,QAAAuW,EAAA,UAAAH,GACAv8B,GAAA27B,EAAAxV,QAAAnmB,EAAA,UAAAu8B,IAIAG,GAAAf,EAAAxV,QAAAuW,EAAAH,EAAA,MAAA1T,IACA7oB,GAAA27B,EAAAxV,QAAAnmB,EAAAu8B,EAAA,MAAA1T,IAEA/3C,IACAkvB,GAAA27B,EAAA7oB,IAAA9S,EAAA,EAAA6oB,IAGAgT,EAAAa,EAEAD,GAAA3T,IAAAyT,IAAAL,EAAA7+C,QAIAw+C,GAAAF,EAAAxV,QAAA0V,EAAA/S,GACA+S,GAAAF,EAAA7oB,IAAA+oB,MAAAa,EAAAb,IAAAO,EAAAtwC,KAAAsmC,MAAAvJ,IAGUgT,EAAA77B,EAAa67B,GAAAF,EAAA7oB,IAAA+oB,EAAAzJ,EAAAvJ,GACvBhoB,EAAAv0B,MAAAuvD,GAIA,OADAh7B,EAAAv0B,MAAAuvD,GACAh7B,EA2DA,IAsDAg8B,GAAA9T,GAAAhiC,OAAA,CACA8I,WAAA,WACAvS,KAAA6lC,oBACA4F,GAAAhsC,UAAA8S,WAAAjjB,KAAA0Q,OAEA0X,OAAA,WACA,IACAzO,EADAjJ,KACAiJ,QACAs1C,EAAAt1C,EAAAs1C,OAAAt1C,EAAAs1C,KAAA,IACAF,EAHAr+C,KAGAs+C,SAAA,IAAApV,GAAAC,MAAAlgC,EAAAu2C,SAAAC,MAWA,OATAlB,EAAA5V,QACAtiC,QAAAq5C,KAAA,0EAOAxtC,GAAA5I,QAAAi1C,EAAAoB,eAAAtB,EAAA5V,WACAgD,GAAAhsC,UAAAiY,OAAAtoB,MAdA4Q,KAcApR,YAMAi1B,cAAA,SAAA0rB,GAKA,OAJAA,QAAA5/C,IAAA4/C,EAAA16C,IACA06C,IAAA16C,GAGA42C,GAAAhsC,UAAAokB,cAAAv0B,KAAA0Q,KAAAuvC,IAEA7C,oBAAA,WACA,IAUA/9C,EAAAq4B,EAAAre,EAAAskB,EAAAjW,EAAA4oC,EAVA/1C,EAAA7J,KACAoN,EAAAvD,EAAAuD,MACAixC,EAAAx0C,EAAAy0C,SACAM,EAAA/0C,EAAAZ,QAAAs1C,KACA5I,EAAAiJ,EAAAjJ,MAAA,MACAriD,EAAAgpD,GACA9oD,EAAA4oD,GACAyD,EAAA,GACA5oC,EAAA,GACA4K,EAAA,GAEAi+B,EAAA1yC,EAAA4J,KAAA6K,QAAA,GAEA,IAAAlzB,EAAA,EAAAga,EAAAm3C,EAAAjxD,OAA2CF,EAAAga,IAAUha,EACrDkzB,EAAA7yB,KAAA05C,GAAA7+B,EAAAi2C,EAAAnxD,KAIA,IAAAA,EAAA,EAAAga,GAAAyE,EAAA4J,KAAAC,UAAA,IAAApoB,OAA4DF,EAAAga,IAAUha,EACtE,GAAAye,EAAAyV,iBAAAl0B,GAGA,GAFAqoB,EAAA5J,EAAA4J,KAAAC,SAAAtoB,GAAAqoB,KAEA9E,GAAA1K,SAAAwP,EAAA,IAGA,IAFAC,EAAAtoB,GAAA,GAEAq4B,EAAA,EAAAiG,EAAAjW,EAAAnoB,OAA2Cm4B,EAAAiG,IAAUjG,EACrD44B,EAAAlX,GAAA7+B,EAAAmN,EAAAgQ,IACA64B,EAAA7wD,KAAA4wD,GACA3oC,EAAAtoB,GAAAq4B,GAAA44B,MAEW,CACX,IAAA54B,EAAA,EAAAiG,EAAApL,EAAAhzB,OAA6Cm4B,EAAAiG,IAAUjG,EACvD64B,EAAA7wD,KAAA6yB,EAAAmF,IAGA/P,EAAAtoB,GAAAkzB,EAAAniB,MAAA,QAGAuX,EAAAtoB,GAAA,GAIAkzB,EAAAhzB,SAEAgzB,EAAAy7B,GAAAz7B,GAAA+M,KAAAyuB,IACA/pD,EAAAC,KAAAD,MAAAuuB,EAAA,IACAruB,EAAAD,KAAAC,MAAAquB,IAAAhzB,OAAA,KAGAgxD,EAAAhxD,SACAgxD,EAAAvC,GAAAuC,GAAAjxB,KAAAyuB,IACA/pD,EAAAC,KAAAD,MAAAusD,EAAA,IACArsD,EAAAD,KAAAC,MAAAqsD,IAAAhxD,OAAA,KAGAyE,EAAAo1C,GAAA7+B,EAAA+0C,EAAAtrD,QACAE,EAAAk1C,GAAA7+B,EAAA+0C,EAAAprD,QAEAF,MAAAgpD,IAAA+B,EAAAxV,QAAA9zB,KAAAC,MAAA2gC,GAAAriD,EACAE,MAAA4oD,IAAAiC,EAAAvV,MAAA/zB,KAAAC,MAAA2gC,GAAA,EAAAniD,EAEAqW,EAAAvW,IAAAC,KAAAD,MAAAE,GACAqW,EAAArW,IAAAD,KAAAC,IAAAF,EAAA,EAAAE,GAEAqW,EAAAk2C,YAAAl2C,EAAAoY,eACApY,EAAAm2C,OAAA,GACAn2C,EAAAo2C,YAAA,CACAjpC,KAAA6oC,EACA5oC,WACA4K,WAGAgrB,WAAA,WACA,IAOAl+C,EAAAga,EAAAi3C,EAPA/1C,EAAA7J,KACA1M,EAAAuW,EAAAvW,IACAE,EAAAqW,EAAArW,IACAyV,EAAAY,EAAAZ,QACA21C,EAAA31C,EAAAs1C,KACAsB,EAAA,GACAt8B,EAAA,GAGA,OAAAta,EAAAsa,MAAArd,QACA,WACA25C,EAAAh2C,EAAAo2C,YAAAjpC,KACA,MAEA,aACA6oC,EAAAh2C,EAAAo2C,YAAAp+B,OACA,MAEA,WACA,QACAg+B,EAAAnB,GAAA70C,EAAAvW,EAAAE,EAAAqW,EAAAq2C,iBAAA5sD,IAYA,IATA,UAAA2V,EAAA8W,QAAA8/B,EAAAhxD,SACAyE,EAAAusD,EAAA,GACArsD,EAAAqsD,IAAAhxD,OAAA,IAIAyE,EAAAo1C,GAAA7+B,EAAA+0C,EAAAtrD,QACAE,EAAAk1C,GAAA7+B,EAAA+0C,EAAAprD,QAEA7E,EAAA,EAAAga,EAAAk3C,EAAAhxD,OAA2CF,EAAAga,IAAUha,GACrDixD,EAAAC,EAAAlxD,KAEA2E,GAAAssD,GAAApsD,GACA+vB,EAAAv0B,KAAA4wD,GAgBA,OAZA/1C,EAAAvW,MACAuW,EAAArW,MAEAqW,EAAAs2C,MAAAvB,EAAAjJ,MArVA,SAAAtzC,EAAAkhB,EAAAs7B,EAAAvrD,EAAAE,GACA,IACA7E,EAAAgnD,EADAhtC,EAAAy0C,GAAAvuD,OAGA,IAAAF,EAAAga,EAAA,EAAsBha,GAAAyuD,GAAAhzC,QAAAy0C,GAA6BlwD,IAGnD,GAFAgnD,EAAAyH,GAAAzuD,GAEA6tD,GAAA7G,GAAA+G,QAAAr6C,EAAAi8C,SAAA1V,KAAAp1C,EAAAF,EAAAqiD,IAAApyB,EAAA10B,OACA,OAAA8mD,EAIA,OAAAyH,GAAAyB,EAAAzB,GAAAhzC,QAAAy0C,GAAA,GAyUAuB,CAAAv2C,EAAA0Z,EAAAq7B,EAAAC,QAAAh1C,EAAAvW,IAAAuW,EAAArW,KACAqW,EAAAw2C,WAAA5B,GAAA50C,EAAAs2C,OACAt2C,EAAAm2C,OA7hBA,SAAAH,EAAAvsD,EAAAE,EAAA8sD,GACA,cAAAA,IAAAT,EAAAhxD,OACA,QACA0vD,KAAAjrD,EACAskC,IAAA,GACO,CACP2mB,KAAA/qD,EACAokC,IAAA,IAIA,IAEAjpC,EAAAga,EAAA0a,EAAAC,EAAAW,EAFAy5B,EAAA,GACAzvB,EAAA,CAAA36B,GAGA,IAAA3E,EAAA,EAAAga,EAAAk3C,EAAAhxD,OAAyCF,EAAAga,IAAUha,GACnD20B,EAAAu8B,EAAAlxD,IAEA2E,GAAAgwB,EAAA9vB,GACAy6B,EAAAj/B,KAAAs0B,GAMA,IAFA2K,EAAAj/B,KAAAwE,GAEA7E,EAAA,EAAAga,EAAAslB,EAAAp/B,OAAoCF,EAAAga,IAAUha,EAC9Cs1B,EAAAgK,EAAAt/B,EAAA,GACA00B,EAAA4K,EAAAt/B,EAAA,GACA20B,EAAA2K,EAAAt/B,QAEAgB,IAAA0zB,QAAA1zB,IAAAs0B,GAAA1wB,KAAAwM,OAAAkkB,EAAAZ,GAAA,KAAAC,GACAo6B,EAAA1uD,KAAA,CACAuvD,KAAAj7B,EACAsU,IAAAjpC,GAAAga,EAAA,KAKA,OAAA+0C,EAufA6C,CAAA12C,EAAAo2C,YAAAjpC,KAAA1jB,EAAAE,EAAAyV,EAAAq3C,cACAz2C,EAAA22C,SAhQA,SAAA9C,EAAAn6B,EAAAjwB,EAAAE,EAAAyV,GACA,IAEAm2C,EAAA18B,EAFA1P,EAAA,EACAiQ,EAAA,EAyBA,OAtBAha,EAAA+X,QAAAuC,EAAA10B,SACAoa,EAAAs1C,KAAAjrD,MACA8rD,EAAA3B,GAAAC,EAAA,OAAAn6B,EAAA,UAGAvQ,EADA,IAAAuQ,EAAA10B,OACA,EAAAuwD,GAEA3B,GAAAC,EAAA,OAAAn6B,EAAA,UAAA67B,GAAA,GAIAn2C,EAAAs1C,KAAA/qD,MACAkvB,EAAA+6B,GAAAC,EAAA,OAAAn6B,IAAA10B,OAAA,UAGAo0B,EADA,IAAAM,EAAA10B,OACA6zB,GAEAA,EAAA+6B,GAAAC,EAAA,OAAAn6B,IAAA10B,OAAA,eAKA,CACAmkB,QACAiQ,OAmOAw9B,CAAA52C,EAAAm2C,OAAAz8B,EAAAjwB,EAAAE,EAAAyV,GAEAA,EAAAsa,MAAAlb,SACAkb,EAAAlb,UAlOA,SAAAhG,EAAAjC,EAAAsgD,GACA,IACA/xD,EAAAga,EAAA3F,EAAAwoC,EADAjoB,EAAA,GAGA,IAAA50B,EAAA,EAAAga,EAAAvI,EAAAvR,OAAqCF,EAAAga,IAAUha,EAC/CqU,EAAA5C,EAAAzR,GACA68C,IAAAkV,GAAA19C,KAAAX,EAAAi8C,SAAAzV,QAAA7lC,EAAA09C,GACAn9B,EAAAv0B,KAAA,CACAgU,QACAwoC,UAIA,OAAAjoB,EAwNAo9B,CAAA92C,EAAA0Z,EAAA1Z,EAAAw2C,aAEAvjB,iBAAA,SAAAj2B,EAAAoP,GACA,IAAApM,EAAA7J,KACAq+C,EAAAx0C,EAAAy0C,SACAtnC,EAAAnN,EAAAuD,MAAA4J,KACA4nC,EAAA/0C,EAAAZ,QAAAs1C,KACA38B,EAAA5K,EAAA6K,QAAAhb,EAAAmQ,EAAA6K,OAAAhzB,OAAAmoB,EAAA6K,OAAAhb,GAAA,GACA7D,EAAAgU,EAAAC,SAAAhB,GAAAe,KAAAnQ,GAMA,OAJAqL,GAAA1K,SAAAxE,KACA4e,EAAA/X,EAAAga,cAAA7gB,IAGA47C,EAAAgC,cACAvC,EAAA1V,OAAAwV,GAAAt0C,EAAA+X,GAAAg9B,EAAAgC,eAGA,kBAAAh/B,EACAA,EAGAy8B,EAAA1V,OAAAwV,GAAAt0C,EAAA+X,GAAAg9B,EAAAe,eAAAkB,WAOAC,mBAAA,SAAAvC,EAAA13C,EAAA0c,EAAAolB,GACA,IACA0V,EADAr+C,KACAs+C,SACAr1C,EAFAjJ,KAEAiJ,QACAw/B,EAAAx/B,EAAAs1C,KAAAoB,eACAoB,EAAAtY,EAJAzoC,KAIAmgD,OACAO,EALA1gD,KAKAqgD,WACAW,EAAAvY,EAAAiY,GACAO,GAAA5C,EAAAxV,QAAA0V,EAAAmC,GACAQ,EAAAj4C,EAAAsa,MAAAioB,MACAA,EAAA0V,EAAArnB,SAAA6mB,GAAAM,GAAAzC,IAAA0C,EACAr/B,EAAAy8B,EAAA1V,OAAA4V,EAAA5V,IAAA6C,EAAAwV,EAAAD,IACAtT,EAAAjC,EAAA0V,EAAAj4C,EAAAsa,MAAAgoB,MACA4V,EAAAhF,GAAA1O,EAAAzlC,SAAAylC,EAAAC,cACA,OAAAyT,IAAAv/B,EAAA/a,EAAA0c,GAAA3B,GAEAorB,qBAAA,SAAAzpB,GACA,IACA50B,EAAAga,EADAkZ,EAAA,GAGA,IAAAlzB,EAAA,EAAAga,EAAA4a,EAAA10B,OAAsCF,EAAAga,IAAUha,EAChDkzB,EAAA7yB,KAAAgR,KAAA8gD,mBAAAv9B,EAAA50B,GAAAqU,MAAArU,EAAA40B,IAGA,OAAA1B,GAMAu/B,kBAAA,SAAA7C,GACA,IAAA10C,EAAA7J,KACAqhD,EAAAx3C,EAAAZ,QAAAsa,MAAAlb,QACAmG,EAAA3E,EAAAk2C,YAAAl2C,EAAA0D,MAAA1D,EAAA2D,OACAwF,EAAAnJ,EAAAk2C,YAAAsB,EAAAx3C,EAAAgE,MAAAhE,EAAA8D,KAAA0zC,EAAAx3C,EAAAiE,OAAAjE,EAAA+D,IACAgqB,EAAA6lB,GAAA5zC,EAAAm2C,OAAA,OAAAzB,EAAA,OACAv9B,EAAAxS,GAAA3E,EAAA22C,SAAAxtC,MAAA4kB,IAAA/tB,EAAA22C,SAAAxtC,MAAA,EAAAnJ,EAAA22C,SAAAv9B,KACA,OAAAo+B,EAAAruC,EAAAgO,EAAAhO,EAAAgO,GAEAmC,iBAAA,SAAAngB,EAAA6D,EAAAoP,GACA,IACAsoC,EAAA,KAUA,QARA5uD,IAAAkX,QAAAlX,IAAAsmB,IACAsoC,EAJAv+C,KAIAigD,YAAAhpC,SAAAhB,GAAApP,IAGA,OAAA03C,IACAA,EAAA7V,GARA1oC,KAQAgD,IAGA,OAAAu7C,EACA,OAZAv+C,KAYAohD,kBAAA7C,IAGA96B,gBAAA,SAAA5c,GACA,IAAA0c,EAAAvjB,KAAAwjB,WACA,OAAA3c,GAAA,GAAAA,EAAA0c,EAAA10B,OAAAmR,KAAAohD,kBAAA79B,EAAA1c,GAAA7D,OAAA,MAEAwsC,iBAAA,SAAAE,GACA,IAAA7lC,EAAA7J,KACAwO,EAAA3E,EAAAk2C,YAAAl2C,EAAA0D,MAAA1D,EAAA2D,OACAwF,EAAAnJ,EAAAk2C,YAAAl2C,EAAA8D,KAAA9D,EAAA+D,IACAgqB,GAAAppB,GAAAkhC,EAAA18B,GAAAxE,EAAA,IAAA3E,EAAA22C,SAAAxtC,MAAA,EAAAnJ,EAAA22C,SAAAxtC,OAAAnJ,EAAA22C,SAAAv9B,IACAs7B,EAAAd,GAAA5zC,EAAAm2C,OAAA,MAAApoB,EAAA,QAEA,OAAA/tB,EAAAy0C,SAAAvV,QAAAwV,IAOA+C,cAAA,SAAA1/B,GACA,IACA2/B,EADAvhD,KACAiJ,QAAAsa,MACAi+B,EAFAxhD,KAEAqN,IAAAqzB,YAAA9e,GAAArU,MACA6N,EAAAlJ,GAAAg8B,UAAAqT,EAAArW,aACA2C,EAAAt6C,KAAAuC,IAAAslB,GACA4zB,EAAAz7C,KAAAwC,IAAAqlB,GACAqmC,EAAAtF,GAAAoF,EAAA/vC,SAAAR,GAAAO,OAAAX,iBACA,OAAA4wC,EAAA3T,EAAA4T,EAAAzS,GAMAkR,iBAAA,SAAAwB,GACA,IAAA73C,EAAA7J,KAEA2oC,EAAA9+B,EAAAZ,QAAAs1C,KAAAoB,eAAAlD,YACAkF,EAAA93C,EAAAi3C,mBAAAY,EAAA,KAAA/Y,GACA6Y,EAAA33C,EAAAy3C,cAAAK,GACAlS,EAAA5lC,EAAAoY,eAAApY,EAAA0D,MAAA1D,EAAA2D,OACAmxC,EAAAprD,KAAAkB,MAAAg7C,EAAA+R,GACA,OAAA7C,EAAA,EAAAA,EAAA,KAIAiD,GArVA,CACA/8B,SAAA,SASAy7B,aAAA,SASAvgC,OAAA,OACAy/B,SAAA,GACAjB,KAAA,CACAC,QAAA,EAEA7V,QAAA,EAEAgN,MAAA,EAEA51C,OAAA,EAEA8hD,eAAA,EAEA3C,YAAA,EAEAL,QAAA,cACAc,eAAA,IAEAp8B,MAAA,CACA6nB,UAAA,EAUAllC,OAAA,OACAslC,MAAA,CACA3R,SAAA,KAoSA0lB,GAAApL,UAAAyN,GACA,IAAAhrC,GAAA,CACAkrC,SAAAzO,GACA1oC,OAAA4rC,GACAxM,YAAAuN,GACAyK,aAAA3I,GACAmF,KAAAgB,IAEAyC,GAAA,CACAnB,SAAA,yBACApE,YAAA,gBACAG,OAAA,YACAC,OAAA,SACAC,KAAA,KACAC,IAAA,QACAC,KAAA,KACAC,MAAA,WACAC,QAAA,cACAC,KAAA,QAGAjU,GAAAC,MAAAH,SAAA,oBAAAp5C,EAAA,CACAqyD,IAAA,SAEAxZ,QAAA,WACA,OAAAuZ,IAEAtZ,MAAA,SAAA1lC,EAAA2lC,GAOA,MANA,kBAAA3lC,GAAA,kBAAA2lC,EACA3lC,EAAApT,EAAAoT,EAAA2lC,GACO3lC,aAAApT,IACPoT,EAAApT,EAAAoT,IAGAA,EAAAE,UAAAF,EAAAk/C,UAAA,MAEAvZ,OAAA,SAAA4V,EAAA4D,GACA,OAAAvyD,EAAA2uD,GAAA5V,OAAAwZ,IAEA3sB,IAAA,SAAA+oB,EAAA6D,EAAAzM,GACA,OAAA/lD,EAAA2uD,GAAA/oB,IAAA4sB,EAAAzM,GAAAuM,WAEAtZ,KAAA,SAAAp1C,EAAAF,EAAAqiD,GACA,OAAA/lD,EAAA0kB,SAAA1kB,EAAA4D,GAAAo1C,KAAAh5C,EAAA0D,KAAA+uD,GAAA1M,IAEA9M,QAAA,SAAA0V,EAAA5I,EAAAsJ,GAGA,OAFAV,EAAA3uD,EAAA2uD,GAEA,YAAA5I,EACA4I,EAAAW,WAAAD,GAAAiD,UAGA3D,EAAA1V,QAAA8M,GAAAuM,WAEApZ,MAAA,SAAAyV,EAAA5I,GACA,OAAA/lD,EAAA2uD,GAAAzV,MAAA6M,GAAAuM,WAUAnZ,QAAA,SAAAwV,GACA,OAAA3uD,EAAA2uD,KAEG,IAEHvtC,GAAAT,KAAA,UACA0nB,QAAA,CACAqqB,OAAA,CACAC,WAAA,MAKA,IAAAC,GAAA,CACA/rC,QAAA,SAAAvQ,GACA,IAAAW,EAAAX,EAAA4I,KACA1B,EAAAlH,EAAAkH,MACAmJ,EAAAnJ,EAAA8J,eAAArQ,GACA47C,EAAAlsC,GAAAnJ,EAAAyV,iBAAAhc,GACAwW,EAAAolC,GAAAlsC,EAAAE,QAAA6G,WAAA,GACAzuB,EAAAwuB,EAAAxuB,QAAA,EACA,OAAAA,EAAA,SAAAqgB,EAAAvgB,GACA,OAAAA,EAAAE,GAAAwuB,EAAA1uB,GAAA+jB,OAAA,MADA,MAIAgwC,SAAA,SAAAx8C,GACA,IAAAw8C,EAAAx8C,EAAAw8C,SACA1uD,EAAA0uD,IAAA1uD,EAAA,KACAC,EAAAyuD,IAAAzuD,EAAA,KACA,gBAAAib,GACA,OACAlb,EAAA,OAAAA,EAAAkb,EAAAlb,IACAC,EAAA,OAAAA,EAAAib,EAAAjb,QAMA,SAAA0uD,GAAA/uB,EAAA/sB,EAAAmT,GACA,IAEA7T,EAFA4M,EAAA6gB,EAAAjhB,QAAA,GACA7D,EAAAiE,EAAAjE,KAOA,QAJAnf,IAAAmf,IACAA,IAAAiE,EAAAwG,kBAGA,IAAAzK,GAAA,OAAAA,EACA,SAGA,QAAAA,EACA,eAKA,GAFA3I,EAAA/D,WAAA0M,EAAA,IAEArH,SAAAtB,IAAA5S,KAAAkB,MAAA0R,OAKA,MAJA,MAAA2I,EAAA,UAAAA,EAAA,KACA3I,EAAAU,EAAAV,KAGAA,IAAAU,GAAAV,EAAA,GAAAA,GAAA6T,IAIA7T,EAGA,OAAA2I,GAEA,aACA,cAEA,UACA,YAEA,WACA,eAGA,aACA,YACA,UACA,OAAAA,EAGA,QACA,UAIA,SAAA8zC,GAAA18C,GACA,IAIAwZ,EAJA3M,EAAA7M,EAAA0tB,GAAAjhB,QAAA,GACAtQ,EAAA6D,EAAA0tB,GAAAvK,QAAA,GACAva,EAAA5I,EAAA4I,KACA3I,EAAA,KAGA,GAAAsB,SAAAqH,GACA,YAkBA,GAZA,UAAAA,EACA3I,OAAAxW,IAAAojB,EAAA8vC,YAAAxgD,EAAAyL,OAAAiF,EAAA8vC,YACK,QAAA/zC,EACL3I,OAAAxW,IAAAojB,EAAA+vC,SAAAzgD,EAAAuL,IAAAmF,EAAA+vC,cACKnzD,IAAAojB,EAAAgwC,UACL58C,EAAA4M,EAAAgwC,UACK1gD,EAAAi5C,gBACLn1C,EAAA9D,EAAAi5C,kBACKj5C,EAAA2f,eACL7b,EAAA9D,EAAA2f,qBAGAryB,IAAAwW,GAAA,OAAAA,EAAA,CACA,QAAAxW,IAAAwW,EAAAnS,QAAArE,IAAAwW,EAAAlS,EACA,OAAAkS,EAGA,GAAA+L,GAAAzK,SAAAtB,GAEA,OACAnS,GAFA0rB,EAAArd,EAAA4f,gBAEA9b,EAAA,KACAlS,EAAAyrB,EAAA,KAAAvZ,GAKA,YAGA,SAAA68C,GAAAz5C,EAAA1C,EAAA07C,GACA,IAGAp8C,EAHAD,EAAAqD,EAAA1C,GACAiI,EAAA5I,EAAA4I,KACAm0C,EAAA,CAAAp8C,GAGA,IAAA07C,EACA,OAAAzzC,EAGA,UAAAA,IAAA,IAAAm0C,EAAA74C,QAAA0E,IAAA,CACA,IAAArH,SAAAqH,GACA,OAAAA,EAKA,KAFA3I,EAAAoD,EAAAuF,IAGA,SAGA,GAAA3I,EAAAs8C,QACA,OAAA3zC,EAGAm0C,EAAAj0D,KAAA8f,GACAA,EAAA3I,EAAA2I,KAGA,SAGA,SAAAo0C,GAAAh9C,GACA,IAAA4I,EAAA5I,EAAA4I,KACA9I,EAAA,UAEA,WAAA8I,EACA,MAGArH,SAAAqH,KACA9I,EAAA,YAGAw8C,GAAAx8C,GAAAE,IAGA,SAAAi9C,GAAAj0C,GACA,OAAAA,MAAA4O,KAGA,SAAAslC,GAAA/1C,EAAAg2C,EAAAC,EAAAC,EAAAC,GACA,IAAA70D,EAEA,GAAA40D,GAAAC,EAAA,CAOA,IAFAn2C,EAAAU,OAAAs1C,EAAA,GAAArvD,EAAAqvD,EAAA,GAAApvD,GAEAtF,EAAA,EAAeA,EAAA40D,IAAU50D,EACzBujB,GAAAE,OAAAxD,OAAAvB,EAAAg2C,EAAA10D,EAAA,GAAA00D,EAAA10D,IAMA,IAFA0e,EAAAuB,OAAA00C,EAAAE,EAAA,GAAAxvD,EAAAsvD,EAAAE,EAAA,GAAAvvD,GAEAtF,EAAA60D,EAAA,EAAsB70D,EAAA,IAAOA,EAC7BujB,GAAAE,OAAAxD,OAAAvB,EAAAi2C,EAAA30D,GAAA20D,EAAA30D,EAAA,QAgDA,IAAA80D,GAAA,CACAr8C,GAAA,SACAs8C,oBAAA,SAAAt2C,EAAAnE,GACA,IAGAsN,EAAA5nB,EAAAilC,EAAA1tB,EAHA8T,GAAA5M,EAAA4J,KAAAC,UAAA,IAAApoB,OACA0zD,EAAAt5C,EAAAs5C,UACAh5C,EAAA,GAGA,IAAA5a,EAAA,EAAiBA,EAAAqrB,IAAWrrB,EAC5B4nB,EAAAnJ,EAAA8J,eAAAvoB,GACAilC,EAAArd,EAAAE,QACAvQ,EAAA,KAEA0tB,KAAAjhB,QAAAihB,aAAA5a,GAAAwH,OACAta,EAAA,CACAu8C,QAAAr1C,EAAAyV,iBAAAl0B,GACAmgB,KAAA6zC,GAAA/uB,EAAAjlC,EAAAqrB,GACA5M,QACAwmB,OAIArd,EAAAotC,QAAAz9C,EACAqD,EAAAva,KAAAkX,GAGA,IAAAvX,EAAA,EAAiBA,EAAAqrB,IAAWrrB,GAC5BuX,EAAAqD,EAAA5a,MAMAuX,EAAA4I,KAAAk0C,GAAAz5C,EAAA5a,EAAA4zD,GACAr8C,EAAAw8C,SAAAE,GAAA18C,GACAA,EAAA09C,OAAAV,GAAAh9C,KAGA29C,kBAAA,SAAAz2C,EAAA9c,GACA,IAAAimB,EAAAjmB,EAAAimB,KAAAotC,QAEA,GAAAptC,EAAA,CAIA,IAAAlJ,EAAAD,EAAAC,IACAumB,EAAArd,EAAAqd,GACA3gB,EAAA2gB,EAAAlhB,MACA2K,EAAAuW,EAAAtW,WAAA,GACAsmC,EAAArtC,EAAAqtC,OACAtZ,EAAAr3B,EAAAsG,iBAAAvI,GAAAO,OAAAd,aAEAmzC,GAAAtZ,GAAAjtB,EAAAxuB,SACAqjB,GAAAE,OAAAhD,SAAA/B,EAAAD,EAAAsR,WAjGA,SAAArR,EAAAgQ,EAAAumC,EAAA3wC,EAAAq3B,EAAAwZ,GACA,IAMAn1D,EAAAga,EAAA9B,EAAAk9C,EAAAC,EAAAC,EAAAC,EANAlqC,EAAAqD,EAAAxuB,OACAqvD,EAAAjrC,EAAAmK,SACAimC,EAAA,GACAC,EAAA,GACAC,EAAA,EACAC,EAAA,EAIA,IAFAn2C,EAAAsB,YAEAhgB,EAAA,EAAAga,EAAAqR,IAAA8pC,EAAsCn1D,EAAAga,IAAUha,EAEhDo1D,EAAA1mC,EADAxW,EAAAlY,EAAAqrB,GACAtH,MACAsxC,EAAAJ,EAAAG,EAAAl9C,EAAAoM,GACAgxC,EAAAd,GAAAY,GACAG,EAAAf,GAAAa,GAEAC,GAAAC,GACAX,EAAAF,EAAAr0D,KAAA+0D,GACAP,EAAAF,EAAAt0D,KAAAg1D,IACOT,GAAAC,IACPtF,GAMA+F,GACAZ,EAAAr0D,KAAA+0D,GAGAG,GACAZ,EAAAt0D,KAAAg1D,KAVAZ,GAAA/1C,EAAAg2C,EAAAC,EAAAC,EAAAC,GACAD,EAAAC,EAAA,EACAH,EAAA,GACAC,EAAA,KAaAF,GAAA/1C,EAAAg2C,EAAAC,EAAAC,EAAAC,GACAn2C,EAAAY,YACAZ,EAAAiP,UAAAguB,EACAj9B,EAAAyB,OAyDAq1C,CAAA92C,EAAAgQ,EAAAumC,EAAA3wC,EAAAq3B,EAAA1W,EAAAnW,OACAvL,GAAAE,OAAA7C,WAAAlC,OAIA+2C,GAAAlyC,GAAAhL,KACAm9C,GAAAnyC,GAAArK,eAkFA,SAAAy8C,GAAAC,EAAA/yC,GACA,OAAA+yC,EAAAC,eAAAD,EAAAE,SAAAjzC,IAAA+yC,EAAAE,SAjFAzzC,GAAAT,KAAA,UACA0V,OAAA,CACA4E,SAAA,EACAhG,SAAA,MACAsK,WAAA,EACA9mB,SAAA,EACA1C,OAAA,IAEA2gB,QAAA,SAAAC,EAAAC,GACA,IAAA3f,EAAA2f,EAAAvQ,aACAyuC,EAAA1kD,KAAAoN,MACAmJ,EAAAmuC,EAAAxtC,eAAArQ,GAEA0P,EAAA/D,OAAA,OAAA+D,EAAA/D,QAAAkyC,EAAA1tC,KAAAC,SAAApQ,GAAA2L,OAAA,KAEAkyC,EAAAhtC,UAEAisB,QAAA,KACAghB,QAAA,KACA9iC,OAAA,CACA4iC,SAAA,GACAhmC,QAAA,GAYAyH,eAAA,SAAA9Y,GACA,IAAA4J,EAAA5J,EAAA4J,KACA,OAAA9E,GAAAhjB,QAAA8nB,EAAAC,UAAAD,EAAAC,SAAAnO,IAAA,SAAA2N,EAAA9nB,GACA,OACAq3B,KAAAvP,EAAAmL,MACAtF,UAAApK,GAAAhjB,QAAAunB,EAAA8C,iBAAA9C,EAAA8C,gBAAA,GAAA9C,EAAA8C,gBACA/G,QAAApF,EAAAyV,iBAAAl0B,GACA+uB,QAAAjH,EAAAmG,eACAgoC,SAAAnuC,EAAAoG,WACAe,eAAAnH,EAAAqG,iBACAN,SAAA/F,EAAAsG,gBACAR,UAAA9F,EAAAgD,YACAgD,YAAAhG,EAAA+C,YACA4E,WAAA3H,EAAA2H,WAEAnI,aAAAtnB,IAEWqR,MAAA,MAIX+lB,eAAA,SAAA3Y,GACA,IAAA4Y,EAAA,GACAA,EAAAh3B,KAAA,cAAAoe,EAAAhG,GAAA,aAEA,QAAAzY,EAAA,EAAqBA,EAAAye,EAAA4J,KAAAC,SAAApoB,OAAgCF,IACrDq3B,EAAAh3B,KAAA,qCAAAoe,EAAA4J,KAAAC,SAAAtoB,GAAA4qB,gBAAA,aAEAnM,EAAA4J,KAAAC,SAAAtoB,GAAAizB,OACAoE,EAAAh3B,KAAAoe,EAAA4J,KAAAC,SAAAtoB,GAAAizB,OAGAoE,EAAAh3B,KAAA,SAIA,OADAg3B,EAAAh3B,KAAA,SACAg3B,EAAAz2B,KAAA,OAmBA,IAAAs1D,GAAAnxC,GAAAjK,OAAA,CACA8I,WAAA,SAAAskB,GACA3kB,GAAAzI,OAAAzJ,KAAA62B,GAEA72B,KAAA8kD,eAAA,GAKA9kD,KAAA+kD,aAAA,KAEA/kD,KAAAglD,cAAA,GAKAjZ,aAAAqY,GACA1sC,OAAA,SAAAs0B,EAAAC,EAAAC,GACA,IAAAriC,EAAA7J,KAqBA,OAnBA6J,EAAAkiC,eAEAliC,EAAAmiC,WACAniC,EAAAoiC,YACApiC,EAAAqiC,UAEAriC,EAAAyiC,sBACAziC,EAAA0iC,gBACA1iC,EAAA2iC,qBAEA3iC,EAAAo7C,oBACAp7C,EAAAq7C,cACAr7C,EAAAs7C,mBAEAt7C,EAAAwjC,YACAxjC,EAAAyjC,MACAzjC,EAAA0jC,WAEA1jC,EAAA2jC,cACA3jC,EAAAud,SAEAomB,YAAA4W,GAEA9X,oBAAA8X,GACA7X,cAAA,WACA,IAAA1iC,EAAA7J,KAEA6J,EAAAoY,gBAEApY,EAAA0D,MAAA1D,EAAAmiC,SACAniC,EAAA8D,KAAA,EACA9D,EAAAgE,MAAAhE,EAAA0D,QAEA1D,EAAA2D,OAAA3D,EAAAoiC,UAEApiC,EAAA+D,IAAA,EACA/D,EAAAiE,OAAAjE,EAAA2D,QAIA3D,EAAA6hC,YAAA,EACA7hC,EAAA8hC,WAAA,EACA9hC,EAAA+hC,aAAA,EACA/hC,EAAAgiC,cAAA,EAEAhiC,EAAAud,QAAA,CACA7Z,MAAA,EACAC,OAAA,IAGAg/B,mBAAA4X,GAEAa,kBAAAb,GACAc,YAAA,WACA,IAAAr7C,EAAA7J,KACAukD,EAAA16C,EAAAZ,QAAA4Y,QAAA,GACAujC,EAAAlzC,GAAAlK,SAAAu8C,EAAAr+B,eAAA,CAAArc,EAAAuD,OAAAvD,IAAA,GAEA06C,EAAAl6B,SACA+6B,IAAA/6B,OAAA,SAAA/f,GACA,OAAAi6C,EAAAl6B,OAAA/f,EAAAT,EAAAuD,MAAA4J,SAIAnN,EAAAZ,QAAAZ,SACA+8C,EAAA/8C,UAGAwB,EAAAu7C,eAEAD,iBAAAf,GAEA/W,UAAA+W,GACA9W,IAAA,WACA,IAAAzjC,EAAA7J,KACAinB,EAAApd,EAAAZ,QACAs7C,EAAAt9B,EAAApF,OACAgJ,EAAA5D,EAAA4D,QACAxd,EAAAxD,EAAAwD,IAEAg4C,EAAAnzC,GAAAjJ,QAAAoI,WAAAkzC,GAEA/yC,EAAA6zC,EAAA72C,KAEA82C,EAAAz7C,EAAAi7C,eAAA,GACA19B,EAAAvd,EAAAud,QACAnF,EAAApY,EAAAoY,eAYA,GAVAA,GACAmF,EAAA7Z,MAAA1D,EAAAmiC,SAEA5kB,EAAA5Z,OAAAqd,EAAA,OAEAzD,EAAA7Z,MAAAsd,EAAA,KACAzD,EAAA5Z,OAAA3D,EAAAoiC,WAIAphB,EAGA,GAFAxd,EAAAoE,KAAA4zC,EAAArkD,OAEAihB,EAAA,CAGA,IAAAsjC,EAAA17C,EAAA07C,WAAA,IACAC,EAAA,EACAn4C,EAAA60B,UAAA,OACA70B,EAAA80B,aAAA,MACAjwB,GAAA/J,KAAA0B,EAAAu7C,YAAA,SAAA5+B,EAAA73B,GACA,IAAA81D,EAAAH,GAAAC,EAAA/yC,GACAjE,EAAAk3C,EAAAjzC,EAAA,EAAAnE,EAAAqzB,YAAAla,EAAAR,MAAAzY,OAEA,IAAA5e,GAAA42D,IAAA12D,OAAA,GAAA0e,EAAAg3C,EAAA9lC,QAAA2I,EAAA7Z,SACAi4C,GAAAh0C,EAAA+yC,EAAA9lC,QACA8mC,IAAA12D,QAAAF,EAAA,QAAA41D,EAAA9lC,SAIA6mC,EAAA32D,GAAA,CACAgf,KAAA,EACAC,IAAA,EACAL,QACAC,OAAAgE,GAEA+zC,IAAA12D,OAAA,IAAA0e,EAAAg3C,EAAA9lC,UAEA2I,EAAA5Z,QAAAg4C,MACS,CACT,IAAAC,EAAAlB,EAAA9lC,QACAinC,EAAA77C,EAAA67C,aAAA,GACAC,EAAApB,EAAA9lC,QACAmnC,EAAA,EACAC,EAAA,EACAC,EAAAt0C,EAAAi0C,EACAvzC,GAAA/J,KAAA0B,EAAAu7C,YAAA,SAAA5+B,EAAA73B,GACA,IAAA81D,EAAAH,GAAAC,EAAA/yC,GACAu0C,EAAAtB,EAAAjzC,EAAA,EAAAnE,EAAAqzB,YAAAla,EAAAR,MAAAzY,MAEA5e,EAAA,GAAAk3D,EAAAC,EAAA1+B,EAAA5Z,OAAAi4C,IACAE,GAAAC,EAAArB,EAAA9lC,QACAinC,EAAA12D,KAAA42D,GAEAA,EAAA,EACAC,EAAA,GAIAD,EAAAryD,KAAAC,IAAAoyD,EAAAG,GACAF,GAAAC,EAEAR,EAAA32D,GAAA,CACAgf,KAAA,EACAC,IAAA,EACAL,MAAAw4C,EACAv4C,OAAAgE,KAGAm0C,GAAAC,EACAF,EAAA12D,KAAA42D,GACAx+B,EAAA7Z,OAAAo4C,EAIA97C,EAAA0D,MAAA6Z,EAAA7Z,MACA1D,EAAA2D,OAAA4Z,EAAA5Z,QAEA+/B,SAAA6W,GAEAniC,aAAA,WACA,cAAAjiB,KAAAiJ,QAAA4b,UAAA,WAAA7kB,KAAAiJ,QAAA4b,UAGA5L,KAAA,WACA,IAAApP,EAAA7J,KACAinB,EAAApd,EAAAZ,QACAs7C,EAAAt9B,EAAApF,OACAvQ,EAAAN,GAAAO,OACAd,EAAAa,EAAAb,aACAu1C,EAAA10C,EAAA0H,SAAA2D,KACAspC,EAAAp8C,EAAA0D,MACAg4C,EAAA17C,EAAA07C,WAEA,GAAAt+B,EAAA4D,QAAA,CACA,IAMAq7B,EANA74C,EAAAxD,EAAAwD,IACA6jC,EAAAmT,GAAAE,EAAArT,UAAA5/B,EAAAZ,kBAEA20C,EAAAnzC,GAAAjJ,QAAAoI,WAAAkzC,GAEA/yC,EAAA6zC,EAAA72C,KAGAnB,EAAA60B,UAAA,OACA70B,EAAA80B,aAAA,SACA90B,EAAAkP,UAAA,GACAlP,EAAAoP,YAAAy0B,EAEA7jC,EAAAiP,UAAA40B,EAEA7jC,EAAAoE,KAAA4zC,EAAArkD,OACA,IAAAyjD,EAAAH,GAAAC,EAAA/yC,GACA8zC,EAAAz7C,EAAAi7C,eA2DA7iC,EAAApY,EAAAoY,eAGAikC,EADAjkC,EACA,CACAjuB,EAAA6V,EAAA8D,MAAAs4C,EAAAV,EAAA,MAAAhB,EAAA9lC,QACAxqB,EAAA4V,EAAA+D,IAAA22C,EAAA9lC,QACA9B,KAAA,GAGA,CACA3oB,EAAA6V,EAAA8D,KAAA42C,EAAA9lC,QACAxqB,EAAA4V,EAAA+D,IAAA22C,EAAA9lC,QACA9B,KAAA,GAIA,IAAAmpC,EAAAt0C,EAAA+yC,EAAA9lC,QACAvM,GAAA/J,KAAA0B,EAAAu7C,YAAA,SAAA5+B,EAAA73B,GACA,IAAAw3D,EAAA94C,EAAAqzB,YAAAla,EAAAR,MAAAzY,MACAA,EAAAk3C,EAAAjzC,EAAA,EAAA20C,EACAnyD,EAAAkyD,EAAAlyD,EACAC,EAAAiyD,EAAAjyD,EAIAguB,EACAtzB,EAAA,GAAAqF,EAAAuZ,EAAAg3C,EAAA9lC,QAAA5U,EAAA8D,KAAA9D,EAAAud,QAAA7Z,QACAtZ,EAAAiyD,EAAAjyD,GAAA6xD,EACAI,EAAAvpC,OACA3oB,EAAAkyD,EAAAlyD,EAAA6V,EAAA8D,MAAAs4C,EAAAV,EAAAW,EAAAvpC,OAAA,EAAA4nC,EAAA9lC,SAEW9vB,EAAA,GAAAsF,EAAA6xD,EAAAj8C,EAAA+D,IAAA/D,EAAAud,QAAA5Z,SACXxZ,EAAAkyD,EAAAlyD,IAAA6V,EAAA67C,aAAAQ,EAAAvpC,MAAA4nC,EAAA9lC,QACAxqB,EAAAiyD,EAAAjyD,EAAA4V,EAAA+D,IAAA22C,EAAA9lC,QACAynC,EAAAvpC,QA3FA,SAAA3oB,EAAAC,EAAAuyB,GACA,KAAAlkB,MAAAmiD,OAAA,IAKAp3C,EAAAgC,OACA,IAAAkN,EAAA8nC,GAAA79B,EAAAjK,UAAAypC,EAAAvsC,aAaA,GAZApM,EAAAiP,UAAA+nC,GAAA79B,EAAAlK,UAAA7L,GACApD,EAAAqQ,QAAA2mC,GAAA79B,EAAA9I,QAAAsoC,EAAAppC,gBACAvP,EAAAuQ,eAAAymC,GAAA79B,EAAA5I,eAAAooC,EAAAlpC,kBACAzP,EAAAmP,SAAA6nC,GAAA79B,EAAAhK,SAAAwpC,EAAAjpC,iBACA1P,EAAAkP,YACAlP,EAAAoP,YAAA4nC,GAAA79B,EAAA/J,YAAAhM,GAEApD,EAAAsQ,aAEAtQ,EAAAsQ,YAAA0mC,GAAA79B,EAAAo+B,SAAAoB,EAAAnpC,aAGAoK,EAAApF,QAAAoF,EAAApF,OAAA2iC,cAAA,CAGA,IAAA92C,EAAA+2C,EAAAlxD,KAAA6yD,MAAA,EACA99B,EAAAt0B,EAAAywD,EAAA,EACAl8B,EAAAt0B,EAAAud,EAAA,EAEAU,GAAAE,OAAAjE,UAAAd,EAAAmZ,EAAApI,WAAA1Q,EAAA4a,EAAAC,QAGA,IAAAhM,GACAlP,EAAAs1B,WAAA3uC,EAAAC,EAAAwwD,EAAAjzC,GAGAnE,EAAAiT,SAAAtsB,EAAAC,EAAAwwD,EAAAjzC,GAGAnE,EAAAmC,WAyDA62C,CAAAryD,EAAAC,EAAAuyB,GACA8+B,EAAA32D,GAAAgf,KAAA3Z,EACAsxD,EAAA32D,GAAAif,IAAA3Z,EAxDA,SAAAD,EAAAC,EAAAuyB,EAAA2/B,GACA,IAAAG,EAAA90C,EAAA,EACA+0C,EAAA9B,EAAA6B,EAAAtyD,EACAwyD,EAAAvyD,EAAAqyD,EACAj5C,EAAA+0B,SAAA5b,EAAAR,KAAAugC,EAAAC,GAEAhgC,EAAAhU,SAEAnF,EAAAsB,YACAtB,EAAAkP,UAAA,EACAlP,EAAAU,OAAAw4C,EAAAC,GACAn5C,EAAAuB,OAAA23C,EAAAJ,EAAAK,GACAn5C,EAAA0B,UA8CAqzB,CAAApuC,EAAAC,EAAAuyB,EAAA2/B,GAEAlkC,EACAikC,EAAAlyD,GAAAuZ,EAAAg3C,EAAA9lC,QAEAynC,EAAAjyD,GAAA6xD,MASAW,iBAAA,SAAAzyD,EAAAC,GACA,IACAtF,EAAA+3D,EAAAC,EADA98C,EAAA7J,KAGA,GAAAhM,GAAA6V,EAAA8D,MAAA3Z,GAAA6V,EAAAgE,OAAA5Z,GAAA4V,EAAA+D,KAAA3Z,GAAA4V,EAAAiE,OAIA,IAFA64C,EAAA98C,EAAAi7C,eAEAn2D,EAAA,EAAmBA,EAAAg4D,EAAA93D,SAAeF,EAGlC,GAFA+3D,EAAAC,EAAAh4D,GAEAqF,GAAA0yD,EAAA/4C,MAAA3Z,GAAA0yD,EAAA/4C,KAAA+4C,EAAAn5C,OAAAtZ,GAAAyyD,EAAA94C,KAAA3Z,GAAAyyD,EAAA94C,IAAA84C,EAAAl5C,OAEA,OAAA3D,EAAAu7C,YAAAz2D,GAKA,aAQAs0C,YAAA,SAAA1c,GACA,IAGAqgC,EAHA/8C,EAAA7J,KACAinB,EAAApd,EAAAZ,QACAjD,EAAA,YAAAugB,EAAAvgB,KAAA,QAAAugB,EAAAvgB,KAGA,iBAAAA,GACA,IAAAihB,EAAA0c,UAAA1c,EAAA09B,QACA,WAEO,cAAA3+C,EAKP,OAJA,IAAAihB,EAAAX,QACA,OAOAsgC,EAAA/8C,EAAA48C,iBAAAlgC,EAAAvyB,EAAAuyB,EAAAtyB,GAEA,UAAA+R,EACA4gD,GAAA3/B,EAAAX,SAEAW,EAAAX,QAAAh3B,KAAAua,EAAA0c,EAAAuG,OAAA85B,IAGA3/B,EAAA09B,SAAAiC,IAAA/8C,EAAAk7C,eACAl7C,EAAAk7C,cACA99B,EAAA09B,QAAAr1D,KAAAua,EAAA0c,EAAAuG,OAAAjjB,EAAAk7C,cAGAl7C,EAAAk7C,aAAA6B,GAGA3/B,EAAA0c,SAAAijB,GAEA3/B,EAAA0c,QAAAr0C,KAAAua,EAAA0c,EAAAuG,OAAA85B,OAMA,SAAAC,GAAAz5C,EAAA05C,GACA,IAAA7gC,EAAA,IAAA4+B,GAAA,CACAx3C,IAAAD,EAAAC,IACApE,QAAA69C,EACA15C,UAEA6hB,GAAAK,UAAAliB,EAAA6Y,EAAA6gC,GACA73B,GAAAC,OAAA9hB,EAAA6Y,GACA7Y,EAAA6Y,SAGA,IAAA8gC,GAAA,CACA3/C,GAAA,SASA4/C,SAAAnC,GACAoC,WAAA,SAAA75C,GACA,IAAA05C,EAAA15C,EAAAnE,QAAAgd,OAEA6gC,GACAD,GAAAz5C,EAAA05C,IAGA/a,aAAA,SAAA3+B,GACA,IAAA05C,EAAA15C,EAAAnE,QAAAgd,OACAA,EAAA7Y,EAAA6Y,OAEA6gC,GACA50C,GAAA5I,QAAAw9C,EAAA91C,GAAAO,OAAA0U,QAEAA,GACAgJ,GAAAK,UAAAliB,EAAA6Y,EAAA6gC,GACA7gC,EAAAhd,QAAA69C,GAEAD,GAAAz5C,EAAA05C,IAEO7gC,IACPgJ,GAAAG,UAAAhiB,EAAA6Y,UACA7Y,EAAA6Y,SAGAihC,WAAA,SAAA95C,EAAAmZ,GACA,IAAAN,EAAA7Y,EAAA6Y,OAEAA,GACAA,EAAAgd,YAAA1c,KAIA4gC,GAAAj1C,GAAAhL,KAEA8J,GAAAT,KAAA,UACAyU,MAAA,CACA6F,SAAA,EACAhZ,UAAA,OACAsd,WAAA,EACA1Q,QAAA,GACAoG,SAAA,MACAmB,KAAA,GACArgB,OAAA,OASA,IAAAyhD,GAAA1zC,GAAAjK,OAAA,CACA8I,WAAA,SAAAskB,GAEA3kB,GAAAzI,OADAzJ,KACA62B,GADA72B,KAGA8kD,eAAA,IAGA/Y,aAAAob,GACAzvC,OAAA,SAAAs0B,EAAAC,EAAAC,GACA,IAAAriC,EAAA7J,KAqBA,OAnBA6J,EAAAkiC,eAEAliC,EAAAmiC,WACAniC,EAAAoiC,YACApiC,EAAAqiC,UAEAriC,EAAAyiC,sBACAziC,EAAA0iC,gBACA1iC,EAAA2iC,qBAEA3iC,EAAAo7C,oBACAp7C,EAAAq7C,cACAr7C,EAAAs7C,mBAEAt7C,EAAAwjC,YACAxjC,EAAAyjC,MACAzjC,EAAA0jC,WAEA1jC,EAAA2jC,cACA3jC,EAAAud,SAEAomB,YAAA2Z,GAEA7a,oBAAA6a,GACA5a,cAAA,WACA,IAAA1iC,EAAA7J,KAEA6J,EAAAoY,gBAEApY,EAAA0D,MAAA1D,EAAAmiC,SACAniC,EAAA8D,KAAA,EACA9D,EAAAgE,MAAAhE,EAAA0D,QAEA1D,EAAA2D,OAAA3D,EAAAoiC,UAEApiC,EAAA+D,IAAA,EACA/D,EAAAiE,OAAAjE,EAAA2D,QAIA3D,EAAA6hC,YAAA,EACA7hC,EAAA8hC,WAAA,EACA9hC,EAAA+hC,aAAA,EACA/hC,EAAAgiC,cAAA,EAEAhiC,EAAAud,QAAA,CACA7Z,MAAA,EACAC,OAAA,IAGAg/B,mBAAA2a,GAEAlC,kBAAAkC,GACAjC,YAAAiC,GACAhC,iBAAAgC,GAEA9Z,UAAA8Z,GACA7Z,IAAA,WACA,IAAAzjC,EAAA7J,KACAinB,EAAApd,EAAAZ,QACA4hB,EAAA5D,EAAA4D,QACAzD,EAAAvd,EAAAud,QACAigC,EAAAn1C,GAAAhjB,QAAA+3B,EAAAjB,MAAAiB,EAAAjB,KAAAn3B,OAAA,EAEAy4D,EAAAp1C,GAAAjJ,QAAAoI,WAAA4V,GAEAgyB,EAAApuB,EAAAw8B,EAAAC,EAAA11C,WAAA,EAAAqV,EAAAxI,QAAA,EAEA5U,EAAAoY,gBACAmF,EAAA7Z,MAAA1D,EAAAmiC,SAEA5kB,EAAA5Z,OAAAyrC,IAEA7xB,EAAA7Z,MAAA0rC,EACA7xB,EAAA5Z,OAAA3D,EAAAoiC,WAGApiC,EAAA0D,MAAA6Z,EAAA7Z,MACA1D,EAAA2D,OAAA4Z,EAAA5Z,QAEA+/B,SAAA4Z,GAEAllC,aAAA,WACA,IAAA2V,EAAA53B,KAAAiJ,QAAA4b,SACA,cAAA+S,GAAA,WAAAA,GAGA3e,KAAA,WACA,IAAApP,EAAA7J,KACAqN,EAAAxD,EAAAwD,IACA4Z,EAAApd,EAAAZ,QAEA,GAAAge,EAAA4D,QAAA,CACA,IASAmhB,EAAAub,EAAAC,EATAF,EAAAp1C,GAAAjJ,QAAAoI,WAAA4V,GAEArV,EAAA01C,EAAA11C,WACAoP,EAAApP,EAAA,EAAAqV,EAAAxI,QACApQ,EAAA,EACAT,EAAA/D,EAAA+D,IACAD,EAAA9D,EAAA8D,KACAG,EAAAjE,EAAAiE,OACAD,EAAAhE,EAAAgE,MAEAR,EAAAiP,UAAApK,GAAArK,eAAAof,EAAAiqB,UAAAlgC,GAAAO,OAAAb,kBAEArD,EAAAoE,KAAA61C,EAAAtmD,OAEA6I,EAAAoY,gBACAslC,EAAA55C,GAAAE,EAAAF,GAAA,EAEA65C,EAAA55C,EAAAoT,EACAgrB,EAAAn+B,EAAAF,IAEA45C,EAAA,SAAAtgC,EAAApC,SAAAlX,EAAAqT,EAAAnT,EAAAmT,EACAwmC,EAAA55C,GAAAE,EAAAF,GAAA,EACAo+B,EAAAl+B,EAAAF,EACAS,EAAA9a,KAAAoC,IAAA,SAAAsxB,EAAApC,UAAA,QAGAxX,EAAAgC,OACAhC,EAAAylC,UAAAyU,EAAAC,GACAn6C,EAAA9H,OAAA8I,GACAhB,EAAA60B,UAAA,SACA70B,EAAA80B,aAAA,SACA,IAAAnc,EAAAiB,EAAAjB,KAEA,GAAA9T,GAAAhjB,QAAA82B,GAGA,IAFA,IAAA/xB,EAAA,EAEAtF,EAAA,EAAyBA,EAAAq3B,EAAAn3B,SAAiBF,EAC1C0e,EAAA+0B,SAAApc,EAAAr3B,GAAA,EAAAsF,EAAA+3C,GACA/3C,GAAA2d,OAGAvE,EAAA+0B,SAAApc,EAAA,IAAAgmB,GAGA3+B,EAAAmC,cAKA,SAAAi4C,GAAAr6C,EAAAs6C,GACA,IAAA1iC,EAAA,IAAAoiC,GAAA,CACA/5C,IAAAD,EAAAC,IACApE,QAAAy+C,EACAt6C,UAEA6hB,GAAAK,UAAAliB,EAAA4X,EAAA0iC,GACAz4B,GAAAC,OAAA9hB,EAAA4X,GACA5X,EAAAu6C,WAAA3iC,EAGA,IAqCAiT,GAAA,GACAqqB,GAAAmB,GACAx9B,GAAA8gC,GACA/hC,GAxCA,CACA5d,GAAA,QASA4/C,SAAAI,GACAH,WAAA,SAAA75C,GACA,IAAAs6C,EAAAt6C,EAAAnE,QAAA+b,MAEA0iC,GACAD,GAAAr6C,EAAAs6C,IAGA3b,aAAA,SAAA3+B,GACA,IAAAs6C,EAAAt6C,EAAAnE,QAAA+b,MACA2iC,EAAAv6C,EAAAu6C,WAEAD,GACAx1C,GAAA5I,QAAAo+C,EAAA12C,GAAAO,OAAAyT,OAEA2iC,GACA14B,GAAAK,UAAAliB,EAAAu6C,EAAAD,GACAC,EAAA1+C,QAAAy+C,GAEAD,GAAAr6C,EAAAs6C,IAEOC,IACP14B,GAAAG,UAAAhiB,EAAAu6C,UACAv6C,EAAAu6C,cAwCA,QAAAh0D,MAhCAskC,GAAAqqB,UACArqB,GAAAhS,UACAgS,GAAAjT,SAKAkjB,GAAAjhC,QAAAiL,GA76JA,WAoaA,SAAA01C,EAAAC,EAAAx0B,EAAAy0B,GACA,IAAAC,EAaA,MAXA,kBAAAF,GACAE,EAAA5lD,SAAA0lD,EAAA,KAEA,IAAAA,EAAAz9C,QAAA,OAEA29C,IAAA,IAAA10B,EAAA2B,WAAA8yB,KAGAC,EAAAF,EAGAE,EAQA,SAAAC,EAAAhlD,GACA,YAAArT,IAAAqT,GAAA,OAAAA,GAAA,SAAAA,EAWA,SAAAilD,EAAAC,EAAAC,EAAAC,GACA,IAAAn1C,EAAA4gB,SAAAw0B,YAEArzB,EAAA9iB,GAAAo2C,eAAAJ,GAEAK,EAAAt1C,EAAAu1C,iBAAAN,GAAAC,GACAM,EAAAx1C,EAAAu1C,iBAAAxzB,GAAAmzB,GACAO,EAAAV,EAAAO,GACAI,EAAAX,EAAAS,GACAG,EAAAhhD,OAAA2lB,kBAEA,OAAAm7B,GAAAC,EACAp1D,KAAAD,IAAAo1D,EAAAd,EAAAW,EAAAL,EAAAE,GAAAQ,EAAAD,EAAAf,EAAAa,EAAAzzB,EAAAozB,GAAAQ,GAGA,OAndA12C,GAAAuc,MAAA,SAAAo6B,EAAAC,GACA,GAAA52C,GAAAhjB,QAAA25D,IAAA55D,MAAAwQ,UAAA4qB,OACA,OAAAw+B,EAAAx+B,OAAAy+B,GAGA,IAAAC,EAAA,GAMA,OALA72C,GAAA/J,KAAA0gD,EAAA,SAAAv+C,GACAw+C,EAAAx+C,IACAy+C,EAAA/5D,KAAAsb,KAGAy+C,GAGA72C,GAAAkD,UAAAnmB,MAAAwQ,UAAA2V,UAAA,SAAA/K,EAAArC,EAAAwI,GACA,OAAAnG,EAAA+K,UAAApN,EAAAwI,IACK,SAAAnG,EAAArC,EAAAwI,GACLA,OAAA7gB,IAAA6gB,EAAAnG,EAAAmG,EAEA,QAAA7hB,EAAA,EAAAga,EAAA0B,EAAAxb,OAA0CF,EAAAga,IAAUha,EACpD,GAAAqZ,EAAA1Y,KAAAkhB,EAAAnG,EAAA1b,KAAA0b,GACA,OAAA1b,EAIA,UAGAujB,GAAAif,cAAA,SAAA63B,EAAAF,EAAAG,GAEA/2C,GAAA7K,cAAA4hD,KACAA,GAAA,GAGA,QAAAt6D,EAAAs6D,EAAA,EAAkCt6D,EAAAq6D,EAAAn6D,OAA0BF,IAAA,CAC5D,IAAAu6D,EAAAF,EAAAr6D,GAEA,GAAAm6D,EAAAI,GACA,OAAAA,IAKAh3C,GAAAi3C,kBAAA,SAAAH,EAAAF,EAAAG,GAEA/2C,GAAA7K,cAAA4hD,KACAA,EAAAD,EAAAn6D,QAGA,QAAAF,EAAAs6D,EAAA,EAAkCt6D,GAAA,EAAQA,IAAA,CAC1C,IAAAu6D,EAAAF,EAAAr6D,GAEA,GAAAm6D,EAAAI,GACA,OAAAA,IAMAh3C,GAAAuB,SAAA,SAAA1e,GACA,OAAAuN,MAAAF,WAAArN,KAAA0S,SAAA1S,IAGAmd,GAAAikC,aAAA,SAAAniD,EAAAC,EAAAm1D,GACA,OAAA71D,KAAA2qB,IAAAlqB,EAAAC,GAAAm1D,GAGAl3C,GAAAgkC,YAAA,SAAAliD,EAAAo1D,GACA,IAAAC,EAAA91D,KAAAwM,MAAA/L,GACA,OAAAq1D,EAAAD,EAAAp1D,GAAAq1D,EAAAD,EAAAp1D,GAGAke,GAAA1e,IAAA,SAAA6W,GACA,OAAAA,EAAAg2B,OAAA,SAAA7sC,EAAAwP,GACA,OAAAV,MAAAU,GAIAxP,EAHAD,KAAAC,MAAAwP,IAIO4E,OAAA0xC,oBAGPpnC,GAAA5e,IAAA,SAAA+W,GACA,OAAAA,EAAAg2B,OAAA,SAAA/sC,EAAA0P,GACA,OAAAV,MAAAU,GAIA1P,EAHAC,KAAAD,MAAA0P,IAIO4E,OAAA2lB,oBAGPrb,GAAAqiC,KAAAhhD,KAAAghD,KAAA,SAAAvgD,GACA,OAAAT,KAAAghD,KAAAvgD,IACK,SAAAA,GAGL,YAFAA,OAEAsO,MAAAtO,GACAA,EAGAA,EAAA,QAEAke,GAAAs3B,MAAAj2C,KAAAi2C,MAAA,SAAAx1C,GACA,OAAAT,KAAAi2C,MAAAx1C,IACK,SAAAA,GACL,IAAAs1D,EAAA/1D,KAAAg2D,IAAAv1D,GAAAT,KAAAi2D,OAIAC,EAAAl2D,KAAAwM,MAAAupD,GACAI,EAAA11D,IAAAT,KAAAQ,IAAA,GAAA01D,GACA,OAAAC,EAAAD,EAAAH,GAGAp3C,GAAAg8B,UAAA,SAAA1oC,GACA,OAAAA,GAAAjS,KAAAoC,GAAA,MAGAuc,GAAA4nC,UAAA,SAAA6P,GACA,OAAAA,GAAA,IAAAp2D,KAAAoC,KAWAuc,GAAA+jC,eAAA,SAAAjiD,GACA,GAAAke,GAAAzK,SAAAzT,GAAA,CAOA,IAHA,IAAAuyB,EAAA,EACA5xB,EAAA,EAEApB,KAAAwM,MAAA/L,EAAAuyB,OAAAvyB,GACAuyB,GAAA,GACA5xB,IAGA,OAAAA,IAIAud,GAAAiJ,kBAAA,SAAAyuC,EAAAC,GACA,IAAAC,EAAAD,EAAA71D,EAAA41D,EAAA51D,EACA+1D,EAAAF,EAAA51D,EAAA21D,EAAA31D,EACA+1D,EAAAz2D,KAAAqC,KAAAk0D,IAAAC,KACA3uC,EAAA7nB,KAAAmC,MAAAq0D,EAAAD,GAMA,OAJA1uC,GAAA,GAAA7nB,KAAAoC,KACAylB,GAAA,EAAA7nB,KAAAoC,IAGA,CACAylB,QACAC,SAAA2uC,IAIA93C,GAAAkqB,sBAAA,SAAAxO,EAAAC,GACA,OAAAt6B,KAAAqC,KAAArC,KAAAQ,IAAA85B,EAAA75B,EAAA45B,EAAA55B,EAAA,GAAAT,KAAAQ,IAAA85B,EAAA55B,EAAA25B,EAAA35B,EAAA,KAUAie,GAAA+3C,WAAA,SAAAC,GACA,OAAAA,EAAA,YAYAh4C,GAAAy/B,YAAA,SAAAvkC,EAAAsiC,EAAAniC,GACA,IAAA82B,EAAAj3B,EAAA+8C,wBACAC,EAAA78C,EAAA,EACA,OAAAha,KAAAwM,OAAA2vC,EAAA0a,GAAA/lB,KAAA+lB,GAGAl4C,GAAAsY,YAAA,SAAA6/B,EAAAC,EAAAC,EAAA11D,GAIA,IAAA4a,EAAA46C,EAAAvsC,KAAAwsC,EAAAD,EACAntC,EAAAotC,EACArmC,EAAAsmC,EAAAzsC,KAAAwsC,EAAAC,EACAC,EAAAj3D,KAAAqC,KAAArC,KAAAQ,IAAAmpB,EAAAlpB,EAAAyb,EAAAzb,EAAA,GAAAT,KAAAQ,IAAAmpB,EAAAjpB,EAAAwb,EAAAxb,EAAA,IACAw2D,EAAAl3D,KAAAqC,KAAArC,KAAAQ,IAAAkwB,EAAAjwB,EAAAkpB,EAAAlpB,EAAA,GAAAT,KAAAQ,IAAAkwB,EAAAhwB,EAAAipB,EAAAjpB,EAAA,IACAy2D,EAAAF,KAAAC,GACAE,EAAAF,GAAAD,EAAAC,GAEAC,EAAApoD,MAAAooD,GAAA,EAAAA,EACAC,EAAAroD,MAAAqoD,GAAA,EAAAA,EACA,IAAAC,EAAA/1D,EAAA61D,EAEAG,EAAAh2D,EAAA81D,EACA,OACAl7C,SAAA,CACAzb,EAAAkpB,EAAAlpB,EAAA42D,GAAA3mC,EAAAjwB,EAAAyb,EAAAzb,GACAC,EAAAipB,EAAAjpB,EAAA22D,GAAA3mC,EAAAhwB,EAAAwb,EAAAxb,IAEAgwB,KAAA,CACAjwB,EAAAkpB,EAAAlpB,EAAA62D,GAAA5mC,EAAAjwB,EAAAyb,EAAAzb,GACAC,EAAAipB,EAAAjpB,EAAA42D,GAAA5mC,EAAAhwB,EAAAwb,EAAAxb,MAKAie,GAAA44C,QAAAljD,OAAAkjD,SAAA,MAEA54C,GAAAqY,oBAAA,SAAAlN,GAKA,IASA1uB,EAAAo8D,EAAAC,EAAAC,EA8BAC,EAAAC,EAAAC,EAAAC,EA6BAv9B,EApEAw9B,GAAAjuC,GAAA,IAAAvU,IAAA,SAAAoG,GACA,OACA6D,MAAA7D,EAAAyD,OACA44C,OAAA,EACAC,GAAA,KAIAC,EAAAH,EAAAz8D,OAGA,IAAAF,EAAA,EAAiBA,EAAA88D,IAAe98D,EAGhC,KAFAq8D,EAAAM,EAAA38D,IAEAokB,MAAA+K,KAAA,CAOA,GAHAitC,EAAAp8D,EAAA,EAAA28D,EAAA38D,EAAA,SACAs8D,EAAAt8D,EAAA88D,EAAA,EAAAH,EAAA38D,EAAA,WAEAs8D,EAAAl4C,MAAA+K,KAAA,CACA,IAAA4tC,EAAAT,EAAAl4C,MAAA/e,EAAAg3D,EAAAj4C,MAAA/e,EAEAg3D,EAAAO,OAAA,IAAAG,GAAAT,EAAAl4C,MAAA9e,EAAA+2D,EAAAj4C,MAAA9e,GAAAy3D,EAAA,GAGAX,KAAAh4C,MAAA+K,KACAktC,EAAAQ,GAAAR,EAAAO,QACSN,KAAAl4C,MAAA+K,KACTktC,EAAAQ,GAAAT,EAAAQ,OACSvrD,KAAAu0C,KAAAwW,EAAAQ,UAAAvrD,KAAAu0C,KAAAyW,EAAAO,QACTP,EAAAQ,GAAA,EAEAR,EAAAQ,IAAAT,EAAAQ,OAAAP,EAAAO,QAAA,EAOA,IAAA58D,EAAA,EAAiBA,EAAA88D,EAAA,IAAmB98D,EACpCq8D,EAAAM,EAAA38D,GACAs8D,EAAAK,EAAA38D,EAAA,GAEAq8D,EAAAj4C,MAAA+K,MAAAmtC,EAAAl4C,MAAA+K,OAIA5L,GAAAikC,aAAA6U,EAAAO,OAAA,EAAAvrD,KAAA8qD,SACAE,EAAAQ,GAAAP,EAAAO,GAAA,GAIAN,EAAAF,EAAAQ,GAAAR,EAAAO,OACAJ,EAAAF,EAAAO,GAAAR,EAAAO,QACAF,EAAA93D,KAAAQ,IAAAm3D,EAAA,GAAA33D,KAAAQ,IAAAo3D,EAAA,KAEA,IAIAC,EAAA,EAAA73D,KAAAqC,KAAAy1D,GACAL,EAAAQ,GAAAN,EAAAE,EAAAJ,EAAAO,OACAN,EAAAO,GAAAL,EAAAC,EAAAJ,EAAAO,UAMA,IAAA58D,EAAA,EAAiBA,EAAA88D,IAAe98D,GAChCq8D,EAAAM,EAAA38D,IAEAokB,MAAA+K,OAIAitC,EAAAp8D,EAAA,EAAA28D,EAAA38D,EAAA,QACAs8D,EAAAt8D,EAAA88D,EAAA,EAAAH,EAAA38D,EAAA,QAEAo8D,MAAAh4C,MAAA+K,OACAgQ,GAAAk9B,EAAAj4C,MAAA/e,EAAA+2D,EAAAh4C,MAAA/e,GAAA,EACAg3D,EAAAj4C,MAAA/C,sBAAAg7C,EAAAj4C,MAAA/e,EAAA85B,EACAk9B,EAAAj4C,MAAA7C,sBAAA86C,EAAAj4C,MAAA9e,EAAA65B,EAAAk9B,EAAAQ,IAGAP,MAAAl4C,MAAA+K,OACAgQ,GAAAm9B,EAAAl4C,MAAA/e,EAAAg3D,EAAAj4C,MAAA/e,GAAA,EACAg3D,EAAAj4C,MAAA9C,kBAAA+6C,EAAAj4C,MAAA/e,EAAA85B,EACAk9B,EAAAj4C,MAAA5C,kBAAA66C,EAAAj4C,MAAA9e,EAAA65B,EAAAk9B,EAAAQ,MAKAt5C,GAAAuY,SAAA,SAAAo+B,EAAAhiD,EAAAi9C,GACA,OAAAA,EACAj9C,GAAAgiD,EAAAh6D,OAAA,EAAAg6D,EAAA,GAAAA,EAAAhiD,EAAA,GAGAA,GAAAgiD,EAAAh6D,OAAA,EAAAg6D,IAAAh6D,OAAA,GAAAg6D,EAAAhiD,EAAA,IAGAqL,GAAA2L,aAAA,SAAAgrC,EAAAhiD,EAAAi9C,GACA,OAAAA,EACAj9C,GAAA,EAAAgiD,IAAAh6D,OAAA,GAAAg6D,EAAAhiD,EAAA,GAGAA,GAAA,EAAAgiD,EAAA,GAAAA,EAAAhiD,EAAA,IAIAqL,GAAA8jC,QAAA,SAAAhyB,EAAAjkB,GACA,IAAAupD,EAAA/1D,KAAAkB,MAAAyd,GAAAs3B,MAAAxlB,IACA2nC,EAAA3nC,EAAAzwB,KAAAQ,IAAA,GAAAu1D,GAuBA,OApBAvpD,EACA4rD,EAAA,IACA,EACSA,EAAA,EACT,EACSA,EAAA,EACT,EAEA,GAEOA,GAAA,EACP,EACOA,GAAA,EACP,EACOA,GAAA,EACP,EAEA,IAGAp4D,KAAAQ,IAAA,GAAAu1D,IAIAp3C,GAAAoD,iBACA,qBAAAvO,OACA,SAAAiB,GACAA,KAIAjB,OAAAmO,uBAAAnO,OAAA6kD,6BAAA7kD,OAAA8kD,0BAAA9kD,OAAA+kD,wBAAA/kD,OAAAglD,yBAAA,SAAA/jD,GACA,OAAAjB,OAAAilD,WAAAhkD,EAAA,SAKAkK,GAAA2a,oBAAA,SAAAo/B,EAAA7+C,GACA,IAAAwN,EAAA0D,EACAiI,EAAA0lC,EAAAC,eAAAD,EACA75C,EAAA65C,EAAA9lD,QAAA8lD,EAAAE,WACAC,EAAAh6C,EAAAi6C,wBACAC,EAAA/lC,EAAA+lC,QAEAA,KAAAz9D,OAAA,GACA+rB,EAAA0xC,EAAA,GAAAC,QACAjuC,EAAAguC,EAAA,GAAAE,UAEA5xC,EAAA2L,EAAAgmC,QACAjuC,EAAAiI,EAAAimC,SAMA,IAAA9gB,EAAAtpC,WAAA8P,GAAA6gB,SAAA3gB,EAAA,iBACAu5B,EAAAvpC,WAAA8P,GAAA6gB,SAAA3gB,EAAA,gBACAw5B,EAAAxpC,WAAA8P,GAAA6gB,SAAA3gB,EAAA,kBACAy5B,EAAAzpC,WAAA8P,GAAA6gB,SAAA3gB,EAAA,mBACA7E,EAAA6+C,EAAAv+C,MAAAu+C,EAAAz+C,KAAA+9B,EAAAE,EACAp+B,EAAA4+C,EAAAt+C,OAAAs+C,EAAAx+C,IAAA+9B,EAAAE,EAKA,OAFAjxB,EAAArnB,KAAAwM,OAAA6a,EAAAwxC,EAAAz+C,KAAA+9B,GAAAn+B,EAAA6E,EAAA7E,MAAAH,EAAA+8C,yBACA7rC,EAAA/qB,KAAAwM,OAAAue,EAAA8tC,EAAAx+C,IAAA+9B,GAAAn+B,EAAA4E,EAAA5E,OAAAJ,EAAA+8C,yBACA,CACAn2D,EAAA4mB,EACA3mB,EAAAqqB,IA0DApM,GAAAu6C,mBAAA,SAAAvE,GACA,OAAAD,EAAAC,EAAA,4BAIAh2C,GAAAw6C,oBAAA,SAAAxE,GACA,OAAAD,EAAAC,EAAA,8BAOAh2C,GAAAy6C,kBAAA,SAAA73B,EAAArW,EAAAmuC,GAEA,OADAnuC,EAAAvM,GAAA6gB,SAAA+B,EAAArW,IACArU,QAAA,QAAAwiD,EAAAzqD,SAAAsc,EAAA,QAAAtc,SAAAsc,EAAA,KAOAvM,GAAAo2C,eAAA,SAAAJ,GACA,IAAA2E,EAAA3E,EAAAlzB,WAMA,OAJA63B,GAAA,wBAAAA,EAAApqD,aACAoqD,IAAAC,MAGAD,GAGA36C,GAAA4yB,gBAAA,SAAAojB,GACA,IAAApzB,EAAA5iB,GAAAo2C,eAAAJ,GAEA,IAAApzB,EACA,OAAAozB,EAAAjzB,YAGA,IAAAA,EAAAH,EAAAG,YAEAyW,EAAAx5B,GAAAy6C,kBAAA73B,EAAA,eAAAG,GAEA2W,EAAA15B,GAAAy6C,kBAAA73B,EAAA,gBAAAG,GAEAvhC,EAAAuhC,EAAAyW,EAAAE,EACAmhB,EAAA76C,GAAAu6C,mBAAAvE,GACA,OAAA5lD,MAAAyqD,GAAAr5D,EAAAH,KAAAD,IAAAI,EAAAq5D,IAGA76C,GAAA8yB,iBAAA,SAAAkjB,GACA,IAAApzB,EAAA5iB,GAAAo2C,eAAAJ,GAEA,IAAApzB,EACA,OAAAozB,EAAA8E,aAGA,IAAAA,EAAAl4B,EAAAk4B,aAEArhB,EAAAz5B,GAAAy6C,kBAAA73B,EAAA,cAAAk4B,GAEAnhB,EAAA35B,GAAAy6C,kBAAA73B,EAAA,iBAAAk4B,GAEAr8D,EAAAq8D,EAAArhB,EAAAE,EACAohB,EAAA/6C,GAAAw6C,oBAAAxE,GACA,OAAA5lD,MAAA2qD,GAAAt8D,EAAA4C,KAAAD,IAAA3C,EAAAs8D,IAGA/6C,GAAA6gB,SAAA,SAAAa,EAAAd,GACA,OAAAc,EAAAs5B,aAAAt5B,EAAAs5B,aAAAp6B,GAAAe,SAAAw0B,YAAAG,iBAAA50B,EAAA,MAAAu5B,iBAAAr6B,IAGA5gB,GAAAkyB,YAAA,SAAAh3B,EAAAggD,GACA,IAAAC,EAAAjgD,EAAA+8C,wBAAAiD,GAAA,qBAAArmD,eAAAs9B,kBAAA,EAEA,OAAAgpB,EAAA,CAIA,IAAAj7C,EAAAhF,EAAAgF,OACA5E,EAAAJ,EAAAI,OACAD,EAAAH,EAAAG,MACA6E,EAAA5E,SAAA6/C,EACAj7C,EAAA7E,QAAA8/C,EACAjgD,EAAAC,IAAAhL,MAAAgrD,KAIAj7C,EAAAhE,MAAAZ,QAAA4E,EAAAhE,MAAAb,QACA6E,EAAAhE,MAAAZ,SAAA,KACA4E,EAAAhE,MAAAb,QAAA,QAKA2E,GAAAyuB,WAAA,SAAA2sB,EAAAz7C,EAAAF,GACA,OAAAE,EAAA,IAAAy7C,EAAA,MAAA37C,GAGAO,GAAAm4B,YAAA,SAAAh9B,EAAAoE,EAAA87C,EAAAx0B,GAEA,IAAA/hB,GADA+hB,KAAA,IACA/hB,KAAA+hB,EAAA/hB,MAAA,GACAw2C,EAAAz0B,EAAA00B,eAAA10B,EAAA00B,gBAAA,GAEA10B,EAAAtnB,WACAuF,EAAA+hB,EAAA/hB,KAAA,GACAw2C,EAAAz0B,EAAA00B,eAAA,GACA10B,EAAAtnB,QAGApE,EAAAoE,OACA,IAAAi8C,EAAA,EACAx7C,GAAA/J,KAAAolD,EAAA,SAAAI,QAEAh+D,IAAAg+D,GAAA,OAAAA,IAAA,IAAAz7C,GAAAhjB,QAAAy+D,GACAD,EAAAx7C,GAAAwuB,YAAArzB,EAAA2J,EAAAw2C,EAAAE,EAAAC,GACSz7C,GAAAhjB,QAAAy+D,IAGTz7C,GAAA/J,KAAAwlD,EAAA,SAAAC,QAEAj+D,IAAAi+D,GAAA,OAAAA,GAAA17C,GAAAhjB,QAAA0+D,KACAF,EAAAx7C,GAAAwuB,YAAArzB,EAAA2J,EAAAw2C,EAAAE,EAAAE,QAKA,IAAAC,EAAAL,EAAA3+D,OAAA,EAEA,GAAAg/D,EAAAN,EAAA1+D,OAAA,CACA,QAAAF,EAAA,EAAuBA,EAAAk/D,EAAWl/D,WAClCqoB,EAAAw2C,EAAA7+D,IAGA6+D,EAAAn4C,OAAA,EAAAw4C,GAGA,OAAAH,GAGAx7C,GAAAwuB,YAAA,SAAArzB,EAAA2J,EAAAw2C,EAAAE,EAAA1sD,GACA,IAAAmlD,EAAAnvC,EAAAhW,GAWA,OATAmlD,IACAA,EAAAnvC,EAAAhW,GAAAqM,EAAAqzB,YAAA1/B,GAAAuM,MACAigD,EAAAx+D,KAAAgS,IAGAmlD,EAAAuH,IACAA,EAAAvH,GAGAuH,GAGAx7C,GAAA28B,mBAAA,SAAA0e,GACA,IAAAO,EAAA,EAQA,OAPA57C,GAAA/J,KAAAolD,EAAA,SAAAI,GACAz7C,GAAAhjB,QAAAy+D,IACAA,EAAA9+D,OAAAi/D,IACAA,EAAAH,EAAA9+D,UAIAi/D,GAGA57C,GAAAo4B,MAAAtjC,EAGK,SAAAhE,GAML,OAJAA,aAAA+qD,iBACA/qD,EAAAgO,GAAAO,OAAAd,cAGAzJ,EAAAhE,IATA,SAAAA,GAEA,OADAqD,QAAAC,MAAA,uBACAtD,GAUAkP,GAAAoH,cAAA,SAAA00C,GAEA,OAAAA,aAAAC,eAAAD,aAAAD,eAAAC,EAAA97C,GAAAo4B,MAAA0jB,GAAAhpD,SAAA,IAAAD,OAAA,IAAAvD,aAiyIA0sD,GACAhmB,GAAAimB,UAAAjlB,GACAhB,GAAAkmB,UAAAn6C,GACAi0B,GAAAmmB,iBAAA55C,GACAyzB,GAAA5b,eACA4b,GAAAlyB,kBAAAwE,GACA0tB,GAAA53B,SAAAU,GACAk3B,GAAA71B,QAAAqB,GACAw0B,GAAAlvB,YACAkvB,GAAAomB,YAAApgC,GACAga,GAAAqmB,QAAAt/B,GACAiZ,GAAA7R,YACA6R,GAAAjQ,QAAAC,GACAgQ,GAAAsmB,MAAA/iB,GACAvD,GAAAumB,aAAAv1B,GACAgP,GAAAwmB,MAAAtlB,GACAlB,GAAAymB,QAAAvrB,GAEA8E,GAAAjhC,QAAAkB,KAAAyO,GAAA,SAAAvU,EAAA2D,GACAkiC,GAAAumB,aAAAr1B,kBAAApzB,EAAA3D,IAAA8xC,aAIAlc,GACAA,GAAAzpC,eAAAmF,KACAu0C,GAAAjQ,QAAAI,SAAAJ,GAAAtkC,KAIAu0C,GAAA7R,SAAA9jB,aACA,IAAAq8C,GAAA1mB,GA8FA,MA5FA,qBAAAnhC,SACAA,OAAAg9B,MAAAmE,IAYAA,GAAAnE,MAAAmE,GASAA,GAAA2c,OAAA5sB,GAAAhS,OAAA+gC,SASA9e,GAAAkf,MAAAnvB,GAAAjT,MAAAgiC,SASA9e,GAAA2mB,cAAA3mB,GAAAjQ,QAUAiQ,GAAA4mB,WAAA5mB,GAAA71B,QAAA5I,OAAA,IASAy+B,GAAA6mB,cAAA7mB,GAAAjhC,QAAAmL,OASA81B,GAAA8mB,cAAA9mB,GAAAqmB,QASArmB,GAAA+mB,gBAAA7a,GAQAlM,GAAAjhC,QAAAkB,KAAA,0EAAA+mD,GACAhnB,GAAAgnB,GAAA,SAAA7hD,EAAA8hD,GACA,WAAAjnB,GAAA76B,EAAA66B,GAAAjhC,QAAAmC,MAAA+lD,GAAA,GAA6E,CAC7EnpD,KAAAkpD,EAAAzoD,OAAA,GAAA2oD,cAAAF,EAAAxvD,MAAA,SAIAkvD,GAlxb8DS,CAAA,WAC9D,IACA,OAAaC,EAAQ,KAChB,MAAA/oC,KAHyD,sCCL9D/2B,EAAAC,QAAiB6/D,EAAQ,2BCFzB,SAAA9/D,GAI8DA,EAAAC,QAC7D,WACD,aAEA,IAAA8/D,EAmHAC,EAjHA,SAAAC,IACA,OAAAF,EAAAngE,MAAA,KAAAR,WASA,SAAAM,EAAAkvD,GACA,OAAAA,aAAAnvD,OAAA,mBAAAqY,OAAA7H,UAAAgD,SAAAnT,KAAA8uD,GAGA,SAAA52C,EAAA42C,GAGA,aAAAA,GAAA,oBAAA92C,OAAA7H,UAAAgD,SAAAnT,KAAA8uD,GAmBA,SAAAsR,EAAAtR,GACA,gBAAAA,EAGA,SAAA3qC,EAAA2qC,GACA,wBAAAA,GAAA,oBAAA92C,OAAA7H,UAAAgD,SAAAnT,KAAA8uD,GAGA,SAAAuR,EAAAvR,GACA,OAAAA,aAAArpC,MAAA,kBAAAzN,OAAA7H,UAAAgD,SAAAnT,KAAA8uD,GAGA,SAAAt1C,EAAA8mD,EAAA3nD,GACA,IACAtZ,EADAiqB,EAAA,GAGA,IAAAjqB,EAAA,EAAeA,EAAAihE,EAAA/gE,SAAgBF,EAC/BiqB,EAAA5pB,KAAAiZ,EAAA2nD,EAAAjhE,OAGA,OAAAiqB,EAGA,SAAAi3C,EAAAr6D,EAAAnC,GACA,OAAAiU,OAAA7H,UAAAjR,eAAAc,KAAAkG,EAAAnC,GAGA,SAAAoW,EAAAjU,EAAAnC,GACA,QAAA1E,KAAA0E,EACAw8D,EAAAx8D,EAAA1E,KACA6G,EAAA7G,GAAA0E,EAAA1E,IAYA,OARAkhE,EAAAx8D,EAAA,cACAmC,EAAAiN,SAAApP,EAAAoP,UAGAotD,EAAAx8D,EAAA,aACAmC,EAAA0sD,QAAA7uD,EAAA6uD,SAGA1sD,EAGA,SAAAs6D,EAAA1R,EAAAzV,EAAAonB,EAAAC,GACA,OAAAC,GAAA7R,EAAAzV,EAAAonB,EAAAC,GAAA,GAAAE,MAuBA,SAAAC,EAAA96D,GAKA,OAJA,MAAAA,EAAA+6D,MACA/6D,EAAA+6D,IApBA,CACAC,OAAA,EACAC,aAAA,GACAC,YAAA,GACAC,UAAA,EACAC,cAAA,EACAC,WAAA,EACAC,aAAA,KACAC,eAAA,EACAC,iBAAA,EACAC,KAAA,EACAC,gBAAA,GACAC,SAAA,KACAC,SAAA,EACAC,iBAAA,IASA77D,EAAA+6D,IAsBA,SAAAltD,EAAA7N,GACA,SAAAA,EAAA87D,SAAA,CACA,IAAAC,EAAAjB,EAAA96D,GACAg8D,EAAA7B,EAAAlgE,KAAA8hE,EAAAL,gBAAA,SAAApiE,GACA,aAAAA,IAEA2iE,GAAAhvD,MAAAjN,EAAAk8D,GAAAC,YAAAJ,EAAAZ,SAAA,IAAAY,EAAAf,QAAAe,EAAAT,eAAAS,EAAAK,iBAAAL,EAAAF,kBAAAE,EAAAV,YAAAU,EAAAR,gBAAAQ,EAAAP,mBAAAO,EAAAJ,UAAAI,EAAAJ,UAAAK,GAMA,GAJAh8D,EAAAq8D,UACAJ,KAAA,IAAAF,EAAAX,eAAA,IAAAW,EAAAd,aAAAzhE,aAAAc,IAAAyhE,EAAAO,SAGA,MAAArqD,OAAAsqD,UAAAtqD,OAAAsqD,SAAAv8D,GAGA,OAAAi8D,EAFAj8D,EAAA87D,SAAAG,EAMA,OAAAj8D,EAAA87D,SAGA,SAAAU,EAAAT,GACA,IAAA/7D,EAAAy6D,EAAArqC,KAQA,OANA,MAAA2rC,EACA3nD,EAAA0mD,EAAA96D,GAAA+7D,GAEAjB,EAAA96D,GAAAw7D,iBAAA,EAGAx7D,EA/CAm6D,EADAvgE,MAAAwQ,UAAA+vD,KACAvgE,MAAAwQ,UAAA+vD,KAEA,SAAAsC,GAIA,IAHA,IAAAj9D,EAAAyS,OAAAtH,MACAsI,EAAAzT,EAAAhG,SAAA,EAEAF,EAAA,EAAqBA,EAAA2Z,EAAS3Z,IAC9B,GAAAA,KAAAkG,GAAAi9D,EAAAxiE,KAAA0Q,KAAAnL,EAAAlG,KAAAkG,GACA,SAIA,UAwCA,IAAAk9D,EAAAtC,EAAAsC,iBAAA,GAEA,SAAAC,EAAAlyD,EAAAD,GACA,IAAAlR,EAAAyX,EAAA7R,EA0CA,GAxCAm7D,EAAA7vD,EAAAoyD,oBACAnyD,EAAAmyD,iBAAApyD,EAAAoyD,kBAGAvC,EAAA7vD,EAAAqyD,MACApyD,EAAAoyD,GAAAryD,EAAAqyD,IAGAxC,EAAA7vD,EAAAsyD,MACAryD,EAAAqyD,GAAAtyD,EAAAsyD,IAGAzC,EAAA7vD,EAAAuyD,MACAtyD,EAAAsyD,GAAAvyD,EAAAuyD,IAGA1C,EAAA7vD,EAAA6xD,WACA5xD,EAAA4xD,QAAA7xD,EAAA6xD,SAGAhC,EAAA7vD,EAAAwyD,QACAvyD,EAAAuyD,KAAAxyD,EAAAwyD,MAGA3C,EAAA7vD,EAAAyyD,UACAxyD,EAAAwyD,OAAAzyD,EAAAyyD,QAGA5C,EAAA7vD,EAAA0yD,WACAzyD,EAAAyyD,QAAA1yD,EAAA0yD,SAGA7C,EAAA7vD,EAAAuwD,OACAtwD,EAAAswD,IAAAD,EAAAtwD,IAGA6vD,EAAA7vD,EAAA2yD,WACA1yD,EAAA0yD,QAAA3yD,EAAA2yD,SAGAT,EAAAljE,OAAA,EACA,IAAAF,EAAA,EAAiBA,EAAAojE,EAAAljE,OAA6BF,IAC9CyX,EAAA2rD,EAAApjE,GAGA+gE,EAFAn7D,EAAAsL,EAAAuG,MAGAtG,EAAAsG,GAAA7R,GAKA,OAAAuL,EAGA,IAAA2yD,GAAA,EAEA,SAAAC,EAAA77B,GACAm7B,EAAAhyD,KAAA62B,GACA72B,KAAAuxD,GAAA,IAAAx8C,KAAA,MAAA8hB,EAAA06B,GAAA16B,EAAA06B,GAAAC,UAAA/rC,KAEAzlB,KAAAkD,YACAlD,KAAAuxD,GAAA,IAAAx8C,KAAA0Q,OAKA,IAAAgtC,IACAA,GAAA,EACAhD,EAAAkD,aAAA3yD,MACAyyD,GAAA,GAIA,SAAAG,EAAA/vD,GACA,OAAAA,aAAA6vD,GAAA,MAAA7vD,GAAA,MAAAA,EAAAovD,iBAGA,SAAAY,EAAAC,GACA,OAAAA,EAAA,EAEAv/D,KAAAwhD,KAAA+d,IAAA,EAEAv/D,KAAAkB,MAAAq+D,GAIA,SAAAC,EAAAC,GACA,IAAAC,GAAAD,EACAhwD,EAAA,EAMA,OAJA,IAAAiwD,GAAAxrD,SAAAwrD,KACAjwD,EAAA6vD,EAAAI,IAGAjwD,EAIA,SAAAkwD,EAAAC,EAAAC,EAAAC,GACA,IAGA1kE,EAHA2Z,EAAA/U,KAAAD,IAAA6/D,EAAAtkE,OAAAukE,EAAAvkE,QACAykE,EAAA//D,KAAA2qB,IAAAi1C,EAAAtkE,OAAAukE,EAAAvkE,QACA0kE,EAAA,EAGA,IAAA5kE,EAAA,EAAeA,EAAA2Z,EAAS3Z,KACxB0kE,GAAAF,EAAAxkE,KAAAykE,EAAAzkE,KAAA0kE,GAAAN,EAAAI,EAAAxkE,MAAAokE,EAAAK,EAAAzkE,MACA4kE,IAIA,OAAAA,EAAAD,EAGA,SAAA5T,EAAA8T,IACA,IAAA/D,EAAAgE,6BAAA,qBAAAptD,iBAAAq5C,MACAr5C,QAAAq5C,KAAA,wBAAA8T,GAIA,SAAAE,EAAAF,EAAAvrD,GACA,IAAA0rD,GAAA,EACA,OAAAlqD,EAAA,WAKA,GAJA,MAAAgmD,EAAAmE,oBACAnE,EAAAmE,mBAAA,KAAAJ,GAGAG,EAAA,CAIA,IAHA,IACA7kE,EADAwB,EAAA,GAGA3B,EAAA,EAAuBA,EAAAC,UAAAC,OAAsBF,IAAA,CAG7C,GAFAG,EAAA,GAEA,kBAAAF,UAAAD,GAAA,CAGA,QAAAU,KAFAP,GAAA,MAAAH,EAAA,KAEAC,UAAA,GACAE,GAAAO,EAAA,KAAAT,UAAA,GAAAS,GAAA,KAGAP,IAAA4Q,MAAA,WAEA5Q,EAAAF,UAAAD,GAGA2B,EAAAtB,KAAAF,GAGA4wD,EAAA8T,EAAA,gBAAAvkE,MAAAwQ,UAAAC,MAAApQ,KAAAgB,GAAAf,KAAA,cAAA42C,OAAA/kB,OACAuyC,GAAA,EAGA,OAAA1rD,EAAA7Y,MAAA4Q,KAAApR,YACKqZ,GAGL,IA0EAM,EA1EAsrD,EAAA,GAEA,SAAAC,EAAAnxD,EAAA6wD,GACA,MAAA/D,EAAAmE,oBACAnE,EAAAmE,mBAAAjxD,EAAA6wD,GAGAK,EAAAlxD,KACA+8C,EAAA8T,GACAK,EAAAlxD,IAAA,GAOA,SAAAoxD,EAAA3V,GACA,OAAAA,aAAA4V,UAAA,sBAAA1sD,OAAA7H,UAAAgD,SAAAnT,KAAA8uD,GAuBA,SAAA6V,EAAAC,EAAAC,GACA,IACA/tD,EADAwS,EAAAnP,EAAA,GAAuByqD,GAGvB,IAAA9tD,KAAA+tD,EACAtE,EAAAsE,EAAA/tD,KACAoB,EAAA0sD,EAAA9tD,KAAAoB,EAAA2sD,EAAA/tD,KACAwS,EAAAxS,GAAA,GACAqD,EAAAmP,EAAAxS,GAAA8tD,EAAA9tD,IACAqD,EAAAmP,EAAAxS,GAAA+tD,EAAA/tD,KACS,MAAA+tD,EAAA/tD,GACTwS,EAAAxS,GAAA+tD,EAAA/tD,UAEAwS,EAAAxS,IAKA,IAAAA,KAAA8tD,EACArE,EAAAqE,EAAA9tD,KAAAypD,EAAAsE,EAAA/tD,IAAAoB,EAAA0sD,EAAA9tD,MAEAwS,EAAAxS,GAAAqD,EAAA,GAA6BmP,EAAAxS,KAI7B,OAAAwS,EAGA,SAAAw7C,EAAAv9B,GACA,MAAAA,GACA72B,KAAAoU,IAAAyiB,GAzDA44B,EAAAgE,6BAAA,EACAhE,EAAAmE,mBAAA,KA+DArrD,EADAjB,OAAAiB,KACAjB,OAAAiB,KAEA,SAAA1F,GACA,IAAAlU,EACAiqB,EAAA,GAEA,IAAAjqB,KAAAkU,EACAgtD,EAAAhtD,EAAAlU,IACAiqB,EAAA5pB,KAAAL,GAIA,OAAAiqB,GAiFA,IAAAy7C,EAAA,GAEA,SAAAC,EAAA3e,EAAA4e,GACA,IAAAC,EAAA7e,EAAAyZ,cACAiF,EAAAG,GAAAH,EAAAG,EAAA,KAAAH,EAAAE,GAAA5e,EAGA,SAAA8e,EAAAC,GACA,wBAAAA,EAAAL,EAAAK,IAAAL,EAAAK,EAAAtF,oBAAAz/D,EAGA,SAAAglE,EAAAC,GACA,IACAC,EACAzuD,EAFA0uD,EAAA,GAIA,IAAA1uD,KAAAwuD,EACA/E,EAAA+E,EAAAxuD,KACAyuD,EAAAJ,EAAAruD,MAGA0uD,EAAAD,GAAAD,EAAAxuD,IAKA,OAAA0uD,EAGA,IAAAC,EAAA,GAEA,SAAAC,EAAArf,EAAAsf,GACAF,EAAApf,GAAAsf,EAmBA,SAAAC,EAAApC,EAAAqC,EAAAC,GACA,IAAAC,EAAA,GAAA9hE,KAAA2qB,IAAA40C,GACAwC,EAAAH,EAAAE,EAAAxmE,OACA0lD,EAAAue,GAAA,EACA,OAAAve,EAAA6gB,EAAA,YAAA7hE,KAAAQ,IAAA,GAAAR,KAAAC,IAAA,EAAA8hE,IAAA7yD,WAAA8E,OAAA,GAAA8tD,EAGA,IAAAE,EAAA,uLACAC,EAAA,6CACAC,EAAA,GACAC,EAAA,GAKA,SAAAC,EAAAC,EAAAC,EAAAC,EAAA9tD,GACA,IAAAxI,EAAAwI,EAEA,kBAAAA,IACAxI,EAAA,WACA,OAAAQ,KAAAgI,OAIA4tD,IACAF,EAAAE,GAAAp2D,GAGAq2D,IACAH,EAAAG,EAAA,eACA,OAAAX,EAAA11D,EAAApQ,MAAA4Q,KAAApR,WAAAinE,EAAA,GAAAA,EAAA,MAIAC,IACAJ,EAAAI,GAAA,WACA,OAAA91D,KAAA+1D,aAAAD,QAAAt2D,EAAApQ,MAAA4Q,KAAApR,WAAAgnE,KAuCA,SAAAI,EAAA3gE,EAAAszC,GACA,OAAAtzC,EAAA6N,WAIAylC,EAAAstB,EAAAttB,EAAAtzC,EAAA0gE,cACAN,EAAA9sB,GAAA8sB,EAAA9sB,IAhCA,SAAAA,GACA,IACAh6C,EACAE,EAXAuvD,EASA/zC,EAAAs+B,EAAA1mC,MAAAszD,GAIA,IAAA5mE,EAAA,EAAAE,EAAAwb,EAAAxb,OAAsCF,EAAAE,EAAYF,IAClD+mE,EAAArrD,EAAA1b,IACA0b,EAAA1b,GAAA+mE,EAAArrD,EAAA1b,IAEA0b,EAAA1b,IAjBAyvD,EAiBA/zC,EAAA1b,IAhBAsT,MAAA,YACAm8C,EAAA8X,QAAA,eAGA9X,EAAA8X,QAAA,UAgBA,gBAAAC,GACA,IACAxnE,EADAynE,EAAA,GAGA,IAAAznE,EAAA,EAAiBA,EAAAE,EAAYF,IAC7BynE,GAAArC,EAAA1pD,EAAA1b,IAAA0b,EAAA1b,GAAAW,KAAA6mE,EAAAxtB,GAAAt+B,EAAA1b,GAGA,OAAAynE,GAWAC,CAAA1tB,GACA8sB,EAAA9sB,GAAAtzC,IALAA,EAAA0gE,aAAAO,cAQA,SAAAL,EAAAttB,EAAAonB,GACA,IAAAphE,EAAA,EAEA,SAAA4nE,EAAAnY,GACA,OAAA2R,EAAAyG,eAAApY,MAKA,IAFAoX,EAAAiB,UAAA,EAEA9nE,GAAA,GAAA6mE,EAAAkB,KAAA/tB,IACAA,IAAAutB,QAAAV,EAAAe,GACAf,EAAAiB,UAAA,EACA9nE,GAAA,EAGA,OAAAg6C,EAGA,IAAAguB,EAAA,KAEAC,EAAA,OAEAC,EAAA,QAEAC,EAAA,QAEAC,EAAA,aAEAC,EAAA,QAEAC,EAAA,YAEAC,EAAA,gBAEAC,GAAA,UAEAC,GAAA,UAEAC,GAAA,eAEAC,GAAA,MAEAC,GAAA,WAEAC,GAAA,qBAEAC,GAAA,0BAMAC,GAAA,wJACAC,GAAA,GAEA,SAAAC,GAAAhC,EAAAiC,EAAAC,GACAH,GAAA/B,GAAA7B,EAAA8D,KAAA,SAAAE,EAAAhC,GACA,OAAAgC,GAAAD,IAAAD,GAIA,SAAAG,GAAApC,EAAA/+B,GACA,OAAAg5B,EAAA8H,GAAA/B,GAIA+B,GAAA/B,GAAA/+B,EAAA66B,QAAA76B,EAAA27B,SAHA,IAAAyF,OAQAC,GARAtC,EAQAM,QAAA,SAAAA,QAAA,+CAAAiC,EAAAnU,EAAAoU,EAAAC,EAAAC,GACA,OAAAtU,GAAAoU,GAAAC,GAAAC,MAIA,SAAAJ,GAAAtnE,GACA,OAAAA,EAAAslE,QAAA,yBAA0C,QAG1C,IAAAqC,GAAA,GAEA,SAAAC,GAAA5C,EAAA5tD,GACA,IAAArZ,EACA6Q,EAAAwI,EAYA,IAVA,kBAAA4tD,IACAA,EAAA,CAAAA,IAGAniD,EAAAzL,KACAxI,EAAA,SAAA4+C,EAAA/zC,GACAA,EAAArC,GAAA+qD,EAAA3U,KAIAzvD,EAAA,EAAeA,EAAAinE,EAAA/mE,OAAkBF,IACjC4pE,GAAA3C,EAAAjnE,IAAA6Q,EAIA,SAAAi5D,GAAA7C,EAAA5tD,GACAwwD,GAAA5C,EAAA,SAAAxX,EAAA/zC,EAAAwsB,EAAA++B,GACA/+B,EAAA6hC,GAAA7hC,EAAA6hC,IAAA,GACA1wD,EAAAo2C,EAAAvnB,EAAA6hC,GAAA7hC,EAAA++B,KAIA,SAAA+C,GAAA/C,EAAAxX,EAAAvnB,GACA,MAAAunB,GAAAyR,EAAA0I,GAAA3C,IACA2C,GAAA3C,GAAAxX,EAAAvnB,EAAA+hC,GAAA/hC,EAAA++B,GAIA,IAAAiD,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EAiCA,SAAAC,GAAAnc,GACA,OAAAoc,GAAApc,GAAA,QAGA,SAAAoc,GAAApc,GACA,OAAAA,EAAA,OAAAA,EAAA,SAAAA,EAAA,QApCAwY,EAAA,mBACA,IAAA1hE,EAAA+L,KAAAm9C,OACA,OAAAlpD,GAAA,QAAAA,EAAA,IAAAA,IAEA0hE,EAAA,wBACA,OAAA31D,KAAAm9C,OAAA,MAEAwY,EAAA,uBACAA,EAAA,wBACAA,EAAA,4BAEArB,EAAA,YAEAU,EAAA,UAEA4C,GAAA,IAAAL,IACAK,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,OAAAR,GAAAN,GACAc,GAAA,QAAAP,GAAAN,GACAa,GAAA,SAAAP,GAAAN,GACAyB,GAAA,mBAAAK,IACAL,GAAA,gBAAApa,EAAA/zC,GACAA,EAAAwuD,IAAA,IAAAza,EAAAvvD,OAAA4gE,EAAA+J,kBAAApb,GAAA2U,EAAA3U,KAEAoa,GAAA,cAAApa,EAAA/zC,GACAA,EAAAwuD,IAAApJ,EAAA+J,kBAAApb,KAEAoa,GAAA,aAAApa,EAAA/zC,GACAA,EAAAwuD,IAAA12D,SAAAi8C,EAAA,MAYAqR,EAAA+J,kBAAA,SAAApb,GACA,OAAA2U,EAAA3U,IAAA2U,EAAA3U,GAAA,cAIA,IAkEAh0C,GAlEAqvD,GAAAC,GAAA,eAMA,SAAAA,GAAA/jB,EAAAgkB,GACA,gBAAA32D,GACA,aAAAA,GACA42D,GAAA55D,KAAA21C,EAAA3yC,GACAysD,EAAAkD,aAAA3yD,KAAA25D,GACA35D,MAEAmU,GAAAnU,KAAA21C,IAKA,SAAAxhC,GAAAgiD,EAAAxgB,GACA,OAAAwgB,EAAAjzD,UAAAizD,EAAA5E,GAAA,OAAA4E,EAAA7D,OAAA,UAAA3c,KAAAlwB,IAGA,SAAAm0C,GAAAzD,EAAAxgB,EAAA3yC,GACAmzD,EAAAjzD,YAAAZ,MAAAU,KACA,aAAA2yC,GAAA4jB,GAAApD,EAAAhZ,SAAA,IAAAgZ,EAAAlZ,SAAA,KAAAkZ,EAAA1W,OACA0W,EAAA5E,GAAA,OAAA4E,EAAA7D,OAAA,UAAA3c,GAAA3yC,EAAAmzD,EAAAlZ,QAAA4c,GAAA72D,EAAAmzD,EAAAlZ,UAEAkZ,EAAA5E,GAAA,OAAA4E,EAAA7D,OAAA,UAAA3c,GAAA3yC,IA0DA,SAAA62D,GAAA1c,EAAAF,GACA,GAAA36C,MAAA66C,IAAA76C,MAAA26C,GACA,OAAAx3B,IAGA,IA5BAzxB,EA4BA8lE,GAAA7c,GA5BAjpD,EA4BA,IA3BAA,KA6BA,OADAmpD,IAAAF,EAAA6c,GAAA,GACA,IAAAA,EAAAP,GAAApc,GAAA,SAAA2c,EAAA,IAvBA1vD,GADAnb,MAAAwQ,UAAA2K,QACAnb,MAAAwQ,UAAA2K,QAEA,SAAA2vD,GAEA,IAAAprE,EAEA,IAAAA,EAAA,EAAiBA,EAAAqR,KAAAnR,SAAiBF,EAClC,GAAAqR,KAAArR,KAAAorE,EACA,OAAAprE,EAIA,UAeAgnE,EAAA,6BACA,OAAA31D,KAAAi9C,QAAA,IAEA0Y,EAAA,mBAAAhtB,GACA,OAAA3oC,KAAA+1D,aAAAiE,YAAAh6D,KAAA2oC,KAEAgtB,EAAA,oBAAAhtB,GACA,OAAA3oC,KAAA+1D,aAAAkE,OAAAj6D,KAAA2oC,KAGA2rB,EAAA,aAEAU,EAAA,WAEA4C,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,eAAAG,EAAAhI,GACA,OAAAA,EAAAmK,iBAAAnC,KAEAH,GAAA,gBAAAG,EAAAhI,GACA,OAAAA,EAAAoK,YAAApC,KAEAS,GAAA,oBAAApa,EAAA/zC,GACAA,EAAAyuD,IAAA/F,EAAA3U,GAAA,IAEAoa,GAAA,wBAAApa,EAAA/zC,EAAAwsB,EAAA++B,GACA,IAAA3Y,EAAApmB,EAAA27B,QAAA4H,YAAAhc,EAAAwX,EAAA/+B,EAAA66B,SAGA,MAAAzU,EACA5yC,EAAAyuD,IAAA7b,EAEAkT,EAAAt5B,GAAA85B,aAAAvS,IAIA,IAAAic,GAAA,gCACAC,GAAA,wFAAA59B,MAAA,KAUA69B,GAAA,kDAAA79B,MAAA,KAsGA,SAAA89B,GAAArE,EAAAnzD,GACA,IAAAy3D,EAEA,IAAAtE,EAAAjzD,UAEA,OAAAizD,EAGA,qBAAAnzD,EACA,WAAA0zD,KAAA1zD,GACAA,EAAA+vD,EAAA/vD,QAIA,IAAAyQ,EAFAzQ,EAAAmzD,EAAAJ,aAAAqE,YAAAp3D,IAGA,OAAAmzD,EASA,OAJAsE,EAAAlnE,KAAAD,IAAA6iE,EAAA1W,OAAAoa,GAAA1D,EAAAhZ,OAAAn6C,IAEAmzD,EAAA5E,GAAA,OAAA4E,EAAA7D,OAAA,mBAAAtvD,EAAAy3D,GAEAtE,EAGA,SAAAuE,GAAA13D,GACA,aAAAA,GACAw3D,GAAAx6D,KAAAgD,GACAysD,EAAAkD,aAAA3yD,MAAA,GACAA,MAEAmU,GAAAnU,KAAA,SAQA,IAAA26D,GAAAjD,GAsBAkD,GAAAlD,GAsBA,SAAAmD,KACA,SAAAC,EAAAtlE,EAAAnC,GACA,OAAAA,EAAAxE,OAAA2G,EAAA3G,OAGA,IAGAF,EACAwnE,EAJA4E,EAAA,GACAC,EAAA,GACAC,EAAA,GAIA,IAAAtsE,EAAA,EAAeA,EAAA,GAAQA,IAEvBwnE,EAAArG,EAAA,KAAAnhE,IACAosE,EAAA/rE,KAAAgR,KAAAg6D,YAAA7D,EAAA,KACA6E,EAAAhsE,KAAAgR,KAAAi6D,OAAA9D,EAAA,KACA8E,EAAAjsE,KAAAgR,KAAAi6D,OAAA9D,EAAA,KACA8E,EAAAjsE,KAAAgR,KAAAg6D,YAAA7D,EAAA,KASA,IAJA4E,EAAAnsC,KAAAksC,GACAE,EAAApsC,KAAAksC,GACAG,EAAArsC,KAAAksC,GAEAnsE,EAAA,EAAeA,EAAA,GAAQA,IACvBosE,EAAApsE,GAAAupE,GAAA6C,EAAApsE,IACAqsE,EAAArsE,GAAAupE,GAAA8C,EAAArsE,IAGA,IAAAA,EAAA,EAAeA,EAAA,GAAQA,IACvBssE,EAAAtsE,GAAAupE,GAAA+C,EAAAtsE,IAGAqR,KAAAk7D,aAAA,IAAAjD,OAAA,KAAAgD,EAAA1rE,KAAA,cACAyQ,KAAAm7D,kBAAAn7D,KAAAk7D,aACAl7D,KAAAo7D,mBAAA,IAAAnD,OAAA,KAAA+C,EAAAzrE,KAAA,cACAyQ,KAAAq7D,wBAAA,IAAApD,OAAA,KAAA8C,EAAAxrE,KAAA,cAsBA,SAAA+rE,GAAArnE,GACA,IAAAwrD,EAEA,GAAAxrD,EAAA,KAAAA,GAAA,GACA,IAAA3D,EAAArB,MAAAwQ,UAAAC,MAAApQ,KAAAV,WAEA0B,EAAA,GAAA2D,EAAA,IACAwrD,EAAA,IAAA1qC,UAAAwmD,IAAAnsE,MAAA,KAAAkB,IAEAmX,SAAAg4C,EAAA+b,mBACA/b,EAAAgc,eAAAxnE,QAGAwrD,EAAA,IAAA1qC,UAAAwmD,IAAAnsE,MAAA,KAAAR,YAGA,OAAA6wD,EAIA,SAAAic,GAAAve,EAAAwe,EAAAC,GACA,IACAC,EAAA,EAAAF,EAAAC,EAEAE,GAAA,EAAAR,GAAAne,EAAA,EAAA0e,GAAAE,YAAAJ,GAAA,EACA,OAAAG,EAAAD,EAAA,EAIA,SAAAG,GAAA7e,EAAAH,EAAAiC,EAAA0c,EAAAC,GACA,IAGAK,EACAC,EAJAC,GAAA,EAAAld,EAAA0c,GAAA,EACAS,EAAAV,GAAAve,EAAAwe,EAAAC,GACAS,EAAA,KAAArf,EAAA,GAAAmf,EAAAC,EAeA,OAXAC,GAAA,EAEAH,EAAA5C,GADA2C,EAAA9e,EAAA,GACAkf,EACKA,EAAA/C,GAAAnc,IACL8e,EAAA9e,EAAA,EACA+e,EAAAG,EAAA/C,GAAAnc,KAEA8e,EAAA9e,EACA+e,EAAAG,GAGA,CACAlf,KAAA8e,EACAI,UAAAH,GAIA,SAAAI,GAAAnG,EAAAwF,EAAAC,GACA,IAEAW,EACAN,EAHAG,EAAAV,GAAAvF,EAAAhZ,OAAAwe,EAAAC,GACA5e,EAAAzpD,KAAAkB,OAAA0hE,EAAAkG,YAAAD,EAAA,QAeA,OAXApf,EAAA,GACAif,EAAA9F,EAAAhZ,OAAA,EACAof,EAAAvf,EAAAwf,GAAAP,EAAAN,EAAAC,IACK5e,EAAAwf,GAAArG,EAAAhZ,OAAAwe,EAAAC,IACLW,EAAAvf,EAAAwf,GAAArG,EAAAhZ,OAAAwe,EAAAC,GACAK,EAAA9F,EAAAhZ,OAAA,IAEA8e,EAAA9F,EAAAhZ,OACAof,EAAAvf,GAGA,CACAA,KAAAuf,EACApf,KAAA8e,GAIA,SAAAO,GAAArf,EAAAwe,EAAAC,GACA,IAAAQ,EAAAV,GAAAve,EAAAwe,EAAAC,GACAa,EAAAf,GAAAve,EAAA,EAAAwe,EAAAC,GACA,OAAAtC,GAAAnc,GAAAif,EAAAK,GAAA,EA+HA,SAAAC,GAAAC,EAAA5nE,GACA,OAAA4nE,EAAAj9D,MAAA3K,EAAA,GAAAyO,OAAAm5D,EAAAj9D,MAAA,EAAA3K,IA5HA4gE,EAAA,0BACAA,EAAA,6BAEArB,EAAA,YACAA,EAAA,eAEAU,EAAA,UACAA,EAAA,aAEA4C,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACA6B,GAAA,6BAAAra,EAAApB,EAAAnmB,EAAA++B,GACA5Y,EAAA4Y,EAAAruD,OAAA,MAAAwrD,EAAA3U,KAmCAuX,EAAA,kBACAA,EAAA,kBAAAhtB,GACA,OAAA3oC,KAAA+1D,aAAA6G,YAAA58D,KAAA2oC,KAEAgtB,EAAA,mBAAAhtB,GACA,OAAA3oC,KAAA+1D,aAAA8G,cAAA78D,KAAA2oC,KAEAgtB,EAAA,oBAAAhtB,GACA,OAAA3oC,KAAA+1D,aAAA+G,SAAA98D,KAAA2oC,KAEAgtB,EAAA,mBACAA,EAAA,sBAEArB,EAAA,WACAA,EAAA,eACAA,EAAA,kBAEAU,EAAA,UACAA,EAAA,cACAA,EAAA,iBAEA4C,GAAA,IAAAZ,GACAY,GAAA,IAAAZ,GACAY,GAAA,IAAAZ,GACAY,GAAA,cAAAG,EAAAhI,GACA,OAAAA,EAAAgN,iBAAAhF,KAEAH,GAAA,eAAAG,EAAAhI,GACA,OAAAA,EAAAiN,mBAAAjF,KAEAH,GAAA,gBAAAG,EAAAhI,GACA,OAAAA,EAAAkN,cAAAlF,KAEAU,GAAA,6BAAAra,EAAApB,EAAAnmB,EAAA++B,GACA,IAAA3W,EAAApoB,EAAA27B,QAAA0K,cAAA9e,EAAAwX,EAAA/+B,EAAA66B,SAGA,MAAAzS,EACAjC,EAAA7gB,EAAA8iB,EAEAkR,EAAAt5B,GAAA46B,eAAArT,IAGAqa,GAAA,uBAAAra,EAAApB,EAAAnmB,EAAA++B,GACA5Y,EAAA4Y,GAAA7C,EAAA3U,KAkCA,IAAA+e,GAAA,2DAAAzgC,MAAA,KAOA0gC,GAAA,8BAAA1gC,MAAA,KAMA2gC,GAAA,uBAAA3gC,MAAA,KAyKA4gC,GAAA5F,GAsBA6F,GAAA7F,GAsBA8F,GAAA9F,GAsBA,SAAA+F,KACA,SAAA3C,EAAAtlE,EAAAnC,GACA,OAAAA,EAAAxE,OAAA2G,EAAA3G,OAGA,IAIAF,EACAwnE,EACAuH,EACAC,EACAC,EARAC,EAAA,GACA9C,EAAA,GACAC,EAAA,GACAC,EAAA,GAOA,IAAAtsE,EAAA,EAAeA,EAAA,EAAOA,IAEtBwnE,EAAArG,EAAA,SAAA/S,IAAApuD,GACA+uE,EAAA19D,KAAA48D,YAAAzG,EAAA,IACAwH,EAAA39D,KAAA68D,cAAA1G,EAAA,IACAyH,EAAA59D,KAAA88D,SAAA3G,EAAA,IACA0H,EAAA7uE,KAAA0uE,GACA3C,EAAA/rE,KAAA2uE,GACA3C,EAAAhsE,KAAA4uE,GACA3C,EAAAjsE,KAAA0uE,GACAzC,EAAAjsE,KAAA2uE,GACA1C,EAAAjsE,KAAA4uE,GAUA,IALAC,EAAAjvC,KAAAksC,GACAC,EAAAnsC,KAAAksC,GACAE,EAAApsC,KAAAksC,GACAG,EAAArsC,KAAAksC,GAEAnsE,EAAA,EAAeA,EAAA,EAAOA,IACtBosE,EAAApsE,GAAAupE,GAAA6C,EAAApsE,IACAqsE,EAAArsE,GAAAupE,GAAA8C,EAAArsE,IACAssE,EAAAtsE,GAAAupE,GAAA+C,EAAAtsE,IAGAqR,KAAA89D,eAAA,IAAA7F,OAAA,KAAAgD,EAAA1rE,KAAA,cACAyQ,KAAA+9D,oBAAA/9D,KAAA89D,eACA99D,KAAAg+D,kBAAAh+D,KAAA89D,eACA99D,KAAAi+D,qBAAA,IAAAhG,OAAA,KAAA+C,EAAAzrE,KAAA,cACAyQ,KAAAk+D,0BAAA,IAAAjG,OAAA,KAAA8C,EAAAxrE,KAAA,cACAyQ,KAAAm+D,wBAAA,IAAAlG,OAAA,KAAA4F,EAAAtuE,KAAA,cAIA,SAAA6uE,KACA,OAAAp+D,KAAAq+D,QAAA,OAuBA,SAAArN,GAAA4E,EAAA0I,GACA3I,EAAAC,EAAA,eACA,OAAA51D,KAAA+1D,aAAA/E,SAAAhxD,KAAAq+D,QAAAr+D,KAAAu+D,UAAAD,KAWA,SAAAE,GAAAzG,EAAAhI,GACA,OAAAA,EAAA0O,eA9BA9I,EAAA,uBACAA,EAAA,eAAAyI,IACAzI,EAAA,eANA,WACA,OAAA31D,KAAAq+D,SAAA,KAMA1I,EAAA,qBACA,SAAAyI,GAAAhvE,MAAA4Q,MAAAk1D,EAAAl1D,KAAAu+D,UAAA,KAEA5I,EAAA,uBACA,SAAAyI,GAAAhvE,MAAA4Q,MAAAk1D,EAAAl1D,KAAAu+D,UAAA,GAAArJ,EAAAl1D,KAAA0+D,UAAA,KAEA/I,EAAA,qBACA,SAAA31D,KAAAq+D,QAAAnJ,EAAAl1D,KAAAu+D,UAAA,KAEA5I,EAAA,uBACA,SAAA31D,KAAAq+D,QAAAnJ,EAAAl1D,KAAAu+D,UAAA,GAAArJ,EAAAl1D,KAAA0+D,UAAA,KASA1N,GAAA,QACAA,GAAA,QAEAsD,EAAA,YAEAU,EAAA,WAMA4C,GAAA,IAAA4G,IACA5G,GAAA,IAAA4G,IACA5G,GAAA,IAAAZ,GACAY,GAAA,IAAAZ,GACAY,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,MAAAX,GACAW,GAAA,QAAAV,GACAU,GAAA,MAAAX,GACAW,GAAA,QAAAV,GACAsB,GAAA,WAAAQ,IACAR,GAAA,oBAAApa,EAAA/zC,EAAAwsB,GACA,IAAA8nC,EAAA5L,EAAA3U,GACA/zC,EAAA2uD,IAAA,KAAA2F,EAAA,EAAAA,IAEAnG,GAAA,mBAAApa,EAAA/zC,EAAAwsB,GACAA,EAAA+nC,MAAA/nC,EAAA27B,QAAAqM,KAAAzgB,GACAvnB,EAAAioC,UAAA1gB,IAEAoa,GAAA,oBAAApa,EAAA/zC,EAAAwsB,GACAxsB,EAAA2uD,IAAAjG,EAAA3U,GACA+R,EAAAt5B,GAAA86B,SAAA,IAEA6G,GAAA,eAAApa,EAAA/zC,EAAAwsB,GACA,IAAAe,EAAAwmB,EAAAvvD,OAAA,EACAwb,EAAA2uD,IAAAjG,EAAA3U,EAAA72C,OAAA,EAAAqwB,IACAvtB,EAAA4uD,IAAAlG,EAAA3U,EAAA72C,OAAAqwB,IACAu4B,EAAAt5B,GAAA86B,SAAA,IAEA6G,GAAA,iBAAApa,EAAA/zC,EAAAwsB,GACA,IAAAkoC,EAAA3gB,EAAAvvD,OAAA,EACAmwE,EAAA5gB,EAAAvvD,OAAA,EACAwb,EAAA2uD,IAAAjG,EAAA3U,EAAA72C,OAAA,EAAAw3D,IACA10D,EAAA4uD,IAAAlG,EAAA3U,EAAA72C,OAAAw3D,EAAA,IACA10D,EAAA6uD,IAAAnG,EAAA3U,EAAA72C,OAAAy3D,IACA7O,EAAAt5B,GAAA86B,SAAA,IAEA6G,GAAA,eAAApa,EAAA/zC,EAAAwsB,GACA,IAAAe,EAAAwmB,EAAAvvD,OAAA,EACAwb,EAAA2uD,IAAAjG,EAAA3U,EAAA72C,OAAA,EAAAqwB,IACAvtB,EAAA4uD,IAAAlG,EAAA3U,EAAA72C,OAAAqwB,MAEA4gC,GAAA,iBAAApa,EAAA/zC,EAAAwsB,GACA,IAAAkoC,EAAA3gB,EAAAvvD,OAAA,EACAmwE,EAAA5gB,EAAAvvD,OAAA,EACAwb,EAAA2uD,IAAAjG,EAAA3U,EAAA72C,OAAA,EAAAw3D,IACA10D,EAAA4uD,IAAAlG,EAAA3U,EAAA72C,OAAAw3D,EAAA,IACA10D,EAAA6uD,IAAAnG,EAAA3U,EAAA72C,OAAAy3D,MAwBA,IAmBAC,GAnBAC,GAAAxF,GAAA,YACAyF,GAAA,CACAC,SAr3CA,CACAC,QAAA,gBACAC,QAAA,mBACAC,SAAA,eACAC,QAAA,oBACAC,SAAA,sBACAC,SAAA,KAg3CAlJ,eAx2CA,CACAmJ,IAAA,YACAC,GAAA,SACAC,EAAA,aACAC,GAAA,eACAC,IAAA,sBACAC,KAAA,6BAm2CA1J,YAl1CA,eAm1CAR,QA70CA,KA80CAmK,uBA70CA,UA80CAC,aAx0CA,CACAC,OAAA,QACAC,KAAA,SACAxvE,EAAA,gBACAyvE,GAAA,aACAhrE,EAAA,WACAirE,GAAA,aACA3vE,EAAA,UACA4vE,GAAA,WACApkC,EAAA,QACAqkC,GAAA,UACAC,EAAA,UACAC,GAAA,YACAzsE,EAAA,SACA0sE,GAAA,YA2zCA1G,OAAAK,GACAN,YAAAO,GACAvd,KAhhBA,CACA2e,IAAA,EAEAC,IAAA,GA8gBAkB,SAAAK,GACAP,YAAAS,GACAR,cAAAO,GACAwD,cA7BA,iBAgCAC,GAAA,GACAC,GAAA,GAGA,SAAAC,GAAA1xE,GACA,OAAAA,IAAA+/D,cAAA8G,QAAA,SAAA7mE,EAwCA,SAAA2xE,GAAAr+D,GACA,IAAAs+D,EAAA,KAEA,IAAAJ,GAAAl+D,IAAA,qBAAAnT,QAAAC,QACA,IACAwxE,EAAAhC,GAAAiC,OAEQ,eAAA36C,EAAA,IAAA4f,MAAA,wCAAA5f,EAAA46C,KAAA,mBAAA56C,EAAA,GACR66C,GAAAH,GACO,MAAA16C,IAGP,OAAAs6C,GAAAl+D,GAMA,SAAAy+D,GAAA/xE,EAAA+Q,GACA,IAAA4W,EAoBA,OAlBA3nB,KAEA2nB,EADA04C,EAAAtvD,GACAihE,GAAAhyE,GAEAiyE,GAAAjyE,EAAA+Q,IAKA6+D,GAAAjoD,EAEA,qBAAA3Q,iBAAAq5C,MAEAr5C,QAAAq5C,KAAA,UAAArwD,EAAA,2CAKA4vE,GAAAiC,MAGA,SAAAI,GAAA3+D,EAAAk0B,GACA,UAAAA,EAAA,CACA,IAAAk5B,EACAmE,EAAAiL,GAGA,GAFAtoC,EAAA0qC,KAAA5+D,EAEA,MAAAk+D,GAAAl+D,GACAmxD,EAAA,kQACAI,EAAA2M,GAAAl+D,GAAA6+D,aACO,SAAA3qC,EAAA4qC,aACP,SAAAZ,GAAAhqC,EAAA4qC,cACAvN,EAAA2M,GAAAhqC,EAAA4qC,cAAAD,YACS,CAGT,UAFAzR,EAAAiR,GAAAnqC,EAAA4qC,eAaA,OARAX,GAAAjqC,EAAA4qC,gBACAX,GAAAjqC,EAAA4qC,cAAA,IAGAX,GAAAjqC,EAAA4qC,cAAAzyE,KAAA,CACA2T,OACAk0B,WAEA,KAVAq9B,EAAAnE,EAAAyR,QA2BA,OAZAX,GAAAl+D,GAAA,IAAAyxD,EAAAH,EAAAC,EAAAr9B,IAEAiqC,GAAAn+D,IACAm+D,GAAAn+D,GAAAlC,QAAA,SAAAzM,GACAstE,GAAAttE,EAAA2O,KAAA3O,EAAA6iC,UAOAuqC,GAAAz+D,GACAk+D,GAAAl+D,GAIA,cADAk+D,GAAAl+D,GACA,KAqCA,SAAA0+D,GAAAhyE,GACA,IAAA0gE,EAMA,GAJA1gE,KAAAmjE,SAAAnjE,EAAAmjE,QAAA0O,QACA7xE,IAAAmjE,QAAA0O,QAGA7xE,EACA,OAAA4vE,GAGA,IAAA/vE,EAAAG,GAAA,CAIA,GAFA0gE,EAAAiR,GAAA3xE,GAGA,OAAA0gE,EAGA1gE,EAAA,CAAAA,GAGA,OAtLA,SAAAqyE,GAOA,IANA,IACA16C,EACA/C,EACA8rC,EACArzB,EAJA/tC,EAAA,EAMAA,EAAA+yE,EAAA7yE,QAAA,CAMA,IALA6tC,EAAAqkC,GAAAW,EAAA/yE,IAAA+tC,MAAA,KACA1V,EAAA0V,EAAA7tC,OAEAo1B,GADAA,EAAA88C,GAAAW,EAAA/yE,EAAA,KACAs1B,EAAAyY,MAAA,UAEA1V,EAAA,IAGA,GAFA+oC,EAAAiR,GAAAtkC,EAAAh9B,MAAA,EAAAsnB,GAAAz3B,KAAA,MAGA,OAAAwgE,EAGA,GAAA9rC,KAAAp1B,QAAAm4B,GAAAksC,EAAAx2B,EAAAzY,GAAA,IAAA+C,EAAA,EAEA,MAGAA,IAGAr4B,IAGA,OAAAswE,GAuJA0C,CAAAtyE,GAOA,SAAAuyE,GAAAvsE,GACA,IAAAm7D,EACAh7D,EAAAH,EAAAujE,GAoBA,OAlBApjE,IAAA,IAAA26D,EAAA96D,GAAAm7D,WACAA,EAAAh7D,EAAAsjE,IAAA,GAAAtjE,EAAAsjE,IAAA,GAAAA,GAAAtjE,EAAAujE,IAAA,GAAAvjE,EAAAujE,IAAAc,GAAArkE,EAAAqjE,IAAArjE,EAAAsjE,KAAAC,GAAAvjE,EAAAwjE,IAAA,GAAAxjE,EAAAwjE,IAAA,SAAAxjE,EAAAwjE,MAAA,IAAAxjE,EAAAyjE,KAAA,IAAAzjE,EAAA0jE,KAAA,IAAA1jE,EAAA2jE,KAAAH,GAAAxjE,EAAAyjE,IAAA,GAAAzjE,EAAAyjE,IAAA,GAAAA,GAAAzjE,EAAA0jE,IAAA,GAAA1jE,EAAA0jE,IAAA,GAAAA,GAAA1jE,EAAA2jE,IAAA,GAAA3jE,EAAA2jE,IAAA,IAAAA,IAAA,EAEAhJ,EAAA96D,GAAAwsE,qBAAArR,EAAAqI,IAAArI,EAAAuI,MACAvI,EAAAuI,IAGA5I,EAAA96D,GAAAysE,iBAAA,IAAAtR,IACAA,EAAA4I,IAGAjJ,EAAA96D,GAAA0sE,mBAAA,IAAAvR,IACAA,EAAA6I,IAGAlJ,EAAA96D,GAAAm7D,YAGAn7D,EAIA,SAAAib,GAAA9a,EAAAnC,EAAA+B,GACA,aAAAI,EACAA,EAGA,MAAAnC,EACAA,EAGA+B,EAkBA,SAAA4sE,GAAAnrC,GACA,IAAAloC,EACA8wD,EAEAwiB,EACAC,EACAC,EAHA/jB,EAAA,GAKA,IAAAvnB,EAAA06B,GAAA,CA4BA,IAxBA0Q,EA3BA,SAAAprC,GAEA,IAAAurC,EAAA,IAAArtD,KAAA06C,EAAAz6C,OAEA,OAAA6hB,EAAAwrC,QACA,CAAAD,EAAA5G,iBAAA4G,EAAAE,cAAAF,EAAAG,cAGA,CAAAH,EAAAI,cAAAJ,EAAAK,WAAAL,EAAAM,WAmBAC,CAAA9rC,GAEAA,EAAA6hC,IAAA,MAAA7hC,EAAA+hC,GAAAG,KAAA,MAAAliC,EAAA+hC,GAAAE,KAuDA,SAAAjiC,GACA,IAAAnjC,EAAAkvE,EAAA5lB,EAAAiC,EAAA0c,EAAAC,EAAAiH,EAAAC,EAGA,UAFApvE,EAAAmjC,EAAA6hC,IAEAqK,IAAA,MAAArvE,EAAAsvE,GAAA,MAAAtvE,EAAAuvE,EACAtH,EAAA,EACAC,EAAA,EAKAgH,EAAAtyD,GAAA5c,EAAAqvE,GAAAlsC,EAAA+hC,GAAAC,IAAAyD,GAAA4G,KAAA,KAAA/lB,MACAH,EAAA1sC,GAAA5c,EAAAsvE,EAAA,KACA/jB,EAAA3uC,GAAA5c,EAAAuvE,EAAA,IAEA,GAAAhkB,EAAA,KACA6jB,GAAA,OAEK,CACLnH,EAAA9kC,EAAA27B,QAAA2Q,MAAAxH,IACAC,EAAA/kC,EAAA27B,QAAA2Q,MAAAvH,IACA,IAAAwH,EAAA9G,GAAA4G,KAAAvH,EAAAC,GACAgH,EAAAtyD,GAAA5c,EAAA2vE,GAAAxsC,EAAA+hC,GAAAC,IAAAuK,EAAAjmB,MAEAH,EAAA1sC,GAAA5c,IAAA0vE,EAAApmB,MAEA,MAAAtpD,EAAAyoC,IAEA8iB,EAAAvrD,EAAAyoC,GAEA,GAAA8iB,EAAA,KACA6jB,GAAA,GAEO,MAAApvE,EAAA6yB,GAEP04B,EAAAvrD,EAAA6yB,EAAAo1C,GAEAjoE,EAAA6yB,EAAA,GAAA7yB,EAAA6yB,EAAA,KACAu8C,GAAA,IAIA7jB,EAAA0c,EAIA3e,EAAA,GAAAA,EAAAwf,GAAAoG,EAAAjH,EAAAC,GACAzL,EAAAt5B,GAAAirC,gBAAA,EACK,MAAAgB,EACL3S,EAAAt5B,GAAAkrC,kBAAA,GAEAc,EAAA7G,GAAA4G,EAAA5lB,EAAAiC,EAAA0c,EAAAC,GACA/kC,EAAA+hC,GAAAC,IAAAgK,EAAA1lB,KACAtmB,EAAAysC,WAAAT,EAAAxG,WA3GAkH,CAAA1sC,GAIA,MAAAA,EAAAysC,aACAnB,EAAA7xD,GAAAumB,EAAA+hC,GAAAC,IAAAoJ,EAAApJ,MAEAhiC,EAAAysC,WAAAhK,GAAA6I,IAAA,IAAAtrC,EAAAysC,cACAnT,EAAAt5B,GAAAgrC,oBAAA,GAGApiB,EAAA6b,GAAA6G,EAAA,EAAAtrC,EAAAysC,YACAzsC,EAAA+hC,GAAAE,IAAArZ,EAAA6iB,cACAzrC,EAAA+hC,GAAAG,IAAAtZ,EAAA8iB,cAQA5zE,EAAA,EAAeA,EAAA,SAAAkoC,EAAA+hC,GAAAjqE,KAA+BA,EAC9CkoC,EAAA+hC,GAAAjqE,GAAAyvD,EAAAzvD,GAAAszE,EAAAtzE,GAIA,KAAUA,EAAA,EAAOA,IACjBkoC,EAAA+hC,GAAAjqE,GAAAyvD,EAAAzvD,GAAA,MAAAkoC,EAAA+hC,GAAAjqE,GAAA,IAAAA,EAAA,IAAAkoC,EAAA+hC,GAAAjqE,GAIA,KAAAkoC,EAAA+hC,GAAAI,KAAA,IAAAniC,EAAA+hC,GAAAK,KAAA,IAAApiC,EAAA+hC,GAAAM,KAAA,IAAAriC,EAAA+hC,GAAAO,MACAtiC,EAAA2sC,UAAA,EACA3sC,EAAA+hC,GAAAI,IAAA,GAGAniC,EAAA06B,IAAA16B,EAAAwrC,QAAA/G,GAn8BA,SAAArnE,EAAAoB,EAAA8mC,EAAAxrC,EAAA8vE,EAAA7vE,EAAA6yE,GAGA,IAAAhkB,EAaA,OAXAxrD,EAAA,KAAAA,GAAA,GAEAwrD,EAAA,IAAA1qC,KAAA9gB,EAAA,IAAAoB,EAAA8mC,EAAAxrC,EAAA8vE,EAAA7vE,EAAA6yE,GAEAh8D,SAAAg4C,EAAA+iB,gBACA/iB,EAAAikB,YAAAzvE,IAGAwrD,EAAA,IAAA1qC,KAAA9gB,EAAAoB,EAAA8mC,EAAAxrC,EAAA8vE,EAAA7vE,EAAA6yE,GAGAhkB,IAm7BArwD,MAAA,KAAAgvD,GACA8jB,EAAArrC,EAAAwrC,QAAAxrC,EAAA06B,GAAAwK,YAAAllC,EAAA06B,GAAAoS,SAGA,MAAA9sC,EAAAw7B,MACAx7B,EAAA06B,GAAAqS,cAAA/sC,EAAA06B,GAAAsS,gBAAAhtC,EAAAw7B,MAGAx7B,EAAA2sC,WACA3sC,EAAA+hC,GAAAI,IAAA,IAIAniC,EAAA6hC,IAAA,qBAAA7hC,EAAA6hC,GAAAv8B,GAAAtF,EAAA6hC,GAAAv8B,IAAA+lC,IACA/R,EAAAt5B,GAAAq6B,iBAAA,IA+DA,IAAA4S,GAAA,mJACAC,GAAA,8IACAC,GAAA,wBACAC,GAAA,wCAA6C,iCAAmC,kCAAqC,6BAAkC,8BAA0C,yBAAsB,+BAA0C,qBACjQ,6BAA6B,4BAA8B,wBAE3DC,GAAA,wQACAC,GAAA,sBAEA,SAAAC,GAAAvtC,GACA,IAAAloC,EACAkC,EAGAwzE,EACAC,EACAC,EACAC,EALAxjE,EAAA61B,EAAAq7B,GACAjwD,EAAA6hE,GAAAlkE,KAAAoB,IAAA+iE,GAAAnkE,KAAAoB,GAMA,GAAAiB,EAAA,CAGA,IAFAkuD,EAAAt5B,GAAAi6B,KAAA,EAEAniE,EAAA,EAAAkC,EAAAozE,GAAAp1E,OAAsCF,EAAAkC,EAAOlC,IAC7C,GAAAs1E,GAAAt1E,GAAA,GAAAiR,KAAAqC,EAAA,KACAqiE,EAAAL,GAAAt1E,GAAA,GACA01E,GAAA,IAAAJ,GAAAt1E,GAAA,GACA,MAIA,SAAA21E,EAEA,YADAztC,EAAAs6B,UAAA,GAIA,GAAAlvD,EAAA,IACA,IAAAtT,EAAA,EAAAkC,EAAAqzE,GAAAr1E,OAAwCF,EAAAkC,EAAOlC,IAC/C,GAAAu1E,GAAAv1E,GAAA,GAAAiR,KAAAqC,EAAA,KAEAsiE,GAAAtiE,EAAA,SAAAiiE,GAAAv1E,GAAA,GACA,MAIA,SAAA41E,EAEA,YADA1tC,EAAAs6B,UAAA,GAKA,IAAAkT,GAAA,MAAAE,EAEA,YADA1tC,EAAAs6B,UAAA,GAIA,GAAAlvD,EAAA,IACA,IAAA+hE,GAAApkE,KAAAqC,EAAA,IAIA,YADA40B,EAAAs6B,UAAA,GAFAqT,EAAA,IAOA3tC,EAAAs7B,GAAAmS,GAAAC,GAAA,KAAAC,GAAA,IACAC,GAAA5tC,QAEAA,EAAAs6B,UAAA,EAKA,IAAAF,GAAA,0LAYA,SAAAyT,GAAAC,GACA,IAAAxnB,EAAAh7C,SAAAwiE,EAAA,IAEA,OAAAxnB,GAAA,GACA,IAAAA,EACKA,GAAA,IACL,KAAAA,EAGAA,EAwBA,IAAAynB,GAAA,CACAC,GAAA,EACAC,IAAA,EACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,KAkBA,SAAAC,GAAA1uC,GACA,IAAA50B,EAAAgvD,GAAArxD,KAAAi3B,EAAAq7B,GAhDAgE,QAAA,yBAAAA,QAAA,gBAAAA,QAAA,aAAAA,QAAA,cAkDA,GAAAj0D,EAAA,CACA,IAAAujE,EA3EA,SAAAb,EAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAA5/D,EAAA,CAAAy+D,GAAAC,GAAApK,GAAAnwD,QAAAq7D,GAAAtjE,SAAAujE,EAAA,IAAAvjE,SAAAwjE,EAAA,IAAAxjE,SAAAyjE,EAAA,KAMA,OAJAC,GACA5/D,EAAAjX,KAAAmT,SAAA0jE,EAAA,KAGA5/D,EAoEA6/D,CAAA7jE,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,IAlDA,SAAA8jE,EAAAC,EAAAnvC,GACA,GAAAkvC,EAAA,CAEA,IAAAE,EAAA7I,GAAAhzD,QAAA27D,GACAG,EAAA,IAAAnxD,KAAAixD,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAArC,SAEA,GAAAsC,IAAAC,EAGA,OAFA/V,EAAAt5B,GAAAq6B,iBAAA,EACAr6B,EAAAs6B,UAAA,GACA,EAIA,SAqCAgV,CAAAlkE,EAAA,GAAAujE,EAAA3uC,GACA,OAGAA,EAAA+hC,GAAA4M,EACA3uC,EAAAw7B,KA1BA,SAAA+T,EAAAC,EAAAC,GACA,GAAAF,EACA,OAAAxB,GAAAwB,GACK,GAAAC,EAEL,SAEA,IAAAE,EAAApkE,SAAAmkE,EAAA,IACAjxE,EAAAkxE,EAAA,IACA51E,GAAA41E,EAAAlxE,GAAA,IACA,UAAA1E,EAAA0E,EAgBAmxE,CAAAvkE,EAAA,GAAAA,EAAA,GAAAA,EAAA,KACA40B,EAAA06B,GAAA+J,GAAAlsE,MAAA,KAAAynC,EAAA+hC,IAEA/hC,EAAA06B,GAAAqS,cAAA/sC,EAAA06B,GAAAsS,gBAAAhtC,EAAAw7B,MAEAlC,EAAAt5B,GAAAo6B,SAAA,OAEAp6B,EAAAs6B,UAAA,EA2CA,SAAAsT,GAAA5tC,GAEA,GAAAA,EAAAs7B,KAAA1C,EAAAgX,SAKA,GAAA5vC,EAAAs7B,KAAA1C,EAAAiX,SAAA,CAKA7vC,EAAA+hC,GAAA,GACAzI,EAAAt5B,GAAAw5B,OAAA,EAEA,IACA1hE,EACAq3E,EACAzN,EACA3C,EACA+Q,EALA3lE,EAAA,GAAA61B,EAAAq7B,GAMA0U,EAAA5lE,EAAAnS,OACAg4E,EAAA,EAGA,IAFAtO,EAAAtC,EAAAp/B,EAAAs7B,GAAAt7B,EAAA27B,SAAAvwD,MAAAszD,IAAA,GAEA5mE,EAAA,EAAeA,EAAA4pE,EAAA1pE,OAAmBF,IAClCinE,EAAA2C,EAAA5pE,IACAq3E,GAAAhlE,EAAAiB,MAAA+1D,GAAApC,EAAA/+B,KAAA,WAIA8vC,EAAA3lE,EAAAuG,OAAA,EAAAvG,EAAAoJ,QAAA47D,KAEAn3E,OAAA,GACAshE,EAAAt5B,GAAA05B,YAAAvhE,KAAA23E,GAGA3lE,IAAAtB,MAAAsB,EAAAoJ,QAAA47D,KAAAn3E,QACAg4E,GAAAb,EAAAn3E,QAIA6mE,EAAAE,IACAoQ,EACA7V,EAAAt5B,GAAAw5B,OAAA,EAEAF,EAAAt5B,GAAAy5B,aAAAthE,KAAA4mE,GAGA+C,GAAA/C,EAAAoQ,EAAAnvC,IACOA,EAAA66B,UAAAsU,GACP7V,EAAAt5B,GAAAy5B,aAAAthE,KAAA4mE,GAKAzF,EAAAt5B,GAAA45B,cAAAmW,EAAAC,EAEA7lE,EAAAnS,OAAA,GACAshE,EAAAt5B,GAAA05B,YAAAvhE,KAAAgS,GAIA61B,EAAA+hC,GAAAI,KAAA,SAAA7I,EAAAt5B,GAAA86B,SAAA96B,EAAA+hC,GAAAI,IAAA,IACA7I,EAAAt5B,GAAA86B,aAAAhiE,GAGAwgE,EAAAt5B,GAAAk6B,gBAAAl6B,EAAA+hC,GAAAl5D,MAAA,GACAywD,EAAAt5B,GAAAm6B,SAAAn6B,EAAAioC,UAEAjoC,EAAA+hC,GAAAI,IAKA,SAAAjJ,EAAAjT,EAAAkU,GACA,IAAA8V,EAEA,aAAA9V,EAEAlU,EAGA,MAAAiT,EAAAgX,aACAhX,EAAAgX,aAAAjqB,EAAAkU,GACK,MAAAjB,EAAA8O,OAELiI,EAAA/W,EAAA8O,KAAA7N,KAEAlU,EAAA,KACAA,GAAA,IAGAgqB,GAAA,KAAAhqB,IACAA,EAAA,GAGAA,GAGAA,EA9BAkqB,CAAAnwC,EAAA27B,QAAA37B,EAAA+hC,GAAAI,IAAAniC,EAAAioC,WACAkD,GAAAnrC,GACA+qC,GAAA/qC,QAhEA0uC,GAAA1uC,QALAutC,GAAAvtC,GAqKA,SAAAowC,GAAApwC,GACA,IAAAunB,EAAAvnB,EAAAq7B,GACAvpB,EAAA9R,EAAAs7B,GAGA,OAFAt7B,EAAA27B,QAAA37B,EAAA27B,SAAA6O,GAAAxqC,EAAAu7B,IAEA,OAAAhU,QAAAzuD,IAAAg5C,GAAA,KAAAyV,EACAyT,EAAA,CACAnB,WAAA,KAIA,kBAAAtS,IACAvnB,EAAAq7B,GAAA9T,EAAAvnB,EAAA27B,QAAA0U,SAAA9oB,IAGAwU,EAAAxU,GACA,IAAAsU,EAAAkP,GAAAxjB,KACKuR,EAAAvR,GACLvnB,EAAA06B,GAAAnT,EACKlvD,EAAAy5C,GAlFL,SAAA9R,GACA,IAAAswC,EAAAC,EAAAC,EAAA14E,EAAA24E,EAEA,OAAAzwC,EAAAs7B,GAAAtjE,OAGA,OAFAshE,EAAAt5B,GAAA+5B,eAAA,OACA/5B,EAAA06B,GAAA,IAAAx8C,KAAA0Q,MAIA,IAAA92B,EAAA,EAAeA,EAAAkoC,EAAAs7B,GAAAtjE,OAAsBF,IACrC24E,EAAA,EACAH,EAAAnV,EAAA,GAAgCn7B,GAEhC,MAAAA,EAAAwrC,UACA8E,EAAA9E,QAAAxrC,EAAAwrC,SAGA8E,EAAAhV,GAAAt7B,EAAAs7B,GAAAxjE,GACA81E,GAAA0C,GAEAjkE,EAAAikE,KAKAG,GAAAnX,EAAAgX,GAAA1W,cAEA6W,GAAA,GAAAnX,EAAAgX,GAAA7W,aAAAzhE,OACAshE,EAAAgX,GAAAI,MAAAD,GAEA,MAAAD,GAAAC,EAAAD,KACAA,EAAAC,EACAF,EAAAD,IAIA19D,EAAAotB,EAAAuwC,GAAAD,GA+CAK,CAAA3wC,GACK8R,EACL87B,GAAA5tC,GAYA,SAAAA,GACA,IAAAunB,EAAAvnB,EAAAq7B,GAEAxC,EAAAtR,GACAvnB,EAAA06B,GAAA,IAAAx8C,KAAA06C,EAAAz6C,OACK26C,EAAAvR,GACLvnB,EAAA06B,GAAA,IAAAx8C,KAAAqpC,EAAA8D,WACK,kBAAA9D,EAvPL,SAAAvnB,GACA,IAAAshC,EAAAgM,GAAAvkE,KAAAi3B,EAAAq7B,IAEA,OAAAiG,GAKAiM,GAAAvtC,IAEA,IAAAA,EAAAs6B,kBACAt6B,EAAAs6B,SAKAoU,GAAA1uC,IAEA,IAAAA,EAAAs6B,kBACAt6B,EAAAs6B,SAMA1B,EAAAgY,wBAAA5wC,MArBAA,EAAA06B,GAAA,IAAAx8C,MAAAojD,EAAA,IAoPAuP,CAAA7wC,GACK3nC,EAAAkvD,IACLvnB,EAAA+hC,GAAA9vD,EAAAs1C,EAAA1+C,MAAA,YAAAmD,GACA,OAAAV,SAAAU,EAAA,MAEAm/D,GAAAnrC,IACKrvB,EAAA42C,GAxEL,SAAAvnB,GACA,IAAAA,EAAA06B,GAAA,CAIA,IAAA5iE,EAAAgmE,EAAA99B,EAAAq7B,IACAr7B,EAAA+hC,GAAA9vD,EAAA,CAAAna,EAAAwuD,KAAAxuD,EAAAsuD,MAAAtuD,EAAAouD,KAAApuD,EAAA8wD,KAAA9wD,EAAAmuD,KAAAnuD,EAAAkuD,OAAAluD,EAAAiuD,OAAAjuD,EAAA8tD,aAAA,SAAA55C,GACA,OAAAA,GAAAV,SAAAU,EAAA,MAEAm/D,GAAAnrC,IAgEA8wC,CAAA9wC,GACKpjB,EAAA2qC,GAELvnB,EAAA06B,GAAA,IAAAx8C,KAAAqpC,GAEAqR,EAAAgY,wBAAA5wC,GA9BA+wC,CAAA/wC,GAGA3zB,EAAA2zB,KACAA,EAAA06B,GAAA,MAGA16B,IA2BA,SAAAo5B,GAAA7R,EAAAzV,EAAAonB,EAAAC,EAAA6X,GACA,IAAAzyE,EAAA,GAmBA,OAjBA,IAAA26D,IAAA,IAAAA,IACAC,EAAAD,EACAA,OAAApgE,IAGA6X,EAAA42C,IA3kFA,SAAAv7C,GACA,GAAAyE,OAAAwgE,oBACA,WAAAxgE,OAAAwgE,oBAAAjlE,GAAAhU,OAEA,IAAA8E,EAEA,IAAAA,KAAAkP,EACA,GAAAA,EAAArU,eAAAmF,GACA,SAIA,SA+jFAo0E,CAAA3pB,IAAAlvD,EAAAkvD,IAAA,IAAAA,EAAAvvD,UACAuvD,OAAAzuD,GAKAyF,EAAA68D,kBAAA,EACA78D,EAAAitE,QAAAjtE,EAAAk9D,OAAAuV,EACAzyE,EAAAg9D,GAAArC,EACA36D,EAAA88D,GAAA9T,EACAhpD,EAAA+8D,GAAAxpB,EACAvzC,EAAAs8D,QAAA1B,EAzFA,SAAAn5B,GACA,IAAAje,EAAA,IAAA85C,EAAAkP,GAAAqF,GAAApwC,KAQA,OANAje,EAAA4qD,WAEA5qD,EAAA4c,IAAA,OACA5c,EAAA4qD,cAAA7zE,GAGAipB,EAiFAovD,CAAA5yE,GAGA,SAAA8tE,GAAA9kB,EAAAzV,EAAAonB,EAAAC,GACA,OAAAC,GAAA7R,EAAAzV,EAAAonB,EAAAC,GAAA,GApQAP,EAAAgY,wBAAA/T,EAAA,0VAAA78B,GACAA,EAAA06B,GAAA,IAAAx8C,KAAA8hB,EAAAq7B,IAAAr7B,EAAAwrC,QAAA,cAGA5S,EAAAgX,SAAA,aAGAhX,EAAAiX,SAAA,aAgQA,IAAAuB,GAAAvU,EAAA,gHACA,IAAAwU,EAAAhF,GAAA9zE,MAAA,KAAAR,WAEA,OAAAoR,KAAAkD,WAAAglE,EAAAhlE,UACAglE,EAAAloE,UAAAkoE,EAEArW,MAGAsW,GAAAzU,EAAA,gHACA,IAAAwU,EAAAhF,GAAA9zE,MAAA,KAAAR,WAEA,OAAAoR,KAAAkD,WAAAglE,EAAAhlE,UACAglE,EAAAloE,UAAAkoE,EAEArW,MAQA,SAAAuW,GAAAngE,EAAAogE,GACA,IAAAzvD,EAAAjqB,EAMA,GAJA,IAAA05E,EAAAx5E,QAAAK,EAAAm5E,EAAA,MACAA,IAAA,KAGAA,EAAAx5E,OACA,OAAAq0E,KAKA,IAFAtqD,EAAAyvD,EAAA,GAEA15E,EAAA,EAAeA,EAAA05E,EAAAx5E,SAAoBF,EACnC05E,EAAA15E,GAAAuU,YAAAmlE,EAAA15E,GAAAsZ,GAAA2Q,KACAA,EAAAyvD,EAAA15E,IAIA,OAAAiqB,EAcA,IAIA0vD,GAAA,+EAkCA,SAAAC,GAAAj0D,GACA,IAAAwgD,EAAAH,EAAArgD,GACAk0D,EAAA1T,EAAA3X,MAAA,EACAsrB,EAAA3T,EAAA5X,SAAA,EACA+c,EAAAnF,EAAA7X,OAAA,EACAyrB,EAAA5T,EAAA9X,MAAA8X,EAAA6T,SAAA,EACAC,EAAA9T,EAAA/X,KAAA,EACAshB,EAAAvJ,EAAAhY,MAAA,EACAyhB,EAAAzJ,EAAAjY,QAAA,EACA6hB,EAAA5J,EAAAlY,QAAA,EACAyC,EAAAyV,EAAArY,aAAA,EACAz8C,KAAAmxD,SA3CA,SAAA97D,GACA,QAAAhG,KAAAgG,EACA,QAAA+U,GAAA9a,KAAAg5E,GAAAj5E,IAAA,MAAAgG,EAAAhG,IAAAiT,MAAAjN,EAAAhG,IACA,SAMA,IAFA,IAAAw5E,GAAA,EAEAl6E,EAAA,EAAmBA,EAAA25E,GAAAz5E,SAAqBF,EACxC,GAAA0G,EAAAizE,GAAA35E,IAAA,CACA,GAAAk6E,EACA,SAGAzmE,WAAA/M,EAAAizE,GAAA35E,OAAAokE,EAAA19D,EAAAizE,GAAA35E,OACAk6E,GAAA,GAKA,SAsBAC,CAAAhU,GAEA90D,KAAA+oE,eAAA1pB,EAAA,IAAAqf,EACA,IAAAH,EACA,IAAAF,EAAA,MAIAr+D,KAAAgpE,OAAAJ,EAAA,EAAAF,EAIA1oE,KAAAipE,SAAAhP,EAAA,EAAAwO,EAAA,GAAAD,EACAxoE,KAAA4X,MAAA,GACA5X,KAAAwyD,QAAA6O,KAEArhE,KAAAkpE,UAGA,SAAAC,GAAAtmE,GACA,OAAAA,aAAA0lE,GAGA,SAAAa,GAAAtW,GACA,OAAAA,EAAA,GACA,EAAAv/D,KAAAwM,OAAA,EAAA+yD,GAEAv/D,KAAAwM,MAAA+yD,GAKA,SAAA9xC,GAAA40C,EAAAyT,GACA1T,EAAAC,EAAA,eACA,IAAA50C,EAAAhhB,KAAAspE,YACA/0B,EAAA,IAOA,OALAvzB,EAAA,IACAA,KACAuzB,EAAA,KAGAA,EAAA2gB,KAAAl0C,EAAA,OAAAqoD,EAAAnU,IAAAl0C,EAAA,QAIAA,GAAA,SACAA,GAAA,SAEA42C,GAAA,IAAAH,IACAG,GAAA,KAAAH,IACAe,GAAA,oBAAApa,EAAA/zC,EAAAwsB,GACAA,EAAAwrC,SAAA,EACAxrC,EAAAw7B,KAAAkX,GAAA9R,GAAArZ,KAMA,IAAAorB,GAAA,kBAEA,SAAAD,GAAAE,EAAAzoE,GACA,IAAAmQ,GAAAnQ,GAAA,IAAAiB,MAAAwnE,GAEA,UAAAt4D,EACA,YAGA,IAAAgT,EAAAhT,IAAAtiB,OAAA,OACA66E,GAAAvlD,EAAA,IAAAliB,MAAAunE,KAAA,UACAjL,EAAA,GAAAmL,EAAA,GAAA3W,EAAA2W,EAAA,IACA,WAAAnL,EAAA,QAAAmL,EAAA,GAAAnL,KAIA,SAAAoL,GAAAvrB,EAAArrC,GACA,IAAA6F,EAAAgwB,EAEA,OAAA71B,EAAAu/C,QACA15C,EAAA7F,EAAAhN,QACA6iC,GAAAgqB,EAAAxU,IAAAuR,EAAAvR,KAAA8D,UAAAghB,GAAA9kB,GAAA8D,WAAAtpC,EAAAspC,UAEAtpC,EAAA24C,GAAAqY,QAAAhxD,EAAA24C,GAAArP,UAAAtZ,GAEA6mB,EAAAkD,aAAA/5C,GAAA,GACAA,GAEAsqD,GAAA9kB,GAAAyrB,QAIA,SAAAC,GAAAz0E,GAGA,WAAA9B,KAAAwM,MAAA1K,EAAAk8D,GAAAwY,oBAAA,IAuJA,SAAAC,KACA,QAAAhqE,KAAAkD,WAAAlD,KAAAsyD,QAAA,IAAAtyD,KAAAuyD,QAlJA9C,EAAAkD,aAAA,aAsJA,IAAAsX,GAAA,2DAIAC,GAAA,sKAEA,SAAAC,GAAA/rB,EAAA/uD,GACA,IAGAklD,EACA61B,EACAC,EALA/1D,EAAA8pC,EAEAn8C,EAAA,KAyDA,OApDAknE,GAAA/qB,GACA9pC,EAAA,CACAmvD,GAAArlB,EAAA2qB,cACA5sC,EAAAiiB,EAAA4qB,MACAvI,EAAAriB,EAAA6qB,SAEKx1D,EAAA2qC,IACL9pC,EAAA,GAEAjlB,EACAilB,EAAAjlB,GAAA+uD,EAEA9pC,EAAA+qC,aAAAjB,IAEKn8C,EAAAgoE,GAAArqE,KAAAw+C,KACL7J,EAAA,MAAAtyC,EAAA,QACAqS,EAAA,CACArgB,EAAA,EACAkoC,EAAA42B,EAAA9wD,EAAA82D,KAAAxkB,EACA5jD,EAAAoiE,EAAA9wD,EAAA+2D,KAAAzkB,EACAl/C,EAAA09D,EAAA9wD,EAAAg3D,KAAA1kB,EACA3jD,EAAAmiE,EAAA9wD,EAAAi3D,KAAA3kB,EACAkvB,GAAA1Q,EAAAqW,GAAA,IAAAnnE,EAAAk3D,MAAA5kB,KAGKtyC,EAAAioE,GAAAtqE,KAAAw+C,KACL7J,EAAA,MAAAtyC,EAAA,QACAqS,EAAA,CACArgB,EAAAq2E,GAAAroE,EAAA,GAAAsyC,GACAksB,EAAA6J,GAAAroE,EAAA,GAAAsyC,GACA7gD,EAAA42E,GAAAroE,EAAA,GAAAsyC,GACApY,EAAAmuC,GAAAroE,EAAA,GAAAsyC,GACA5jD,EAAA25E,GAAAroE,EAAA,GAAAsyC,GACAl/C,EAAAi1E,GAAAroE,EAAA,GAAAsyC,GACA3jD,EAAA05E,GAAAroE,EAAA,GAAAsyC,KAEK,MAAAjgC,EAELA,EAAA,GACK,kBAAAA,IAAA,SAAAA,GAAA,OAAAA,KACL+1D,EAuCA,SAAA1xD,EAAAuvD,GACA,IAAAtvD,EAEA,OAAAD,EAAAzV,WAAAglE,EAAAhlE,WAOAglE,EAAAyB,GAAAzB,EAAAvvD,GAEAA,EAAA4xD,SAAArC,GACAtvD,EAAA4xD,GAAA7xD,EAAAuvD,KAEAtvD,EAAA4xD,GAAAtC,EAAAvvD,IACA0mC,cAAAzmC,EAAAymC,aACAzmC,EAAAqhD,QAAArhD,EAAAqhD,QAGArhD,GAhBA,CACAymC,aAAA,EACA4a,OAAA,GA7CAwQ,CAAAvH,GAAA5uD,EAAAzU,MAAAqjE,GAAA5uD,EAAAxU,MACAwU,EAAA,IACAmvD,GAAA4G,EAAAhrB,aACA/qC,EAAAmsD,EAAA4J,EAAApQ,QAGAmQ,EAAA,IAAA7B,GAAAj0D,GAEA60D,GAAA/qB,IAAAyR,EAAAzR,EAAA,aACAgsB,EAAA5X,QAAApU,EAAAoU,SAGA4X,EAMA,SAAAE,GAAAI,EAAAn2B,GAIA,IAAA37B,EAAA8xD,GAAAtoE,WAAAsoE,EAAAxU,QAAA,UAEA,OAAA5zD,MAAAsW,GAAA,EAAAA,GAAA27B,EAGA,SAAAi2B,GAAA7xD,EAAAuvD,GACA,IAAAtvD,EAAA,GAQA,OAPAA,EAAAqhD,OAAAiO,EAAAjrB,QAAAtkC,EAAAskC,QAAA,IAAAirB,EAAA/qB,OAAAxkC,EAAAwkC,QAEAxkC,EAAA5S,QAAAyvB,IAAA5c,EAAAqhD,OAAA,KAAA0Q,QAAAzC,MACAtvD,EAAAqhD,OAGArhD,EAAAymC,cAAA6oB,GAAAvvD,EAAA5S,QAAAyvB,IAAA5c,EAAAqhD,OAAA,KACArhD,EA2BA,SAAAgyD,GAAAC,EAAAloE,GACA,gBAAApO,EAAAu2E,GACA,IAAA9oC,EAYA,OAVA,OAAA8oC,GAAAxoE,OAAAwoE,KACAhX,EAAAnxD,EAAA,YAAAA,EAAA,uDAAAA,EAAA,kGACAq/B,EAAAztC,EACAA,EAAAu2E,EACAA,EAAA9oC,GAKA+oC,GAAA/qE,KADAmqE,GADA51E,EAAA,kBAAAA,OACAu2E,GACAD,GACA7qE,MAIA,SAAA+qE,GAAA5U,EAAA7hD,EAAA02D,EAAArY,GACA,IAAAtT,EAAA/qC,EAAAy0D,cACAH,EAAAQ,GAAA90D,EAAA00D,OACA/O,EAAAmP,GAAA90D,EAAA20D,SAEA9S,EAAAjzD,YAKAyvD,EAAA,MAAAA,KAEAsH,GACAO,GAAArE,EAAAhiD,GAAAgiD,EAAA,SAAA8D,EAAA+Q,GAGApC,GACAhP,GAAAzD,EAAA,OAAAhiD,GAAAgiD,EAAA,QAAAyS,EAAAoC,GAGA3rB,GACA8W,EAAA5E,GAAAqY,QAAAzT,EAAA5E,GAAArP,UAAA7C,EAAA2rB,GAGArY,GACAlD,EAAAkD,aAAAwD,EAAAyS,GAAA3O,IA3FAkQ,GAAAliE,GAAAsgE,GAAA9oE,UACA0qE,GAAAc,QA/UA,WACA,OAAAd,GAAA1kD,MA4aA,IAAA+P,GAAAo1C,GAAA,SACAM,GAAAN,IAAA,cAwJA,SAAAO,GAAA31E,EAAAnC,GAEA,IAGA+3E,EACAC,EAJAC,EAAA,IAAAj4E,EAAA8pD,OAAA3nD,EAAA2nD,SAAA9pD,EAAA4pD,QAAAznD,EAAAynD,SAEAsuB,EAAA/1E,EAAAuQ,QAAAyvB,IAAA81C,EAAA,UAeA,OAXAj4E,EAAAk4E,EAAA,GACAH,EAAA51E,EAAAuQ,QAAAyvB,IAAA81C,EAAA,YAEAD,GAAAh4E,EAAAk4E,MAAAH,KAEAA,EAAA51E,EAAAuQ,QAAAyvB,IAAA81C,EAAA,YAEAD,GAAAh4E,EAAAk4E,IAAAH,EAAAG,MAIAD,EAAAD,IAAA,EAuGA,SAAAtb,GAAA1gE,GACA,IAAAm8E,EAEA,YAAA77E,IAAAN,EACA2Q,KAAAwyD,QAAA0O,OAIA,OAFAsK,EAAAnK,GAAAhyE,MAGA2Q,KAAAwyD,QAAAgZ,GAGAxrE,MAhHAyvD,EAAAgc,cAAA,uBACAhc,EAAAic,iBAAA,yBAmHA,IAAAC,GAAAjY,EAAA,2JAAArkE,GACA,YAAAM,IAAAN,EACA2Q,KAAA+1D,aAEA/1D,KAAA+vD,OAAA1gE,KAIA,SAAA0mE,KACA,OAAA/1D,KAAAwyD,QAGA,IAAAoZ,GAAA,IACAC,GAAA,GAAAD,GACAE,GAAA,GAAAD,GACAE,GAAA,QAAAD,GAEA,SAAAE,GAAAC,EAAAC,GACA,OAAAD,EAAAC,OAGA,SAAAC,GAAAl4E,EAAAoB,EAAA8mC,GAEA,OAAAloC,EAAA,KAAAA,GAAA,EAEA,IAAA8gB,KAAA9gB,EAAA,IAAAoB,EAAA8mC,GAAA4vC,GAEA,IAAAh3D,KAAA9gB,EAAAoB,EAAA8mC,GAAA+lB,UAIA,SAAAkqB,GAAAn4E,EAAAoB,EAAA8mC,GAEA,OAAAloC,EAAA,KAAAA,GAAA,EAEA8gB,KAAAwmD,IAAAtnE,EAAA,IAAAoB,EAAA8mC,GAAA4vC,GAEAh3D,KAAAwmD,IAAAtnE,EAAAoB,EAAA8mC,GAyLA,SAAAkwC,GAAAzW,EAAA0W,GACA3W,EAAA,GAAAC,IAAA/mE,QAAA,EAAAy9E,GA+CA,SAAAC,GAAAnuB,EAAApB,EAAAiC,EAAA0c,EAAAC,GACA,IAAA4Q,EAEA,aAAApuB,EACAke,GAAAt8D,KAAA27D,EAAAC,GAAAze,MAEAqvB,EAAAhQ,GAAApe,EAAAud,EAAAC,GAEA5e,EAAAwvB,IACAxvB,EAAAwvB,GAOA,SAAA5J,EAAA5lB,EAAAiC,EAAA0c,EAAAC,GACA,IAAA6Q,EAAAzQ,GAAA4G,EAAA5lB,EAAAiC,EAAA0c,EAAAC,GACAnc,EAAA6b,GAAAmR,EAAAtvB,KAAA,EAAAsvB,EAAApQ,WAIA,OAHAr8D,KAAAm9C,KAAAsC,EAAA+b,kBACAx7D,KAAAi9C,MAAAwC,EAAA6iB,eACAtiE,KAAAy/C,OAAA8iB,cACAviE,MAVA1Q,KAAA0Q,KAAAo+C,EAAApB,EAAAiC,EAAA0c,EAAAC,IAnEAjG,EAAA,wBACA,OAAA31D,KAAA4iE,WAAA,MAEAjN,EAAA,wBACA,OAAA31D,KAAA0sE,cAAA,MAOAL,GAAA,mBACAA,GAAA,oBACAA,GAAA,sBACAA,GAAA,uBAEA/X,EAAA,iBACAA,EAAA,oBAEAU,EAAA,cACAA,EAAA,iBAEA4C,GAAA,IAAAL,IACAK,GAAA,IAAAL,IACAK,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,OAAAR,GAAAN,GACAc,GAAA,OAAAR,GAAAN,GACAc,GAAA,QAAAP,GAAAN,GACAa,GAAA,QAAAP,GAAAN,GACA0B,GAAA,yCAAAra,EAAApB,EAAAnmB,EAAA++B,GACA5Y,EAAA4Y,EAAAruD,OAAA,MAAAwrD,EAAA3U,KAEAqa,GAAA,qBAAAra,EAAApB,EAAAnmB,EAAA++B,GACA5Y,EAAA4Y,GAAAnG,EAAA+J,kBAAApb,KA+CAuX,EAAA,sBAEArB,EAAA,eAEAU,EAAA,aAEA4C,GAAA,IAAAjB,GACA6B,GAAA,aAAApa,EAAA/zC,GACAA,EAAAyuD,IAAA,GAAA/F,EAAA3U,GAAA,KAQAuX,EAAA,0BAEArB,EAAA,YAEAU,EAAA,UAEA4C,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,cAAAG,EAAAhI,GAEA,OAAAgI,EAAAhI,EAAA4c,yBAAA5c,EAAA6c,cAAA7c,EAAA8c,iCAEArU,GAAA,WAAAO,IACAP,GAAA,cAAApa,EAAA/zC,GACAA,EAAA0uD,IAAAhG,EAAA3U,EAAAn8C,MAAA+0D,GAAA,MAGA,IAAA8V,GAAApT,GAAA,WAEA/D,EAAA,qCAEArB,EAAA,mBAEAU,EAAA,eAEA4C,GAAA,MAAAT,IACAS,GAAA,OAAAf,GACA2B,GAAA,wBAAApa,EAAA/zC,EAAAwsB,GACAA,EAAAysC,WAAAvQ,EAAA3U,KAUAuX,EAAA,yBAEArB,EAAA,cAEAU,EAAA,aAEA4C,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACA4B,GAAA,WAAAS,IAEA,IAAA8T,GAAArT,GAAA,cAEA/D,EAAA,yBAEArB,EAAA,cAEAU,EAAA,aAEA4C,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACA4B,GAAA,WAAAU,IAEA,IAmCAtD,GAnCAoX,GAAAtT,GAAA,cAqCA,IAnCA/D,EAAA,mBACA,SAAA31D,KAAAy8C,cAAA,OAEAkZ,EAAA,wBACA,SAAA31D,KAAAy8C,cAAA,MAEAkZ,EAAA,6BACAA,EAAA,0BACA,UAAA31D,KAAAy8C,gBAEAkZ,EAAA,2BACA,WAAA31D,KAAAy8C,gBAEAkZ,EAAA,4BACA,WAAA31D,KAAAy8C,gBAEAkZ,EAAA,6BACA,WAAA31D,KAAAy8C,gBAEAkZ,EAAA,8BACA,WAAA31D,KAAAy8C,gBAEAkZ,EAAA,+BACA,WAAA31D,KAAAy8C,gBAGA6X,EAAA,oBAEAU,EAAA,kBAEA4C,GAAA,IAAAT,GAAAR,GACAiB,GAAA,KAAAT,GAAAP,GACAgB,GAAA,MAAAT,GAAAN,GAGAjB,GAAA,OAAsBA,GAAA/mE,QAAA,EAAmB+mE,IAAA,IACzCgC,GAAAhC,GAAA0B,IAGA,SAAA2V,GAAA7uB,EAAA/zC,GACAA,EAAA8uD,IAAApG,EAAA,UAAA3U,IAGA,IAAAwX,GAAA,IAAmBA,GAAA/mE,QAAA,EAAmB+mE,IAAA,IACtC4C,GAAA5C,GAAAqX,IAIA,IAAAC,GAAAxT,GAAA,mBAEA/D,EAAA,oBACAA,EAAA,qBAUA,IAAAwX,GAAAza,EAAAjzD,UAqFA,SAAA2tE,GAAApsE,GACA,OAAAA,EArFAmsE,GAAA33C,OACA23C,GAAA/N,SAhtBA,SAAA7gB,EAAA9V,GAGA,IAAAzzB,EAAAupC,GAAA2kB,KACAmK,EAAA1D,GAAA30D,EAAAhV,MAAA6oC,QAAA,OACAF,EAAA8mB,EAAA6d,eAAAttE,KAAAqtE,IAAA,WACAjX,EAAA3tB,IAAAsrB,EAAAtrB,EAAAE,IAAAF,EAAAE,GAAAr5C,KAAA0Q,KAAAgV,GAAAyzB,EAAAE,IACA,OAAA3oC,KAAA2oC,OAAAytB,GAAAp2D,KAAA+1D,aAAAqJ,SAAAz2B,EAAA3oC,KAAAkjE,GAAAluD,MA0sBAm4D,GAAApnE,MAvsBA,WACA,WAAA2sD,EAAA1yD,OAusBAmtE,GAAAvkC,KA9nBA,SAAAwV,EAAAsW,EAAA6Y,GACA,IAAAC,EAAAC,EAAArX,EAEA,IAAAp2D,KAAAkD,UACA,OAAAuiB,IAKA,KAFA+nD,EAAA7D,GAAAvrB,EAAAp+C,OAEAkD,UACA,OAAAuiB,IAMA,OAHAgoD,EAAA,KAAAD,EAAAlE,YAAAtpE,KAAAspE,aACA5U,EAAAD,EAAAC,IAGA,WACA0B,EAAA+U,GAAAnrE,KAAAwtE,GAAA,GACA,MAEA,YACApX,EAAA+U,GAAAnrE,KAAAwtE,GACA,MAEA,cACApX,EAAA+U,GAAAnrE,KAAAwtE,GAAA,EACA,MAEA,aACApX,GAAAp2D,KAAAwtE,GAAA,IACA,MAGA,aACApX,GAAAp2D,KAAAwtE,GAAA,IACA,MAGA,WACApX,GAAAp2D,KAAAwtE,GAAA,KACA,MAGA,UACApX,GAAAp2D,KAAAwtE,EAAAC,GAAA,MACA,MAGA,WACArX,GAAAp2D,KAAAwtE,EAAAC,GAAA,OACA,MAGA,QACArX,EAAAp2D,KAAAwtE,EAGA,OAAAD,EAAAnX,EAAAvD,EAAAuD,IAqkBA+W,GAAArkC,MArVA,SAAA4rB,GACA,IAAAnW,EAGA,QAAA5uD,KAFA+kE,EAAAD,EAAAC,KAEA,gBAAAA,IAAA10D,KAAAkD,UACA,OAAAlD,KAGA,IAAA0tE,EAAA1tE,KAAAsyD,OAAA8Z,GAAAD,GAEA,OAAAzX,GACA,WACAnW,EAAAmvB,EAAA1tE,KAAAm9C,OAAA,SACA,MAEA,cACAoB,EAAAmvB,EAAA1tE,KAAAm9C,OAAAn9C,KAAAi9C,QAAAj9C,KAAAi9C,QAAA,SACA,MAEA,YACAsB,EAAAmvB,EAAA1tE,KAAAm9C,OAAAn9C,KAAAi9C,QAAA,OACA,MAEA,WACAsB,EAAAmvB,EAAA1tE,KAAAm9C,OAAAn9C,KAAAi9C,QAAAj9C,KAAAy/C,OAAAz/C,KAAAi/C,UAAA,KACA,MAEA,cACAV,EAAAmvB,EAAA1tE,KAAAm9C,OAAAn9C,KAAAi9C,QAAAj9C,KAAAy/C,QAAAz/C,KAAAk/C,aAAA,QACA,MAEA,UACA,WACAX,EAAAmvB,EAAA1tE,KAAAm9C,OAAAn9C,KAAAi9C,QAAAj9C,KAAAy/C,OAAA,KACA,MAEA,WACAlB,EAAAv+C,KAAAuxD,GAAArP,UACA3D,GAAAutB,GAAAE,GAAAztB,GAAAv+C,KAAAsyD,OAAA,EAAAtyD,KAAAspE,YAAAuC,IAAAC,IAAA,EACA,MAEA,aACAvtB,EAAAv+C,KAAAuxD,GAAArP,UACA3D,GAAAstB,GAAAG,GAAAztB,EAAAstB,IAAA,EACA,MAEA,aACAttB,EAAAv+C,KAAAuxD,GAAArP,UACA3D,GAAAqtB,GAAAI,GAAAztB,EAAAqtB,IAAA,EAOA,OAHA5rE,KAAAuxD,GAAAqY,QAAArrB,GAEAkR,EAAAkD,aAAA3yD,MAAA,GACAA,MA+RAmtE,GAAAxkC,OAnfA,SAAAglC,GACAA,IACAA,EAAA3tE,KAAAgqE,QAAAva,EAAAic,iBAAAjc,EAAAgc,eAGA,IAAArV,EAAAJ,EAAAh2D,KAAA2tE,GACA,OAAA3tE,KAAA+1D,aAAA6X,WAAAxX,IA8eA+W,GAAAttE,KA3eA,SAAA0+C,EAAAsvB,GACA,OAAA7tE,KAAAkD,YAAA0vD,EAAArU,MAAAr7C,WAAAggE,GAAA3kB,GAAAr7C,WACAinE,GAAA,CACArqE,GAAAE,KACAH,KAAA0+C,IACOwR,OAAA/vD,KAAA+vD,UAAA+d,UAAAD,GAEP7tE,KAAA+1D,aAAAO,eAqeA6W,GAAAY,QAjeA,SAAAF,GACA,OAAA7tE,KAAAH,KAAAqjE,KAAA2K,IAieAV,GAAArtE,GA9dA,SAAAy+C,EAAAsvB,GACA,OAAA7tE,KAAAkD,YAAA0vD,EAAArU,MAAAr7C,WAAAggE,GAAA3kB,GAAAr7C,WACAinE,GAAA,CACAtqE,KAAAG,KACAF,GAAAy+C,IACOwR,OAAA/vD,KAAA+vD,UAAA+d,UAAAD,GAEP7tE,KAAA+1D,aAAAO,eAwdA6W,GAAAa,MApdA,SAAAH,GACA,OAAA7tE,KAAAF,GAAAojE,KAAA2K,IAodAV,GAAAh5D,IArhGA,SAAAugD,GAGA,OAAAX,EAAA/zD,KAFA00D,EAAAD,EAAAC,KAGA10D,KAAA00D,KAGA10D,MA+gGAmtE,GAAAc,UAvPA,WACA,OAAA9d,EAAAnwD,MAAAwwD,UAuPA2c,GAAAxC,QA7sBA,SAAAvsB,EAAAsW,GACA,IAAAwZ,EAAAtb,EAAAxU,KAAA8kB,GAAA9kB,GAEA,SAAAp+C,KAAAkD,YAAAgrE,EAAAhrE,aAMA,iBAFAwxD,EAAAD,EAAAC,IAAA,eAGA10D,KAAAkiD,UAAAgsB,EAAAhsB,UAEAgsB,EAAAhsB,UAAAliD,KAAA+F,QAAA8iC,QAAA6rB,GAAAxS,YAksBAirB,GAAA5C,SA9rBA,SAAAnsB,EAAAsW,GACA,IAAAwZ,EAAAtb,EAAAxU,KAAA8kB,GAAA9kB,GAEA,SAAAp+C,KAAAkD,YAAAgrE,EAAAhrE,aAMA,iBAFAwxD,EAAAD,EAAAC,IAAA,eAGA10D,KAAAkiD,UAAAgsB,EAAAhsB,UAEAliD,KAAA+F,QAAA+iC,MAAA4rB,GAAAxS,UAAAgsB,EAAAhsB,YAmrBAirB,GAAAgB,UA/qBA,SAAAtuE,EAAAC,EAAA40D,EAAA0Z,GACA,IAAAC,EAAAzb,EAAA/yD,KAAAqjE,GAAArjE,GACAyuE,EAAA1b,EAAA9yD,KAAAojE,GAAApjE,GAEA,SAAAE,KAAAkD,WAAAmrE,EAAAnrE,WAAAorE,EAAAprE,cAKA,OADAkrE,KAAA,MACA,GAAApuE,KAAA2qE,QAAA0D,EAAA3Z,IAAA10D,KAAAuqE,SAAA8D,EAAA3Z,MAAA,MAAA0Z,EAAA,GAAApuE,KAAAuqE,SAAA+D,EAAA5Z,IAAA10D,KAAA2qE,QAAA2D,EAAA5Z,MAuqBAyY,GAAAoB,OApqBA,SAAAnwB,EAAAsW,GACA,IACA8Z,EADAN,EAAAtb,EAAAxU,KAAA8kB,GAAA9kB,GAGA,SAAAp+C,KAAAkD,YAAAgrE,EAAAhrE,aAMA,iBAFAwxD,EAAAD,EAAAC,IAAA,eAGA10D,KAAAkiD,YAAAgsB,EAAAhsB,WAEAssB,EAAAN,EAAAhsB,UACAliD,KAAA+F,QAAA8iC,QAAA6rB,GAAAxS,WAAAssB,MAAAxuE,KAAA+F,QAAA+iC,MAAA4rB,GAAAxS,aAupBAirB,GAAAsB,cAnpBA,SAAArwB,EAAAsW,GACA,OAAA10D,KAAAuuE,OAAAnwB,EAAAsW,IAAA10D,KAAA2qE,QAAAvsB,EAAAsW,IAmpBAyY,GAAAuB,eAhpBA,SAAAtwB,EAAAsW,GACA,OAAA10D,KAAAuuE,OAAAnwB,EAAAsW,IAAA10D,KAAAuqE,SAAAnsB,EAAAsW,IAgpBAyY,GAAAjqE,QAtQA,WACA,OAAAA,EAAAlD,OAsQAmtE,GAAAxB,QACAwB,GAAApd,UACAod,GAAApX,cACAoX,GAAA35E,IAAA20E,GACAgF,GAAA75E,IAAA20E,GACAkF,GAAAwB,aAxQA,WACA,OAAAllE,EAAA,GAAoB0mD,EAAAnwD,QAwQpBmtE,GAAA/4D,IA1hGA,SAAAsgD,EAAA1xD,GACA,qBAAA0xD,EAIA,IAFA,IAAAka,EA5TA,SAAAC,GACA,IAAAna,EAAA,GAEA,QAAAoa,KAAAD,EACAna,EAAA1lE,KAAA,CACA2mD,KAAAm5B,EACA7Z,SAAAF,EAAA+Z,KAOA,OAHApa,EAAA9lC,KAAA,SAAAp5B,EAAAnC,GACA,OAAAmC,EAAAy/D,SAAA5hE,EAAA4hE,WAEAP,EA+SAqa,CADAra,EAAAC,EAAAD,IAGA/lE,EAAA,EAAqBA,EAAAigF,EAAA//E,OAAwBF,IAC7CqR,KAAA4uE,EAAAjgF,GAAAgnD,MAAA+e,EAAAka,EAAAjgF,GAAAgnD,YAKA,GAAAoe,EAAA/zD,KAFA00D,EAAAD,EAAAC,KAGA,OAAA10D,KAAA00D,GAAA1xD,GAIA,OAAAhD,MA2gGAmtE,GAAAtkC,QAraA,SAAA6rB,GACA,IAAAnW,EAGA,QAAA5uD,KAFA+kE,EAAAD,EAAAC,KAEA,gBAAAA,IAAA10D,KAAAkD,UACA,OAAAlD,KAGA,IAAA0tE,EAAA1tE,KAAAsyD,OAAA8Z,GAAAD,GAEA,OAAAzX,GACA,WACAnW,EAAAmvB,EAAA1tE,KAAAm9C,OAAA,KACA,MAEA,cACAoB,EAAAmvB,EAAA1tE,KAAAm9C,OAAAn9C,KAAAi9C,QAAAj9C,KAAAi9C,QAAA,KACA,MAEA,YACAsB,EAAAmvB,EAAA1tE,KAAAm9C,OAAAn9C,KAAAi9C,QAAA,GACA,MAEA,WACAsB,EAAAmvB,EAAA1tE,KAAAm9C,OAAAn9C,KAAAi9C,QAAAj9C,KAAAy/C,OAAAz/C,KAAAi/C,WACA,MAEA,cACAV,EAAAmvB,EAAA1tE,KAAAm9C,OAAAn9C,KAAAi9C,QAAAj9C,KAAAy/C,QAAAz/C,KAAAk/C,aAAA,IACA,MAEA,UACA,WACAX,EAAAmvB,EAAA1tE,KAAAm9C,OAAAn9C,KAAAi9C,QAAAj9C,KAAAy/C,QACA,MAEA,WACAlB,EAAAv+C,KAAAuxD,GAAArP,UACA3D,GAAAytB,GAAAztB,GAAAv+C,KAAAsyD,OAAA,EAAAtyD,KAAAspE,YAAAuC,IAAAC,IACA,MAEA,aACAvtB,EAAAv+C,KAAAuxD,GAAArP,UACA3D,GAAAytB,GAAAztB,EAAAstB,IACA,MAEA,aACAttB,EAAAv+C,KAAAuxD,GAAArP,UACA3D,GAAAytB,GAAAztB,EAAAqtB,IAOA,OAHA5rE,KAAAuxD,GAAAqY,QAAArrB,GAEAkR,EAAAkD,aAAA3yD,MAAA,GACAA,MA+WAmtE,GAAAjC,YACAiC,GAAA6B,QAvSA,WACA,IAAA35E,EAAA2K,KACA,OAAA3K,EAAA8nD,OAAA9nD,EAAA4nD,QAAA5nD,EAAAoqD,OAAApqD,EAAAynD,OAAAznD,EAAAwnD,SAAAxnD,EAAAunD,SAAAvnD,EAAAonD,gBAsSA0wB,GAAA8B,SAnSA,WACA,IAAA55E,EAAA2K,KACA,OACAwoE,MAAAnzE,EAAA8nD,OACA8c,OAAA5kE,EAAA4nD,QACAwC,KAAApqD,EAAAoqD,OACA4e,MAAAhpE,EAAAgpE,QACAE,QAAAlpE,EAAAkpE,UACAG,QAAArpE,EAAAqpE,UACArf,aAAAhqD,EAAAgqD,iBA2RA8tB,GAAA+B,OA7SA,WACA,WAAAn6D,KAAA/U,KAAAkiD,YA6SAirB,GAAAgC,YAhkBA,SAAAC,GACA,IAAApvE,KAAAkD,UACA,YAGA,IAAAgtD,GAAA,IAAAkf,EACA/5E,EAAA66D,EAAAlwD,KAAA+F,QAAAmqD,MAAAlwD,KAEA,OAAA3K,EAAA8nD,OAAA,GAAA9nD,EAAA8nD,OAAA,KACA6Y,EAAA3gE,EAAA66D,EAAA,iEAGA6D,EAAAh/C,KAAAtV,UAAA0vE,aAEAjf,EACAlwD,KAAAkvE,SAAAC,cAEA,IAAAp6D,KAAA/U,KAAAkiD,UAAA,GAAAliD,KAAAspE,YAAA,KAAA6F,cAAAjZ,QAAA,IAAAF,EAAA3gE,EAAA,MAIA2gE,EAAA3gE,EAAA66D,EAAA,8DA4iBAid,GAAAkC,QAliBA,WACA,IAAArvE,KAAAkD,UACA,2BAAAlD,KAAAkyD,GAAA,OAGA,IAAA1yD,EAAA,SACA8vE,EAAA,GAEAtvE,KAAAuvE,YACA/vE,EAAA,IAAAQ,KAAAspE,YAAA,gCACAgG,EAAA,KAGA,IAAAE,EAAA,IAAAhwE,EAAA,MACA29C,EAAA,GAAAn9C,KAAAm9C,QAAAn9C,KAAAm9C,QAAA,qBAEAsyB,EAAAH,EAAA,OACA,OAAAtvE,KAAA2oC,OAAA6mC,EAAAryB,EAFA,wBAEAsyB,IAkhBAtC,GAAArnE,OA1RA,WAEA,OAAA9F,KAAAkD,UAAAlD,KAAAmvE,cAAA,MAyRAhC,GAAA1qE,SAvkBA,WACA,OAAAzC,KAAA+F,QAAAgqD,OAAA,MAAApnB,OAAA,qCAukBAwkC,GAAAuC,KAtTA,WACA,OAAAn8E,KAAAkB,MAAAuL,KAAAkiD,UAAA,MAsTAirB,GAAAjrB,QA3TA,WACA,OAAAliD,KAAAuxD,GAAArP,UAAA,KAAAliD,KAAAuyD,SAAA,IA2TA4a,GAAAwC,aA7QA,WACA,OACAvxB,MAAAp+C,KAAAkyD,GACAvpB,OAAA3oC,KAAAmyD,GACApC,OAAA/vD,KAAAwyD,QACAqV,MAAA7nE,KAAAsyD,OACAtC,OAAAhwD,KAAA0xD,UAwQAyb,GAAAhwB,KAAAsc,GACA0T,GAAA5T,WAjlGA,WACA,OAAAA,GAAAv5D,KAAAm9C,SAilGAgwB,GAAAvK,SAhOA,SAAAxkB,GACA,OAAAmuB,GAAAj9E,KAAA0Q,KAAAo+C,EAAAp+C,KAAAg9C,OAAAh9C,KAAAi/C,UAAAj/C,KAAA+1D,aAAAoN,MAAAxH,IAAA37D,KAAA+1D,aAAAoN,MAAAvH,MAgOAuR,GAAAT,YA7NA,SAAAtuB,GACA,OAAAmuB,GAAAj9E,KAAA0Q,KAAAo+C,EAAAp+C,KAAA2oE,UAAA3oE,KAAAk/C,aAAA,MA6NAiuB,GAAAjwB,QAAAiwB,GAAA1E,SA3KA,SAAArqB,GACA,aAAAA,EAAA7qD,KAAAwhD,MAAA/0C,KAAAi9C,QAAA,MAAAj9C,KAAAi9C,MAAA,GAAAmB,EAAA,GAAAp+C,KAAAi9C,QAAA,IA2KAkwB,GAAAlwB,MAAAyd,GACAyS,GAAAtT,YA9zFA,WACA,OAAAA,GAAA75D,KAAAm9C,OAAAn9C,KAAAi9C,UA8zFAkwB,GAAAnwB,KAAAmwB,GAAAzE,MA1lFA,SAAAtqB,GACA,IAAApB,EAAAh9C,KAAA+1D,aAAA/Y,KAAAh9C,MACA,aAAAo+C,EAAApB,EAAAh9C,KAAAw1B,IAAA,GAAA4oB,EAAApB,GAAA,MAylFAmwB,GAAAxE,QAAAwE,GAAAyC,SAtlFA,SAAAxxB,GACA,IAAApB,EAAAsf,GAAAt8D,KAAA,KAAAg9C,KACA,aAAAoB,EAAApB,EAAAh9C,KAAAw1B,IAAA,GAAA4oB,EAAApB,GAAA,MAqlFAmwB,GAAA3Q,YA3NA,WACA,IAAAqT,EAAA7vE,KAAA+1D,aAAAoN,MAEA,OAAA3G,GAAAx8D,KAAAm9C,OAAA0yB,EAAAlU,IAAAkU,EAAAjU,MAyNAuR,GAAA2C,eAhOA,WACA,OAAAtT,GAAAx8D,KAAAm9C,OAAA,MAgOAgwB,GAAA1tB,KAAAqtB,GACAK,GAAApwB,IAAAowB,GAAAvE,KAx3EA,SAAAxqB,GACA,IAAAp+C,KAAAkD,UACA,aAAAk7C,EAAAp+C,KAAAylB,IAGA,IAAAs3B,EAAA/8C,KAAAsyD,OAAAtyD,KAAAuxD,GAAAwK,YAAA/7D,KAAAuxD,GAAAoS,SAEA,aAAAvlB,GACAA,EArLA,SAAAA,EAAA2R,GACA,wBAAA3R,EACAA,EAGA97C,MAAA87C,GAMA,kBAFAA,EAAA2R,EAAAmN,cAAA9e,IAGAA,EAGA,KATAj8C,SAAAi8C,EAAA,IA+KA2xB,CAAA3xB,EAAAp+C,KAAA+1D,cACA/1D,KAAAw1B,IAAA4oB,EAAArB,EAAA,MAEAA,GA82EAowB,GAAAluB,QA12EA,SAAAb,GACA,IAAAp+C,KAAAkD,UACA,aAAAk7C,EAAAp+C,KAAAylB,IAGA,IAAAw5B,GAAAj/C,KAAA+8C,MAAA,EAAA/8C,KAAA+1D,aAAAoN,MAAAxH,KAAA,EACA,aAAAvd,EAAAa,EAAAj/C,KAAAw1B,IAAA4oB,EAAAa,EAAA,MAq2EAkuB,GAAAjuB,WAl2EA,SAAAd,GACA,IAAAp+C,KAAAkD,UACA,aAAAk7C,EAAAp+C,KAAAylB,IAMA,SAAA24B,EAAA,CACA,IAAAa,EA5LA,SAAAb,EAAA2R,GACA,wBAAA3R,EACA2R,EAAAmN,cAAA9e,GAAA,KAGA97C,MAAA87C,GAAA,KAAAA,EAuLA4xB,CAAA5xB,EAAAp+C,KAAA+1D,cACA,OAAA/1D,KAAA+8C,IAAA/8C,KAAA+8C,MAAA,EAAAkC,IAAA,GAEA,OAAAj/C,KAAA+8C,OAAA,GAu1EAowB,GAAA9Q,UAjJA,SAAAje,GACA,IAAAie,EAAA9oE,KAAAwM,OAAAC,KAAA+F,QAAA8iC,QAAA,OAAA7oC,KAAA+F,QAAA8iC,QAAA,kBACA,aAAAuV,EAAAie,EAAAr8D,KAAAw1B,IAAA4oB,EAAAie,EAAA,MAgJA8Q,GAAArwB,KAAAqwB,GAAA9O,MAAAa,GACAiO,GAAAtwB,OAAAswB,GAAA5O,QAAAwO,GACAI,GAAAvwB,OAAAuwB,GAAAzO,QAAAsO,GACAG,GAAA1wB,YAAA0wB,GAAA9tB,aAAA6tB,GACAC,GAAA7D,UA9jCA,SAAAlrB,EAAA6xB,EAAAC,GACA,IACAC,EADAnvD,EAAAhhB,KAAAuyD,SAAA,EAGA,IAAAvyD,KAAAkD,UACA,aAAAk7C,EAAAp+C,KAAAylB,IAGA,SAAA24B,EAAA,CACA,qBAAAA,GAGA,WAFAA,EAAAmrB,GAAA9R,GAAArZ,IAGA,OAAAp+C,UAEOzM,KAAA2qB,IAAAkgC,GAAA,KAAA8xB,IACP9xB,GAAA,IAwBA,OArBAp+C,KAAAsyD,QAAA2d,IACAE,EAAArG,GAAA9pE,OAGAA,KAAAuyD,QAAAnU,EACAp+C,KAAAsyD,QAAA,EAEA,MAAA6d,GACAnwE,KAAAw1B,IAAA26C,EAAA,KAGAnvD,IAAAo9B,KACA6xB,GAAAjwE,KAAAowE,kBACArF,GAAA/qE,KAAAmqE,GAAA/rB,EAAAp9B,EAAA,WACShhB,KAAAowE,oBACTpwE,KAAAowE,mBAAA,EACA3gB,EAAAkD,aAAA3yD,MAAA,GACAA,KAAAowE,kBAAA,OAIApwE,KAEA,OAAAA,KAAAsyD,OAAAtxC,EAAA8oD,GAAA9pE,OAqhCAmtE,GAAAjd,IApgCA,SAAA+f,GACA,OAAAjwE,KAAAspE,UAAA,EAAA2G,IAogCA9C,GAAAtD,MAjgCA,SAAAoG,GAUA,OATAjwE,KAAAsyD,SACAtyD,KAAAspE,UAAA,EAAA2G,GACAjwE,KAAAsyD,QAAA,EAEA2d,GACAjwE,KAAAkrE,SAAApB,GAAA9pE,MAAA,MAIAA,MAw/BAmtE,GAAAkD,UAr/BA,WACA,SAAArwE,KAAAqyD,KACAryD,KAAAspE,UAAAtpE,KAAAqyD,MAAA,WACK,qBAAAryD,KAAAkyD,GAAA,CACL,IAAAoe,EAAA/G,GAAA/R,GAAAx3D,KAAAkyD,IAEA,MAAAoe,EACAtwE,KAAAspE,UAAAgH,GAEAtwE,KAAAspE,UAAA,MAIA,OAAAtpE,MAy+BAmtE,GAAAoD,qBAt+BA,SAAAnyB,GACA,QAAAp+C,KAAAkD,YAIAk7C,IAAA8kB,GAAA9kB,GAAAkrB,YAAA,GACAtpE,KAAAspE,YAAAlrB,GAAA,SAi+BA+uB,GAAAqD,MA99BA,WACA,OAAAxwE,KAAAspE,YAAAtpE,KAAA+F,QAAAk3C,MAAA,GAAAqsB,aAAAtpE,KAAAspE,YAAAtpE,KAAA+F,QAAAk3C,MAAA,GAAAqsB,aA89BA6D,GAAAoC,QAx8BA,WACA,QAAAvvE,KAAAkD,YAAAlD,KAAAsyD,QAw8BA6a,GAAAsD,YAr8BA,WACA,QAAAzwE,KAAAkD,WAAAlD,KAAAsyD,QAq8BA6a,GAAAnD,SACAmD,GAAAtF,MAAAmC,GACAmD,GAAAuD,SA7EA,WACA,OAAA1wE,KAAAsyD,OAAA,UA6EA6a,GAAAwD,SA1EA,WACA,OAAA3wE,KAAAsyD,OAAA,iCA0EA6a,GAAAyD,MAAAld,EAAA,kDAAAoZ,IACAK,GAAAlT,OAAAvG,EAAA,mDAAAgH,IACAyS,GAAA3E,MAAA9U,EAAA,iDAAA+F,IACA0T,GAAAmC,KAAA5b,EAAA,2GA/hCA,SAAAtV,EAAA6xB,GACA,aAAA7xB,GACA,kBAAAA,IACAA,MAGAp+C,KAAAspE,UAAAlrB,EAAA6xB,GACAjwE,OAEAA,KAAAspE,cAuhCA6D,GAAA0D,aAAAnd,EAAA,0GAr+BA,WACA,IAAAhE,EAAA1vD,KAAA8wE,eACA,OAAA9wE,KAAA8wE,cAGA,IAAA17E,EAAA,GAIA,GAHA48D,EAAA58D,EAAA4K,OACA5K,EAAA6xE,GAAA7xE,IAEAwjE,GAAA,CACA,IAAAsP,EAAA9yE,EAAAk9D,OAAAxC,EAAA16D,EAAAwjE,IAAAsK,GAAA9tE,EAAAwjE,IACA54D,KAAA8wE,cAAA9wE,KAAAkD,WAAAgwD,EAAA99D,EAAAwjE,GAAAsP,EAAA8G,WAAA,OAEAhvE,KAAA8wE,eAAA,EAGA,OAAA9wE,KAAA8wE,gBAm+BA,IAAAC,GAAA3c,EAAA30D,UA4BA,SAAAuxE,GAAAroC,EAAA9hC,EAAAoqE,EAAAC,GACA,IAAAnhB,EAAAsR,KACAnR,EAAAJ,IAAA17C,IAAA88D,EAAArqE,GACA,OAAAkpD,EAAAkhB,GAAA/gB,EAAAvnB,GAGA,SAAAwoC,GAAAxoC,EAAA9hC,EAAAoqE,GAQA,GAPAx9D,EAAAk1B,KACA9hC,EAAA8hC,EACAA,OAAAh5C,GAGAg5C,KAAA,GAEA,MAAA9hC,EACA,OAAAmqE,GAAAroC,EAAA9hC,EAAAoqE,EAAA,SAGA,IAAAtiF,EACA6uD,EAAA,GAEA,IAAA7uD,EAAA,EAAeA,EAAA,GAAQA,IACvB6uD,EAAA7uD,GAAAqiF,GAAAroC,EAAAh6C,EAAAsiF,EAAA,SAGA,OAAAzzB,EAWA,SAAA4zB,GAAAC,EAAA1oC,EAAA9hC,EAAAoqE,GACA,mBAAAI,GACA59D,EAAAk1B,KACA9hC,EAAA8hC,EACAA,OAAAh5C,GAGAg5C,KAAA,KAGA9hC,EADA8hC,EAAA0oC,EAEAA,GAAA,EAEA59D,EAAAk1B,KACA9hC,EAAA8hC,EACAA,OAAAh5C,GAGAg5C,KAAA,IAGA,IAOAh6C,EAPAohE,EAAAsR,KACAhnD,EAAAg3D,EAAAthB,EAAAoT,MAAAxH,IAAA,EAEA,SAAA90D,EACA,OAAAmqE,GAAAroC,GAAA9hC,EAAAwT,GAAA,EAAA42D,EAAA,OAIA,IAAAzzB,EAAA,GAEA,IAAA7uD,EAAA,EAAeA,EAAA,EAAOA,IACtB6uD,EAAA7uD,GAAAqiF,GAAAroC,GAAAh6C,EAAA0rB,GAAA,EAAA42D,EAAA,OAGA,OAAAzzB,EAlGAuzB,GAAA3R,SA1/GA,SAAA/vE,EAAA8mE,EAAAnhD,GACA,IAAAohD,EAAAp2D,KAAAsxE,UAAAjiF,IAAA2Q,KAAAsxE,UAAA,SACA,OAAAvd,EAAAqC,KAAA9mE,KAAA6mE,EAAAnhD,GAAAohD,GAy/GA2a,GAAAva,eA7+GA,SAAAnnE,GACA,IAAAs5C,EAAA3oC,KAAAuxE,gBAAAliF,GACAmiF,EAAAxxE,KAAAuxE,gBAAAliF,EAAAqT,eAEA,OAAAimC,IAAA6oC,EACA7oC,GAGA3oC,KAAAuxE,gBAAAliF,GAAAmiF,EAAAtb,QAAA,4BAAA3hE,GACA,OAAAA,EAAAmL,MAAA,KAEAM,KAAAuxE,gBAAAliF,KAm+GA0hF,GAAAza,YA99GA,WACA,OAAAt2D,KAAAyxE,cA89GAV,GAAAjb,QAx9GA,SAAAhD,GACA,OAAA9yD,KAAA0xE,SAAAxb,QAAA,KAAApD,IAw9GAie,GAAA7J,SAAAkG,GACA2D,GAAAnD,WAAAR,GACA2D,GAAA7Q,aAt8GA,SAAApN,EAAA+a,EAAA7sE,EAAA2wE,GACA,IAAAvb,EAAAp2D,KAAA4xE,cAAA5wE,GACA,OAAA+yD,EAAAqC,KAAAtD,EAAA+a,EAAA7sE,EAAA2wE,GAAAvb,EAAAF,QAAA,MAAApD,IAq8GAie,GAAAc,WAl8GA,SAAAjpC,EAAAwtB,GACA,IAAAztB,EAAA3oC,KAAA4xE,cAAAhpC,EAAA,mBACA,OAAAmrB,EAAAprB,KAAAytB,GAAAztB,EAAAutB,QAAA,MAAAE,IAi8GA2a,GAAA38D,IAplHA,SAAAyiB,GACA,IAAAzwB,EAAAzX,EAEA,IAAAA,KAAAkoC,EAGAk9B,EAFA3tD,EAAAywB,EAAAloC,IAGAqR,KAAArR,GAAAyX,EAEApG,KAAA,IAAArR,GAAAyX,EAIApG,KAAAwhE,QAAA3qC,EAIA72B,KAAA6sE,+BAAA,IAAA5U,QAAAj4D,KAAA2sE,wBAAAzmE,QAAAlG,KAAA4sE,cAAA1mE,QAAA,cAAwIA,SAokHxI6qE,GAAA9W,OAvgGA,SAAA5kE,EAAAszC,GACA,OAAAtzC,EAIAnG,EAAA8Q,KAAAipE,SAAAjpE,KAAAipE,QAAA5zE,EAAA4nD,SAAAj9C,KAAAipE,SAAAjpE,KAAAipE,QAAA6I,UAAAzX,IAAA3D,KAAA/tB,GAAA,uBAAAtzC,EAAA4nD,SAHA/tD,EAAA8Q,KAAAipE,SAAAjpE,KAAAipE,QAAAjpE,KAAAipE,QAAA,YAsgGA8H,GAAA/W,YA9/FA,SAAA3kE,EAAAszC,GACA,OAAAtzC,EAIAnG,EAAA8Q,KAAA+xE,cAAA/xE,KAAA+xE,aAAA18E,EAAA4nD,SAAAj9C,KAAA+xE,aAAA1X,GAAA3D,KAAA/tB,GAAA,uBAAAtzC,EAAA4nD,SAHA/tD,EAAA8Q,KAAA+xE,cAAA/xE,KAAA+xE,aAAA/xE,KAAA+xE,aAAA,YA6/FAhB,GAAA3W,YAr8FA,SAAA4X,EAAArpC,EAAAqnB,GACA,IAAArhE,EAAAwnE,EAAA0B,EAEA,GAAA73D,KAAAiyE,kBACA,OAtDA,SAAAD,EAAArpC,EAAAqnB,GACA,IAAArhE,EACAujF,EACA/b,EACAgc,EAAAH,EAAAI,oBAEA,IAAApyE,KAAAqyE,aAMA,IAJAryE,KAAAqyE,aAAA,GACAryE,KAAAsyE,iBAAA,GACAtyE,KAAAuyE,kBAAA,GAEA5jF,EAAA,EAAiBA,EAAA,KAAQA,EACzBwnE,EAAArG,EAAA,KAAAnhE,IACAqR,KAAAuyE,kBAAA5jF,GAAAqR,KAAAg6D,YAAA7D,EAAA,IAAAic,oBACApyE,KAAAsyE,iBAAA3jF,GAAAqR,KAAAi6D,OAAA9D,EAAA,IAAAic,oBAIA,OAAApiB,EACA,QAAArnB,GAEA,KADAupC,EAAA9nE,GAAA9a,KAAA0Q,KAAAuyE,kBAAAJ,IACAD,EAAA,MAGA,KADAA,EAAA9nE,GAAA9a,KAAA0Q,KAAAsyE,iBAAAH,IACAD,EAAA,KAGA,QAAAvpC,GAGA,KAFAupC,EAAA9nE,GAAA9a,KAAA0Q,KAAAuyE,kBAAAJ,IAGAD,GAIA,KADAA,EAAA9nE,GAAA9a,KAAA0Q,KAAAsyE,iBAAAH,IACAD,EAAA,MAIA,KAFAA,EAAA9nE,GAAA9a,KAAA0Q,KAAAsyE,iBAAAH,IAGAD,GAIA,KADAA,EAAA9nE,GAAA9a,KAAA0Q,KAAAuyE,kBAAAJ,IACAD,EAAA,MASA5iF,KAAA0Q,KAAAgyE,EAAArpC,EAAAqnB,GAYA,IATAhwD,KAAAqyE,eACAryE,KAAAqyE,aAAA,GACAryE,KAAAsyE,iBAAA,GACAtyE,KAAAuyE,kBAAA,IAMA5jF,EAAA,EAAeA,EAAA,GAAQA,IAAA,CAevB,GAbAwnE,EAAArG,EAAA,KAAAnhE,IAEAqhE,IAAAhwD,KAAAsyE,iBAAA3jF,KACAqR,KAAAsyE,iBAAA3jF,GAAA,IAAAspE,OAAA,IAAAj4D,KAAAi6D,OAAA9D,EAAA,IAAAD,QAAA,iBACAl2D,KAAAuyE,kBAAA5jF,GAAA,IAAAspE,OAAA,IAAAj4D,KAAAg6D,YAAA7D,EAAA,IAAAD,QAAA,kBAGAlG,GAAAhwD,KAAAqyE,aAAA1jF,KACAkpE,EAAA,IAAA73D,KAAAi6D,OAAA9D,EAAA,SAAAn2D,KAAAg6D,YAAA7D,EAAA,IACAn2D,KAAAqyE,aAAA1jF,GAAA,IAAAspE,OAAAJ,EAAA3B,QAAA,cAIAlG,GAAA,SAAArnB,GAAA3oC,KAAAsyE,iBAAA3jF,GAAA+nE,KAAAsb,GACA,OAAArjF,EACO,GAAAqhE,GAAA,QAAArnB,GAAA3oC,KAAAuyE,kBAAA5jF,GAAA+nE,KAAAsb,GACP,OAAArjF,EACO,IAAAqhE,GAAAhwD,KAAAqyE,aAAA1jF,GAAA+nE,KAAAsb,GACP,OAAArjF,IAk6FAoiF,GAAA5W,YA31FA,SAAApC,GACA,OAAA/3D,KAAAiyE,mBACApiB,EAAA7vD,KAAA,iBACA66D,GAAAvrE,KAAA0Q,MAGA+3D,EACA/3D,KAAAo7D,mBAEAp7D,KAAAk7D,eAGArL,EAAA7vD,KAAA,kBACAA,KAAAk7D,aAAAN,IAGA56D,KAAAo7D,oBAAArD,EAAA/3D,KAAAo7D,mBAAAp7D,KAAAk7D,eA40FA6V,GAAA7W,iBAl3FA,SAAAnC,GACA,OAAA/3D,KAAAiyE,mBACApiB,EAAA7vD,KAAA,iBACA66D,GAAAvrE,KAAA0Q,MAGA+3D,EACA/3D,KAAAq7D,wBAEAr7D,KAAAm7D,oBAGAtL,EAAA7vD,KAAA,uBACAA,KAAAm7D,kBAAAR,IAGA36D,KAAAq7D,yBAAAtD,EAAA/3D,KAAAq7D,wBAAAr7D,KAAAm7D,oBAm2FA4V,GAAA/zB,KAxqFA,SAAAmZ,GACA,OAAAmG,GAAAnG,EAAAn2D,KAAAmjE,MAAAxH,IAAA37D,KAAAmjE,MAAAvH,KAAA5e,MAwqFA+zB,GAAAyB,eA1pFA,WACA,OAAAxyE,KAAAmjE,MAAAvH,KA0pFAmV,GAAA0B,eA/pFA,WACA,OAAAzyE,KAAAmjE,MAAAxH,KA+pFAoV,GAAAjU,SA5jFA,SAAAznE,EAAAszC,GACA,IAAAm0B,EAAA5tE,EAAA8Q,KAAA0yE,WAAA1yE,KAAA0yE,UAAA1yE,KAAA0yE,UAAAr9E,IAAA,IAAAA,GAAA2K,KAAA0yE,UAAAZ,SAAApb,KAAA/tB,GAAA,uBACA,WAAAtzC,EAAAqnE,GAAAI,EAAA98D,KAAAmjE,MAAAxH,KAAAtmE,EAAAynE,EAAAznE,EAAA0nD,OAAA+f,GA2jFAiU,GAAAnU,YAhjFA,SAAAvnE,GACA,WAAAA,EAAAqnE,GAAA18D,KAAA2yE,aAAA3yE,KAAAmjE,MAAAxH,KAAAtmE,EAAA2K,KAAA2yE,aAAAt9E,EAAA0nD,OAAA/8C,KAAA2yE,cAgjFA5B,GAAAlU,cAvjFA,SAAAxnE,GACA,WAAAA,EAAAqnE,GAAA18D,KAAA4yE,eAAA5yE,KAAAmjE,MAAAxH,KAAAtmE,EAAA2K,KAAA4yE,eAAAv9E,EAAA0nD,OAAA/8C,KAAA4yE,gBAujFA7B,GAAA7T,cA99EA,SAAA2V,EAAAlqC,EAAAqnB,GACA,IAAArhE,EAAAwnE,EAAA0B,EAEA,GAAA73D,KAAA8yE,oBACA,OApFA,SAAAD,EAAAlqC,EAAAqnB,GACA,IAAArhE,EACAujF,EACA/b,EACAgc,EAAAU,EAAAT,oBAEA,IAAApyE,KAAA+yE,eAKA,IAJA/yE,KAAA+yE,eAAA,GACA/yE,KAAAgzE,oBAAA,GACAhzE,KAAAizE,kBAAA,GAEAtkF,EAAA,EAAiBA,EAAA,IAAOA,EACxBwnE,EAAArG,EAAA,SAAA/S,IAAApuD,GACAqR,KAAAizE,kBAAAtkF,GAAAqR,KAAA48D,YAAAzG,EAAA,IAAAic,oBACApyE,KAAAgzE,oBAAArkF,GAAAqR,KAAA68D,cAAA1G,EAAA,IAAAic,oBACApyE,KAAA+yE,eAAApkF,GAAAqR,KAAA88D,SAAA3G,EAAA,IAAAic,oBAIA,OAAApiB,EACA,SAAArnB,GAEA,KADAupC,EAAA9nE,GAAA9a,KAAA0Q,KAAA+yE,eAAAZ,IACAD,EAAA,KACO,QAAAvpC,GAEP,KADAupC,EAAA9nE,GAAA9a,KAAA0Q,KAAAgzE,oBAAAb,IACAD,EAAA,MAGA,KADAA,EAAA9nE,GAAA9a,KAAA0Q,KAAAizE,kBAAAd,IACAD,EAAA,KAGA,SAAAvpC,GAGA,KAFAupC,EAAA9nE,GAAA9a,KAAA0Q,KAAA+yE,eAAAZ,IAGAD,GAKA,KAFAA,EAAA9nE,GAAA9a,KAAA0Q,KAAAgzE,oBAAAb,IAGAD,GAIA,KADAA,EAAA9nE,GAAA9a,KAAA0Q,KAAAizE,kBAAAd,IACAD,EAAA,KACO,QAAAvpC,GAGP,KAFAupC,EAAA9nE,GAAA9a,KAAA0Q,KAAAgzE,oBAAAb,IAGAD,GAKA,KAFAA,EAAA9nE,GAAA9a,KAAA0Q,KAAA+yE,eAAAZ,IAGAD,GAIA,KADAA,EAAA9nE,GAAA9a,KAAA0Q,KAAAizE,kBAAAd,IACAD,EAAA,MAIA,KAFAA,EAAA9nE,GAAA9a,KAAA0Q,KAAAizE,kBAAAd,IAGAD,GAKA,KAFAA,EAAA9nE,GAAA9a,KAAA0Q,KAAA+yE,eAAAZ,IAGAD,GAIA,KADAA,EAAA9nE,GAAA9a,KAAA0Q,KAAAgzE,oBAAAb,IACAD,EAAA,MASA5iF,KAAA0Q,KAAA6yE,EAAAlqC,EAAAqnB,GAUA,IAPAhwD,KAAA+yE,iBACA/yE,KAAA+yE,eAAA,GACA/yE,KAAAizE,kBAAA,GACAjzE,KAAAgzE,oBAAA,GACAhzE,KAAAkzE,mBAAA,IAGAvkF,EAAA,EAAeA,EAAA,EAAOA,IAAA,CAgBtB,GAdAwnE,EAAArG,EAAA,SAAA/S,IAAApuD,GAEAqhE,IAAAhwD,KAAAkzE,mBAAAvkF,KACAqR,KAAAkzE,mBAAAvkF,GAAA,IAAAspE,OAAA,IAAAj4D,KAAA88D,SAAA3G,EAAA,IAAAD,QAAA,qBACAl2D,KAAAgzE,oBAAArkF,GAAA,IAAAspE,OAAA,IAAAj4D,KAAA68D,cAAA1G,EAAA,IAAAD,QAAA,qBACAl2D,KAAAizE,kBAAAtkF,GAAA,IAAAspE,OAAA,IAAAj4D,KAAA48D,YAAAzG,EAAA,IAAAD,QAAA,sBAGAl2D,KAAA+yE,eAAApkF,KACAkpE,EAAA,IAAA73D,KAAA88D,SAAA3G,EAAA,SAAAn2D,KAAA68D,cAAA1G,EAAA,SAAAn2D,KAAA48D,YAAAzG,EAAA,IACAn2D,KAAA+yE,eAAApkF,GAAA,IAAAspE,OAAAJ,EAAA3B,QAAA,cAIAlG,GAAA,SAAArnB,GAAA3oC,KAAAkzE,mBAAAvkF,GAAA+nE,KAAAmc,GACA,OAAAlkF,EACO,GAAAqhE,GAAA,QAAArnB,GAAA3oC,KAAAgzE,oBAAArkF,GAAA+nE,KAAAmc,GACP,OAAAlkF,EACO,GAAAqhE,GAAA,OAAArnB,GAAA3oC,KAAAizE,kBAAAtkF,GAAA+nE,KAAAmc,GACP,OAAAlkF,EACO,IAAAqhE,GAAAhwD,KAAA+yE,eAAApkF,GAAA+nE,KAAAmc,GACP,OAAAlkF,IA07EAoiF,GAAA9T,cA14EA,SAAAlF,GACA,OAAA/3D,KAAA8yE,qBACAjjB,EAAA7vD,KAAA,mBACAy9D,GAAAnuE,KAAA0Q,MAGA+3D,EACA/3D,KAAAi+D,qBAEAj+D,KAAA89D,iBAGAjO,EAAA7vD,KAAA,oBACAA,KAAA89D,eAAAR,IAGAt9D,KAAAi+D,sBAAAlG,EAAA/3D,KAAAi+D,qBAAAj+D,KAAA89D,iBA23EAiT,GAAA/T,mBAr3EA,SAAAjF,GACA,OAAA/3D,KAAA8yE,qBACAjjB,EAAA7vD,KAAA,mBACAy9D,GAAAnuE,KAAA0Q,MAGA+3D,EACA/3D,KAAAk+D,0BAEAl+D,KAAA+9D,sBAGAlO,EAAA7vD,KAAA,yBACAA,KAAA+9D,oBAAAR,IAGAv9D,KAAAk+D,2BAAAnG,EAAA/3D,KAAAk+D,0BAAAl+D,KAAA+9D,sBAs2EAgT,GAAAhU,iBAh2EA,SAAAhF,GACA,OAAA/3D,KAAA8yE,qBACAjjB,EAAA7vD,KAAA,mBACAy9D,GAAAnuE,KAAA0Q,MAGA+3D,EACA/3D,KAAAm+D,wBAEAn+D,KAAAg+D,oBAGAnO,EAAA7vD,KAAA,uBACAA,KAAAg+D,kBAAAR,IAGAx9D,KAAAm+D,yBAAApG,EAAA/3D,KAAAm+D,wBAAAn+D,KAAAg+D,oBAi1EA+S,GAAAlS,KA7rEA,SAAAzgB,GAGA,aAAAA,EAAA,IAAAgR,cAAA3oD,OAAA,IA2rEAsqE,GAAA/f,SAtrEA,SAAAqN,EAAAE,EAAA4U,GACA,OAAA9U,EAAA,GACA8U,EAAA,UAEAA,EAAA,WAkxEA/R,GAAA,MACAnB,uBAAA,uBACAnK,QAAA,SAAAhD,GACA,IAAAz/D,EAAAy/D,EAAA,GACAsD,EAAA,IAAArD,EAAAD,EAAA,iBAAAz/D,EAAA,SAAAA,EAAA,SAAAA,EAAA,UACA,OAAAy/D,EAAAsD,KAIA3G,EAAAkc,KAAAjY,EAAA,wDAAA0N,IACA3R,EAAA2jB,SAAA1f,EAAA,gEAAA2N,IACA,IAAAgS,GAAA9/E,KAAA2qB,IAgBA,SAAAo1D,GAAAh/D,EAAA8pC,EAAAp7C,EAAA6nE,GACA,IAAA3C,EAAAiC,GAAA/rB,EAAAp7C,GAIA,OAHAsR,EAAAy0D,eAAA8B,EAAA3C,EAAAa,cACAz0D,EAAA00D,OAAA6B,EAAA3C,EAAAc,MACA10D,EAAA20D,SAAA4B,EAAA3C,EAAAe,QACA30D,EAAA40D,UAaA,SAAAqK,GAAAzgB,GACA,OAAAA,EAAA,EACAv/D,KAAAkB,MAAAq+D,GAEAv/D,KAAAwhD,KAAA+d,GAyCA,SAAA0gB,GAAA5K,GAGA,YAAAA,EAAA,OAGA,SAAA6K,GAAAxZ,GAEA,cAAAA,EAAA,KAkEA,SAAAyZ,GAAAC,GACA,kBACA,OAAA3zE,KAAAqiD,GAAAsxB,IAIA,IAAAC,GAAAF,GAAA,MACAG,GAAAH,GAAA,KACAI,GAAAJ,GAAA,KACAK,GAAAL,GAAA,KACAM,GAAAN,GAAA,KACAO,GAAAP,GAAA,KACAQ,GAAAR,GAAA,KACAS,GAAAT,GAAA,KACAU,GAAAV,GAAA,KAWA,SAAAW,GAAA1xE,GACA,kBACA,OAAA3C,KAAAkD,UAAAlD,KAAA4X,MAAAjV,GAAA8iB,KAIA,IAAA45B,GAAAg1B,GAAA,gBACA3V,GAAA2V,GAAA,WACA9V,GAAA8V,GAAA,WACAhW,GAAAgW,GAAA,SACAzL,GAAAyL,GAAA,QACApa,GAAAoa,GAAA,UACA7L,GAAA6L,GAAA,SAMAt0E,GAAAxM,KAAAwM,MACAu0E,GAAA,CACAjU,GAAA,GAEAzvE,EAAA,GAEAyE,EAAA,GAEA1E,EAAA,GAEAwrC,EAAA,GAEAskC,EAAA,IAuEA8T,GAAAhhF,KAAA2qB,IAEA,SAAAq2B,GAAAvgD,GACA,OAAAA,EAAA,IAAAA,EAAA,KAAAA,EAGA,SAAAwgF,KAQA,IAAAx0E,KAAAkD,UACA,OAAAlD,KAAA+1D,aAAAO,cAGA,IAGAiI,EAAAF,EAHAK,EAAA6V,GAAAv0E,KAAA+oE,eAAA,IACAH,EAAA2L,GAAAv0E,KAAAgpE,OACA/O,EAAAsa,GAAAv0E,KAAAipE,SAGA1K,EAAA1L,EAAA6L,EAAA,IACAL,EAAAxL,EAAA0L,EAAA,IACAG,GAAA,GACAH,GAAA,GAKA,IAAAkW,EAHA5hB,EAAAoH,EAAA,IAIAwG,EAHAxG,GAAA,GAIAya,EAAA9L,EACAj4E,EAAA0tE,EACAhpE,EAAAkpE,EACA3tE,EAAA8tE,IAAA50B,QAAA,GAAAosB,QAAA,gBACAhuC,EAAAloB,KAAA6zE,YAEA,IAAA3rD,EAGA,YAGA,IAAAysD,EAAAzsD,EAAA,SACA0sD,EAAArgC,GAAAv0C,KAAAipE,WAAA10B,GAAArsB,GAAA,OACA2sD,EAAAtgC,GAAAv0C,KAAAgpE,SAAAz0B,GAAArsB,GAAA,OACA4sD,EAAAvgC,GAAAv0C,KAAA+oE,iBAAAx0B,GAAArsB,GAAA,OACA,OAAAysD,EAAA,KAAAF,EAAAG,EAAAH,EAAA,SAAAhU,EAAAmU,EAAAnU,EAAA,SAAAiU,EAAAG,EAAAH,EAAA,SAAA/jF,GAAA0E,GAAAzE,EAAA,SAAAD,EAAAmkF,EAAAnkF,EAAA,SAAA0E,EAAAy/E,EAAAz/E,EAAA,SAAAzE,EAAAkkF,EAAAlkF,EAAA,QAGA,IAAAmkF,GAAAxM,GAAA9oE,UAmGA,OAlGAs1E,GAAA7xE,QAjrDA,WACA,OAAAlD,KAAAmxD,UAirDA4jB,GAAA72D,IA3UA,WACA,IAAAlH,EAAAhX,KAAA4X,MAUA,OATA5X,KAAA+oE,cAAAsK,GAAArzE,KAAA+oE,eACA/oE,KAAAgpE,MAAAqK,GAAArzE,KAAAgpE,OACAhpE,KAAAipE,QAAAoK,GAAArzE,KAAAipE,SACAjyD,EAAAqoC,aAAAg0B,GAAAr8D,EAAAqoC,cACAroC,EAAA0nD,QAAA2U,GAAAr8D,EAAA0nD,SACA1nD,EAAAunD,QAAA8U,GAAAr8D,EAAAunD,SACAvnD,EAAAqnD,MAAAgV,GAAAr8D,EAAAqnD,OACArnD,EAAAijD,OAAAoZ,GAAAr8D,EAAAijD,QACAjjD,EAAAwxD,MAAA6K,GAAAr8D,EAAAwxD,OACAxoE,MAiUA+0E,GAAAv/C,IArTA,SAAA4oB,EAAAp7C,GACA,OAAAswE,GAAAtzE,KAAAo+C,EAAAp7C,EAAA,IAqTA+xE,GAAA7J,SAjTA,SAAA9sB,EAAAp7C,GACA,OAAAswE,GAAAtzE,KAAAo+C,EAAAp7C,GAAA,IAiTA+xE,GAAA1yB,GAtPA,SAAAqS,GACA,IAAA10D,KAAAkD,UACA,OAAAuiB,IAGA,IAAAmjD,EACA3O,EACA5a,EAAAr/C,KAAA+oE,cAGA,cAFArU,EAAAD,EAAAC,KAEA,YAAAA,GAAA,SAAAA,EAIA,OAHAkU,EAAA5oE,KAAAgpE,MAAA3pB,EAAA,MACA4a,EAAAj6D,KAAAipE,QAAAuK,GAAA5K,GAEAlU,GACA,YACA,OAAAuF,EAEA,cACA,OAAAA,EAAA,EAEA,WACA,OAAAA,EAAA,QAMA,OAFA2O,EAAA5oE,KAAAgpE,MAAAz1E,KAAAwM,MAAA0zE,GAAAzzE,KAAAipE,UAEAvU,GACA,WACA,OAAAkU,EAAA,EAAAvpB,EAAA,OAEA,UACA,OAAAupB,EAAAvpB,EAAA,MAEA,WACA,UAAAupB,EAAAvpB,EAAA,KAEA,aACA,YAAAupB,EAAAvpB,EAAA,IAEA,aACA,aAAAupB,EAAAvpB,EAAA,IAGA,kBACA,OAAA9rD,KAAAkB,MAAA,MAAAm0E,GAAAvpB,EAEA,QACA,UAAAlZ,MAAA,gBAAAuuB,KAsMAqgB,GAAAnB,kBACAmB,GAAAlB,aACAkB,GAAAjB,aACAiB,GAAAhB,WACAgB,GAAAf,UACAe,GAAAd,WACAc,GAAAb,YACAa,GAAAZ,cACAY,GAAAX,WACAW,GAAA7yB,QAzMA,WACA,OAAAliD,KAAAkD,UAIAlD,KAAA+oE,cAAA,MAAA/oE,KAAAgpE,MAAAhpE,KAAAipE,QAAA,kBAAAlW,EAAA/yD,KAAAipE,QAAA,IAHAxjD,KAwMAsvD,GAAA7L,QAjTA,WACA,IAIAxK,EAAAH,EAAAF,EAAAmK,EAAAwM,EAJA31B,EAAAr/C,KAAA+oE,cACAH,EAAA5oE,KAAAgpE,MACA/O,EAAAj6D,KAAAipE,QACAjyD,EAAAhX,KAAA4X,MA8BA,OA1BAynC,GAAA,GAAAupB,GAAA,GAAA3O,GAAA,GAAA5a,GAAA,GAAAupB,GAAA,GAAA3O,GAAA,IACA5a,GAAA,MAAAk0B,GAAAE,GAAAxZ,GAAA2O,GACAA,EAAA,EACA3O,EAAA,GAKAjjD,EAAAqoC,eAAA,IACAqf,EAAA7L,EAAAxT,EAAA,KACAroC,EAAA0nD,UAAA,GACAH,EAAA1L,EAAA6L,EAAA,IACA1nD,EAAAunD,UAAA,GACAF,EAAAxL,EAAA0L,EAAA,IACAvnD,EAAAqnD,QAAA,GACAuK,GAAA/V,EAAAwL,EAAA,IAEA2W,EAAAniB,EAAA2gB,GAAA5K,IACA3O,GAAA+a,EACApM,GAAA2K,GAAAE,GAAAuB,IAEAxM,EAAA3V,EAAAoH,EAAA,IACAA,GAAA,GACAjjD,EAAA4xD,OACA5xD,EAAAijD,SACAjjD,EAAAwxD,QACAxoE,MAgRA+0E,GAAAhvE,MAnLA,WACA,OAAAokE,GAAAnqE,OAmLA+0E,GAAA5gE,IAhLA,SAAAugD,GAEA,OADAA,EAAAD,EAAAC,GACA10D,KAAAkD,UAAAlD,KAAA00D,EAAA,OAAAjvC,KA+KAsvD,GAAA11B,gBACA01B,GAAArW,WACAqW,GAAAxW,WACAwW,GAAA1W,SACA0W,GAAAnM,QACAmM,GAAArM,MAnKA,WACA,OAAA7V,EAAA7yD,KAAA4oE,OAAA,IAmKAmM,GAAA9a,UACA8a,GAAAvM,SACAuM,GAAAjH,SA9FA,SAAAmH,GACA,IAAAj1E,KAAAkD,UACA,OAAAlD,KAAA+1D,aAAAO,cAGA,IAAAvG,EAAA/vD,KAAA+1D,aACAK,EAtDA,SAAA8e,EAAArH,EAAA9d,GACA,IAAAz7C,EAAA61D,GAAA+K,GAAAh3D,MACAwgD,EAAA3+D,GAAAuU,EAAA+tC,GAAA,MACAkc,EAAAx+D,GAAAuU,EAAA+tC,GAAA,MACAgc,EAAAt+D,GAAAuU,EAAA+tC,GAAA,MACAumB,EAAA7oE,GAAAuU,EAAA+tC,GAAA,MACA4X,EAAAl6D,GAAAuU,EAAA+tC,GAAA,MACAmmB,EAAAzoE,GAAAuU,EAAA+tC,GAAA,MACA7sD,EAAAkpE,GAAA4V,GAAAjU,IAAA,KAAA3B,MAAA4V,GAAA1jF,GAAA,MAAA8tE,IAAAH,GAAA,UAAAA,EAAA+V,GAAAj/E,GAAA,MAAAkpE,IAAAF,GAAA,UAAAA,EAAAiW,GAAA3jF,GAAA,MAAA0tE,IAAAuK,GAAA,UAAAA,EAAA0L,GAAAn4C,GAAA,MAAAysC,IAAA3O,GAAA,UAAAA,EAAAqa,GAAA7T,GAAA,MAAAxG,IAAAuO,GAAA,gBAAAA,GAIA,OAHAhzE,EAAA,GAAAq4E,EACAr4E,EAAA,IAAA0/E,EAAA,EACA1/E,EAAA,GAAAu6D,EAfA,SAAA/uD,EAAA8xD,EAAA+a,EAAA8D,EAAA5hB,GACA,OAAAA,EAAAmQ,aAAApN,GAAA,IAAA+a,EAAA7sE,EAAA2wE,IAeAviF,MAAA,KAAAoG,GA0CA2/E,CAAAn1E,MAAAi1E,EAAAllB,GAMA,OAJAklB,IACA7e,EAAArG,EAAA8hB,YAAA7xE,KAAAo2D,IAGArG,EAAA6d,WAAAxX,IAmFA2e,GAAA5F,YAAAqF,GACAO,GAAAtyE,SAAA+xE,GACAO,GAAAjvE,OAAA0uE,GACAO,GAAAhlB,UACAglB,GAAAhf,cACAgf,GAAAK,YAAA1hB,EAAA,sFAAA8gB,IACAO,GAAApJ,QAGAhW,EAAA,gBACAA,EAAA,mBAEAiC,GAAA,IAAAL,IACAK,GAAA,IAtvHA,wBAuvHAY,GAAA,aAAApa,EAAA/zC,EAAAwsB,GACAA,EAAA06B,GAAA,IAAAx8C,KAAA,IAAA3S,WAAAg8C,EAAA,OAEAoa,GAAA,aAAApa,EAAA/zC,EAAAwsB,GACAA,EAAA06B,GAAA,IAAAx8C,KAAAg+C,EAAA3U,MAGAqR,EAAA4lB,QAAA,SAl6IA9lB,EAm6IA2T,GACAzT,EAAAxnD,GAAAklE,GACA1d,EAAAn8D,IA5wDA,WAEA,OAAA80E,GAAA,WADA,GAAA1oE,MAAApQ,KAAAV,UAAA,KA4wDA6gE,EAAAj8D,IAxwDA,WAEA,OAAA40E,GAAA,UADA,GAAA1oE,MAAApQ,KAAAV,UAAA,KAwwDA6gE,EAAAz6C,IApwDA,WACA,OAAAD,KAAAC,IAAAD,KAAAC,OAAA,IAAAD,MAowDA06C,EAAAS,IAAAJ,EACAL,EAAAigB,KAphBA,SAAAtxB,GACA,OAAA8kB,GAAA,IAAA9kB,IAohBAqR,EAAAwK,OAnaA,SAAAtxB,EAAA9hC,GACA,OAAAsqE,GAAAxoC,EAAA9hC,EAAA,WAmaA4oD,EAAAE,SACAF,EAAAM,OAAAqR,GACA3R,EAAAwb,QAAApZ,EACApC,EAAAn7C,SAAA61D,GACA1a,EAAAmD,WACAnD,EAAAqN,SAjaA,SAAAuU,EAAA1oC,EAAA9hC,GACA,OAAAuqE,GAAAC,EAAA1oC,EAAA9hC,EAAA,aAiaA4oD,EAAA4gB,UAxhBA,WACA,OAAAnN,GAAA9zE,MAAA,KAAAR,WAAAyhF,aAwhBA5gB,EAAAsG,WAAAsL,GACA5R,EAAA0Z,cACA1Z,EAAAuK,YAzaA,SAAArxB,EAAA9hC,GACA,OAAAsqE,GAAAxoC,EAAA9hC,EAAA,gBAyaA4oD,EAAAmN,YA9ZA,SAAAyU,EAAA1oC,EAAA9hC,GACA,OAAAuqE,GAAAC,EAAA1oC,EAAA9hC,EAAA,gBA8ZA4oD,EAAA6R,gBACA7R,EAAA6lB,aA1gFA,SAAA3yE,EAAAk0B,GACA,SAAAA,EAAA,CACA,IAAAk5B,EACAwlB,EACArhB,EAAAiL,GAIA,OAFAoW,EAAAvU,GAAAr+D,MAGAuxD,EAAAqhB,EAAA/T,SAGA3qC,EAAAo9B,EAAAC,EAAAr9B,IACAk5B,EAAA,IAAAqE,EAAAv9B,IACA4qC,aAAAZ,GAAAl+D,GACAk+D,GAAAl+D,GAAAotD,EAEAqR,GAAAz+D,QAGA,MAAAk+D,GAAAl+D,KACA,MAAAk+D,GAAAl+D,GAAA8+D,aACAZ,GAAAl+D,GAAAk+D,GAAAl+D,GAAA8+D,aACS,MAAAZ,GAAAl+D,WACTk+D,GAAAl+D,IAKA,OAAAk+D,GAAAl+D,IA8+EA8sD,EAAAoR,QAj9EA,WACA,OAAAt4D,EAAAs4D,KAi9EApR,EAAAoN,cAtaA,SAAAwU,EAAA1oC,EAAA9hC,GACA,OAAAuqE,GAAAC,EAAA1oC,EAAA9hC,EAAA,kBAsaA4oD,EAAAgF,iBACAhF,EAAA+lB,qBA7KA,SAAAC,GACA,YAAA9lF,IAAA8lF,EACA11E,GAGA,oBAAA01E,IACA11E,GAAA01E,GACA,IAuKAhmB,EAAAimB,sBAhKA,SAAAC,EAAAC,GACA,YAAAjmF,IAAA2kF,GAAAqB,UAIAhmF,IAAAimF,EACAtB,GAAAqB,IAGArB,GAAAqB,GAAAC,EAEA,MAAAD,IACArB,GAAAjU,GAAAuV,EAAA,IAGA,KAkJAnmB,EAAA6d,eAx0CA,SAAAuI,EAAA7gE,GACA,IAAA4zB,EAAAitC,EAAAjtC,KAAA5zB,EAAA,WACA,OAAA4zB,GAAA,aAAAA,GAAA,aAAAA,EAAA,YAAAA,EAAA,YAAAA,EAAA,YAAAA,EAAA,yBAu0CA6mB,EAAAhwD,UAAA0tE,GAEA1d,EAAAqmB,UAAA,CACAC,eAAA,mBAEAC,uBAAA,sBAEAC,kBAAA,0BAEAld,KAAA,aAEAmd,KAAA,QAEAC,aAAA,WAEAC,QAAA,eAEAhd,KAAA,aAEAN,MAAA,WAGArJ,EAj+I8DJ,2DCF9D/nD,OAAA4M,eAAAzkB,EAAA,cACAuT,OAAA,IAEAvT,EAAAs0C,WAAA,EAEA,IAAAsyC,EAAAC,EAAqChnB,EAAQ,IAE7CinB,EAAAC,EAAwClnB,EAAQ,KAEhDmnB,EAAAH,EAAsChnB,EAAQ,MAE9ConB,EAAAF,EAAyClnB,EAAQ,MAEjD,SAAAknB,EAAA3zE,GACA,OAAAA,KAAA8zE,WAAA9zE,EAAA,CACAnT,QAAAmT,GAIA,SAAAyzE,EAAAzzE,GACA,GAAAA,KAAA8zE,WACA,OAAA9zE,EAEA,IAAA+zE,EAAA,GAEA,SAAA/zE,EACA,QAAAxT,KAAAwT,EACA,GAAAyE,OAAA7H,UAAAjR,eAAAc,KAAAuT,EAAAxT,GAAA,CACA,IAAAwnF,EAAAvvE,OAAA4M,gBAAA5M,OAAAwvE,yBAAAxvE,OAAAwvE,yBAAAj0E,EAAAxT,GAAA,GAEAwnF,EAAA1iE,KAAA0iE,EAAAziE,IACA9M,OAAA4M,eAAA0iE,EAAAvnF,EAAAwnF,GAEAD,EAAAvnF,GAAAwT,EAAAxT,GAOA,OADAunF,EAAAlnF,QAAAmT,EACA+zE,EAIA,SAAAG,EAAAl0E,GAWA,OATAk0E,EADA,oBAAAC,QAAA,kBAAAA,OAAAC,SACA,SAAAp0E,GACA,cAAAA,GAGA,SAAAA,GACA,OAAAA,GAAA,oBAAAm0E,QAAAn0E,EAAAkH,cAAAitE,QAAAn0E,IAAAm0E,OAAAv3E,UAAA,gBAAAoD,IAIAA,GASA,SAAAq0E,EAAA/wE,EAAAopB,GACA,QAAA5gC,EAAA,EAAiBA,EAAA4gC,EAAA1gC,OAAkBF,IAAA,CACnC,IAAAiqC,EAAArJ,EAAA5gC,GACAiqC,EAAAngB,WAAAmgB,EAAAngB,aAAA,EACAmgB,EAAApgB,cAAA,EACA,UAAAogB,MAAAu+C,UAAA,GACA7vE,OAAA4M,eAAA/N,EAAAyyB,EAAAvpC,IAAAupC,IAUA,SAAAw+C,EAAAC,EAAA/nF,GACA,OAAAA,GAAA,WAAAynF,EAAAznF,IAAA,oBAAAA,EAOA,SAAA+nF,GACA,YAAAA,EACA,UAAAC,eAAA,6DAGA,OAAAD,EARAE,CAAAF,GAHA/nF,EAcA,SAAAkoF,EAAAzd,GAIA,OAHAyd,EAAAlwE,OAAAmwE,eAAAnwE,OAAAowE,eAAA,SAAA3d,GACA,OAAAA,EAAA4d,WAAArwE,OAAAowE,eAAA3d,KAEAA,GAkBA,SAAA6d,EAAA7d,EAAAplE,GAMA,OALAijF,EAAAtwE,OAAAmwE,gBAAA,SAAA1d,EAAAplE,GAEA,OADAolE,EAAA4d,UAAAhjF,EACAolE,IAGAA,EAAAplE,GAGA,SAAAkjF,EAAAh1E,EAAAxT,EAAA2T,GAYA,OAXA3T,KAAAwT,EACAyE,OAAA4M,eAAArR,EAAAxT,EAAA,CACA2T,QACAyV,YAAA,EACAD,cAAA,EACA2+D,UAAA,IAGAt0E,EAAAxT,GAAA2T,EAGAH,EAGA,IAAAkhC,EAEA,SAAA+zC,GAGA,SAAA/zC,IAGA,OA5FA,SAAAg0C,EAAAC,GACA,KAAAD,aAAAC,GACA,UAAAC,UAAA,qCAwFAC,CAAAl4E,KAAA+jC,GAEAqzC,EAAAp3E,KAAAw3E,EAAAzzC,GAAA30C,MAAA4Q,KAAApR,YA5EA,IAAAopF,EAAAG,EAAAC,EA2KA,OA9IA,SAAAC,EAAAC,GACA,uBAAAA,GAAA,OAAAA,EACA,UAAAL,UAAA,sDAGAI,EAAA54E,UAAA6H,OAAAixE,OAAAD,KAAA74E,UAAA,CACAsK,YAAA,CACA/G,MAAAq1E,EACAlB,UAAA,EACA3+D,cAAA,KAGA8/D,GAAAV,EAAAS,EAAAC,GA8BAE,CAAAz0C,EAqGCsyC,EAAAoC,WA5KDT,EA+EAj0C,GA/EAo0C,EA+EA,EACA9oF,IAAA,YACA2T,MAAA,WACAhD,KAAAoN,MAAA,IAAAqpE,EAAA1yC,MAAA/jC,KAAAoS,OAAA,CACApM,KAAAhG,KAAAuvB,MAAAvpB,KACAgR,KAAAhX,KAAAuvB,MAAAvY,KACA/N,QAAAjJ,KAAAuvB,MAAAtmB,YAGG,CACH5Z,IAAA,YACA2T,MAAA,WACA,OAAAhD,KAAAoS,SAEG,CACH/iB,IAAA,iBACA2T,MAAA,WACA,OAAAhD,KAAAoN,MAAAs6B,kBAEG,CACHr4C,IAAA,iBACA2T,MAAA,WACAhD,KAAAoN,OACApN,KAAAoN,MAAAo6B,mBAGG,CACHn4C,IAAA,UACA2T,MAAA,WACAhD,KAAAoN,OACApN,KAAAoN,MAAAsK,WAGG,CACHroB,IAAA,SACA2T,MAAA,WACAhD,KAAAoN,QACApN,KAAAoN,MAAAuK,UACA3X,KAAA04E,eAGG,CACHrpF,IAAA,wBACA2T,MAAA,SAAA21E,GACA,OAAAA,EAAA3hE,OAAAhX,KAAAuvB,MAAAvY,OAMG,CACH3nB,IAAA,oBACA2T,MAAA,WACAhD,KAAA04E,cAEG,CACHrpF,IAAA,qBACA2T,MAAA,SAAA41E,EAAAC,GACA74E,KAAA84E,WAEG,CACHzpF,IAAA,uBACA2T,MAAA,WACAhD,KAAAoN,QACApN,KAAAoN,MAAAuK,UACA3X,KAAAoN,MAAA,QAGG,CACH/d,IAAA,SACA2T,MAAA,WACA,IAAA+1E,EAAA/4E,KAEA+zB,GAAA,EAAA2iD,EAAAhnF,SAAA,UAAAsQ,KAAAuvB,MAAAwE,WACA3lB,EAAA9G,OAAA0xE,OAAA,CACAzrE,MAAAvN,KAAAuvB,MAAAhiB,MACAC,OAAAxN,KAAAuvB,MAAA/hB,QACOxN,KAAAuvB,MAAAnhB,OACP,OAAAioE,EAAA3mF,QAAAokC,cAAA,OACA1sB,GAAApH,KAAAuvB,MAAAnoB,GACAgH,QACA2lB,aACOsiD,EAAA3mF,QAAAokC,cAAA,UACPmlD,IAAA,SAAArlD,GACAmlD,EAAA3mE,OAAAwhB,GAEArmB,MAAAvN,KAAAuvB,MAAAhiB,MACAC,OAAAxN,KAAAuvB,MAAA/hB,eArKA0pE,EAAAc,EAAAv4E,UAAA04E,GACAC,GAAAlB,EAAAc,EAAAI,GAyKAr0C,EArGA,GAwGAt0C,EAAAs0C,QAEA8zC,EAAA9zC,EAAA,gBACA38B,GAAA,KACApB,KAAA,KACAgR,KAAA,KACA/N,QAAA,KACAsE,MAAA,KACAC,OAAA,KACAY,MAAA,KACA2lB,UAAA,OAGA8jD,EAAA9zC,EAAA,aACA38B,GAAAmvE,EAAA7mF,QAAAsR,OACAgF,KAAAuwE,EAAA7mF,QAAAsR,OACAgW,KAAAu/D,EAAA7mF,QAAAmpB,OACA5P,QAAAstE,EAAA7mF,QAAAmpB,OACAtL,MAAAgpE,EAAA7mF,QAAAsR,OACAwM,OAAA+oE,EAAA7mF,QAAAsR,OACAoN,MAAAmoE,EAAA7mF,QAAAmpB,OACAkb,UAAAwiD,EAAA7mF,QAAAsR","file":"static/js/4.34fea63e.chunk.js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","'use strict';\n\nmodule.exports = require('./components/chart/Chart');","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Chart = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar ChartJS = _interopRequireWildcard(require(\"chart.js\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Chart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chart, _Component);\n\n  function Chart() {\n    _classCallCheck(this, Chart);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Chart).apply(this, arguments));\n  }\n\n  _createClass(Chart, [{\n    key: \"initChart\",\n    value: function initChart() {\n      this.chart = new ChartJS.Chart(this.canvas, {\n        type: this.props.type,\n        data: this.props.data,\n        options: this.props.options\n      });\n    }\n  }, {\n    key: \"getCanvas\",\n    value: function getCanvas() {\n      return this.canvas;\n    }\n  }, {\n    key: \"getBase64Image\",\n    value: function getBase64Image() {\n      return this.chart.toBase64Image();\n    }\n  }, {\n    key: \"generateLegend\",\n    value: function generateLegend() {\n      if (this.chart) {\n        this.chart.generateLegend();\n      }\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      if (this.chart) {\n        this.chart.update();\n      }\n    }\n  }, {\n    key: \"reinit\",\n    value: function reinit() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.initChart();\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      if (nextProps.data === this.props.data) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initChart();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this.reinit();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var className = (0, _classnames.default)('p-chart', this.props.className),\n          style = Object.assign({\n        width: this.props.width,\n        height: this.props.height\n      }, this.props.style);\n      return _react.default.createElement(\"div\", {\n        id: this.props.id,\n        style: style,\n        className: className\n      }, _react.default.createElement(\"canvas\", {\n        ref: function ref(el) {\n          _this.canvas = el;\n        },\n        width: this.props.width,\n        height: this.props.height\n      }));\n    }\n  }]);\n\n  return Chart;\n}(_react.Component);\n\nexports.Chart = Chart;\n\n_defineProperty(Chart, \"defaultProps\", {\n  id: null,\n  type: null,\n  data: null,\n  options: null,\n  width: null,\n  height: null,\n  style: null,\n  className: null\n});\n\n_defineProperty(Chart, \"propTypes\", {\n  id: _propTypes.default.string,\n  type: _propTypes.default.string,\n  data: _propTypes.default.object,\n  options: _propTypes.default.object,\n  width: _propTypes.default.string,\n  height: _propTypes.default.string,\n  style: _propTypes.default.object,\n  className: _propTypes.default.string\n});"],"sourceRoot":""}