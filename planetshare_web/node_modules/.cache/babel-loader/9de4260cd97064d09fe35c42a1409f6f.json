{"ast":null,"code":"import _classCallCheck from \"/var/www/html/REACT_WORK/planetshare_web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/REACT_WORK/planetshare_web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/REACT_WORK/planetshare_web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/REACT_WORK/planetshare_web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/REACT_WORK/planetshare_web/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/REACT_WORK/planetshare_web/src/container/Dashboard_Container/vendor_dashboard/service_form/language_list.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from \"react-router-dom\";\nvar countryOptions = [{\n  key: 'hin',\n  value: 'hin',\n  text: 'Hindi'\n}, {\n  key: 'urd',\n  value: 'urd',\n  text: 'Urdu'\n}, {\n  key: 'pun',\n  value: 'pun',\n  text: 'Punjabi'\n}, {\n  key: 'en',\n  value: 'en',\n  text: 'English'\n}, {\n  key: 'mar',\n  value: 'mar',\n  text: 'Marathi'\n}, {\n  key: 'guj',\n  value: 'guj',\n  text: 'Gujarati'\n}, {\n  key: 'tam',\n  value: 'tam',\n  text: 'Tamil'\n}, {\n  key: 'bhoj',\n  value: 'bhoj',\n  text: 'Bhojpuri'\n}, {\n  key: 'assa',\n  value: 'assa',\n  text: 'Assamese'\n}, {\n  key: 'ben',\n  value: 'ben',\n  text: 'Bengali'\n}, {\n  key: 'kan',\n  value: 'kan',\n  text: 'Kannada'\n}, {\n  key: 'kas',\n  value: 'kas',\n  text: 'Kashmiri'\n}, {\n  key: 'mal',\n  value: 'mal',\n  text: 'Malayalam'\n}, {\n  key: 'ori',\n  value: 'ori',\n  text: 'Oriya'\n}, {\n  key: 'tel',\n  value: 'tel',\n  text: 'Telugu'\n}, {\n  key: 'sin',\n  value: 'sin',\n  text: 'Sindhi'\n}, {\n  key: 'pas',\n  value: 'pas',\n  text: 'Pashto '\n}, {\n  key: 'ara',\n  value: 'ara',\n  text: 'Arabic'\n}, {\n  key: 'nep',\n  value: 'nep',\n  text: 'Nepali'\n}, {\n  key: 'arm ',\n  value: 'arm',\n  text: 'Armenian  '\n}, {\n  key: 'aze',\n  value: 'aze',\n  text: 'Azerbaijani '\n}, {\n  key: 'bhu',\n  value: 'bhu',\n  text: ' Bhutanese  '\n}, {\n  key: 'khm',\n  value: 'khm',\n  text: 'Khmer '\n}, {\n  key: 'chin',\n  value: 'chin',\n  text: 'Chinese '\n}, {\n  key: 'per',\n  value: 'per',\n  text: 'Persian '\n}, {\n  key: 'heb',\n  value: 'heb',\n  text: 'Hebrew '\n}, {\n  key: 'kur',\n  value: 'kur',\n  text: 'Kurdish'\n}, {\n  key: 'bahs',\n  value: 'bahs',\n  text: 'Bahasa Melayu'\n}, {\n  key: 'mal',\n  value: 'mal',\n  text: 'Maldivian'\n}, {\n  key: 'burm',\n  value: 'burm',\n  text: 'Burmese'\n}, {\n  key: 'sin',\n  value: 'sin',\n  text: ' Sinhala  '\n}, {\n  key: 'tha',\n  value: 'tha',\n  text: 'Thai'\n}, {\n  key: 'bn',\n  value: 'bn',\n  flag: 'bn',\n  text: 'Brunei'\n}, {\n  key: 'bg',\n  value: 'bg',\n  flag: 'bg',\n  text: 'Bulgaria'\n}, {\n  key: 'vie',\n  value: 'vie',\n  text: 'Vietnamese'\n}, {\n  key: 'phi',\n  value: 'phi',\n  text: 'Philippines'\n}, {\n  key: 'com',\n  value: 'com',\n  text: 'Cambodian'\n}, {\n  key: 'tur',\n  value: 'tur',\n  text: 'Turkish'\n}];\n\nvar TranscodeForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TranscodeForm, _Component);\n\n  function TranscodeForm() {\n    _classCallCheck(this, TranscodeForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TranscodeForm).apply(this, arguments));\n  }\n\n  _createClass(TranscodeForm, [{\n    key: \"render\",\n    value: function render() {\n      var list = countryOptions.map(function (result, key) {\n        return React.createElement(\"option\", {\n          value: result.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, result.text);\n      });\n      return React.createElement(\"datalist\", {\n        id: this.props.Id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, list);\n    }\n  }]);\n\n  return TranscodeForm;\n}(Component);\n\nexport default withRouter(TranscodeForm);","map":{"version":3,"sources":["/var/www/html/REACT_WORK/planetshare_web/src/container/Dashboard_Container/vendor_dashboard/service_form/language_list.js"],"names":["React","Component","Link","withRouter","countryOptions","key","value","text","flag","TranscodeForm","list","map","result","props","Id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Link,withRouter} from \"react-router-dom\";\nconst countryOptions = [\n  { key: 'hin', value: 'hin',  text: 'Hindi' },\n  { key: 'urd', value: 'urd',  text: 'Urdu' },\n  { key: 'pun', value: 'pun',  text: 'Punjabi' },\n    { key: 'en', value: 'en',  text: 'English' },\n  { key: 'mar', value: 'mar',  text: 'Marathi' },\n  { key: 'guj', value: 'guj',  text: 'Gujarati' },\n  { key: 'tam', value: 'tam',  text: 'Tamil' },\n  { key: 'bhoj', value: 'bhoj' ,text: 'Bhojpuri' },\n  { key: 'assa', value: 'assa',  text: 'Assamese' },\n  { key: 'ben', value: 'ben',  text: 'Bengali' },\n  { key: 'kan', value: 'kan',  text: 'Kannada' },\n  { key: 'kas', value: 'kas', text: 'Kashmiri' },\n  { key: 'mal', value: 'mal',  text: 'Malayalam' },\n  { key: 'ori', value: 'ori',  text: 'Oriya' },\n  { key: 'tel', value: 'tel',  text: 'Telugu' },\n  { key: 'sin', value: 'sin',  text: 'Sindhi' },\n  { key: 'pas' ,value:'pas',    text: 'Pashto ' },\n  { key: 'ara', value: 'ara', text: 'Arabic' },\n  { key: 'nep', value: 'nep',  text: 'Nepali' },\n  { key: 'arm ',value: 'arm',  text:'Armenian  ' },\n  { key: 'aze', value: 'aze',  text: 'Azerbaijani ' },\n  { key: 'bhu', value: 'bhu',  text: ' Bhutanese  ' },\n  { key: 'khm', value: 'khm',  text: 'Khmer ' },\n  { key: 'chin', value: 'chin', text: 'Chinese ' },\n  { key: 'per', value: 'per',  text: 'Persian ' },\n  { key: 'heb', value: 'heb',  text: 'Hebrew ' },\n  { key: 'kur', value: 'kur',  text: 'Kurdish' },\n  { key: 'bahs', value: 'bahs',  text: 'Bahasa Melayu' },\n  { key: 'mal', value: 'mal',  text: 'Maldivian' },\n  { key: 'burm', value: 'burm',  text: 'Burmese' },\n  { key: 'sin', value: 'sin',  text: ' Sinhala  ' },\n  { key: 'tha', value: 'tha', text: 'Thai' },\n  { key: 'bn', value: 'bn', flag: 'bn', text: 'Brunei' },\n  { key: 'bg', value: 'bg', flag: 'bg', text: 'Bulgaria' },\n  { key: 'vie', value: 'vie', text: 'Vietnamese' },\n  { key: 'phi', value: 'phi', text: 'Philippines' },\n  { key: 'com', value: 'com',text: 'Cambodian' },\n  { key: 'tur', value: 'tur',  text: 'Turkish' },\n\n]\nclass TranscodeForm extends Component {\n  render() {\n    const list=countryOptions.map((result,key)=>{\n      return(<option value={result.text}>{result.text}</option>)\n    })\n    return (\n  <datalist id={this.props.Id}>\n{list}\n  </datalist>\n        )\n}\n}\nexport default withRouter(TranscodeForm);\n"]},"metadata":{},"sourceType":"module"}