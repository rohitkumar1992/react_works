{"ast":null,"code":"\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nfunction getDateInSecs(date) {\n  return +new Date(date) / 1000;\n}\n\nfunction normalizeDate(date) {\n  return isNumber(date) ? date : getDateInSecs(date);\n}\n\nfunction isNumber(num) {\n  return !isNaN(Number(num));\n}\n\nfunction isNonNullObject(input) {\n  return !!input && (typeof input === \"undefined\" ? \"undefined\" : _typeof(input)) === \"object\" && !Array.isArray(input);\n}\n\nfunction normalizeBoolean(bool) {\n  if (bool === undefined) {\n    return bool;\n  }\n\n  return bool ? 1 : 0;\n}\n\nfunction isDefined(value) {\n  return typeof value !== \"undefined\";\n}\n\nfunction normalizeNotes() {\n  var notes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var normalizedNotes = {};\n\n  for (var key in notes) {\n    normalizedNotes[\"notes[\" + key + \"]\"] = notes[key];\n  }\n\n  return normalizedNotes;\n}\n\nfunction prettify(val) {\n  /*\n   * given an object , returns prettified string\n   *\n   * @param {Object} val\n   * @return {String}\n   */\n  return JSON.stringify(val, null, 2);\n}\n\nfunction getTestError(summary, expectedVal, gotVal) {\n  /*\n   * @param {String} summary\n   * @param {*} expectedVal\n   * @param {*} gotVal\n   *\n   * @return {Error}\n   */\n  return new Error(\"\\n\" + summary + \"\\n\" + (\"Expected(\" + (typeof expectedVal === \"undefined\" ? \"undefined\" : _typeof(expectedVal)) + \")\\n\" + prettify(expectedVal) + \"\\n\\n\") + (\"Got(\" + (typeof gotVal === \"undefined\" ? \"undefined\" : _typeof(gotVal)) + \")\\n\" + prettify(gotVal)));\n}\n\nfunction validateWebhookSignature(body, signature, secret) {\n  /*\n   * Verifies webhook signature\n   *\n   * @param {String} summary\n   * @param {String} signature\n   * @param {String} secret\n   *\n   * @return {Boolean}\n   */\n  var crypto = require(\"crypto\");\n\n  if (!isDefined(body) || !isDefined(signature) || !isDefined(secret)) {\n    throw Error(\"Invalid Parameters: Please give request body,\" + \"signature sent in X-Razorpay-Signature header and \" + \"webhook secret from dashboard as parameters\");\n  }\n\n  body = body.toString();\n  var expectedSignature = crypto.createHmac('sha256', secret).update(body).digest('hex');\n  return expectedSignature === signature;\n}\n\n;\nmodule.exports = {\n  normalizeNotes: normalizeNotes,\n  normalizeDate: normalizeDate,\n  normalizeBoolean: normalizeBoolean,\n  isNumber: isNumber,\n  getDateInSecs: getDateInSecs,\n  prettify: prettify,\n  isDefined: isDefined,\n  isNonNullObject: isNonNullObject,\n  getTestError: getTestError,\n  validateWebhookSignature: validateWebhookSignature\n};","map":null,"metadata":{},"sourceType":"script"}