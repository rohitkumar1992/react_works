{"ast":null,"code":"import _defineProperty from \"/var/www/html/REACT_WORK/planetshare_web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/var/www/html/REACT_WORK/planetshare_web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/REACT_WORK/planetshare_web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/REACT_WORK/planetshare_web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/REACT_WORK/planetshare_web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/REACT_WORK/planetshare_web/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/REACT_WORK/planetshare_web/src/container/Dashboard_Container/vendor_dashboard/add_service/add_service.js\";\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport { VENDOR_ADDED_SERVICE_LIST } from '../../../../url.js';\nimport TranscodeForm from '../service_form/transcodeform.js';\nimport DubbingForm from '../service_form/dubbing_form.js';\nimport SubtitleForm from '../service_form/subtitle_form.js';\nimport Select from 'react-select';\nimport '../service_form/form.css';\nimport './add_service.css';\nimport ChildNavbar from '../childnavbar/childnavbar';\nvar service_name = [{\n  label: 'Subtitle',\n  value: 'subtitle'\n}, {\n  label: 'Dubbing',\n  value: 'dubbing'\n}];\n\nvar UploadNav =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UploadNav, _Component);\n\n  function UploadNav() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UploadNav);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UploadNav)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedService: [],\n      service_name: []\n    };\n\n    _this.languageChange = function (selectedOption) {\n      var count = 0;\n\n      for (var i = 0; i < _this.state.service_name.length; i++) {\n        if (selectedOption.value == _this.state.service_name[i].value) {\n          count++;\n        }\n      }\n\n      if (count > 0) {\n        _this.setState({\n          selectedService: selectedOption\n        });\n      } else {\n        _this.props.history.push(\"/dashboard/vendor/\".concat(selectedOption.value, \"/details\"));\n\n        return false;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(UploadNav, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.post(VENDOR_ADDED_SERVICE_LIST, {\n        vendor_id: localStorage.getItem('userid')\n      }).then(function (response) {\n        if (response.data.success == '1' || response.data.success == 1) {\n          _this2.setState({\n            service_name: response.data.data\n          });\n        } else {\n          return false;\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _React$createElement;\n\n      return React.createElement(\"div\", {\n        class: \"container-scroller \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"page-body-wrapper gap\",\n        style: {\n          backgroundColor: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"col-12 col-md-12 add_services_box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        class: \"features section text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        class: \"font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"li\", (_React$createElement = {\n        class: \"nav-item\",\n        id: \"dubbing_cont\"\n      }, _defineProperty(_React$createElement, \"class\", \"nav-link\"), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Select, {\n        value: this.state.selectedService,\n        onChange: this.languageChange,\n        options: service_name,\n        isMulti: false,\n        placeholder: \"Add Service\",\n        name: \"service\",\n        id: \"service\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), this.state.selectedService.value == \"dubbing\" && React.createElement(DubbingForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), this.state.selectedService.value == \"subtitle\" && React.createElement(SubtitleForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return UploadNav;\n}(Component);\n\nexport default UploadNav;","map":{"version":3,"sources":["/var/www/html/REACT_WORK/planetshare_web/src/container/Dashboard_Container/vendor_dashboard/add_service/add_service.js"],"names":["React","Component","Link","axios","VENDOR_ADDED_SERVICE_LIST","TranscodeForm","DubbingForm","SubtitleForm","Select","ChildNavbar","service_name","label","value","UploadNav","state","selectedService","languageChange","selectedOption","count","i","length","setState","props","history","push","post","vendor_id","localStorage","getItem","then","response","data","success","catch","error","console","log","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport axios from 'axios';\nimport {VENDOR_ADDED_SERVICE_LIST} from '../../../../url.js';\nimport TranscodeForm from '../service_form/transcodeform.js';\nimport DubbingForm from '../service_form/dubbing_form.js';\nimport SubtitleForm from '../service_form/subtitle_form.js';\nimport Select from 'react-select';\nimport '../service_form/form.css';\nimport './add_service.css';\nimport ChildNavbar from '../childnavbar/childnavbar';\nconst service_name=[{\n  label:'Subtitle',value:'subtitle'\n},\n{label:'Dubbing',value:'dubbing'\n}]\nclass UploadNav extends Component {\n  state={\n    selectedService:[],\n    service_name:[]\n  }\n  componentDidMount()\n  {\n    axios.post(VENDOR_ADDED_SERVICE_LIST,\n      {\n        vendor_id:localStorage.getItem('userid'),\n      }\n    )\n    .then(response=>{\n      if(response.data.success=='1' || response.data.success==1)\n      {\n        this.setState({service_name:response.data.data});\n      }\n      else {\n        return false;\n      }\n    })\n    .catch(function (error) {\n    console.log(error);\n    });\n  }\n  languageChange = (selectedOption) => {\n    var count=0;\n  for(var i=0;i<this.state.service_name.length;i++)\n  {\n    if(selectedOption.value==this.state.service_name[i].value)\n    {\n      count++;\n    }\n  }\n  if(count>0)\n  {\n      this.setState({ selectedService:selectedOption});\n  }\n  else {\n    this.props.history.push(`/dashboard/vendor/${selectedOption.value}/details`);\n    return false;\n  }\n}\n  render()\n  {\n    return(\n      <div class=\"container-scroller \">\n        {/*<ChildNavbar head=\"Add Service\"/>*/}\n        <div class=\"page-body-wrapper gap\" style={{backgroundColor:'white'}}>\n      <div class=\"col-12 col-md-12 add_services_box\">\n        <section class=\"features section text-center\">\n        <ul class=\"font-weight-bold\" >\n                  <li class=\"nav-item\" id=\"dubbing_cont\" class=\"nav-link\">\n                    <center><Select\n                     value={this.state.selectedService}\n                     onChange={this.languageChange}\n                     options={service_name}\n                     isMulti={false}\n                     placeholder=\"Add Service\"\n                     name=\"service\"\n                     id=\"service\"\n                     /><br/>\n                    </center>\n\n                      {this.state.selectedService.value==\"dubbing\" && <DubbingForm />}\n                      {this.state.selectedService.value==\"subtitle\" && <SubtitleForm />}\n                  </li>\n                </ul>\n{/*(this.state.selectedService.value==\"transcoding\" || this.state.selectedService.value==\"dubbing\" || this.state.selectedService.value==\"subtitle\") && <div class=\"right_bord_direction\">\n<div class=\"container\">\n<div class=\"timeline\">\n  <div class=\"circle c_right\">\n    <div class=\"content\">\n      <h2>Add Services</h2>\n\n    </div>\n  </div>\n  <div class=\"circle c_right\">\n    <div class=\"content\">\n      <h2>Get Jobs</h2>\n\n    </div>\n  </div>\n\n  <div class=\"circle c_right\">\n    <div class=\"content\">\n      <h2>Get Paid</h2>\n\n    </div>\n  </div>\n\n  </div>\n  </div>\n  </div>*/}\n\n\n          </section>\n       </div></div></div>\n\n)\n}\n}\nexport default UploadNav;\n"]},"metadata":{},"sourceType":"module"}