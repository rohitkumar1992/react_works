{"ast":null,"code":"import _classCallCheck from \"/var/www/html/REACT_WORK/planetshare_web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/REACT_WORK/planetshare_web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/REACT_WORK/planetshare_web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/REACT_WORK/planetshare_web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/REACT_WORK/planetshare_web/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/REACT_WORK/planetshare_web/src/component/syndication_service/syndication_service.js\";\nimport React, { Component } from 'react';\nimport Modal from '../modal/modal';\nimport { Link } from 'react-router-dom';\nimport './transcoding_service.css';\n\nvar Syndication =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Syndication, _Component);\n\n  function Syndication() {\n    _classCallCheck(this, Syndication);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Syndication).apply(this, arguments));\n  }\n\n  _createClass(Syndication, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        class: \"top_div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"overlay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }), React.createElement(\"video\", {\n        playsinline: \"playsinline\",\n        autoplay: \"autoplay\",\n        muted: \"muted\",\n        loop: \"loop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"source\", {\n        src: \"img/transcoding.mp4\",\n        type: \"video/mp4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"container mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"u\", {\n        id: \"media_ser\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Media Services\")), \" \", React.createElement(\"span\", {\n        id: \"encod\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"/\"), \" \", React.createElement(\"span\", {\n        id: \"encod\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Content Syndication\"), React.createElement(\"h1\", {\n        id: \"trans_encod\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Content Syndication\"), React.createElement(\"p\", {\n        id: \"trans_head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Studio-grade Content Syndication at cloud scale\"), React.createElement(\"div\", {\n        class: \"row \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        clas: \"col-lg-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        class: \"tarsn_list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \" \", React.createElement(\"i\", {\n        class: \"fa fa-check\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), \" Syndicate to multiple formats\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \" \", React.createElement(\"i\", {\n        class: \"fa fa-check\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), \"Scalable batch processing\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \" \", React.createElement(\"i\", {\n        class: \"fa fa-check\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), \"Thumbnail, overlay, stitching and clip generation\"))), React.createElement(\"div\", {\n        class: \"col-lg-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        clas: \"col-lg-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        class: \"tarsn_list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \" \", React.createElement(\"i\", {\n        class: \"fa fa-check\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), \" Syndicate to multiple formats\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \" \", React.createElement(\"i\", {\n        class: \"fa fa-check\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), \"Scalable batch processing\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \" \", React.createElement(\"i\", {\n        class: \"fa fa-check\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), \"Thumbnail, overlay, stitching and clip generation\")))), React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Create Media Solution\"), React.createElement(\"p\", {\n        id: \"trasn_text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"  Already using Azure? Try Content Syndication now \"))), React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"col-sm-1 col-md-1 col-lg-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"col-sm-8 col-md-6 col-lg-6 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"HOW IT WORKS\"), React.createElement(\"img\", {\n        src: \"img/work_flow_trans.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Benefits and features\"), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \" Reliably transport video\"), React.createElement(\"p\", {\n        id: \"trans_parastyle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Planetshare Elemental MediaConnect adds a video-specific quality-of-service layer over standard IP transport , enabling uninterrupted, high-quality live video delivery for business-to-business applications. This makes your live video workflows more reliable, even over less dependable networks.\"), React.createElement(\"div\", {\n        class: \"pt-2 border-top-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"  \", React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \" Reliably transport video\")), React.createElement(\"p\", {\n        id: \"trasn_para6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Planetshare Elemental MediaConnect adds a video-specific quality-of-service layer over standard IP transport , enabling uninterrupted, high-quality live video delivery for business-to-business applications. This makes your live video workflows more reliable, even over less dependable networks.\")), React.createElement(\"div\", {\n        class: \"col-sm-8 col-md-4 col-lg-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        id: \"trans_par_heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \" Pricing and costs\"), React.createElement(\"p\", {\n        id: \"trans_para3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Running cost \"), React.createElement(\"p\", {\n        id: \"trans_para4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \" Data transfer  \"), React.createElement(\"p\", {\n        id: \"trans_para5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Rates provided are for illustration purposes only and may vary by region.\"), React.createElement(\"div\", {\n        class: \"card_1 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"img/work_flow_trans.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"card_2 trans_get mt-5 p-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Getting started\"), React.createElement(\"div\", {\n        class: \"mt-4 trans_link1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"mt-1 trans_link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Getting started with Planetshare Elemental MediaConnect\")), React.createElement(\"div\", {\n        class: \"card_2 trans_get mt-5 p-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Related services\"), React.createElement(\"div\", {\n        class: \"mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Planetshare Elemental MediaLive\")), React.createElement(\"div\", {\n        class: \"mt-1\",\n        id: \"trans_para\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        id: \"trans_Par\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Use Planetshare Elemental MediaConnect to deliver content streams to Planetshare Elemental MediaLive for cloud-based Content Syndication \")), React.createElement(\"div\", {\n        class: \"mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Planetshare CloudWatch\")), React.createElement(\"div\", {\n        class: \"mt-1\",\n        id: \"trans_para1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        id: \"tran_pp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Use Planetshare CloudWatch to track Planetshare Elemental MediaConnect metrics such as ingress and origination/packaging request counts.\"))), React.createElement(\"div\", {\n        class: \"col-sm-1 col-md-1 col-lg-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, localStorage.getItem('username') != null ? React.createElement(Link, {\n        to: \"/dashboard/buyer/service/syndication/upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        class: \"btn btn-lg btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Syndicate Now\")) : React.createElement(Modal, {\n        modalIsOpen: \"true\",\n        tag: \"services\",\n        openUrl: \"loginModal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Syndication;\n}(Component);\n\nexport default Syndication;","map":{"version":3,"sources":["/var/www/html/REACT_WORK/planetshare_web/src/component/syndication_service/syndication_service.js"],"names":["React","Component","Modal","Link","Syndication","localStorage","getItem"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAO,2BAAP;;IACOC,W;;;;;;;;;;;;;6BACI;AACP,aACI;AAAK,QAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA;AAAO,QAAA,WAAW,EAAC,aAAnB;AAAiC,QAAA,QAAQ,EAAC,UAA1C;AAAqD,QAAA,KAAK,EAAC,OAA3D;AAAmE,QAAA,IAAI,EAAC,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAQ,QAAA,GAAG,EAAC,qBAAZ;AAAkC,QAAA,IAAI,EAAC,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAFA,EAKA;AAAK,QAAA,KAAK,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM;AAAG,QAAA,EAAE,EAAC,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAN,CADA,OACkD;AAAM,QAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADlD,OAC4E;AAAM,QAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAD5E,EAEA;AAAI,QAAA,EAAE,EAAE,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFA,EAGA;AAAG,QAAA,EAAE,EAAC,YAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAHA,EAIA;AAAK,QAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,IAAI,EAAC,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAI,QAAA,KAAK,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAM;AAAG,QAAA,KAAK,EAAC,aAAT;AAAuB,uBAAY,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,mCADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAM;AAAG,QAAA,KAAK,EAAC,aAAT;AAAuB,uBAAY,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,8BAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAM;AAAG,QAAA,KAAK,EAAC,aAAT;AAAuB,uBAAY,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,sDAHA,CADA,CADA,EAQA;AAAK,QAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARA,EAWA;AAAK,QAAA,IAAI,EAAC,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAI,QAAA,KAAK,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAM;AAAG,QAAA,KAAK,EAAC,aAAT;AAAuB,uBAAY,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,mCADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAM;AAAG,QAAA,KAAK,EAAC,aAAT;AAAuB,uBAAY,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,8BAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAM;AAAG,QAAA,KAAK,EAAC,aAAT;AAAuB,uBAAY,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,sDAHA,CADA,CAXA,CAJA,EAuBA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAvBA,EAwBA;AAAG,QAAA,EAAE,EAAC,YAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAxBA,CALA,CADM,EAoCN;AAAK,QAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,KAAK,EAAC,4BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAGC;AAAK,QAAA,KAAK,EAAC,6BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADC,EAED;AAAK,QAAA,GAAG,EAAC,yBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFC,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAHA,EAID;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAJC,EAKD;AAAG,QAAA,EAAE,EAAC,iBAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kTALC,EAUD;AAAK,QAAA,KAAK,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAlC,CAVC,EAYH;AAAG,QAAA,EAAE,EAAC,aAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kTAZG,CAHD,EAuBC;AAAK,QAAA,KAAK,EAAC,4BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,EAAE,EAAC,mBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE;AAAG,QAAA,EAAE,EAAC,aAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,EAGG;AAAG,QAAA,EAAE,EAAC,aAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHH,EAIK;AAAG,QAAA,EAAE,EAAC,aAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qFAJL,EAKK;AAAK,QAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,GAAG,EAAC,yBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CALL,EAQM;AAAK,QAAA,KAAK,EAAC,2BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BARN,EAWO;AAAK,QAAA,KAAK,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXP,EAcM;AAAK,QAAA,KAAK,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAG,QAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEADD,CAdN,EAiBM;AAAK,QAAA,KAAK,EAAC,2BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAjBN,EAoBK;AAAK,QAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADF,CApBL,EAsBQ;AAAK,QAAA,KAAK,EAAC,MAAX;AAAiB,QAAA,EAAE,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACD;AAAG,QAAA,EAAE,EAAC,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qJADC,CAtBR,EA0BS;AAAK,QAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAG,QAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADA,CA1BT,EA6BY;AAAK,QAAA,KAAK,EAAC,MAAX;AAAkB,QAAA,EAAE,EAAC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACD;AAAG,QAAA,EAAE,EAAC,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oJADC,CA7BZ,CAvBD,EAyDI;AAAK,QAAA,KAAK,EAAC,4BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzDJ,CApCM,EAiGR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASC,YAAY,CAACC,OAAb,CAAqB,UAArB,KAAkC,IAAlC,GAAuC,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,6CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuD;AAAQ,QAAA,KAAK,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAvD,CAAvC,GAAmK,oBAAC,KAAD;AAAO,QAAA,WAAW,EAAC,MAAnB;AAA0B,QAAA,GAAG,EAAC,UAA9B;AAAyC,QAAA,OAAO,EAAC,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA5K,CAjGQ,EAkGR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlGQ,CADJ;AAuGD;;;;EAzGwBL,S;;AA2G3B,eAAgBG,WAAhB","sourcesContent":["import React, { Component } from 'react';\nimport Modal from '../modal/modal';\nimport {Link} from 'react-router-dom';\nimport './transcoding_service.css';\nclass  Syndication extends Component {\n  render() {\n    return (\n        <div class=\"top_div\">\n  <header>\n  <div class=\"overlay\"></div>\n  <video playsinline=\"playsinline\" autoplay=\"autoplay\" muted=\"muted\" loop=\"loop\">\n  <source src=\"img/transcoding.mp4\" type=\"video/mp4\"/>\n  </video>\n  <div class=\"container mt-5\">\n  <span><u id=\"media_ser\">Media Services</u></span> <span id=\"encod\">/</span> <span id=\"encod\">Content Syndication</span>\n  <h1 id= \"trans_encod\">Content Syndication</h1>\n  <p id=\"trans_head\">Studio-grade Content Syndication at cloud scale</p>\n  <div class=\"row \">\n  <div clas=\"col-lg-8\">\n  <ul class=\"tarsn_list\">\n  <li > <i class=\"fa fa-check\" aria-hidden=\"true\"></i> Syndicate to multiple formats</li>\n  <li > <i class=\"fa fa-check\" aria-hidden=\"true\"></i>Scalable batch processing</li>\n  <li > <i class=\"fa fa-check\" aria-hidden=\"true\"></i>Thumbnail, overlay, stitching and clip generation</li>\n  </ul>\n  </div>\n  <div class=\"col-lg-2\">\n\n  </div>\n  <div clas=\"col-lg-4\">\n  <ul class=\"tarsn_list\">\n  <li > <i class=\"fa fa-check\" aria-hidden=\"true\"></i> Syndicate to multiple formats</li>\n  <li > <i class=\"fa fa-check\" aria-hidden=\"true\"></i>Scalable batch processing</li>\n  <li > <i class=\"fa fa-check\" aria-hidden=\"true\"></i>Thumbnail, overlay, stitching and clip generation</li>\n  </ul>\n  </div>\n  </div>\n  <button type=\"button\" class=\"btn btn-success\">Create Media Solution</button>\n  <p id=\"trasn_text\">  Already using Azure? Try Content Syndication now </p>\n\n\n  </div>\n  </header>\n\n  <div class=\"row\" >\n  <div class=\"col-sm-1 col-md-1 col-lg-1\">\n  </div>\n   <div class=\"col-sm-8 col-md-6 col-lg-6 \">\n  <h1>HOW IT WORKS</h1>\n  <img src=\"img/work_flow_trans.png\" />\n   <h1>Benefits and features</h1>\n  <h6> Reliably transport video</h6>\n  <p id=\"trans_parastyle\">\n  Planetshare Elemental MediaConnect adds a video-specific quality-of-service layer over standard IP transport , enabling uninterrupted, high-quality\n  live video delivery for business-to-business applications.\n This makes your live video workflows more reliable, even over less dependable networks.\n  </p>\n  <div class=\"pt-2 border-top-0\" >  <h6> Reliably transport video</h6></div>\n\n<p id=\"trasn_para6\">\n  Planetshare Elemental MediaConnect adds a video-specific quality-of-service layer over standard IP transport , enabling uninterrupted, high-quality\n  live video delivery for business-to-business applications.\n This makes your live video workflows more reliable, even over less dependable networks.\n</p>\n\n   </div>\n\n   <div class=\"col-sm-8 col-md-4 col-lg-4\">\n     <h6 id=\"trans_par_heading\"> Pricing and costs</h6>\n     <p id=\"trans_para3\">Running cost </p>\n      <p id=\"trans_para4\"> Data transfer  </p>\n        <p id=\"trans_para5\">Rates provided are for illustration purposes only and may vary by region.</p>\n        <div class=\"card_1 \">\n         <img src=\"img/work_flow_trans.png\" />\n         </div>\n         <div class=\"card_2 trans_get mt-5 p-2\">\n          Getting started\n          </div>\n          <div class=\"mt-4 trans_link1\" >\n\n          </div>\n         <div class=\"mt-1 trans_link\" >\n          <a href=\"#\">Getting started with Planetshare Elemental MediaConnect</a>\n         </div>\n         <div class=\"card_2 trans_get mt-5 p-2\">\n        Related services\n          </div>\n        <div class=\"mt-2\" >\n          <a href=\"#\">Planetshare Elemental MediaLive</a></div>\n           <div class=\"mt-1\"id=\"trans_para\" >\n          <p id=\"trans_Par\">Use Planetshare Elemental MediaConnect to deliver content streams to Planetshare Elemental MediaLive for cloud-based Content Syndication </p>\n            </div>\n\n            <div class=\"mt-5\" >\n            <a href=\"#\">Planetshare CloudWatch</a>\n              </div>\n               <div class=\"mt-1\" id=\"trans_para1\" >\n              <p id=\"tran_pp\">Use Planetshare CloudWatch to track Planetshare Elemental MediaConnect metrics such as ingress and origination/packaging\n               request counts.</p>\n             </div>\n         </div>\n      <div class=\"col-sm-1 col-md-1 col-lg-1\">\n\n      </div>\n </div>\n<center>{localStorage.getItem('username')!=null?<Link to=\"/dashboard/buyer/service/syndication/upload\"><button class=\"btn btn-lg btn-primary\">Syndicate Now</button></Link>:<Modal modalIsOpen=\"true\" tag=\"services\" openUrl=\"loginModal\"/>}</center>\n<br/>\n  </div>\n\n    );\n  }\n}\nexport default  Syndication;\n"]},"metadata":{},"sourceType":"module"}