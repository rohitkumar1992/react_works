{
  "_from": "react-content-loader",
  "_id": "react-content-loader@4.3.2",
  "_inBundle": false,
  "_integrity": "sha512-Af2RW2G57+mFRXsiSXROtgvz3KmPz0lATRHNUpJ57DyVw6SRzDRNRXo04I2xhcwmwVnXsfx4s2hsHrU+Lq5jRw==",
  "_location": "/react-content-loader",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "react-content-loader",
    "fetchSpec": "latest",
    "name": "react-content-loader",
    "raw": "react-content-loader",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-content-loader/-/react-content-loader-4.3.2.tgz",
  "_shasum": "2f6546c883707d399a2abc2efd00edcb8f584618",
  "_shrinkwrap": null,
  "_spec": "react-content-loader",
  "_where": "/var/www/html/Shantanu_project/OTT_LIVE_WORK/REACT_WORK/playflix_web",
  "author": {
    "email": "danilowoz@gmail.com",
    "name": "Danilo Woznica"
  },
  "bugs": {
    "url": "https://github.com/danilowoz/react-content-loader/issues"
  },
  "bundleDependencies": false,
  "bundlesize": [
    {
      "path": "./dist/react-content-loader.min.js",
      "maxSize": "2 kB"
    },
    {
      "path": "./native/react-content-loader.native.es.js",
      "maxSize": "3 kB"
    }
  ],
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "dependencies": {},
  "deprecated": false,
  "description": "SVG-Powered component to easily create placeholder loadings (like Facebook cards loading)",
  "devDependencies": {
    "@babel/core": "7.5.5",
    "@babel/polyfill": "7.4.4",
    "@babel/preset-env": "7.5.5",
    "@babel/preset-react": "7.0.0",
    "@babel/register": "7.5.5",
    "@babel/runtime": "7.5.5",
    "@commitlint/cli": "8.1.0",
    "@commitlint/config-conventional": "8.1.0",
    "@types/jest": "24.0.18",
    "@types/react": "16.9.2",
    "@types/react-dom": "16.9.0",
    "@types/react-native": "0.60.11",
    "@types/react-test-renderer": "16.9.0",
    "@typescript-eslint/eslint-plugin": "2.1.0",
    "@typescript-eslint/parser": "2.1.0",
    "babel-core": "6.26.3",
    "babel-eslint": "10.0.3",
    "babel-jest": "24.8.0",
    "bundlesize": "0.18.0",
    "commitizen": "4.0.3",
    "cz-conventional-changelog": "3.0.2",
    "docz": "1.2.0",
    "docz-theme-default": "1.2.0",
    "eslint": "6.3.0",
    "eslint-config-react-app": "5.0.1",
    "eslint-plugin-flowtype": "4.3.0",
    "eslint-plugin-import": "2.18.2",
    "eslint-plugin-jsx-a11y": "6.2.3",
    "eslint-plugin-react": "7.14.3",
    "eslint-plugin-react-hooks": "2.0.1",
    "husky": "3.0.4",
    "jest": "24.9.0",
    "metro-react-native-babel-preset": "0.56.0",
    "prettier": "1.18.2",
    "react": "16.9.0",
    "react-dom": "16.9.0",
    "react-native": "0.60.5",
    "react-native-svg": "9.11.1",
    "react-test-renderer": "16.9.0",
    "remark-emoji": "2.0.2",
    "rollup": "1.20.2",
    "rollup-plugin-copy": "3.1.0",
    "rollup-plugin-replace": "2.2.0",
    "rollup-plugin-typescript2": "0.23.0",
    "rollup-plugin-uglify": "6.0.2",
    "semantic-release": "15.13.24",
    "ts-jest": "24.0.2",
    "typescript": "3.5.3"
  },
  "files": [
    "dist",
    "native"
  ],
  "homepage": "https://github.com/danilowoz/react-content-loader",
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "pre-commit": "npm run lint && npm run format",
      "pre-push": "npm run test"
    }
  },
  "jsnext:main": "dist/react-content-loader.es.js",
  "keywords": [
    "content",
    "loader",
    "loading",
    "placeholder",
    "react",
    "react-native",
    "skeleton",
    "svg"
  ],
  "license": "MIT",
  "main": "dist/react-content-loader.cjs.js",
  "module": "dist/react-content-loader.es.js",
  "name": "react-content-loader",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^16.0.0"
  },
  "readme": "<p align=\"center\">\n  <img width=\"350\" alt=\"react-content-loader\" src=\"https://user-images.githubusercontent.com/4838076/34419335-5669c3f8-ebea-11e7-9668-c47b7846970b.png\"/>\n</p>\n<p align=\"center\">\n  <img width=\"400\" alt=\"Example's react-content-loader\" src=\"https://user-images.githubusercontent.com/4838076/34308760-ec55df82-e735-11e7-843b-2e311fa7b7d0.gif\" />\n</p>\n\nSVG-Powered component to easily create placeholder loadings (like Facebook's cards loading).\n\n## Features\n\n- :gear: **Customizable:** Feel free to change the colors, speed, sizes and even **RTL**;\n- :ok_hand: **Plug and play:** with many presets to use, see the [examples](http://danilowoz.com/create-content-loader/#gallery);\n- :pencil2: **DIY:** use the [create-content-loader](https://danilowoz.github.io/create-content-loader/) to create your own custom loaders easily;\n- 📱 **React Native support**: same API, as same powerful features;\n- ⚛️ **Really lightweight:** less than **2kB** and **0 dependencies** for web version;\n\n## Index\n\n- [Getting Started](#gettingstarted)\n- [Usage](#usage)\n  - [Native](#native)\n- [Options](#options)\n- [Examples](#examples)\n- [Similar packages](#similarpackages)\n- [Development](#development)\n- [Known Issues](#knownissues)\n\n## Getting Started\n\n```sh\nnpm i react-content-loader --save\n```\n\n```sh\nyarn add react-content-loader\n```\n\nCDN from [JSDELIVR](https://www.jsdelivr.com/package/npm/react-content-loader)\n\n## Usage\n\nThere are two ways to use it:\n\n**1. Presets, see the [examples](#examples):**\n\n```jsx\nimport ContentLoader, { Facebook } from 'react-content-loader'\n\nconst MyLoader = () => <ContentLoader />\nconst MyFacebookLoader = () => <Facebook />\n```\n\n**2. Custom mode, see the [online tool](https://danilowoz.github.io/create-react-content-loader/)**\n\n```jsx\nconst MyLoader = () => (\n  <ContentLoader>\n    {/* Only SVG shapes */}    \n    <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"70\" height=\"70\" />\n    <rect x=\"80\" y=\"17\" rx=\"4\" ry=\"4\" width=\"300\" height=\"13\" />\n    <rect x=\"80\" y=\"40\" rx=\"3\" ry=\"3\" width=\"250\" height=\"10\" />\n  </ContentLoader>\n)\n```\n\n**Still not clear?** Take a look at this working example at [codesandbox.io](https://codesandbox.io/s/moojk887z9)  \nOr try the components editable demo hands-on and install it from [bit.dev](https://bit.dev/danilowoz/react-content-loader)\n\n## Native\n\n`react-content-loader` can be used with React Native in the same way as web version with the same import:\n\n**1. Presets, see the [examples](#examples):**\n\n```jsx\nimport ContentLoader, { Facebook } from 'react-content-loader/native'\n\nconst MyLoader = () => <ContentLoader />\nconst MyFacebookLoader = () => <Facebook />\n```\n\n**2. Custom mode**\n\n**To create custom loaders there is an important difference:** as React Native doesn't have any native module for SVG components, it's necessary to import the shapes from [react-native-svg](https://github.com/react-native-community/react-native-svg) or use the named export Rect and Circle from `react-content-loader` import:\n\n```jsx\nimport ContentLoader, { Rect, Circle } from 'react-content-loader/native'\n\nconst MyLoader = () => (\n  <ContentLoader>\n    <Circle cx=\"30\" cy=\"30\" r=\"30\" />\n    <Rect x=\"80\" y=\"17\" rx=\"4\" ry=\"4\" width=\"300\" height=\"13\" />\n    <Rect x=\"80\" y=\"40\" rx=\"3\" ry=\"3\" width=\"250\" height=\"10\" />\n  </ContentLoader>\n)\n```\n\n## Options\n\n#### **`animate?: boolean`**\n\nDefaults to `true`. Opt-out of animations with `false`\n\n#### **`ariaLabel? string | boolean`** - _Web only_\n\nDefaults to `Loading interface...`. It's used to describe what element it is. Use `false` to remove.\n\n#### **`baseUrl? string`** - _Web only_\n\nRequired if you're using `<base url=\"/\" />` document `<head/>`. \nDefaults to an empty string. This prop is common used as: `<ContentLoader baseUrl={window.location.pathname} />` which will fill the SVG attribute with the relative path. Related [#93](https://github.com/danilowoz/react-content-loader/issues/93).\n\n#### **`speed?: number`**\n\nDefaults to `2`. Animation speed in seconds.\n\n#### **`interval?: number`** - _Web only_\n\nDefaults to `0.25`. Interval of time between runs of the animation, as a fraction of the animation speed.\n\n#### **`className? string`**\n\nDefaults to an empty string. The classname will be set in the `<svg />` element.\n\n#### **`width? number`**\n\nDefaults to `400`. It will be set in the viewbox attr in the `<svg />`.\n\n#### **`height? number`**\n\nDefaults to `130`. It will be set in the viewbox attr in the `<svg />`.\n\n#### **`gradientRatio? number`** - _Web only_\n\nDefaults to `2`. Width of the animated gradient as a fraction of the viewbox width.\n\n#### **`rtl? boolean`**\n\nDefaults to `false`. Content right-to-left.\n\n#### **`preserveAspectRatio?: string`**\n\nDefaults to `xMidYMid meet`. Aspect ratio option of `<svg/>`. See the available options [here](https://github.com/danilowoz/react-content-loader/blob/master/src/interface.ts#L7).\n\n#### **`primaryColor?: string`**\n\nDefaults to `#f3f3f3` which is used as background of animation.\n\n#### **`secondaryColor?: string`**\n\nDefaults to `#ecebeb` which is used as the placeholder/layer of animation.\n\n#### **`primaryOpacity?: string`** - _Web only_\n\nDefaults to `1`. Background opacity (0 = transparent, 1 = opaque) used to solve a issue in [Safari](#safari--ios)\n\n#### **`secondaryOpacity?: string`** - _Web only_\n\nDefaults to `1`. Animation opacity (0 = transparent, 1 = opaque) used to solve a issue in [Safari](#safari--ios)\n\n#### **`style?: React.CSSProperties`**\n\nDefaults to an empty object.\n\n#### **`uniquekey?: string`** - _Web only_\n\nDefaults to random unique id. Use the same value of prop key, that will solve inconsistency on the SSR, see more [here](https://github.com/danilowoz/react-content-loader/issues/78).\n\n## Examples\n\n##### Facebook Style\n\n```jsx\nimport { Facebook } from 'react-content-loader'\n\nconst MyFacebookLoader = () => <Facebook />\n```\n\n![Facebook Style](https://user-images.githubusercontent.com/4838076/34308760-ec55df82-e735-11e7-843b-2e311fa7b7d0.gif)\n\n##### Instagram Style\n\n```jsx\nimport { Instagram } from 'react-content-loader'\n\nconst MyInstagramLoader = () => <Instagram />\n```\n\n![Instagram Style](https://cloud.githubusercontent.com/assets/4838076/22555637/749f9e26-e94b-11e6-84ff-83cd415c1eb9.gif)\n\n##### Code Style\n\n```jsx\nimport { Code } from 'react-content-loader'\n\nconst MyCodeLoader = () => <Code />\n```\n\n![Code Style](https://cloud.githubusercontent.com/assets/4838076/22555473/effa54c2-e94a-11e6-9128-9b608bcc69d9.gif)\n\n##### List Style\n\n```jsx\nimport { List } from 'react-content-loader'\n\nconst MyListLoader = () => <List />\n```\n\n![List Style](https://user-images.githubusercontent.com/4838076/36352948-b8931430-149e-11e8-9f4b-3f00bc444a6d.gif)\n\n##### Bullet list Style\n\n```jsx\nimport { BulletList } from 'react-content-loader'\n\nconst MyBulletListLoader = () => <BulletList />\n```\n\n![Bullet list Style](https://user-images.githubusercontent.com/4838076/31998372-59817bac-b96e-11e7-8ef8-07f61670ee18.gif)\n\n### Custom Style\n\nFor the custom mode, use the\n[online tool](https://danilowoz.github.io/create-react-content-loader/).\n\n```jsx\nconst MyLoader = () => (\n  <ContentLoader\n    height={140}\n    speed={1}\n    primaryColor={'#333'}\n    secondaryColor={'#999'}\n  >\n        {/* Only SVG shapes */}\n        \n    <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"70\" height=\"70\" />\n        \n    <rect x=\"80\" y=\"17\" rx=\"4\" ry=\"4\" width=\"300\" height=\"13\" />\n        \n    <rect x=\"80\" y=\"40\" rx=\"3\" ry=\"3\" width=\"250\" height=\"10\" />\n      \n  </ContentLoader>\n)\n```\n\n---\n\n![Custom](https://user-images.githubusercontent.com/4838076/36352947-b87019a8-149e-11e8-99ba-c71c2bcf8733.gif)\n\n## Similar packages\n\n- React Native: [rn-placeholder](https://github.com/mfrachet/rn-placeholder), [react-native-svg-animated-linear-gradient](https://github.com/virusvn/react-native-svg-animated-linear-gradient);\n- [Preact](https://github.com/bonitasoft/preact-content-loader);\n- Vue.js: [vue-content-loading](https://github.com/LucasLeandro1204/vue-content-loading), [vue-content-loader](https://github.com/egoist/vue-content-loader);\n- Angular: [ngx-content-loading](https://github.com/Gbuomprisco/ngx-content-loading), [ngx-content-loader](https://github.com/NetanelBasal/ngx-content-loader).\n\n## Development\n\nFork the repo then clone it\n\n```\n$ git clone git@github.com:YourUsername/react-content-loader.git && cd react-content-loader\n```\n\n`$ npm i`: Install the dependencies;\n\n`$ npm run build`: Build to production;\n\n`$ npm run dev`: Run the docz to see your changes;\n\n`$ npm run test`: Run all tests: type checking, unit tests on web and native;\n\n`$ yarn test:watch`: Watch unit tests;\n\n`$ yarn tsc`: Typescript checking;\n\n`$ yarn tsc:watch`: Typescript checking with watching;\n\n### Commit messages\n\nCommit messages should follow the [commit message convention](https://conventionalcommits.org/) so, changelogs could be generated automatically by that. Commit messages are validated automatically upon commit. If you aren't familiar with the commit message convention, you can use yarn commit (or `npm run commit`) instead of git commit, which provides an interactive CLI for generating proper commit messages.\n\n## License\n\n[MIT](https://github.com/danilowoz/react-content-loader/blob/master/LICENSE)\n\n## Known Issues\n\n##### **Alpha is not working: Safari / iOS**\n\nWhen using `rgba` as a `primaryColor` or `secondaryColor` value, [Safari does not respect the alpha channel](https://github.com/w3c/svgwg/issues/180), meaning that the color will be opaque. To prevent this, instead of using an `rgba` value for `primaryColor`/`secondaryColor`, use the `rgb` equivalent and move the alpha channel value to the `primaryOpacity`/`secondaryOpacity` props.\n\n```jsx\n{/* Opaque color in Safari and iOS */}\n<ContentLoader\n  primaryColor=\"rgba(0,0,0,0.06)\"\n  secondaryColor=\"rgba(0,0,0,0.12)\">\n\n\n{/_ Semi-transparent color in Safari and iOS _/}\n<ContentLoader\n    primaryColor=\"rgb(0,0,0)\"\n    secondaryColor=\"rgb(0,0,0)\"\n    primaryOpacity={0.06}\n    secondaryOpacity={0.12}>\n\n\n```\n\n##### **Black box in Safari / iOS (again)**\n\nUsing base tag on a page that contains SVG elements fails to render and it looks like a black box. Just remove the **base-href** tag from the `<head />` and issue solved.\n\n<img width=\"200\" alt=\"Black box\" src=\"https://user-images.githubusercontent.com/11562881/39406054-2f308de6-4bce-11e8-91fb-bbb35e29fc10.png\" />\n\nSee: [#93](https://github.com/danilowoz/react-content-loader/issues/93) / [109](\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/danilowoz/react-content-loader.git"
  },
  "scripts": {
    "build": "rm -fr ./dist ./native && rollup -c && npm run test:size",
    "commit": "git-cz",
    "dev": "docz dev",
    "format": "prettier --write \"src/**/*.{ts,tsx}\"",
    "lint": "eslint --ext .jsx --ext .ts,.tsx src/",
    "release": "semantic-release",
    "test": "npm run test:tsc && npm run test:unit && npm run build",
    "test:size": "bundlesize",
    "test:tsc": "tsc",
    "test:tsc:watch": "npm run tsc -- --watch",
    "test:unit": "npm run test:unit:web && npm run test:unit:native",
    "test:unit:native": "jest -c jest.native.config.js",
    "test:unit:web": "jest -c jest.web.config.js",
    "test:watch": "npm run test:unit -- --watch"
  },
  "sideEffects": false,
  "types": "dist/index.d.ts",
  "version": "4.3.2"
}
